---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: buckets.s3.aws.jet.crossplane.io
spec:
  group: s3.aws.jet.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - awsjet
    kind: Bucket
    listKind: BucketList
    plural: buckets
    singular: bucket
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha2
    schema:
      openAPIV3Schema:
        description: Bucket is the Schema for the Buckets API. <no value>
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: BucketSpec defines the desired state of Bucket
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  accelerationStatus:
                    type: string
                  acl:
                    type: string
                  arn:
                    type: string
                  corsRule:
                    items:
                      properties:
                        allowedHeaders:
                          items:
                            type: string
                          type: array
                        allowedMethods:
                          items:
                            type: string
                          type: array
                        allowedOrigins:
                          items:
                            type: string
                          type: array
                        exposeHeaders:
                          items:
                            type: string
                          type: array
                        maxAgeSeconds:
                          type: number
                      required:
                      - allowedMethods
                      - allowedOrigins
                      type: object
                    type: array
                  forceDestroy:
                    type: boolean
                  grant:
                    items:
                      properties:
                        id:
                          type: string
                        permissions:
                          items:
                            type: string
                          type: array
                        type:
                          type: string
                        uri:
                          type: string
                      required:
                      - permissions
                      - type
                      type: object
                    type: array
                  hostedZoneId:
                    type: string
                  lifecycleRule:
                    items:
                      properties:
                        abortIncompleteMultipartUploadDays:
                          type: number
                        enabled:
                          type: boolean
                        expiration:
                          items:
                            properties:
                              date:
                                type: string
                              days:
                                type: number
                              expiredObjectDeleteMarker:
                                type: boolean
                            type: object
                          type: array
                        id:
                          type: string
                        noncurrentVersionExpiration:
                          items:
                            properties:
                              days:
                                type: number
                            type: object
                          type: array
                        noncurrentVersionTransition:
                          items:
                            properties:
                              days:
                                type: number
                              storageClass:
                                type: string
                            required:
                            - storageClass
                            type: object
                          type: array
                        prefix:
                          type: string
                        tags:
                          additionalProperties:
                            type: string
                          type: object
                        transition:
                          items:
                            properties:
                              date:
                                type: string
                              days:
                                type: number
                              storageClass:
                                type: string
                            required:
                            - storageClass
                            type: object
                          type: array
                      required:
                      - enabled
                      type: object
                    type: array
                  logging:
                    items:
                      properties:
                        targetBucket:
                          type: string
                        targetPrefix:
                          type: string
                      required:
                      - targetBucket
                      type: object
                    type: array
                  objectLockConfiguration:
                    items:
                      properties:
                        objectLockEnabled:
                          type: string
                        rule:
                          items:
                            properties:
                              defaultRetention:
                                items:
                                  properties:
                                    days:
                                      type: number
                                    mode:
                                      type: string
                                    years:
                                      type: number
                                  required:
                                  - mode
                                  type: object
                                type: array
                            required:
                            - defaultRetention
                            type: object
                          type: array
                      type: object
                    type: array
                  objectLockEnabled:
                    type: boolean
                  policy:
                    type: string
                  region:
                    description: Region is the region you'd like your resource to
                      be created in.
                    type: string
                  replicationConfiguration:
                    items:
                      properties:
                        role:
                          type: string
                        rules:
                          items:
                            properties:
                              deleteMarkerReplicationStatus:
                                type: string
                              destination:
                                items:
                                  properties:
                                    accessControlTranslation:
                                      items:
                                        properties:
                                          owner:
                                            type: string
                                        required:
                                        - owner
                                        type: object
                                      type: array
                                    accountId:
                                      type: string
                                    bucket:
                                      type: string
                                    metrics:
                                      items:
                                        properties:
                                          minutes:
                                            type: number
                                          status:
                                            type: string
                                        type: object
                                      type: array
                                    replicaKmsKeyId:
                                      type: string
                                    replicationTime:
                                      items:
                                        properties:
                                          minutes:
                                            type: number
                                          status:
                                            type: string
                                        type: object
                                      type: array
                                    storageClass:
                                      type: string
                                  required:
                                  - bucket
                                  type: object
                                type: array
                              filter:
                                items:
                                  properties:
                                    prefix:
                                      type: string
                                    tags:
                                      additionalProperties:
                                        type: string
                                      type: object
                                  type: object
                                type: array
                              id:
                                type: string
                              prefix:
                                type: string
                              priority:
                                type: number
                              sourceSelectionCriteria:
                                items:
                                  properties:
                                    sseKmsEncryptedObjects:
                                      items:
                                        properties:
                                          enabled:
                                            type: boolean
                                        required:
                                        - enabled
                                        type: object
                                      type: array
                                  type: object
                                type: array
                              status:
                                type: string
                            required:
                            - destination
                            - status
                            type: object
                          type: array
                      required:
                      - role
                      - rules
                      type: object
                    type: array
                  requestPayer:
                    type: string
                  serverSideEncryptionConfiguration:
                    items:
                      properties:
                        rule:
                          items:
                            properties:
                              applyServerSideEncryptionByDefault:
                                items:
                                  properties:
                                    kmsMasterKeyId:
                                      type: string
                                    kmsMasterKeyIdRef:
                                      description: Reference to a Key in kms to populate
                                        kmsMasterKeyId.
                                      properties:
                                        name:
                                          description: Name of the referenced object.
                                          type: string
                                        policy:
                                          description: Policies for referencing.
                                          properties:
                                            resolution:
                                              default: Required
                                              description: Resolution specifies whether
                                                resolution of this reference is required.
                                                The default is 'Required', which means
                                                the reconcile will fail if the reference
                                                cannot be resolved. 'Optional' means
                                                this reference will be a no-op if
                                                it cannot be resolved.
                                              enum:
                                              - Required
                                              - Optional
                                              type: string
                                            resolve:
                                              description: Resolve specifies when
                                                this reference should be resolved.
                                                The default is 'IfNotPresent', which
                                                will attempt to resolve the reference
                                                only when the corresponding field
                                                is not present. Use 'Always' to resolve
                                                the reference on every reconcile.
                                              enum:
                                              - Always
                                              - IfNotPresent
                                              type: string
                                          type: object
                                      required:
                                      - name
                                      type: object
                                    kmsMasterKeyIdSelector:
                                      description: Selector for a Key in kms to populate
                                        kmsMasterKeyId.
                                      properties:
                                        matchControllerRef:
                                          description: MatchControllerRef ensures
                                            an object with the same controller reference
                                            as the selecting object is selected.
                                          type: boolean
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: MatchLabels ensures an object
                                            with matching labels is selected.
                                          type: object
                                        policy:
                                          description: Policies for selection.
                                          properties:
                                            resolution:
                                              default: Required
                                              description: Resolution specifies whether
                                                resolution of this reference is required.
                                                The default is 'Required', which means
                                                the reconcile will fail if the reference
                                                cannot be resolved. 'Optional' means
                                                this reference will be a no-op if
                                                it cannot be resolved.
                                              enum:
                                              - Required
                                              - Optional
                                              type: string
                                            resolve:
                                              description: Resolve specifies when
                                                this reference should be resolved.
                                                The default is 'IfNotPresent', which
                                                will attempt to resolve the reference
                                                only when the corresponding field
                                                is not present. Use 'Always' to resolve
                                                the reference on every reconcile.
                                              enum:
                                              - Always
                                              - IfNotPresent
                                              type: string
                                          type: object
                                      type: object
                                    sseAlgorithm:
                                      type: string
                                  required:
                                  - sseAlgorithm
                                  type: object
                                type: array
                              bucketKeyEnabled:
                                type: boolean
                            required:
                            - applyServerSideEncryptionByDefault
                            type: object
                          type: array
                      required:
                      - rule
                      type: object
                    type: array
                  tags:
                    additionalProperties:
                      type: string
                    type: object
                  versioning:
                    items:
                      properties:
                        enabled:
                          type: boolean
                        mfaDelete:
                          type: boolean
                      type: object
                    type: array
                  website:
                    items:
                      properties:
                        errorDocument:
                          type: string
                        indexDocument:
                          type: string
                        redirectAllRequestsTo:
                          type: string
                        routingRules:
                          type: string
                      type: object
                    type: array
                required:
                - region
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: BucketStatus defines the observed state of Bucket.
            properties:
              atProvider:
                properties:
                  bucketDomainName:
                    type: string
                  bucketRegionalDomainName:
                    type: string
                  id:
                    type: string
                  tagsAll:
                    additionalProperties:
                      type: string
                    type: object
                  websiteDomain:
                    type: string
                  websiteEndpoint:
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
