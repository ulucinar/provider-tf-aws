/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha2

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type RuleGroupNamespaceObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type RuleGroupNamespaceParameters struct {

	// the rule group namespace data that you want to be applied. See more in AWS Docs.
	// +kubebuilder:validation:Required
	Data *string `json:"data" tf:"data,omitempty"`

	// The name of the rule group namespace
	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	Region *string `json:"region" tf:"-"`

	// The id of the prometheus workspace the rule group namespace should be linked to
	// +kubebuilder:validation:Required
	WorkspaceID *string `json:"workspaceId" tf:"workspace_id,omitempty"`
}

// RuleGroupNamespaceSpec defines the desired state of RuleGroupNamespace
type RuleGroupNamespaceSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     RuleGroupNamespaceParameters `json:"forProvider"`
}

// RuleGroupNamespaceStatus defines the observed state of RuleGroupNamespace.
type RuleGroupNamespaceStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        RuleGroupNamespaceObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// RuleGroupNamespace is the Schema for the RuleGroupNamespaces API. Manages an Amazon Managed Service for Prometheus (AMP) Rule Group Namespace
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,awsjet}
type RuleGroupNamespace struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              RuleGroupNamespaceSpec   `json:"spec"`
	Status            RuleGroupNamespaceStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// RuleGroupNamespaceList contains a list of RuleGroupNamespaces
type RuleGroupNamespaceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []RuleGroupNamespace `json:"items"`
}

// Repository type metadata.
var (
	RuleGroupNamespace_Kind             = "RuleGroupNamespace"
	RuleGroupNamespace_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: RuleGroupNamespace_Kind}.String()
	RuleGroupNamespace_KindAPIVersion   = RuleGroupNamespace_Kind + "." + CRDGroupVersion.String()
	RuleGroupNamespace_GroupVersionKind = CRDGroupVersion.WithKind(RuleGroupNamespace_Kind)
)

func init() {
	SchemeBuilder.Register(&RuleGroupNamespace{}, &RuleGroupNamespaceList{})
}
