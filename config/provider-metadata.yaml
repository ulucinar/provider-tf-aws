name: hashicorp/terraform-provider-aws
resources:
    aws_accessanalyzer_analyzer:
        subCategory: IAM Access Analyzer
        description: Manages an Access Analyzer Analyzer
        name: aws_accessanalyzer_analyzer
        title: aws_accessanalyzer_analyzer
        examples:
            - name: example
              manifest: |-
                {
                  "analyzer_name": "example"
                }
            - name: example
              manifest: |-
                {
                  "analyzer_name": "example",
                  "depends_on": [
                    "${aws_organizations_organization.example}"
                  ],
                  "type": "ORGANIZATION"
                }
              dependencies:
                aws_organizations_organization.example: |-
                    {
                      "aws_service_access_principals": [
                        "access-analyzer.amazonaws.com"
                      ]
                    }
        argumentDocs:
            analyzer_name: '- (Required) Name of the Analyzer.'
            arn: '- The Amazon Resource Name (ARN) of the Analyzer.'
            id: '- Analyzer name.'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            type: '- (Optional) Type of Analyzer. Valid values are ACCOUNT or ORGANIZATION. Defaults to ACCOUNT.'
        importStatements: []
    aws_accessanalyzer_archive_rule:
        subCategory: IAM Access Analyzer
        description: Terraform resource for managing an AWS AccessAnalyzer Archive Rule.
        name: aws_accessanalyzer_archive_rule
        title: aws_accessanalyzer_archive_rule
        examples:
            - name: example
              manifest: |-
                {
                  "analyser_name": "example-analyzer",
                  "filter": [
                    {
                      "criteria": "condition.aws:UserId",
                      "eq": [
                        "userid"
                      ]
                    },
                    {
                      "criteria": "error",
                      "exists": true
                    },
                    {
                      "criteria": "isPublic",
                      "eq": [
                        "false"
                      ]
                    }
                  ],
                  "rule_name": "example-rule"
                }
        argumentDocs:
            analyzer_name: '- (Required) Analyzer name.'
            contains: '- (Optional) Contains comparator.'
            criteria: '- (Required) The filter criteria.'
            eq: '- (Optional) Equals comparator.'
            exists: '- (Optional) Boolean comparator.'
            filter: '- (Required) The filter criteria for the archive rule. See Filter for more details.'
            id: '- Resource ID in the format: analyzer_name/rule_name.'
            neq: '- (Optional) Not Equals comparator.'
            rule_name: '- (Required) Rule name.'
        importStatements: []
    aws_account_alternate_contact:
        subCategory: Account Management
        description: Manages the specified alternate contact attached to an AWS Account.
        name: aws_account_alternate_contact
        title: aws_account_alternate_contact
        examples:
            - name: operations
              manifest: |-
                {
                  "alternate_contact_type": "OPERATIONS",
                  "email_address": "test@example.com",
                  "name": "Example",
                  "phone_number": "+1234567890",
                  "title": "Example"
                }
        argumentDocs:
            account_id: '- (Optional) The ID of the target account when managing member accounts. Will manage current user''s account by default if omitted.'
            alternate_contact_type: '- (Required) The type of the alternate contact. Allowed values are: BILLING, OPERATIONS, SECURITY.'
            create: '- (Default 5 minutes)'
            delete: '- (Default 5 minutes)'
            email_address: '- (Required) An email address for the alternate contact.'
            name: '- (Required) The name of the alternate contact.'
            phone_number: '- (Required) A phone number for the alternate contact.'
            title: '- (Required) A title for the alternate contact.'
            update: '- (Default 5 minutes)'
        importStatements: []
    aws_acm_certificate:
        subCategory: ACM (Certificate Manager)
        description: Requests and manages a certificate from Amazon Certificate Manager (ACM).
        name: aws_acm_certificate
        title: aws_acm_certificate
        examples:
            - name: cert
              manifest: |-
                {
                  "domain_name": "example.com",
                  "lifecycle": [
                    {
                      "create_before_destroy": true
                    }
                  ],
                  "tags": {
                    "Environment": "test"
                  },
                  "validation_method": "DNS"
                }
            - name: cert
              manifest: |-
                {
                  "domain_name": "testing.example.com",
                  "validation_method": "EMAIL",
                  "validation_option": [
                    {
                      "domain_name": "testing.example.com",
                      "validation_domain": "example.com"
                    }
                  ]
                }
            - name: cert
              manifest: |-
                {
                  "certificate_body": "${tls_self_signed_cert.example.cert_pem}",
                  "private_key": "${tls_private_key.example.private_key_pem}"
                }
              references:
                certificate_body: tls_self_signed_cert.example.cert_pem
                private_key: tls_private_key.example.private_key_pem
              dependencies:
                tls_private_key.example: |-
                    {
                      "algorithm": "RSA"
                    }
                tls_self_signed_cert.example: |-
                    {
                      "allowed_uses": [
                        "key_encipherment",
                        "digital_signature",
                        "server_auth"
                      ],
                      "key_algorithm": "RSA",
                      "private_key_pem": "${tls_private_key.example.private_key_pem}",
                      "subject": [
                        {
                          "common_name": "example.com",
                          "organization": "ACME Examples, Inc"
                        }
                      ],
                      "validity_period_hours": 12
                    }
        argumentDocs:
            arn: '- The ARN of the certificate'
            certificate_authority_arn: '- (Required) ARN of an ACM PCA'
            certificate_body: '- (Required) The certificate''s PEM-formatted public key'
            certificate_chain: '- (Optional) The certificate''s PEM-formatted chain'
            domain_name: '- (Required) A domain name for which the certificate should be issued'
            domain_validation_options: '- Set of domain validation objects which can be used to complete certificate validation. Can have more than one element, e.g., if SANs are defined. Only set if DNS-validation was used.'
            id: '- The ARN of the certificate'
            options: '- (Optional) Configuration block used to set certificate options. Detailed below.'
            options.certificate_transparency_logging_preference: '- (Optional) Specifies whether certificate details should be added to a certificate transparency log. Valid values are ENABLED or DISABLED. See https://docs.aws.amazon.com/acm/latest/userguide/acm-concepts.html#concept-transparency for more details.'
            private_key: '- (Required) The certificate''s PEM-formatted private key'
            resource_record_name: '- The name of the DNS record to create to validate the certificate'
            resource_record_type: '- The type of DNS record to create'
            resource_record_value: '- The value the DNS record needs to have'
            status: '- Status of the certificate.'
            subject_alternative_names: '- (Optional) Set of domains that should be SANs in the issued certificate. To remove all elements of a previously configured list, set this value equal to an empty list ([]) or use the terraform taint command to trigger recreation.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            validation_emails: '- A list of addresses that received a validation E-Mail. Only set if EMAIL-validation was used.'
            validation_method: '- (Required) Which method to use for validation. DNS or EMAIL are valid, NONE can be used for certificates that were imported into ACM and then into Terraform.'
            validation_option: '- (Optional) Configuration block used to specify information about the initial validation of each domain name. Detailed below.'
            validation_option.domain_name: '- (Required) A fully qualified domain name (FQDN) in the certificate.'
            validation_option.validation_domain: '- (Required) The domain name that you want ACM to use to send you validation emails. This domain name is the suffix of the email addresses that you want ACM to use. This must be the same as the domain_name value or a superdomain of the domain_name value. For example, if you request a certificate for "testing.example.com", you can specify "example.com" for this value.'
        importStatements: []
    aws_acm_certificate_validation:
        subCategory: ACM (Certificate Manager)
        description: Waits for and checks successful validation of an ACM certificate.
        name: aws_acm_certificate_validation
        title: aws_acm_certificate_validation
        examples:
            - name: example
              manifest: |-
                {
                  "certificate_arn": "${aws_acm_certificate.example.arn}",
                  "validation_record_fqdns": "${[for record in aws_route53_record.example : record.fqdn]}"
                }
              references:
                certificate_arn: aws_acm_certificate.example.arn
              dependencies:
                aws_acm_certificate.example: |-
                    {
                      "domain_name": "example.com",
                      "validation_method": "DNS"
                    }
                aws_lb_listener.example: |-
                    {
                      "certificate_arn": "${aws_acm_certificate_validation.example.certificate_arn}"
                    }
                aws_route53_record.example: |-
                    {
                      "allow_overwrite": true,
                      "for_each": "${{\n    for dvo in aws_acm_certificate.example.domain_validation_options : dvo.domain_name =\u003e {\n      name   = dvo.resource_record_name\n      record = dvo.resource_record_value\n      type   = dvo.resource_record_type\n    }\n  }}",
                      "name": "${each.value.name}",
                      "records": [
                        "${each.value.record}"
                      ],
                      "ttl": 60,
                      "type": "${each.value.type}",
                      "zone_id": "${data.aws_route53_zone.example.zone_id}"
                    }
            - name: example
              manifest: |-
                {
                  "certificate_arn": "${aws_acm_certificate.example.arn}",
                  "validation_record_fqdns": "${[for record in aws_route53_record.example : record.fqdn]}"
                }
              references:
                certificate_arn: aws_acm_certificate.example.arn
              dependencies:
                aws_acm_certificate.example: |-
                    {
                      "domain_name": "example.com",
                      "subject_alternative_names": [
                        "www.example.com",
                        "example.org"
                      ],
                      "validation_method": "DNS"
                    }
                aws_lb_listener.example: |-
                    {
                      "certificate_arn": "${aws_acm_certificate_validation.example.certificate_arn}"
                    }
                aws_route53_record.example: |-
                    {
                      "allow_overwrite": true,
                      "for_each": "${{\n    for dvo in aws_acm_certificate.example.domain_validation_options : dvo.domain_name =\u003e {\n      name    = dvo.resource_record_name\n      record  = dvo.resource_record_value\n      type    = dvo.resource_record_type\n      zone_id = dvo.domain_name == \"example.org\" ? data.aws_route53_zone.example_org.zone_id : data.aws_route53_zone.example_com.zone_id\n    }\n  }}",
                      "name": "${each.value.name}",
                      "records": [
                        "${each.value.record}"
                      ],
                      "ttl": 60,
                      "type": "${each.value.type}",
                      "zone_id": "${each.value.zone_id}"
                    }
            - name: example
              manifest: |-
                {
                  "certificate_arn": "${aws_acm_certificate.example.arn}"
                }
              references:
                certificate_arn: aws_acm_certificate.example.arn
              dependencies:
                aws_acm_certificate.example: |-
                    {
                      "domain_name": "example.com",
                      "validation_method": "EMAIL"
                    }
        argumentDocs:
            certificate_arn: '- (Required) The ARN of the certificate that is being validated.'
            create: '- (Default 75m) How long to wait for a certificate to be issued.'
            id: '- The time at which the certificate was issued'
            validation_record_fqdns: '- (Optional) List of FQDNs that implement the validation. Only valid for DNS validation method ACM certificates. If this is set, the resource can implement additional sanity checks and has an explicit dependency on the resource that is implementing the validation'
        importStatements: []
    aws_acmpca_certificate:
        subCategory: ACM PCA (Certificate Manager Private Certificate Authority)
        description: Provides a resource to issue a certificate using AWS Certificate Manager Private Certificate Authority (ACM PCA)
        name: aws_acmpca_certificate
        title: aws_acmpca_certificate
        examples:
            - name: example
              manifest: |-
                {
                  "certificate_authority_arn": "${aws_acmpca_certificate_authority.example.arn}",
                  "certificate_signing_request": "${tls_cert_request.csr.cert_request_pem}",
                  "signing_algorithm": "SHA256WITHRSA",
                  "validity": [
                    {
                      "type": "YEARS",
                      "value": 1
                    }
                  ]
                }
              references:
                certificate_authority_arn: aws_acmpca_certificate_authority.example.arn
                certificate_signing_request: tls_cert_request.csr.cert_request_pem
              dependencies:
                aws_acmpca_certificate_authority.example: |-
                    {
                      "permanent_deletion_time_in_days": 7,
                      "private_certificate_configuration": [
                        {
                          "key_algorithm": "RSA_4096",
                          "signing_algorithm": "SHA512WITHRSA",
                          "subject": [
                            {
                              "common_name": "example.com"
                            }
                          ]
                        }
                      ]
                    }
                tls_cert_request.csr: |-
                    {
                      "key_algorithm": "RSA",
                      "private_key_pem": "${tls_private_key.key.private_key_pem}",
                      "subject": [
                        {
                          "common_name": "example"
                        }
                      ]
                    }
                tls_private_key.key: |-
                    {
                      "algorithm": "RSA"
                    }
        argumentDocs:
            arn: '- Amazon Resource Name (ARN) of the certificate.'
            certificate: '- The PEM-encoded certificate value.'
            certificate_authority_arn: '- (Required) Amazon Resource Name (ARN) of the certificate authority.'
            certificate_chain: '- The PEM-encoded certificate chain that includes any intermediate certificates and chains up to root CA.'
            certificate_signing_request: '- (Required) Certificate Signing Request in PEM format.'
            signing_algorithm: '- (Required) Algorithm to use to sign certificate requests. Valid values: SHA256WITHRSA, SHA256WITHECDSA, SHA384WITHRSA, SHA384WITHECDSA, SHA512WITHRSA, SHA512WITHECDSA'
            template_arn: '- (Optional) The template to use when issuing a certificate. See ACM PCA Documentation for more information.'
            validity: '- (Required) Configures end of the validity period for the certificate. See validity block below.'
            validity.type: '- (Required) Determines how value is interpreted. Valid values: DAYS, MONTHS, YEARS, ABSOLUTE, END_DATE.'
            validity.value: '- (Required) If type is DAYS, MONTHS, or YEARS, the relative time until the certificate expires. If type is ABSOLUTE, the date in seconds since the Unix epoch. If type is END_DATE, the  date in RFC 3339 format.'
        importStatements: []
    aws_acmpca_certificate_authority:
        subCategory: ACM PCA (Certificate Manager Private Certificate Authority)
        description: Provides a resource to manage AWS Certificate Manager Private Certificate Authorities
        name: aws_acmpca_certificate_authority
        title: aws_acmpca_certificate_authority
        examples:
            - name: example
              manifest: |-
                {
                  "certificate_authority_configuration": [
                    {
                      "key_algorithm": "RSA_4096",
                      "signing_algorithm": "SHA512WITHRSA",
                      "subject": [
                        {
                          "common_name": "example.com"
                        }
                      ]
                    }
                  ],
                  "permanent_deletion_time_in_days": 7
                }
            - name: example
              manifest: |-
                {
                  "certificate_authority_configuration": [
                    {
                      "key_algorithm": "RSA_4096",
                      "signing_algorithm": "SHA512WITHRSA",
                      "subject": [
                        {
                          "common_name": "example.com"
                        }
                      ]
                    }
                  ],
                  "depends_on": [
                    "${aws_s3_bucket_policy.example}"
                  ],
                  "revocation_configuration": [
                    {
                      "crl_configuration": [
                        {
                          "custom_cname": "crl.example.com",
                          "enabled": true,
                          "expiration_in_days": 7,
                          "s3_bucket_name": "${aws_s3_bucket.example.id}"
                        }
                      ]
                    }
                  ]
                }
              references:
                revocation_configuration.crl_configuration.s3_bucket_name: aws_s3_bucket.example.id
              dependencies:
                aws_s3_bucket.example: |-
                    {
                      "bucket": "example"
                    }
                aws_s3_bucket_policy.example: |-
                    {
                      "bucket": "${aws_s3_bucket.example.id}",
                      "policy": "${data.aws_iam_policy_document.acmpca_bucket_access.json}"
                    }
        argumentDocs:
            arn: '- Amazon Resource Name (ARN) of the certificate authority.'
            certificate: '- Base64-encoded certificate authority (CA) certificate. Only available after the certificate authority certificate has been imported.'
            certificate_authority_configuration: '- (Required) Nested argument containing algorithms and certificate subject information. Defined below.'
            certificate_authority_configuration.key_algorithm: '- (Required) Type of the public key algorithm and size, in bits, of the key pair that your key pair creates when it issues a certificate. Valid values can be found in the ACM PCA Documentation.'
            certificate_authority_configuration.signing_algorithm: '- (Required) Name of the algorithm your private CA uses to sign certificate requests. Valid values can be found in the ACM PCA Documentation.'
            certificate_authority_configuration.subject: '- (Required) Nested argument that contains X.500 distinguished name information. At least one nested attribute must be specified.'
            certificate_authority_configuration.subject.common_name: '- (Optional) Fully qualified domain name (FQDN) associated with the certificate subject. Must be less than or equal to 64 characters in length.'
            certificate_authority_configuration.subject.country: '- (Optional) Two digit code that specifies the country in which the certificate subject located. Must be less than or equal to 2 characters in length.'
            certificate_authority_configuration.subject.distinguished_name_qualifier: '- (Optional) Disambiguating information for the certificate subject. Must be less than or equal to 64 characters in length.'
            certificate_authority_configuration.subject.generation_qualifier: '- (Optional) Typically a qualifier appended to the name of an individual. Examples include Jr. for junior, Sr. for senior, and III for third. Must be less than or equal to 3 characters in length.'
            certificate_authority_configuration.subject.given_name: '- (Optional) First name. Must be less than or equal to 16 characters in length.'
            certificate_authority_configuration.subject.initials: '- (Optional) Concatenation that typically contains the first letter of the given_name, the first letter of the middle name if one exists, and the first letter of the surname. Must be less than or equal to 5 characters in length.'
            certificate_authority_configuration.subject.locality: '- (Optional) The locality (such as a city or town) in which the certificate subject is located. Must be less than or equal to 128 characters in length.'
            certificate_authority_configuration.subject.organization: '- (Optional) Legal name of the organization with which the certificate subject is affiliated. Must be less than or equal to 64 characters in length.'
            certificate_authority_configuration.subject.organizational_unit: '- (Optional) A subdivision or unit of the organization (such as sales or finance) with which the certificate subject is affiliated. Must be less than or equal to 64 characters in length.'
            certificate_authority_configuration.subject.pseudonym: '- (Optional) Typically a shortened version of a longer given_name. For example, Jonathan is often shortened to John. Elizabeth is often shortened to Beth, Liz, or Eliza. Must be less than or equal to 128 characters in length.'
            certificate_authority_configuration.subject.state: '- (Optional) State in which the subject of the certificate is located. Must be less than or equal to 128 characters in length.'
            certificate_authority_configuration.subject.surname: '- (Optional) Family name. In the US and the UK for example, the surname of an individual is ordered last. In Asian cultures the surname is typically ordered first. Must be less than or equal to 40 characters in length.'
            certificate_authority_configuration.subject.title: '- (Optional) A title such as Mr. or Ms. which is pre-pended to the name to refer formally to the certificate subject. Must be less than or equal to 64 characters in length.'
            certificate_chain: '- Base64-encoded certificate chain that includes any intermediate certificates and chains up to root on-premises certificate that you used to sign your private CA certificate. The chain does not include your private CA certificate. Only available after the certificate authority certificate has been imported.'
            certificate_signing_request: '- The base64 PEM-encoded certificate signing request (CSR) for your private CA certificate.'
            create: '- (Default 1m) How long to wait for a certificate authority to be created.'
            enabled: '- (Optional) Whether the certificate authority is enabled or disabled. Defaults to true.'
            id: '- Amazon Resource Name (ARN) of the certificate authority.'
            not_after: '- Date and time after which the certificate authority is not valid. Only available after the certificate authority certificate has been imported.'
            not_before: '- Date and time before which the certificate authority is not valid. Only available after the certificate authority certificate has been imported.'
            permanent_deletion_time_in_days: '- (Optional) The number of days to make a CA restorable after it has been deleted, must be between 7 to 30 days, with default to 30 days.'
            revocation_configuration: '- (Optional) Nested argument containing revocation configuration. Defined below.'
            revocation_configuration.crl_configuration: '- (Optional) Nested argument containing configuration of the certificate revocation list (CRL), if any, maintained by the certificate authority. Defined below.'
            revocation_configuration.crl_configuration.custom_cname: '- (Optional) Name inserted into the certificate CRL Distribution Points extension that enables the use of an alias for the CRL distribution point. Use this value if you don''t want the name of your S3 bucket to be public. Must be less than or equal to 253 characters in length.'
            revocation_configuration.crl_configuration.enabled: '- (Optional) Boolean value that specifies whether certificate revocation lists (CRLs) are enabled. Defaults to false.'
            revocation_configuration.crl_configuration.expiration_in_days: '- (Required) Number of days until a certificate expires. Must be between 1 and 5000.'
            revocation_configuration.crl_configuration.s3_bucket_name: '- (Optional) Name of the S3 bucket that contains the CRL. If you do not provide a value for the custom_cname argument, the name of your S3 bucket is placed into the CRL Distribution Points extension of the issued certificate. You must specify a bucket policy that allows ACM PCA to write the CRL to your bucket. Must be less than or equal to 255 characters in length.'
            revocation_configuration.crl_configuration.s3_object_acl: '- (Optional) Determines whether the CRL will be publicly readable or privately held in the CRL Amazon S3 bucket. Defaults to PUBLIC_READ.'
            revocation_configuration.ocsp_configuration: |-
                - (Optional) Nested argument containing configuration of
                the custom OCSP responder endpoint. Defined below.
            revocation_configuration.ocsp_configuration.enabled: '- (Required) Boolean value that specifies whether a custom OCSP responder is enabled.'
            revocation_configuration.ocsp_configuration.ocsp_custom_cname: '- (Optional) A CNAME specifying a customized OCSP domain. Note: The value of the CNAME must not include a protocol prefix such as "http://" or "https://".'
            serial: '- Serial number of the certificate authority. Only available after the certificate authority certificate has been imported.'
            status: '- (Deprecated use the enabled attribute instead) Status of the certificate authority.'
            tags: '- (Optional) Specifies a key-value map of user-defined tags that are attached to the certificate authority. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            type: '- (Optional) The type of the certificate authority. Defaults to SUBORDINATE. Valid values: ROOT and SUBORDINATE.'
        importStatements: []
    aws_acmpca_certificate_authority_certificate:
        subCategory: ACM PCA (Certificate Manager Private Certificate Authority)
        description: Associates a certificate with an AWS Certificate Manager Private Certificate Authority
        name: aws_acmpca_certificate_authority_certificate
        title: aws_acmpca_certificate_authority_certificate
        examples:
            - name: example
              manifest: |-
                {
                  "certificate": "${aws_acmpca_certificate.example.certificate}",
                  "certificate_authority_arn": "${aws_acmpca_certificate_authority.example.arn}",
                  "certificate_chain": "${aws_acmpca_certificate.example.certificate_chain}"
                }
              references:
                certificate: aws_acmpca_certificate.example.certificate
                certificate_authority_arn: aws_acmpca_certificate_authority.example.arn
                certificate_chain: aws_acmpca_certificate.example.certificate_chain
              dependencies:
                aws_acmpca_certificate.example: |-
                    {
                      "certificate_authority_arn": "${aws_acmpca_certificate_authority.example.arn}",
                      "certificate_signing_request": "${aws_acmpca_certificate_authority.example.certificate_signing_request}",
                      "signing_algorithm": "SHA512WITHRSA",
                      "template_arn": "arn:${data.aws_partition.current.partition}:acm-pca:::template/RootCACertificate/V1",
                      "validity": [
                        {
                          "type": "YEARS",
                          "value": 1
                        }
                      ]
                    }
                aws_acmpca_certificate_authority.example: |-
                    {
                      "certificate_authority_configuration": [
                        {
                          "key_algorithm": "RSA_4096",
                          "signing_algorithm": "SHA512WITHRSA",
                          "subject": [
                            {
                              "common_name": "example.com"
                            }
                          ]
                        }
                      ],
                      "type": "ROOT"
                    }
            - name: subordinate
              manifest: |-
                {
                  "certificate": "${aws_acmpca_certificate.subordinate.certificate}",
                  "certificate_authority_arn": "${aws_acmpca_certificate_authority.subordinate.arn}",
                  "certificate_chain": "${aws_acmpca_certificate.subordinate.certificate_chain}"
                }
              references:
                certificate: aws_acmpca_certificate.subordinate.certificate
                certificate_authority_arn: aws_acmpca_certificate_authority.subordinate.arn
                certificate_chain: aws_acmpca_certificate.subordinate.certificate_chain
              dependencies:
                aws_acmpca_certificate.root: '{}'
                aws_acmpca_certificate.subordinate: |-
                    {
                      "certificate_authority_arn": "${aws_acmpca_certificate_authority.root.arn}",
                      "certificate_signing_request": "${aws_acmpca_certificate_authority.subordinate.certificate_signing_request}",
                      "signing_algorithm": "SHA512WITHRSA",
                      "template_arn": "arn:${data.aws_partition.current.partition}:acm-pca:::template/SubordinateCACertificate_PathLen0/V1",
                      "validity": [
                        {
                          "type": "YEARS",
                          "value": 1
                        }
                      ]
                    }
                aws_acmpca_certificate_authority.root: '{}'
                aws_acmpca_certificate_authority.subordinate: |-
                    {
                      "certificate_authority_configuration": [
                        {
                          "key_algorithm": "RSA_2048",
                          "signing_algorithm": "SHA512WITHRSA",
                          "subject": [
                            {
                              "common_name": "sub.example.com"
                            }
                          ]
                        }
                      ],
                      "type": "SUBORDINATE"
                    }
            - name: root
              manifest: '{}'
              dependencies:
                aws_acmpca_certificate.root: '{}'
                aws_acmpca_certificate.subordinate: |-
                    {
                      "certificate_authority_arn": "${aws_acmpca_certificate_authority.root.arn}",
                      "certificate_signing_request": "${aws_acmpca_certificate_authority.subordinate.certificate_signing_request}",
                      "signing_algorithm": "SHA512WITHRSA",
                      "template_arn": "arn:${data.aws_partition.current.partition}:acm-pca:::template/SubordinateCACertificate_PathLen0/V1",
                      "validity": [
                        {
                          "type": "YEARS",
                          "value": 1
                        }
                      ]
                    }
                aws_acmpca_certificate_authority.root: '{}'
                aws_acmpca_certificate_authority.subordinate: |-
                    {
                      "certificate_authority_configuration": [
                        {
                          "key_algorithm": "RSA_2048",
                          "signing_algorithm": "SHA512WITHRSA",
                          "subject": [
                            {
                              "common_name": "sub.example.com"
                            }
                          ]
                        }
                      ],
                      "type": "SUBORDINATE"
                    }
        argumentDocs:
            certificate: '- (Required) The PEM-encoded certificate for the Certificate Authority.'
            certificate_authority_arn: '- (Required) Amazon Resource Name (ARN) of the Certificate Authority.'
            certificate_chain: '- (Optional) The PEM-encoded certificate chain that includes any intermediate certificates and chains up to root CA. Required for subordinate Certificate Authorities. Not allowed for root Certificate Authorities.'
        importStatements: []
    aws_acmpca_policy:
        subCategory: ACM PCA (Certificate Manager Private Certificate Authority)
        description: Attaches a resource based policy to an AWS Certificate Manager Private Certificate Authority (ACM PCA)
        name: aws_acmpca_policy
        title: aws_acmpca_policy
        examples:
            - name: example
              manifest: |-
                {
                  "policy": "{                        \n   \"Version\":\"2012-10-17\",\n   \"Statement\":[\n      {    \n         \"Sid\":\"1\",\n         \"Effect\":\"Allow\",         \n         \"Principal\":{                                                                                                                                               \n            \"AWS\":\"${data.aws_caller_identity.current.account_id}\"                                                                                \n         },\n         \"Action\":[\n            \"acm-pca:DescribeCertificateAuthority\",\n            \"acm-pca:GetCertificate\",\n            \"acm-pca:GetCertificateAuthorityCertificate\",\n            \"acm-pca:ListPermissions\",\n            \"acm-pca:ListTags\"                                                                                   \n         ],                                                                                              \n         \"Resource\":\"${aws_acmpca_certificate_authority.example.arn}\"\n      },\n      {\n         \"Sid\":\"1\",  \n         \"Effect\":\"Allow\",\n         \"Principal\":{\n            \"AWS\":\"${data.aws_caller_identity.current.account_id}\"\n         },\n         \"Action\":[\n            \"acm-pca:IssueCertificate\"\n         ],\n         \"Resource\":\"${aws_acmpca_certificate_authority.example.arn}\",\n         \"Condition\":{\n            \"StringEquals\":{\n               \"acm-pca:TemplateArn\":\"arn:aws:acm-pca:::template/EndEntityCertificate/V1\"\n            }\n         }\n      }\n   ]\n}\n",
                  "resource_arn": "${aws_acmpca_certificate_authority.example.arn}"
                }
              references:
                resource_arn: aws_acmpca_certificate_authority.example.arn
        argumentDocs:
            policy: '- (Required) JSON-formatted IAM policy to attach to the specified private CA resource.'
            resource_arn: '- (Required) Amazon Resource Name (ARN) of the private CA to associate with the policy.'
        importStatements: []
    aws_ami:
        subCategory: EC2 (Elastic Compute Cloud)
        description: Creates and manages a custom Amazon Machine Image (AMI).
        name: aws_ami
        title: aws_ami
        examples:
            - name: example
              manifest: |-
                {
                  "ebs_block_device": [
                    {
                      "device_name": "/dev/xvda",
                      "snapshot_id": "snap-xxxxxxxx",
                      "volume_size": 8
                    }
                  ],
                  "name": "terraform-example",
                  "root_device_name": "/dev/xvda",
                  "virtualization_type": "hvm"
                }
        argumentDocs:
            architecture: '- (Optional) Machine architecture for created instances. Defaults to "x86_64".'
            arn: '- The ARN of the AMI.'
            boot_mode: '- (Optional) The boot mode of the AMI. For more information, see Boot modes in the Amazon Elastic Compute Cloud User Guide.'
            deprecation_time: '- (Optional) The date and time to deprecate the AMI. If you specified a value for seconds, Amazon EC2 rounds the seconds to the nearest minute. Valid values: RFC3339 time string (YYYY-MM-DDTHH:MM:SSZ)'
            description: '- (Optional) A longer, human-readable description for the AMI.'
            ebs_block_device: |-
                - (Optional) Nested block describing an EBS block device that should be
                attached to created instances. The structure of this block is described below.
            ebs_block_device.delete_on_termination: |-
                - (Optional) Boolean controlling whether the EBS volumes created to
                support each created instance will be deleted once that instance is terminated.
            ebs_block_device.device_name: '- (Required) The path at which the device is exposed to created instances.'
            ebs_block_device.encrypted: '- (Optional) Boolean controlling whether the created EBS volumes will be encrypted. Can''t be used with snapshot_id.'
            ebs_block_device.iops: |-
                - (Required only when volume_type is io1 or io2) Number of I/O operations per second the
                created volumes will support.
            ebs_block_device.kms_key_id: |-
                - (Optional) The full ARN of the AWS Key Management Service (AWS KMS) CMK to use when encrypting the snapshots of
                an image during a copy operation. This parameter is only required if you want to use a non-default CMK;
                if this parameter is not specified, the default CMK for EBS is used
            ebs_block_device.outpost_arn: '- (Optional) The ARN of the Outpost on which the snapshot is stored.'
            ebs_block_device.snapshot_id: |-
                - (Optional) The id of an EBS snapshot that will be used to initialize the created
                EBS volumes. If set, the volume_size attribute must be at least as large as the referenced
                snapshot.
            ebs_block_device.throughput: '- (Optional) The throughput that the EBS volume supports, in MiB/s. Only valid for volume_type of gp3.'
            ebs_block_device.volume_size: |-
                - (Required unless snapshot_id is set) The size of created volumes in GiB.
                If snapshot_id is set and volume_size is omitted then the volume will have the same size
                as the selected snapshot.
            ebs_block_device.volume_type: '- (Optional) The type of EBS volume to create. Can be standard, gp2, gp3, io1, io2, sc1 or st1 (Default: standard).'
            ena_support: '- (Optional) Specifies whether enhanced networking with ENA is enabled. Defaults to false.'
            ephemeral_block_device: |-
                - (Optional) Nested block describing an ephemeral block device that
                should be attached to created instances. The structure of this block is described below.
            ephemeral_block_device.device_name: '- (Required) The path at which the device is exposed to created instances.'
            ephemeral_block_device.virtual_name: |-
                - (Required) A name for the ephemeral device, of the form "ephemeralN" where
                N is a volume number starting from zero.
            hypervisor: '- The hypervisor type of the image.'
            id: '- The ID of the created AMI.'
            image_location: |-
                - (Required) Path to an S3 object containing an image manifest, e.g., created
                by the ec2-upload-bundle command in the EC2 command line tools.
            image_owner_alias: '- The AWS account alias (for example, amazon, self) or the AWS account ID of the AMI owner.'
            image_type: '- The type of image.'
            kernel_id: |-
                - (Required) The id of the kernel image (AKI) that will be used as the paravirtual
                kernel in created instances.
            name: '- (Required) A region-unique name for the AMI.'
            owner_id: '- The AWS account ID of the image owner.'
            platform: '- This value is set to windows for Windows AMIs; otherwise, it is blank.'
            platform_details: '- The platform details associated with the billing code of the AMI.'
            public: '- Indicates whether the image has public launch permissions.'
            ramdisk_id: |-
                - (Optional) The id of an initrd image (ARI) that will be used when booting the
                created instances.
            root_device_name: '- (Optional) The name of the root device (for example, /dev/sda1, or /dev/xvda).'
            root_snapshot_id: '- The Snapshot ID for the root volume (for EBS-backed AMIs)'
            sriov_net_support: |-
                - (Optional) When set to "simple" (the default), enables enhanced networking
                for created instances. No other value is supported at this time.
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            timeouts.create: '- (Defaults to 40 mins) Used when creating the AMI'
            timeouts.delete: '- (Defaults to 90 mins) Used when deregistering the AMI'
            timeouts.update: '- (Defaults to 40 mins) Used when updating the AMI'
            tpm_support: '- (Optional) If the image is configured for NitroTPM support, the value is v2.0. For more information, see NitroTPM in the Amazon Elastic Compute Cloud User Guide.'
            usage_operation: '- The operation of the Amazon EC2 instance and the billing code that is associated with the AMI.'
            virtualization_type: |-
                - (Optional) Keyword to choose what virtualization mode created instances
                will use. Can be either "paravirtual" (the default) or "hvm". The choice of virtualization type
                changes the set of further arguments that are required, as described below.
        importStatements: []
    aws_ami_copy:
        subCategory: EC2 (Elastic Compute Cloud)
        description: Duplicates an existing Amazon Machine Image (AMI)
        name: aws_ami_copy
        title: aws_ami_copy
        examples:
            - name: example
              manifest: |-
                {
                  "description": "A copy of ami-xxxxxxxx",
                  "name": "terraform-example",
                  "source_ami_id": "ami-xxxxxxxx",
                  "source_ami_region": "us-west-1",
                  "tags": {
                    "Name": "HelloWorld"
                  }
                }
        argumentDocs:
            arn: '- The ARN of the AMI.'
            destination_outpost_arn: |-
                - (Optional) The ARN of the Outpost to which to copy the AMI.
                Only specify this parameter when copying an AMI from an AWS Region to an Outpost. The AMI must be in the Region of the destination Outpost.
            encrypted: '- (Optional) Specifies whether the destination snapshots of the copied image should be encrypted. Defaults to false'
            id: '- The ID of the created AMI.'
            kms_key_id: '- (Optional) The full ARN of the KMS Key to use when encrypting the snapshots of an image during a copy operation. If not specified, then the default AWS KMS Key will be used'
            name: '- (Required) A region-unique name for the AMI.'
            source_ami_id: |-
                - (Required) The id of the AMI to copy. This id must be valid in the region
                given by source_ami_region.
            source_ami_region: |-
                - (Required) The region from which the AMI will be copied. This may be the
                same as the AWS provider region in order to create a copy within the same region.
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            timeouts.create: '- (Defaults to 40 mins) Used when creating the AMI'
            timeouts.delete: '- (Defaults to 90 mins) Used when deregistering the AMI'
            timeouts.update: '- (Defaults to 40 mins) Used when updating the AMI'
        importStatements: []
    aws_ami_from_instance:
        subCategory: EC2 (Elastic Compute Cloud)
        description: Creates an Amazon Machine Image (AMI) from an EBS-backed EC2 instance
        name: aws_ami_from_instance
        title: aws_ami_from_instance
        examples:
            - name: example
              manifest: |-
                {
                  "name": "terraform-example",
                  "source_instance_id": "i-xxxxxxxx"
                }
        argumentDocs:
            arn: '- The ARN of the AMI.'
            id: '- The ID of the created AMI.'
            name: '- (Required) A region-unique name for the AMI.'
            snapshot_without_reboot: |-
                - (Optional) Boolean that overrides the behavior of stopping
                the instance before snapshotting. This is risky since it may cause a snapshot of an
                inconsistent filesystem state, but can be used to avoid downtime if the user otherwise
                guarantees that no filesystem writes will be underway at the time of snapshot.
            source_instance_id: '- (Required) The id of the instance to use as the basis of the AMI.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            timeouts.create: '- (Defaults to 40 mins) Used when creating the AMI'
            timeouts.delete: '- (Defaults to 90 mins) Used when deregistering the AMI'
            timeouts.update: '- (Defaults to 40 mins) Used when updating the AMI'
        importStatements: []
    aws_ami_launch_permission:
        subCategory: EC2 (Elastic Compute Cloud)
        description: Adds a launch permission to an Amazon Machine Image (AMI).
        name: aws_ami_launch_permission
        title: aws_ami_launch_permission
        examples:
            - name: example
              manifest: |-
                {
                  "account_id": "123456789012",
                  "image_id": "ami-12345678"
                }
            - name: example
              manifest: |-
                {
                  "group": "all",
                  "image_id": "ami-12345678"
                }
            - name: example
              manifest: |-
                {
                  "image_id": "ami-12345678",
                  "organization_arn": "${data.aws_organizations_organization.current.arn}"
                }
              references:
                organization_arn: data.aws_organizations_organization.current.arn
        argumentDocs:
            account_id: '- (Optional) The AWS account ID for the launch permission.'
            group: '- (Optional) The name of the group for the launch permission. Valid values: "all".'
            id: '- Launch permission ID.'
            image_id: '- (Required) The ID of the AMI.'
            organization_arn: '- (Optional) The ARN of an organization for the launch permission.'
            organizational_unit_arn: '- (Optional) The ARN of an organizational unit for the launch permission.'
        importStatements: []
    aws_amplify_app:
        subCategory: Amplify
        description: Provides an Amplify App resource.
        name: aws_amplify_app
        title: aws_amplify_app
        examples:
            - name: example
              manifest: |-
                {
                  "build_spec": "version: 0.1\nfrontend:\n  phases:\n    preBuild:\n      commands:\n        - yarn install\n    build:\n      commands:\n        - yarn run build\n  artifacts:\n    baseDirectory: build\n    files:\n      - '**/*'\n  cache:\n    paths:\n      - node_modules/**/*\n",
                  "custom_rule": [
                    {
                      "source": "/\u003c*\u003e",
                      "status": "404",
                      "target": "/index.html"
                    }
                  ],
                  "environment_variables": {
                    "ENV": "test"
                  },
                  "name": "example",
                  "repository": "https://github.com/example/app"
                }
            - name: example
              manifest: |-
                {
                  "access_token": "...",
                  "name": "example",
                  "repository": "https://github.com/example/app"
                }
            - name: example
              manifest: |-
                {
                  "auto_branch_creation_config": [
                    {
                      "enable_auto_build": true
                    }
                  ],
                  "auto_branch_creation_patterns": [
                    "*",
                    "*/**"
                  ],
                  "enable_auto_branch_creation": true,
                  "name": "example"
                }
            - name: example
              manifest: |-
                {
                  "basic_auth_credentials": "${base64encode(\"username1:password1\")}",
                  "enable_basic_auth": true,
                  "name": "example"
                }
            - name: example
              manifest: |-
                {
                  "custom_rule": [
                    {
                      "source": "/api/\u003c*\u003e",
                      "status": "200",
                      "target": "https://api.example.com/api/\u003c*\u003e"
                    },
                    {
                      "source": "\u003c/^[^.]+$|\\.(?!(css|gif|ico|jpg|js|png|txt|svg|woff|ttf|map|json)$)([^.]+$)/\u003e",
                      "status": "200",
                      "target": "/index.html"
                    }
                  ],
                  "name": "example"
                }
        argumentDocs:
            access_token: '- (Optional) The personal access token for a third-party source control system for an Amplify app. The personal access token is used to create a webhook and a read-only deploy key. The token is not stored.'
            arn: '- The Amazon Resource Name (ARN) of the Amplify app.'
            auto_branch_creation_config: '- (Optional) The automated branch creation configuration for an Amplify app. An auto_branch_creation_config block is documented below.'
            auto_branch_creation_config.basic_auth_credentials: '- (Optional) The basic authorization credentials for the autocreated branch.'
            auto_branch_creation_config.build_spec: '- (Optional) The build specification (build spec) for the autocreated branch.'
            auto_branch_creation_config.enable_auto_build: '- (Optional) Enables auto building for the autocreated branch.'
            auto_branch_creation_config.enable_basic_auth: '- (Optional) Enables basic authorization for the autocreated branch.'
            auto_branch_creation_config.enable_performance_mode: '- (Optional) Enables performance mode for the branch.'
            auto_branch_creation_config.enable_pull_request_preview: '- (Optional) Enables pull request previews for the autocreated branch.'
            auto_branch_creation_config.environment_variables: '- (Optional) The environment variables for the autocreated branch.'
            auto_branch_creation_config.framework: '- (Optional) The framework for the autocreated branch.'
            auto_branch_creation_config.pull_request_environment_name: '- (Optional) The Amplify environment name for the pull request.'
            auto_branch_creation_config.stage: '- (Optional) Describes the current stage for the autocreated branch. Valid values: PRODUCTION, BETA, DEVELOPMENT, EXPERIMENTAL, PULL_REQUEST.'
            auto_branch_creation_patterns: '- (Optional) The automated branch creation glob patterns for an Amplify app.'
            basic_auth_credentials: '- (Optional) The credentials for basic authorization for an Amplify app.'
            build_spec: '- (Optional) The build specification (build spec) for an Amplify app.'
            custom_rule: '- (Optional) The custom rewrite and redirect rules for an Amplify app. A custom_rule block is documented below.'
            custom_rule.condition: '- (Optional) The condition for a URL rewrite or redirect rule, such as a country code.'
            custom_rule.source: '- (Required) The source pattern for a URL rewrite or redirect rule.'
            custom_rule.status: '- (Optional) The status code for a URL rewrite or redirect rule. Valid values: 200, 301, 302, 404, 404-200.'
            custom_rule.target: '- (Required) The target pattern for a URL rewrite or redirect rule.'
            default_domain: '- The default domain for the Amplify app.'
            description: '- (Optional) The description for an Amplify app.'
            enable_auto_branch_creation: '- (Optional) Enables automated branch creation for an Amplify app.'
            enable_basic_auth: '- (Optional) Enables basic authorization for an Amplify app. This will apply to all branches that are part of this app.'
            enable_branch_auto_build: '- (Optional) Enables auto-building of branches for the Amplify App.'
            enable_branch_auto_deletion: '- (Optional) Automatically disconnects a branch in the Amplify Console when you delete a branch from your Git repository.'
            environment_variables: '- (Optional) The environment variables map for an Amplify app.'
            iam_service_role_arn: '- (Optional) The AWS Identity and Access Management (IAM) service role for an Amplify app.'
            id: '- The unique ID of the Amplify app.'
            name: '- (Required) The name for an Amplify app.'
            oauth_token: '- (Optional) The OAuth token for a third-party source control system for an Amplify app. The OAuth token is used to create a webhook and a read-only deploy key. The OAuth token is not stored.'
            platform: '- (Optional) The platform or framework for an Amplify app. Valid values: WEB.'
            production_branch: '- Describes the information about a production branch for an Amplify app. A production_branch block is documented below.'
            production_branch.branch_name: '- The branch name for the production branch.'
            production_branch.last_deploy_time: '- The last deploy time of the production branch.'
            production_branch.status: '- The status of the production branch.'
            production_branch.thumbnail_url: '- The thumbnail URL for the production branch.'
            repository: '- (Optional) The repository for an Amplify app.'
            tags: '- (Optional) Key-value mapping of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_amplify_backend_environment:
        subCategory: Amplify
        description: Provides an Amplify Backend Environment resource.
        name: aws_amplify_backend_environment
        title: aws_amplify_backend_environment
        examples:
            - name: example
              manifest: |-
                {
                  "app_id": "${aws_amplify_app.example.id}",
                  "deployment_artifacts": "app-example-deployment",
                  "environment_name": "example",
                  "stack_name": "amplify-app-example"
                }
              references:
                app_id: aws_amplify_app.example.id
              dependencies:
                aws_amplify_app.example: |-
                    {
                      "name": "example"
                    }
        argumentDocs:
            app_id: '- (Required) The unique ID for an Amplify app.'
            arn: '- The Amazon Resource Name (ARN) for a backend environment that is part of an Amplify app.'
            deployment_artifacts: '- (Optional) The name of deployment artifacts.'
            environment_name: '- (Required) The name for the backend environment.'
            id: '- The unique ID of the Amplify backend environment.'
            stack_name: '- (Optional) The AWS CloudFormation stack name of a backend environment.'
        importStatements: []
    aws_amplify_branch:
        subCategory: Amplify
        description: Provides an Amplify Branch resource.
        name: aws_amplify_branch
        title: aws_amplify_branch
        examples:
            - name: master
              manifest: |-
                {
                  "app_id": "${aws_amplify_app.example.id}",
                  "branch_name": "master",
                  "environment_variables": {
                    "REACT_APP_API_SERVER": "https://api.example.com"
                  },
                  "framework": "React",
                  "stage": "PRODUCTION"
                }
              references:
                app_id: aws_amplify_app.example.id
              dependencies:
                aws_amplify_app.example: |-
                    {
                      "name": "app"
                    }
            - name: master
              manifest: |-
                {
                  "app_id": "${aws_amplify_app.example.id}",
                  "basic_auth_config": [
                    {
                      "enable_basic_auth": true,
                      "password": "password",
                      "username": "username"
                    }
                  ],
                  "branch_name": "master"
                }
              references:
                app_id: aws_amplify_app.example.id
              dependencies:
                aws_amplify_app.example: |-
                    {
                      "name": "app"
                    }
            - name: master
              manifest: |-
                {
                  "app_id": "${aws_amplify_app.example.id}",
                  "branch_name": "master",
                  "enable_notification": true
                }
              references:
                app_id: aws_amplify_app.example.id
              dependencies:
                aws_amplify_app.example: |-
                    {
                      "name": "app"
                    }
                aws_cloudwatch_event_rule.amplify_app_master: |-
                    {
                      "description": "AWS Amplify build notifications for :  App: ${aws_amplify_app.app.id} Branch: ${aws_amplify_branch.master.branch_name}",
                      "event_pattern": "${jsonencode({\n    \"detail\" = {\n      \"appId\" = [\n        aws_amplify_app.example.id\n      ]\n      \"branchName\" = [\n        aws_amplify_branch.master.branch_name\n      ],\n      \"jobStatus\" = [\n        \"SUCCEED\",\n        \"FAILED\",\n        \"STARTED\"\n      ]\n    }\n    \"detail-type\" = [\n      \"Amplify Deployment Status Change\"\n    ]\n    \"source\" = [\n      \"aws.amplify\"\n    ]\n  })}",
                      "name": "amplify-${aws_amplify_app.app.id}-${aws_amplify_branch.master.branch_name}-branch-notification"
                    }
                aws_cloudwatch_event_target.amplify_app_master: |-
                    {
                      "arn": "${aws_sns_topic.amplify_app_master.arn}",
                      "input_transformer": [
                        {
                          "input_paths": {
                            "appId": "$.detail.appId",
                            "branch": "$.detail.branchName",
                            "jobId": "$.detail.jobId",
                            "region": "$.region",
                            "status": "$.detail.jobStatus"
                          },
                          "input_template": "\"Build notification from the AWS Amplify Console for app: https://\u003cbranch\u003e.\u003cappId\u003e.amplifyapp.com/. Your build status is \u003cstatus\u003e. Go to https://console.aws.amazon.com/amplify/home?region=\u003cregion\u003e#\u003cappId\u003e/\u003cbranch\u003e/\u003cjobId\u003e to view details on your build. \""
                        }
                      ],
                      "rule": "${aws_cloudwatch_event_rule.amplify_app_master.name}",
                      "target_id": "${aws_amplify_branch.master.branch_name}"
                    }
                aws_sns_topic.amplify_app_master: |-
                    {
                      "name": "amplify-${aws_amplify_app.app.id}_${aws_amplify_branch.master.branch_name}"
                    }
                aws_sns_topic_policy.amplify_app_master: |-
                    {
                      "arn": "${aws_sns_topic.amplify_app_master.arn}",
                      "policy": "${data.aws_iam_policy_document.amplify_app_master.json}"
                    }
        argumentDocs:
            app_id: '- (Required) The unique ID for an Amplify app.'
            arn: '- The Amazon Resource Name (ARN) for the branch.'
            associated_resources: '- A list of custom resources that are linked to this branch.'
            backend_environment_arn: '- (Optional) The Amazon Resource Name (ARN) for a backend environment that is part of an Amplify app.'
            basic_auth_credentials: '- (Optional) The basic authorization credentials for the branch.'
            branch_name: '- (Required) The name for the branch.'
            custom_domains: '- The custom domains for the branch.'
            description: '- (Optional) The description for the branch.'
            destination_branch: '- The destination branch if the branch is a pull request branch.'
            display_name: '- (Optional) The display name for a branch. This is used as the default domain prefix.'
            enable_auto_build: '- (Optional) Enables auto building for the branch.'
            enable_basic_auth: '- (Optional) Enables basic authorization for the branch.'
            enable_notification: '- (Optional) Enables notifications for the branch.'
            enable_performance_mode: '- (Optional) Enables performance mode for the branch.'
            enable_pull_request_preview: '- (Optional) Enables pull request previews for this branch.'
            environment_variables: '- (Optional) The environment variables for the branch.'
            framework: '- (Optional) The framework for the branch.'
            pull_request_environment_name: '- (Optional) The Amplify environment name for the pull request.'
            source_branch: '- The source branch if the branch is a pull request branch.'
            stage: '- (Optional) Describes the current stage for the branch. Valid values: PRODUCTION, BETA, DEVELOPMENT, EXPERIMENTAL, PULL_REQUEST.'
            tags: '- (Optional) Key-value mapping of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            ttl: '- (Optional) The content Time To Live (TTL) for the website in seconds.'
        importStatements: []
    aws_amplify_domain_association:
        subCategory: Amplify
        description: Provides an Amplify Domain Association resource.
        name: aws_amplify_domain_association
        title: aws_amplify_domain_association
        examples:
            - name: example
              manifest: |-
                {
                  "app_id": "${aws_amplify_app.example.id}",
                  "domain_name": "example.com",
                  "sub_domain": [
                    {
                      "branch_name": "${aws_amplify_branch.master.branch_name}",
                      "prefix": ""
                    },
                    {
                      "branch_name": "${aws_amplify_branch.master.branch_name}",
                      "prefix": "www"
                    }
                  ]
                }
              references:
                app_id: aws_amplify_app.example.id
                sub_domain.branch_name: aws_amplify_branch.master.branch_name
              dependencies:
                aws_amplify_app.example: |-
                    {
                      "custom_rule": [
                        {
                          "source": "https://example.com",
                          "status": "302",
                          "target": "https://www.example.com"
                        }
                      ],
                      "name": "app"
                    }
                aws_amplify_branch.master: |-
                    {
                      "app_id": "${aws_amplify_app.example.id}",
                      "branch_name": "master"
                    }
        argumentDocs:
            app_id: '- (Required) The unique ID for an Amplify app.'
            arn: '- The Amazon Resource Name (ARN) for the domain association.'
            certificate_verification_dns_record: '- The DNS record for certificate verification.'
            domain_name: '- (Required) The domain name for the domain association.'
            sub_domain: '- (Required) The setting for the subdomain. Documented below.'
            sub_domain.branch_name: '- (Required) The branch name setting for the subdomain.'
            sub_domain.dns_record: '- The DNS record for the subdomain.'
            sub_domain.prefix: '- (Required) The prefix setting for the subdomain.'
            sub_domain.verified: '- The verified status of the subdomain.'
            wait_for_verification: '- (Optional) If enabled, the resource will wait for the domain association status to change to PENDING_DEPLOYMENT or AVAILABLE. Setting this to false will skip the process. Default: true.'
        importStatements: []
    aws_amplify_webhook:
        subCategory: Amplify
        description: Provides an Amplify Webhook resource.
        name: aws_amplify_webhook
        title: aws_amplify_webhook
        examples:
            - name: master
              manifest: |-
                {
                  "app_id": "${aws_amplify_app.example.id}",
                  "branch_name": "${aws_amplify_branch.master.branch_name}",
                  "description": "triggermaster"
                }
              references:
                app_id: aws_amplify_app.example.id
                branch_name: aws_amplify_branch.master.branch_name
              dependencies:
                aws_amplify_app.example: |-
                    {
                      "name": "app"
                    }
                aws_amplify_branch.master: |-
                    {
                      "app_id": "${aws_amplify_app.example.id}",
                      "branch_name": "master"
                    }
        argumentDocs:
            app_id: '- (Required) The unique ID for an Amplify app.'
            arn: '- The Amazon Resource Name (ARN) for the webhook.'
            branch_name: '- (Required) The name for a branch that is part of the Amplify app.'
            description: '- (Optional) The description for a webhook.'
            url: '- The URL of the webhook.'
        importStatements: []
    aws_api_gateway_account:
        subCategory: API Gateway
        description: Provides a settings of an API Gateway Account.
        name: aws_api_gateway_account
        title: aws_api_gateway_account
        examples:
            - name: demo
              manifest: |-
                {
                  "cloudwatch_role_arn": "${aws_iam_role.cloudwatch.arn}"
                }
              references:
                cloudwatch_role_arn: aws_iam_role.cloudwatch.arn
              dependencies:
                aws_iam_role.cloudwatch: |-
                    {
                      "assume_role_policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Principal\": {\n        \"Service\": \"apigateway.amazonaws.com\"\n      },\n      \"Action\": \"sts:AssumeRole\"\n    }\n  ]\n}\n",
                      "name": "api_gateway_cloudwatch_global"
                    }
                aws_iam_role_policy.cloudwatch: |-
                    {
                      "name": "default",
                      "policy": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"logs:CreateLogGroup\",\n                \"logs:CreateLogStream\",\n                \"logs:DescribeLogGroups\",\n                \"logs:DescribeLogStreams\",\n                \"logs:PutLogEvents\",\n                \"logs:GetLogEvents\",\n                \"logs:FilterLogEvents\"\n            ],\n            \"Resource\": \"*\"\n        }\n    ]\n}\n",
                      "role": "${aws_iam_role.cloudwatch.id}"
                    }
        argumentDocs:
            cloudwatch_role_arn: '- (Optional) The ARN of an IAM role for CloudWatch (to allow logging & monitoring). See more in AWS Docs. Logging & monitoring can be enabled/disabled and otherwise tuned on the API Gateway Stage level.'
            throttle_settings: '- Account-Level throttle settings. See exported fields below.'
            throttle_settings.burst_limit: '- The absolute maximum number of times API Gateway allows the API to be called per second (RPS).'
            throttle_settings.rate_limit: '- The number of times API Gateway allows the API to be called per second on average (RPS).'
        importStatements: []
    aws_api_gateway_api_key:
        subCategory: API Gateway
        description: Provides an API Gateway API Key.
        name: aws_api_gateway_api_key
        title: aws_api_gateway_api_key
        examples:
            - name: MyDemoApiKey
              manifest: |-
                {
                  "name": "demo"
                }
        argumentDocs:
            arn: '- Amazon Resource Name (ARN)'
            created_date: '- The creation date of the API key'
            description: '- (Optional) The API key description. Defaults to "Managed by Terraform".'
            enabled: '- (Optional) Specifies whether the API key can be used by callers. Defaults to true.'
            id: '- The ID of the API key'
            last_updated_date: '- The last update date of the API key'
            name: '- (Required) The name of the API key'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            value: '- (Optional) The value of the API key. If not specified, it will be automatically generated by AWS on creation.'
        importStatements: []
    aws_api_gateway_authorizer:
        subCategory: API Gateway
        description: Provides an API Gateway Authorizer.
        name: aws_api_gateway_authorizer
        title: aws_api_gateway_authorizer
        examples:
            - name: demo
              manifest: |-
                {
                  "authorizer_credentials": "${aws_iam_role.invocation_role.arn}",
                  "authorizer_uri": "${aws_lambda_function.authorizer.invoke_arn}",
                  "name": "demo",
                  "rest_api_id": "${aws_api_gateway_rest_api.demo.id}"
                }
              references:
                authorizer_credentials: aws_iam_role.invocation_role.arn
                authorizer_uri: aws_lambda_function.authorizer.invoke_arn
                rest_api_id: aws_api_gateway_rest_api.demo.id
              dependencies:
                aws_api_gateway_rest_api.demo: |-
                    {
                      "name": "auth-demo"
                    }
                aws_iam_role.invocation_role: |-
                    {
                      "assume_role_policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"apigateway.amazonaws.com\"\n      },\n      \"Effect\": \"Allow\",\n      \"Sid\": \"\"\n    }\n  ]\n}\n",
                      "name": "api_gateway_auth_invocation",
                      "path": "/"
                    }
                aws_iam_role.lambda: |-
                    {
                      "assume_role_policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"lambda.amazonaws.com\"\n      },\n      \"Effect\": \"Allow\",\n      \"Sid\": \"\"\n    }\n  ]\n}\n",
                      "name": "demo-lambda"
                    }
                aws_iam_role_policy.invocation_policy: |-
                    {
                      "name": "default",
                      "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": \"lambda:InvokeFunction\",\n      \"Effect\": \"Allow\",\n      \"Resource\": \"${aws_lambda_function.authorizer.arn}\"\n    }\n  ]\n}\n",
                      "role": "${aws_iam_role.invocation_role.id}"
                    }
                aws_lambda_function.authorizer: |-
                    {
                      "filename": "lambda-function.zip",
                      "function_name": "api_gateway_authorizer",
                      "handler": "exports.example",
                      "role": "${aws_iam_role.lambda.arn}",
                      "source_code_hash": "${filebase64sha256(\"lambda-function.zip\")}"
                    }
        argumentDocs:
            arn: '- Amazon Resource Name (ARN) of the API Gateway Authorizer'
            authorizer_credentials: '- (Optional) The credentials required for the authorizer. To specify an IAM Role for API Gateway to assume, use the IAM Role ARN.'
            authorizer_result_ttl_in_seconds: '- (Optional) The TTL of cached authorizer results in seconds. Defaults to 300.'
            authorizer_uri: |-
                - (Optional, required for type TOKEN/REQUEST) The authorizer's Uniform Resource Identifier (URI). This must be a well-formed Lambda function URI in the form of arn:aws:apigateway:{region}:lambda:path/{service_api},
                e.g., arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:012345678912:function:my-function/invocations
            id: '- The Authorizer identifier.'
            identity_source: '- (Optional) The source of the identity in an incoming request. Defaults to method.request.header.Authorization. For REQUEST type, this may be a comma-separated list of values, including headers, query string parameters and stage variables - e.g., "method.request.header.SomeHeaderName,method.request.querystring.SomeQueryStringName,stageVariables.SomeStageVariableName"'
            identity_validation_expression: '- (Optional) A validation expression for the incoming identity. For TOKEN type, this value should be a regular expression. The incoming token from the client is matched against this expression, and will proceed if the token matches. If the token doesn''t match, the client receives a 401 Unauthorized response.'
            name: '- (Required) The name of the authorizer'
            provider_arns: '- (Optional, required for type COGNITO_USER_POOLS) A list of the Amazon Cognito user pool ARNs. Each element is of this format: arn:aws:cognito-idp:{region}:{account_id}:userpool/{user_pool_id}.'
            rest_api_id: '- (Required) The ID of the associated REST API'
            type: '- (Optional) The type of the authorizer. Possible values are TOKEN for a Lambda function using a single authorization token submitted in a custom header, REQUEST for a Lambda function using incoming request parameters, or COGNITO_USER_POOLS for using an Amazon Cognito user pool. Defaults to TOKEN.'
        importStatements: []
    aws_api_gateway_base_path_mapping:
        subCategory: API Gateway
        description: Connects a custom domain with a deployed API
        name: aws_api_gateway_base_path_mapping
        title: aws_api_gateway_base_path_mapping
        examples:
            - name: example
              manifest: |-
                {
                  "api_id": "${aws_api_gateway_rest_api.example.id}",
                  "domain_name": "${aws_api_gateway_domain_name.example.domain_name}",
                  "stage_name": "${aws_api_gateway_stage.example.stage_name}"
                }
              references:
                api_id: aws_api_gateway_rest_api.example.id
                domain_name: aws_api_gateway_domain_name.example.domain_name
                stage_name: aws_api_gateway_stage.example.stage_name
              dependencies:
                aws_api_gateway_domain_name.example: |-
                    {
                      "certificate_body": "${file(\"${path.module}/example.com/example.crt\")}",
                      "certificate_chain": "${file(\"${path.module}/example.com/ca.crt\")}",
                      "certificate_name": "example-api",
                      "certificate_private_key": "${file(\"${path.module}/example.com/example.key\")}",
                      "domain_name": "example.com"
                    }
                aws_api_gateway_stage.example: |-
                    {
                      "deployment_id": "${aws_api_gateway_deployment.example.id}",
                      "rest_api_id": "${aws_api_gateway_rest_api.example.id}",
                      "stage_name": "example"
                    }
        argumentDocs:
            api_id: '- (Required) The id of the API to connect.'
            base_path: '- (Optional) Path segment that must be prepended to the path when accessing the API via this mapping. If omitted, the API is exposed at the root of the given domain.'
            domain_name: '- (Required) The already-registered domain name to connect the API to.'
            stage_name: '- (Optional) The name of a specific deployment stage to expose at the given path. If omitted, callers may select any stage by including its name as a path element after the base path.'
        importStatements: []
    aws_api_gateway_client_certificate:
        subCategory: API Gateway
        description: Provides an API Gateway Client Certificate.
        name: aws_api_gateway_client_certificate
        title: aws_api_gateway_client_certificate
        examples:
            - name: demo
              manifest: |-
                {
                  "description": "My client certificate"
                }
        argumentDocs:
            arn: '- Amazon Resource Name (ARN)'
            created_date: '- The date when the client certificate was created.'
            description: '- (Optional) The description of the client certificate.'
            expiration_date: '- The date when the client certificate will expire.'
            id: '- The identifier of the client certificate.'
            pem_encoded_certificate: '- The PEM-encoded public key of the client certificate.'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_api_gateway_deployment:
        subCategory: API Gateway
        description: Manages an API Gateway REST Deployment.
        name: aws_api_gateway_deployment
        title: aws_api_gateway_deployment
        examples:
            - name: example
              manifest: |-
                {
                  "lifecycle": [
                    {
                      "create_before_destroy": true
                    }
                  ],
                  "rest_api_id": "${aws_api_gateway_rest_api.example.id}",
                  "triggers": {
                    "redeployment": "${sha1(jsonencode(aws_api_gateway_rest_api.example.body))}"
                  }
                }
              references:
                rest_api_id: aws_api_gateway_rest_api.example.id
              dependencies:
                aws_api_gateway_rest_api.example: |-
                    {
                      "body": "${jsonencode({\n    openapi = \"3.0.1\"\n    info = {\n      title   = \"example\"\n      version = \"1.0\"\n    }\n    paths = {\n      \"/path1\" = {\n        get = {\n          x-amazon-apigateway-integration = {\n            httpMethod           = \"GET\"\n            payloadFormatVersion = \"1.0\"\n            type                 = \"HTTP_PROXY\"\n            uri                  = \"https://ip-ranges.amazonaws.com/ip-ranges.json\"\n          }\n        }\n      }\n    }\n  })}",
                      "name": "example"
                    }
                aws_api_gateway_stage.example: |-
                    {
                      "deployment_id": "${aws_api_gateway_deployment.example.id}",
                      "rest_api_id": "${aws_api_gateway_rest_api.example.id}",
                      "stage_name": "example"
                    }
            - name: example
              manifest: |-
                {
                  "lifecycle": [
                    {
                      "create_before_destroy": true
                    }
                  ],
                  "rest_api_id": "${aws_api_gateway_rest_api.example.id}",
                  "triggers": {
                    "redeployment": "${sha1(jsonencode([\n      aws_api_gateway_resource.example.id,\n      aws_api_gateway_method.example.id,\n      aws_api_gateway_integration.example.id,\n    ]))}"
                  }
                }
              references:
                rest_api_id: aws_api_gateway_rest_api.example.id
              dependencies:
                aws_api_gateway_integration.example: |-
                    {
                      "http_method": "${aws_api_gateway_method.example.http_method}",
                      "resource_id": "${aws_api_gateway_resource.example.id}",
                      "rest_api_id": "${aws_api_gateway_rest_api.example.id}",
                      "type": "MOCK"
                    }
                aws_api_gateway_method.example: |-
                    {
                      "authorization": "NONE",
                      "http_method": "GET",
                      "resource_id": "${aws_api_gateway_resource.example.id}",
                      "rest_api_id": "${aws_api_gateway_rest_api.example.id}"
                    }
                aws_api_gateway_resource.example: |-
                    {
                      "parent_id": "${aws_api_gateway_rest_api.example.root_resource_id}",
                      "path_part": "example",
                      "rest_api_id": "${aws_api_gateway_rest_api.example.id}"
                    }
                aws_api_gateway_rest_api.example: |-
                    {
                      "name": "example"
                    }
                aws_api_gateway_stage.example: |-
                    {
                      "deployment_id": "${aws_api_gateway_deployment.example.id}",
                      "rest_api_id": "${aws_api_gateway_rest_api.example.id}",
                      "stage_name": "example"
                    }
        argumentDocs:
            aws_api_gateway_integration: resource
            aws_api_gateway_rest_api: resource
            body: argument), no special dependency setup is needed beyond referencing the  id attribute of that resource unless additional Terraform resources have further customized the REST API.
            created_date: '- The creation date of the deployment'
            depends_on: meta-argument
            description: '- (Optional) Description of the deployment'
            execution_arn: |-
                - The execution ARN to be used in lambda_permission's source_arn
                when allowing API Gateway to invoke a Lambda function,
                e.g., arn:aws:execute-api:eu-west-2:123456789012:z4675bid1j/prod
            id: '- The ID of the deployment'
            invoke_url: |-
                - The URL to invoke the API pointing to the stage,
                e.g., https://z4675bid1j.execute-api.eu-west-2.amazonaws.com/prod
            rest_api_id: '- (Required) REST API identifier.'
            stage_description: '- (Optional) Description to set on the stage managed by the stage_name argument.'
            stage_name: '- (Optional) Name of the stage to create with this deployment. If the specified stage already exists, it will be updated to point to the new deployment. It is recommended to use the aws_api_gateway_stage resource instead to manage stages.'
            triggers: argument or explicit resource references using the resource . The triggers argument should be preferred over depends_on, since depends_on can only capture dependency ordering and will not cause the resource to recreate (redeploy the REST API) with upstream configuration changes.
            variables: '- (Optional) Map to set on the stage managed by the stage_name argument.'
        importStatements: []
    aws_api_gateway_documentation_part:
        subCategory: API Gateway
        description: Provides a settings of an API Gateway Documentation Part.
        name: aws_api_gateway_documentation_part
        title: aws_api_gateway_documentation_part
        examples:
            - name: example
              manifest: |-
                {
                  "location": [
                    {
                      "method": "GET",
                      "path": "/example",
                      "type": "METHOD"
                    }
                  ],
                  "properties": "{\"description\":\"Example description\"}",
                  "rest_api_id": "${aws_api_gateway_rest_api.example.id}"
                }
              references:
                rest_api_id: aws_api_gateway_rest_api.example.id
              dependencies:
                aws_api_gateway_rest_api.example: |-
                    {
                      "name": "example_api"
                    }
        argumentDocs:
            id: '- The unique ID of the Documentation Part'
            location: '- (Required) The location of the targeted API entity of the to-be-created documentation part. See below.'
            location.method: '- (Optional) The HTTP verb of a method. The default value is * for any method.'
            location.name: '- (Optional) The name of the targeted API entity.'
            location.path: '- (Optional) The URL path of the target. The default value is / for the root resource.'
            location.status_code: '- (Optional) The HTTP status code of a response. The default value is * for any status code.'
            location.type: '- (Required) The type of API entity to which the documentation content appliesE.g., API, METHOD or REQUEST_BODY'
            properties: '- (Required) A content map of API-specific key-value pairs describing the targeted API entity. The map must be encoded as a JSON string, e.g., "{ "description": "The API does ..." }". Only Swagger-compliant key-value pairs can be exported and, hence, published.'
            rest_api_id: '- (Required) The ID of the associated Rest API'
        importStatements: []
    aws_api_gateway_documentation_version:
        subCategory: API Gateway
        description: Provides a resource to manage an API Gateway Documentation Version.
        name: aws_api_gateway_documentation_version
        title: aws_api_gateway_documentation_version
        examples:
            - name: example
              manifest: |-
                {
                  "depends_on": [
                    "${aws_api_gateway_documentation_part.example}"
                  ],
                  "description": "Example description",
                  "rest_api_id": "${aws_api_gateway_rest_api.example.id}",
                  "version": "example_version"
                }
              references:
                rest_api_id: aws_api_gateway_rest_api.example.id
              dependencies:
                aws_api_gateway_documentation_part.example: |-
                    {
                      "location": [
                        {
                          "type": "API"
                        }
                      ],
                      "properties": "{\"description\":\"Example\"}",
                      "rest_api_id": "${aws_api_gateway_rest_api.example.id}"
                    }
                aws_api_gateway_rest_api.example: |-
                    {
                      "name": "example_api"
                    }
        argumentDocs:
            description: '- (Optional) The description of the API documentation version.'
            rest_api_id: '- (Required) The ID of the associated Rest API'
            version: '- (Required) The version identifier of the API documentation snapshot.'
        importStatements: []
    aws_api_gateway_domain_name:
        subCategory: API Gateway
        description: Registers a custom domain name for use with AWS API Gateway.
        name: aws_api_gateway_domain_name
        title: aws_api_gateway_domain_name
        examples:
            - name: example
              manifest: |-
                {
                  "certificate_arn": "${aws_acm_certificate_validation.example.certificate_arn}",
                  "domain_name": "api.example.com"
                }
              references:
                certificate_arn: aws_acm_certificate_validation.example.certificate_arn
              dependencies:
                aws_route53_record.example: |-
                    {
                      "alias": [
                        {
                          "evaluate_target_health": true,
                          "name": "${aws_api_gateway_domain_name.example.cloudfront_domain_name}",
                          "zone_id": "${aws_api_gateway_domain_name.example.cloudfront_zone_id}"
                        }
                      ],
                      "name": "${aws_api_gateway_domain_name.example.domain_name}",
                      "type": "A",
                      "zone_id": "${aws_route53_zone.example.id}"
                    }
            - name: example
              manifest: |-
                {
                  "certificate_body": "${file(\"${path.module}/example.com/example.crt\")}",
                  "certificate_chain": "${file(\"${path.module}/example.com/ca.crt\")}",
                  "certificate_name": "example-api",
                  "certificate_private_key": "${file(\"${path.module}/example.com/example.key\")}",
                  "domain_name": "api.example.com"
                }
              dependencies:
                aws_route53_record.example: |-
                    {
                      "alias": [
                        {
                          "evaluate_target_health": true,
                          "name": "${aws_api_gateway_domain_name.example.cloudfront_domain_name}",
                          "zone_id": "${aws_api_gateway_domain_name.example.cloudfront_zone_id}"
                        }
                      ],
                      "name": "${aws_api_gateway_domain_name.example.domain_name}",
                      "type": "A",
                      "zone_id": "${aws_route53_zone.example.id}"
                    }
            - name: example
              manifest: |-
                {
                  "domain_name": "api.example.com",
                  "endpoint_configuration": [
                    {
                      "types": [
                        "REGIONAL"
                      ]
                    }
                  ],
                  "regional_certificate_arn": "${aws_acm_certificate_validation.example.certificate_arn}"
                }
              references:
                regional_certificate_arn: aws_acm_certificate_validation.example.certificate_arn
              dependencies:
                aws_route53_record.example: |-
                    {
                      "alias": [
                        {
                          "evaluate_target_health": true,
                          "name": "${aws_api_gateway_domain_name.example.regional_domain_name}",
                          "zone_id": "${aws_api_gateway_domain_name.example.regional_zone_id}"
                        }
                      ],
                      "name": "${aws_api_gateway_domain_name.example.domain_name}",
                      "type": "A",
                      "zone_id": "${aws_route53_zone.example.id}"
                    }
            - name: example
              manifest: |-
                {
                  "certificate_body": "${file(\"${path.module}/example.com/example.crt\")}",
                  "certificate_chain": "${file(\"${path.module}/example.com/ca.crt\")}",
                  "certificate_private_key": "${file(\"${path.module}/example.com/example.key\")}",
                  "domain_name": "api.example.com",
                  "endpoint_configuration": [
                    {
                      "types": [
                        "REGIONAL"
                      ]
                    }
                  ],
                  "regional_certificate_name": "example-api"
                }
              dependencies:
                aws_route53_record.example: |-
                    {
                      "alias": [
                        {
                          "evaluate_target_health": true,
                          "name": "${aws_api_gateway_domain_name.example.regional_domain_name}",
                          "zone_id": "${aws_api_gateway_domain_name.example.regional_zone_id}"
                        }
                      ],
                      "name": "${aws_api_gateway_domain_name.example.domain_name}",
                      "type": "A",
                      "zone_id": "${aws_route53_zone.example.id}"
                    }
        argumentDocs:
            arn: '- ARN of domain name.'
            certificate_arn: '- (Optional) ARN for an AWS-managed certificate. AWS Certificate Manager is the only supported source. Used when an edge-optimized domain name is desired. Conflicts with certificate_name, certificate_body, certificate_chain, certificate_private_key, regional_certificate_arn, and regional_certificate_name.'
            certificate_body: '- (Optional) Certificate issued for the domain name being registered, in PEM format. Only valid for EDGE endpoint configuration type. Conflicts with certificate_arn, regional_certificate_arn, and regional_certificate_name.'
            certificate_chain: '- (Optional) Certificate for the CA that issued the certificate, along with any intermediate CA certificates required to create an unbroken chain to a certificate trusted by the intended API clients. Only valid for EDGE endpoint configuration type. Conflicts with certificate_arn, regional_certificate_arn, and regional_certificate_name.'
            certificate_name: '- (Optional) Unique name to use when registering this certificate as an IAM server certificate. Conflicts with certificate_arn, regional_certificate_arn, and regional_certificate_name. Required if certificate_arn is not set.'
            certificate_private_key: '- (Optional) Private key associated with the domain certificate given in certificate_body. Only valid for EDGE endpoint configuration type. Conflicts with certificate_arn, regional_certificate_arn, and regional_certificate_name.'
            certificate_upload_date: '- Upload date associated with the domain certificate.'
            cloudfront_domain_name: '- Hostname created by Cloudfront to represent the distribution that implements this domain name mapping.'
            cloudfront_zone_id: '- For convenience, the hosted zone ID (Z2FDTNDATAQYW2) that can be used to create a Route53 alias record for the distribution.'
            domain_name: '- (Required) Fully-qualified domain name to register.'
            endpoint_configuration: '- (Optional) Configuration block defining API endpoint information including type. See below.'
            endpoint_configuration.types: '- (Required) List of endpoint types. This resource currently only supports managing a single value. Valid values: EDGE or REGIONAL. If unspecified, defaults to EDGE. Must be declared as REGIONAL in non-Commercial partitions. Refer to the documentation for more information on the difference between edge-optimized and regional APIs.'
            id: '- Internal identifier assigned to this domain name by API Gateway.'
            mutual_tls_authentication: '- (Optional) Mutual TLS authentication configuration for the domain name. See below.'
            mutual_tls_authentication.truststore_uri: '- (Required) Amazon S3 URL that specifies the truststore for mutual TLS authentication, for example, s3://bucket-name/key-name. The truststore can contain certificates from public or private certificate authorities. To update the truststore, upload a new version to S3, and then update your custom domain name to use the new version.'
            mutual_tls_authentication.truststore_version: '- (Optional) Version of the S3 object that contains the truststore. To specify a version, you must have versioning enabled for the S3 bucket.'
            ownership_verification_certificate_arn: '- (Optional) ARN of the AWS-issued certificate used to validate custom domain ownership (when certificate_arn is issued via an ACM Private CA or mutual_tls_authentication is configured with an ACM-imported certificate.)'
            regional_certificate_arn: '- (Optional) ARN for an AWS-managed certificate. AWS Certificate Manager is the only supported source. Used when a regional domain name is desired. Conflicts with certificate_arn, certificate_name, certificate_body, certificate_chain, and certificate_private_key.'
            regional_certificate_name: '- (Optional) User-friendly name of the certificate that will be used by regional endpoint for this domain name. Conflicts with certificate_arn, certificate_name, certificate_body, certificate_chain, and certificate_private_key.'
            regional_domain_name: '- Hostname for the custom domain''s regional endpoint.'
            regional_zone_id: '- Hosted zone ID that can be used to create a Route53 alias record for the regional endpoint.'
            security_policy: '- (Optional) Transport Layer Security (TLS) version + cipher suite for this DomainName. Valid values are TLS_1_0 and TLS_1_2. Must be configured to perform drift detection.'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_api_gateway_gateway_response:
        subCategory: API Gateway
        description: Provides an API Gateway Gateway Response for a REST API Gateway.
        name: aws_api_gateway_gateway_response
        title: aws_api_gateway_gateway_response
        examples:
            - name: test
              manifest: |-
                {
                  "response_parameters": {
                    "gatewayresponse.header.Authorization": "'Basic'"
                  },
                  "response_templates": {
                    "application/json": "{\"message\":$context.error.messageString}"
                  },
                  "response_type": "UNAUTHORIZED",
                  "rest_api_id": "${aws_api_gateway_rest_api.main.id}",
                  "status_code": "401"
                }
              references:
                rest_api_id: aws_api_gateway_rest_api.main.id
              dependencies:
                aws_api_gateway_rest_api.main: |-
                    {
                      "name": "MyDemoAPI"
                    }
        argumentDocs:
            response_parameters: '- (Optional) A map specifying the parameters (paths, query strings and headers) of the Gateway Response.'
            response_templates: '- (Optional) A map specifying the templates used to transform the response body.'
            response_type: '- (Required) The response type of the associated GatewayResponse.'
            rest_api_id: '- (Required) The string identifier of the associated REST API.'
            status_code: '- (Optional) The HTTP status code of the Gateway Response.'
        importStatements: []
    aws_api_gateway_integration:
        subCategory: API Gateway
        description: Provides an HTTP Method Integration for an API Gateway Integration.
        name: aws_api_gateway_integration
        title: aws_api_gateway_integration
        examples:
            - name: MyDemoIntegration
              manifest: |-
                {
                  "cache_key_parameters": [
                    "method.request.path.param"
                  ],
                  "cache_namespace": "foobar",
                  "http_method": "${aws_api_gateway_method.MyDemoMethod.http_method}",
                  "request_parameters": {
                    "integration.request.header.X-Authorization": "'static'"
                  },
                  "request_templates": {
                    "application/xml": "{\n   \"body\" : $input.json('$')\n}\n"
                  },
                  "resource_id": "${aws_api_gateway_resource.MyDemoResource.id}",
                  "rest_api_id": "${aws_api_gateway_rest_api.MyDemoAPI.id}",
                  "timeout_milliseconds": 29000,
                  "type": "MOCK"
                }
              references:
                http_method: aws_api_gateway_method.MyDemoMethod.http_method
                resource_id: aws_api_gateway_resource.MyDemoResource.id
                rest_api_id: aws_api_gateway_rest_api.MyDemoAPI.id
              dependencies:
                aws_api_gateway_method.MyDemoMethod: |-
                    {
                      "authorization": "NONE",
                      "http_method": "GET",
                      "resource_id": "${aws_api_gateway_resource.MyDemoResource.id}",
                      "rest_api_id": "${aws_api_gateway_rest_api.MyDemoAPI.id}"
                    }
                aws_api_gateway_resource.MyDemoResource: |-
                    {
                      "parent_id": "${aws_api_gateway_rest_api.MyDemoAPI.root_resource_id}",
                      "path_part": "mydemoresource",
                      "rest_api_id": "${aws_api_gateway_rest_api.MyDemoAPI.id}"
                    }
                aws_api_gateway_rest_api.MyDemoAPI: |-
                    {
                      "description": "This is my API for demonstration purposes",
                      "name": "MyDemoAPI"
                    }
            - name: integration
              manifest: |-
                {
                  "http_method": "${aws_api_gateway_method.method.http_method}",
                  "integration_http_method": "POST",
                  "resource_id": "${aws_api_gateway_resource.resource.id}",
                  "rest_api_id": "${aws_api_gateway_rest_api.api.id}",
                  "type": "AWS_PROXY",
                  "uri": "${aws_lambda_function.lambda.invoke_arn}"
                }
              references:
                http_method: aws_api_gateway_method.method.http_method
                resource_id: aws_api_gateway_resource.resource.id
                rest_api_id: aws_api_gateway_rest_api.api.id
                uri: aws_lambda_function.lambda.invoke_arn
              dependencies:
                aws_api_gateway_method.method: |-
                    {
                      "authorization": "NONE",
                      "http_method": "GET",
                      "resource_id": "${aws_api_gateway_resource.resource.id}",
                      "rest_api_id": "${aws_api_gateway_rest_api.api.id}"
                    }
                aws_api_gateway_resource.resource: |-
                    {
                      "parent_id": "${aws_api_gateway_rest_api.api.root_resource_id}",
                      "path_part": "resource",
                      "rest_api_id": "${aws_api_gateway_rest_api.api.id}"
                    }
                aws_api_gateway_rest_api.api: |-
                    {
                      "name": "myapi"
                    }
                aws_iam_role.role: |-
                    {
                      "assume_role_policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"lambda.amazonaws.com\"\n      },\n      \"Effect\": \"Allow\",\n      \"Sid\": \"\"\n    }\n  ]\n}\n",
                      "name": "myrole"
                    }
                aws_lambda_function.lambda: |-
                    {
                      "filename": "lambda.zip",
                      "function_name": "mylambda",
                      "handler": "lambda.lambda_handler",
                      "role": "${aws_iam_role.role.arn}",
                      "runtime": "python3.6",
                      "source_code_hash": "${filebase64sha256(\"lambda.zip\")}"
                    }
                aws_lambda_permission.apigw_lambda: |-
                    {
                      "action": "lambda:InvokeFunction",
                      "function_name": "${aws_lambda_function.lambda.function_name}",
                      "principal": "apigateway.amazonaws.com",
                      "source_arn": "arn:aws:execute-api:${var.myregion}:${var.accountId}:${aws_api_gateway_rest_api.api.id}/*/${aws_api_gateway_method.method.http_method}${aws_api_gateway_resource.resource.path}",
                      "statement_id": "AllowExecutionFromAPIGateway"
                    }
            - name: test
              manifest: |-
                {
                  "connection_id": "${aws_api_gateway_vpc_link.test.id}",
                  "connection_type": "VPC_LINK",
                  "content_handling": "CONVERT_TO_TEXT",
                  "http_method": "${aws_api_gateway_method.test.http_method}",
                  "integration_http_method": "GET",
                  "passthrough_behavior": "WHEN_NO_MATCH",
                  "request_parameters": {
                    "integration.request.header.X-Authorization": "'static'",
                    "integration.request.header.X-Foo": "'Bar'"
                  },
                  "request_templates": {
                    "application/json": "",
                    "application/xml": "#set($inputRoot = $input.path('$'))\n{ }"
                  },
                  "resource_id": "${aws_api_gateway_resource.test.id}",
                  "rest_api_id": "${aws_api_gateway_rest_api.test.id}",
                  "type": "HTTP",
                  "uri": "https://www.google.de"
                }
              references:
                connection_id: aws_api_gateway_vpc_link.test.id
                http_method: aws_api_gateway_method.test.http_method
                resource_id: aws_api_gateway_resource.test.id
                rest_api_id: aws_api_gateway_rest_api.test.id
              dependencies:
                aws_api_gateway_method.test: |-
                    {
                      "authorization": "NONE",
                      "http_method": "GET",
                      "request_models": {
                        "application/json": "Error"
                      },
                      "resource_id": "${aws_api_gateway_resource.test.id}",
                      "rest_api_id": "${aws_api_gateway_rest_api.test.id}"
                    }
                aws_api_gateway_resource.test: |-
                    {
                      "parent_id": "${aws_api_gateway_rest_api.test.root_resource_id}",
                      "path_part": "test",
                      "rest_api_id": "${aws_api_gateway_rest_api.test.id}"
                    }
                aws_api_gateway_rest_api.test: |-
                    {
                      "name": "${var.name}"
                    }
                aws_api_gateway_vpc_link.test: |-
                    {
                      "name": "${var.name}",
                      "target_arns": [
                        "${aws_lb.test.arn}"
                      ]
                    }
                aws_lb.test: |-
                    {
                      "internal": true,
                      "load_balancer_type": "network",
                      "name": "${var.name}",
                      "subnets": [
                        "${var.subnet_id}"
                      ]
                    }
        argumentDocs:
            cache_key_parameters: '- (Optional) A list of cache key parameters for the integration.'
            cache_namespace: '- (Optional) The integration''s cache namespace.'
            connection_id: '- (Optional) The id of the VpcLink used for the integration. Required if connection_type is VPC_LINK'
            connection_type: '- (Optional) The integration input''s connectionType. Valid values are INTERNET (default for connections through the public routable internet), and VPC_LINK (for private connections between API Gateway and a network load balancer in a VPC).'
            content_handling: '- (Optional) Specifies how to handle request payload content type conversions. Supported values are CONVERT_TO_BINARY and CONVERT_TO_TEXT. If this property is not defined, the request payload will be passed through from the method request to integration request without modification, provided that the passthroughBehaviors is configured to support payload pass-through.'
            credentials: '- (Optional) The credentials required for the integration. For AWS integrations, 2 options are available. To specify an IAM Role for Amazon API Gateway to assume, use the role''s ARN. To require that the caller''s identity be passed through from the request, specify the string arn:aws:iam::\*:user/\*.'
            http_method: |-
                - (Required) The HTTP method (GET, POST, PUT, DELETE, HEAD, OPTION, ANY)
                when calling the associated resource.
            integration_http_method: |-
                - (Optional) The integration HTTP method
                (GET, POST, PUT, DELETE, HEAD, OPTIONs, ANY, PATCH) specifying how API Gateway will interact with the back end.
                Required if type is AWS, AWS_PROXY, HTTP or HTTP_PROXY.
                Not all methods are compatible with all AWS integrations.
                e.g., Lambda function can only be invoked via POST.
            passthrough_behavior: '- (Optional) The integration passthrough behavior (WHEN_NO_MATCH, WHEN_NO_TEMPLATES, NEVER).  Required if request_templates is used.'
            request_parameters: |-
                - (Optional) A map of request query string parameters and headers that should be passed to the backend responder.
                For example: request_parameters = { "integration.request.header.X-Some-Other-Header" = "method.request.header.X-Some-Header" }
            request_templates: '- (Optional) A map of the integration''s request templates.'
            resource_id: '- (Required) The API resource ID.'
            rest_api_id: '- (Required) The ID of the associated REST API.'
            timeout_milliseconds: '- (Optional) Custom timeout between 50 and 29,000 milliseconds. The default value is 29,000 milliseconds.'
            tls_config: '- (Optional) Configuration block specifying the TLS configuration for an integration. Defined below.'
            tls_config.insecure_skip_verification: '- (Optional) Specifies whether or not API Gateway skips verification that the certificate for an integration endpoint is issued by a supported certificate authority. This isn’t recommended, but it enables you to use certificates that are signed by private certificate authorities, or certificates that are self-signed. If enabled, API Gateway still performs basic certificate validation, which includes checking the certificate''s expiration date, hostname, and presence of a root certificate authority. Supported only for HTTP and HTTP_PROXY integrations.'
            type: '- (Required) The integration input''s type. Valid values are HTTP (for HTTP backends), MOCK (not calling any real backend), AWS (for AWS services), AWS_PROXY (for Lambda proxy integration) and HTTP_PROXY (for HTTP proxy integration). An HTTP or HTTP_PROXY integration with a connection_type of VPC_LINK is referred to as a private integration and uses a VpcLink to connect API Gateway to a network load balancer of a VPC.'
            uri: |-
                - (Optional) The input's URI. Required if type is AWS, AWS_PROXY, HTTP or HTTP_PROXY.
                For HTTP integrations, the URI must be a fully formed, encoded HTTP(S) URL according to the RFC-3986 specification . For AWS integrations, the URI should be of the form arn:aws:apigateway:{region}:{subdomain.service|service}:{path|action}/{service_api}. region, subdomain and service are used to determine the right endpoint.
                e.g., arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:012345678901:function:my-func/invocations. For private integrations, the URI parameter is not used for routing requests to your endpoint, but is used for setting the Host header and for certificate validation.
        importStatements: []
    aws_api_gateway_integration_response:
        subCategory: API Gateway
        description: Provides an HTTP Method Integration Response for an API Gateway Resource.
        name: aws_api_gateway_integration_response
        title: aws_api_gateway_integration_response
        examples:
            - name: MyDemoIntegrationResponse
              manifest: |-
                {
                  "http_method": "${aws_api_gateway_method.MyDemoMethod.http_method}",
                  "resource_id": "${aws_api_gateway_resource.MyDemoResource.id}",
                  "response_templates": {
                    "application/xml": "#set($inputRoot = $input.path('$'))\n\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\n\u003cmessage\u003e\n    $inputRoot.body\n\u003c/message\u003e\n"
                  },
                  "rest_api_id": "${aws_api_gateway_rest_api.MyDemoAPI.id}",
                  "status_code": "${aws_api_gateway_method_response.response_200.status_code}"
                }
              references:
                http_method: aws_api_gateway_method.MyDemoMethod.http_method
                resource_id: aws_api_gateway_resource.MyDemoResource.id
                rest_api_id: aws_api_gateway_rest_api.MyDemoAPI.id
                status_code: aws_api_gateway_method_response.response_200.status_code
              dependencies:
                aws_api_gateway_integration.MyDemoIntegration: |-
                    {
                      "http_method": "${aws_api_gateway_method.MyDemoMethod.http_method}",
                      "resource_id": "${aws_api_gateway_resource.MyDemoResource.id}",
                      "rest_api_id": "${aws_api_gateway_rest_api.MyDemoAPI.id}",
                      "type": "MOCK"
                    }
                aws_api_gateway_method.MyDemoMethod: |-
                    {
                      "authorization": "NONE",
                      "http_method": "GET",
                      "resource_id": "${aws_api_gateway_resource.MyDemoResource.id}",
                      "rest_api_id": "${aws_api_gateway_rest_api.MyDemoAPI.id}"
                    }
                aws_api_gateway_method_response.response_200: |-
                    {
                      "http_method": "${aws_api_gateway_method.MyDemoMethod.http_method}",
                      "resource_id": "${aws_api_gateway_resource.MyDemoResource.id}",
                      "rest_api_id": "${aws_api_gateway_rest_api.MyDemoAPI.id}",
                      "status_code": "200"
                    }
                aws_api_gateway_resource.MyDemoResource: |-
                    {
                      "parent_id": "${aws_api_gateway_rest_api.MyDemoAPI.root_resource_id}",
                      "path_part": "mydemoresource",
                      "rest_api_id": "${aws_api_gateway_rest_api.MyDemoAPI.id}"
                    }
                aws_api_gateway_rest_api.MyDemoAPI: |-
                    {
                      "description": "This is my API for demonstration purposes",
                      "name": "MyDemoAPI"
                    }
        argumentDocs:
            content_handling: '- (Optional) Specifies how to handle request payload content type conversions. Supported values are CONVERT_TO_BINARY and CONVERT_TO_TEXT. If this property is not defined, the response payload will be passed through from the integration response to the method response without modification.'
            http_method: '- (Required) The HTTP method (GET, POST, PUT, DELETE, HEAD, OPTIONS, ANY)'
            resource_id: '- (Required) The API resource ID'
            response_parameters: |-
                - (Optional) A map of response parameters that can be read from the backend response.
                For example: response_parameters = { "method.response.header.X-Some-Header" = "integration.response.header.X-Some-Other-Header" }
            response_templates: '- (Optional) A map specifying the templates used to transform the integration response body'
            rest_api_id: '- (Required) The ID of the associated REST API'
            selection_pattern: |-
                - (Optional) Specifies the regular expression pattern used to choose
                an integration response based on the response from the backend. Omit configuring this to make the integration the default one.
                If the backend is an AWS Lambda function, the AWS Lambda function error header is matched.
                For all other HTTP and AWS backends, the HTTP status code is matched.
            status_code: '- (Required) The HTTP status code'
        importStatements: []
    aws_api_gateway_method:
        subCategory: API Gateway
        description: Provides a HTTP Method for an API Gateway Resource.
        name: aws_api_gateway_method
        title: aws_api_gateway_method
        examples:
            - name: MyDemoMethod
              manifest: |-
                {
                  "authorization": "NONE",
                  "http_method": "GET",
                  "resource_id": "${aws_api_gateway_resource.MyDemoResource.id}",
                  "rest_api_id": "${aws_api_gateway_rest_api.MyDemoAPI.id}"
                }
              references:
                resource_id: aws_api_gateway_resource.MyDemoResource.id
                rest_api_id: aws_api_gateway_rest_api.MyDemoAPI.id
              dependencies:
                aws_api_gateway_resource.MyDemoResource: |-
                    {
                      "parent_id": "${aws_api_gateway_rest_api.MyDemoAPI.root_resource_id}",
                      "path_part": "mydemoresource",
                      "rest_api_id": "${aws_api_gateway_rest_api.MyDemoAPI.id}"
                    }
                aws_api_gateway_rest_api.MyDemoAPI: |-
                    {
                      "description": "This is my API for demonstration purposes",
                      "name": "MyDemoAPI"
                    }
            - name: any
              manifest: |-
                {
                  "authorization": "COGNITO_USER_POOLS",
                  "authorizer_id": "${aws_api_gateway_authorizer.this.id}",
                  "http_method": "ANY",
                  "request_parameters": {
                    "method.request.path.proxy": true
                  },
                  "resource_id": "${aws_api_gateway_resource.this.id}",
                  "rest_api_id": "${aws_api_gateway_rest_api.this.id}"
                }
              references:
                authorizer_id: aws_api_gateway_authorizer.this.id
                resource_id: aws_api_gateway_resource.this.id
                rest_api_id: aws_api_gateway_rest_api.this.id
              dependencies:
                aws_api_gateway_authorizer.this: |-
                    {
                      "name": "CognitoUserPoolAuthorizer",
                      "provider_arns": "${data.aws_cognito_user_pools.this.arns}",
                      "rest_api_id": "${aws_api_gateway_rest_api.this.id}",
                      "type": "COGNITO_USER_POOLS"
                    }
                aws_api_gateway_resource.this: |-
                    {
                      "parent_id": "${aws_api_gateway_rest_api.this.root_resource_id}",
                      "path_part": "{proxy+}",
                      "rest_api_id": "${aws_api_gateway_rest_api.this.id}"
                    }
                aws_api_gateway_rest_api.this: |-
                    {
                      "name": "with-authorizer"
                    }
        argumentDocs:
            api_key_required: '- (Optional) Specify if the method requires an API key'
            authorization: '- (Required) The type of authorization used for the method (NONE, CUSTOM, AWS_IAM, COGNITO_USER_POOLS)'
            authorization_scopes: '- (Optional) The authorization scopes used when the authorization is COGNITO_USER_POOLS'
            authorizer_id: '- (Optional) The authorizer id to be used when the authorization is CUSTOM or COGNITO_USER_POOLS'
            http_method: '- (Required) The HTTP Method (GET, POST, PUT, DELETE, HEAD, OPTIONS, ANY)'
            operation_name: '- (Optional) The function name that will be given to the method when generating an SDK through API Gateway. If omitted, API Gateway will generate a function name based on the resource path and HTTP verb.'
            request_models: |-
                - (Optional) A map of the API models used for the request's content type
                where key is the content type (e.g., application/json)
                and value is either Error, Empty (built-in models) or aws_api_gateway_model's name.
            request_parameters: |-
                - (Optional) A map of request parameters (from the path, query string and headers) that should be passed to the integration. The boolean value indicates whether the parameter is required (true) or optional (false).
                For example: request_parameters = {"method.request.header.X-Some-Header" = true "method.request.querystring.some-query-param" = true} would define that the header X-Some-Header and the query string some-query-param must be provided in the request.
            request_validator_id: '- (Optional) The ID of a aws_api_gateway_request_validator'
            resource_id: '- (Required) The API resource ID'
            rest_api_id: '- (Required) The ID of the associated REST API'
        importStatements: []
    aws_api_gateway_method_response:
        subCategory: API Gateway
        description: Provides an HTTP Method Response for an API Gateway Resource.
        name: aws_api_gateway_method_response
        title: aws_api_gateway_method_response
        examples:
            - name: response_200
              manifest: |-
                {
                  "http_method": "${aws_api_gateway_method.MyDemoMethod.http_method}",
                  "resource_id": "${aws_api_gateway_resource.MyDemoResource.id}",
                  "rest_api_id": "${aws_api_gateway_rest_api.MyDemoAPI.id}",
                  "status_code": "200"
                }
              references:
                http_method: aws_api_gateway_method.MyDemoMethod.http_method
                resource_id: aws_api_gateway_resource.MyDemoResource.id
                rest_api_id: aws_api_gateway_rest_api.MyDemoAPI.id
              dependencies:
                aws_api_gateway_integration.MyDemoIntegration: |-
                    {
                      "http_method": "${aws_api_gateway_method.MyDemoMethod.http_method}",
                      "resource_id": "${aws_api_gateway_resource.MyDemoResource.id}",
                      "rest_api_id": "${aws_api_gateway_rest_api.MyDemoAPI.id}",
                      "type": "MOCK"
                    }
                aws_api_gateway_method.MyDemoMethod: |-
                    {
                      "authorization": "NONE",
                      "http_method": "GET",
                      "resource_id": "${aws_api_gateway_resource.MyDemoResource.id}",
                      "rest_api_id": "${aws_api_gateway_rest_api.MyDemoAPI.id}"
                    }
                aws_api_gateway_resource.MyDemoResource: |-
                    {
                      "parent_id": "${aws_api_gateway_rest_api.MyDemoAPI.root_resource_id}",
                      "path_part": "mydemoresource",
                      "rest_api_id": "${aws_api_gateway_rest_api.MyDemoAPI.id}"
                    }
                aws_api_gateway_rest_api.MyDemoAPI: |-
                    {
                      "description": "This is my API for demonstration purposes",
                      "name": "MyDemoAPI"
                    }
        argumentDocs:
            http_method: '- (Required) The HTTP Method (GET, POST, PUT, DELETE, HEAD, OPTIONS, ANY)'
            resource_id: '- (Required) The API resource ID'
            response_models: '- (Optional) A map of the API models used for the response''s content type'
            response_parameters: |-
                - (Optional) A map of response parameters that can be sent to the caller.
                For example: response_parameters = { "method.response.header.X-Some-Header" = true }
                would define that the header X-Some-Header can be provided on the response.
            rest_api_id: '- (Required) The ID of the associated REST API'
            status_code: '- (Required) The HTTP status code'
        importStatements: []
    aws_api_gateway_method_settings:
        subCategory: API Gateway
        description: Manages API Gateway Stage Method Settings
        name: aws_api_gateway_method_settings
        title: aws_api_gateway_method_settings
        examples:
            - name: all
              manifest: |-
                {
                  "method_path": "*/*",
                  "rest_api_id": "${aws_api_gateway_rest_api.example.id}",
                  "settings": [
                    {
                      "logging_level": "ERROR",
                      "metrics_enabled": true
                    }
                  ],
                  "stage_name": "${aws_api_gateway_stage.example.stage_name}"
                }
              references:
                rest_api_id: aws_api_gateway_rest_api.example.id
                stage_name: aws_api_gateway_stage.example.stage_name
              dependencies:
                aws_api_gateway_deployment.example: |-
                    {
                      "lifecycle": [
                        {
                          "create_before_destroy": true
                        }
                      ],
                      "rest_api_id": "${aws_api_gateway_rest_api.example.id}",
                      "triggers": {
                        "redeployment": "${sha1(jsonencode(aws_api_gateway_rest_api.example.body))}"
                      }
                    }
                aws_api_gateway_rest_api.example: |-
                    {
                      "body": "${jsonencode({\n    openapi = \"3.0.1\"\n    info = {\n      title   = \"example\"\n      version = \"1.0\"\n    }\n    paths = {\n      \"/path1\" = {\n        get = {\n          x-amazon-apigateway-integration = {\n            httpMethod           = \"GET\"\n            payloadFormatVersion = \"1.0\"\n            type                 = \"HTTP_PROXY\"\n            uri                  = \"https://ip-ranges.amazonaws.com/ip-ranges.json\"\n          }\n        }\n      }\n    }\n  })}",
                      "name": "example"
                    }
                aws_api_gateway_stage.example: |-
                    {
                      "deployment_id": "${aws_api_gateway_deployment.example.id}",
                      "rest_api_id": "${aws_api_gateway_rest_api.example.id}",
                      "stage_name": "example"
                    }
            - name: path_specific
              manifest: |-
                {
                  "method_path": "path1/GET",
                  "rest_api_id": "${aws_api_gateway_rest_api.example.id}",
                  "settings": [
                    {
                      "logging_level": "INFO",
                      "metrics_enabled": true
                    }
                  ],
                  "stage_name": "${aws_api_gateway_stage.example.stage_name}"
                }
              references:
                rest_api_id: aws_api_gateway_rest_api.example.id
                stage_name: aws_api_gateway_stage.example.stage_name
              dependencies:
                aws_api_gateway_deployment.example: |-
                    {
                      "lifecycle": [
                        {
                          "create_before_destroy": true
                        }
                      ],
                      "rest_api_id": "${aws_api_gateway_rest_api.example.id}",
                      "triggers": {
                        "redeployment": "${sha1(jsonencode(aws_api_gateway_rest_api.example.body))}"
                      }
                    }
                aws_api_gateway_rest_api.example: |-
                    {
                      "body": "${jsonencode({\n    openapi = \"3.0.1\"\n    info = {\n      title   = \"example\"\n      version = \"1.0\"\n    }\n    paths = {\n      \"/path1\" = {\n        get = {\n          x-amazon-apigateway-integration = {\n            httpMethod           = \"GET\"\n            payloadFormatVersion = \"1.0\"\n            type                 = \"HTTP_PROXY\"\n            uri                  = \"https://ip-ranges.amazonaws.com/ip-ranges.json\"\n          }\n        }\n      }\n    }\n  })}",
                      "name": "example"
                    }
                aws_api_gateway_stage.example: |-
                    {
                      "deployment_id": "${aws_api_gateway_deployment.example.id}",
                      "rest_api_id": "${aws_api_gateway_rest_api.example.id}",
                      "stage_name": "example"
                    }
        argumentDocs:
            method_path: '- (Required) Method path defined as {resource_path}/{http_method} for an individual method override, or */* for overriding all methods in the stage. Ensure to trim any leading forward slashes in the path (e.g., trimprefix(aws_api_gateway_resource.example.path, "/")).'
            rest_api_id: '- (Required) The ID of the REST API'
            settings: '- (Required) The settings block, see below.'
            settings.cache_data_encrypted: '- (Optional) Specifies whether the cached responses are encrypted.'
            settings.cache_ttl_in_seconds: '- (Optional) Specifies the time to live (TTL), in seconds, for cached responses. The higher the TTL, the longer the response will be cached.'
            settings.caching_enabled: '- (Optional) Specifies whether responses should be cached and returned for requests. A cache cluster must be enabled on the stage for responses to be cached.'
            settings.data_trace_enabled: '- (Optional) Specifies whether data trace logging is enabled for this method, which effects the log entries pushed to Amazon CloudWatch Logs.'
            settings.logging_level: '- (Optional) Specifies the logging level for this method, which effects the log entries pushed to Amazon CloudWatch Logs. The available levels are OFF, ERROR, and INFO.'
            settings.metrics_enabled: '- (Optional) Specifies whether Amazon CloudWatch metrics are enabled for this method.'
            settings.require_authorization_for_cache_control: '- (Optional) Specifies whether authorization is required for a cache invalidation request.'
            settings.throttling_burst_limit: '- (Optional) Specifies the throttling burst limit. Default: -1 (throttling disabled).'
            settings.throttling_rate_limit: '- (Optional) Specifies the throttling rate limit. Default: -1 (throttling disabled).'
            settings.unauthorized_cache_control_header_strategy: '- (Optional) Specifies how to handle unauthorized requests for cache invalidation. The available values are FAIL_WITH_403, SUCCEED_WITH_RESPONSE_HEADER, SUCCEED_WITHOUT_RESPONSE_HEADER.'
            stage_name: '- (Required) The name of the stage'
        importStatements: []
    aws_api_gateway_model:
        subCategory: API Gateway
        description: Provides a Model for a REST API Gateway.
        name: aws_api_gateway_model
        title: aws_api_gateway_model
        examples:
            - name: MyDemoModel
              manifest: |-
                {
                  "content_type": "application/json",
                  "description": "a JSON schema",
                  "name": "user",
                  "rest_api_id": "${aws_api_gateway_rest_api.MyDemoAPI.id}",
                  "schema": "{\n  \"type\": \"object\"\n}\n"
                }
              references:
                rest_api_id: aws_api_gateway_rest_api.MyDemoAPI.id
              dependencies:
                aws_api_gateway_rest_api.MyDemoAPI: |-
                    {
                      "description": "This is my API for demonstration purposes",
                      "name": "MyDemoAPI"
                    }
        argumentDocs:
            content_type: '- (Required) The content type of the model'
            description: '- (Optional) The description of the model'
            id: '- The ID of the model'
            name: '- (Required) The name of the model'
            rest_api_id: '- (Required) The ID of the associated REST API'
            schema: '- (Required) The schema of the model in a JSON form'
        importStatements: []
    aws_api_gateway_request_validator:
        subCategory: API Gateway
        description: Manages an API Gateway Request Validator.
        name: aws_api_gateway_request_validator
        title: aws_api_gateway_request_validator
        examples:
            - name: example
              manifest: |-
                {
                  "name": "example",
                  "rest_api_id": "${aws_api_gateway_rest_api.example.id}",
                  "validate_request_body": true,
                  "validate_request_parameters": true
                }
              references:
                rest_api_id: aws_api_gateway_rest_api.example.id
        argumentDocs:
            id: '- The unique ID of the request validator'
            name: '- (Required) The name of the request validator'
            rest_api_id: '- (Required) The ID of the associated Rest API'
            validate_request_body: '- (Optional) Boolean whether to validate request body. Defaults to false.'
            validate_request_parameters: '- (Optional) Boolean whether to validate request parameters. Defaults to false.'
        importStatements: []
    aws_api_gateway_resource:
        subCategory: API Gateway
        description: Provides an API Gateway Resource.
        name: aws_api_gateway_resource
        title: aws_api_gateway_resource
        examples:
            - name: MyDemoResource
              manifest: |-
                {
                  "parent_id": "${aws_api_gateway_rest_api.MyDemoAPI.root_resource_id}",
                  "path_part": "mydemoresource",
                  "rest_api_id": "${aws_api_gateway_rest_api.MyDemoAPI.id}"
                }
              references:
                parent_id: aws_api_gateway_rest_api.MyDemoAPI.root_resource_id
                rest_api_id: aws_api_gateway_rest_api.MyDemoAPI.id
              dependencies:
                aws_api_gateway_rest_api.MyDemoAPI: |-
                    {
                      "description": "This is my API for demonstration purposes",
                      "name": "MyDemoAPI"
                    }
        argumentDocs:
            id: '- The resource''s identifier.'
            parent_id: '- (Required) The ID of the parent API resource'
            path: '- The complete path for this API resource, including all parent paths.'
            path_part: '- (Required) The last path segment of this API resource.'
            rest_api_id: '- (Required) The ID of the associated REST API'
        importStatements: []
    aws_api_gateway_rest_api:
        subCategory: API Gateway
        description: Manages an API Gateway REST API.
        name: aws_api_gateway_rest_api
        title: aws_api_gateway_rest_api
        examples:
            - name: example
              manifest: |-
                {
                  "body": "${jsonencode({\n    openapi = \"3.0.1\"\n    info = {\n      title   = \"example\"\n      version = \"1.0\"\n    }\n    paths = {\n      \"/path1\" = {\n        get = {\n          x-amazon-apigateway-integration = {\n            httpMethod           = \"GET\"\n            payloadFormatVersion = \"1.0\"\n            type                 = \"HTTP_PROXY\"\n            uri                  = \"https://ip-ranges.amazonaws.com/ip-ranges.json\"\n          }\n        }\n      }\n    }\n  })}",
                  "endpoint_configuration": [
                    {
                      "types": [
                        "REGIONAL"
                      ]
                    }
                  ],
                  "name": "example"
                }
              dependencies:
                aws_api_gateway_deployment.example: |-
                    {
                      "lifecycle": [
                        {
                          "create_before_destroy": true
                        }
                      ],
                      "rest_api_id": "${aws_api_gateway_rest_api.example.id}",
                      "triggers": {
                        "redeployment": "${sha1(jsonencode(aws_api_gateway_rest_api.example.body))}"
                      }
                    }
                aws_api_gateway_stage.example: |-
                    {
                      "deployment_id": "${aws_api_gateway_deployment.example.id}",
                      "rest_api_id": "${aws_api_gateway_rest_api.example.id}",
                      "stage_name": "example"
                    }
            - name: example
              manifest: |-
                {
                  "name": "example"
                }
              dependencies:
                aws_api_gateway_deployment.example: |-
                    {
                      "lifecycle": [
                        {
                          "create_before_destroy": true
                        }
                      ],
                      "rest_api_id": "${aws_api_gateway_rest_api.example.id}",
                      "triggers": {
                        "redeployment": "${sha1(jsonencode([\n      aws_api_gateway_resource.example.id,\n      aws_api_gateway_method.example.id,\n      aws_api_gateway_integration.example.id,\n    ]))}"
                      }
                    }
                aws_api_gateway_integration.example: |-
                    {
                      "http_method": "${aws_api_gateway_method.example.http_method}",
                      "resource_id": "${aws_api_gateway_resource.example.id}",
                      "rest_api_id": "${aws_api_gateway_rest_api.example.id}",
                      "type": "MOCK"
                    }
                aws_api_gateway_method.example: |-
                    {
                      "authorization": "NONE",
                      "http_method": "GET",
                      "resource_id": "${aws_api_gateway_resource.example.id}",
                      "rest_api_id": "${aws_api_gateway_rest_api.example.id}"
                    }
                aws_api_gateway_resource.example: |-
                    {
                      "parent_id": "${aws_api_gateway_rest_api.example.root_resource_id}",
                      "path_part": "example",
                      "rest_api_id": "${aws_api_gateway_rest_api.example.id}"
                    }
                aws_api_gateway_stage.example: |-
                    {
                      "deployment_id": "${aws_api_gateway_deployment.example.id}",
                      "rest_api_id": "${aws_api_gateway_rest_api.example.id}",
                      "stage_name": "example"
                    }
        argumentDocs:
            api_key_source: '- (Optional) Source of the API key for requests. Valid values are HEADER (default) and AUTHORIZER. If importing an OpenAPI specification via the body argument, this corresponds to the x-amazon-apigateway-api-key-source extension. If the argument value is provided and is different than the OpenAPI value, the argument value will override the OpenAPI value.'
            arn: '- Amazon Resource Name (ARN)'
            binary_media_types: '- (Optional) List of binary media types supported by the REST API. By default, the REST API supports only UTF-8-encoded text payloads. If importing an OpenAPI specification via the body argument, this corresponds to the x-amazon-apigateway-binary-media-types extension. If the argument value is provided and is different than the OpenAPI value, the argument value will override the OpenAPI value.'
            body: '- (Optional) OpenAPI specification that defines the set of routes and integrations to create as part of the REST API. This configuration, and any updates to it, will replace all REST API configuration except values overridden in this resource configuration and other resource updates applied after this resource but before any aws_api_gateway_deployment creation. More information about REST API OpenAPI support can be found in the API Gateway Developer Guide.'
            created_date: '- The creation date of the REST API'
            description: '- (Optional) Description of the REST API. If importing an OpenAPI specification via the body argument, this corresponds to the info.description field. If the argument value is provided and is different than the OpenAPI value, the argument value will override the OpenAPI value.'
            disable_execute_api_endpoint: '- (Optional) Specifies whether clients can invoke your API by using the default execute-api endpoint. By default, clients can invoke your API with the default https://{api_id}.execute-api.{region}.amazonaws.com endpoint. To require that clients use a custom domain name to invoke your API, disable the default endpoint. Defaults to false. If importing an OpenAPI specification via the body argument, this corresponds to the x-amazon-apigateway-endpoint-configuration extension disableExecuteApiEndpoint property. If the argument value is true and is different than the OpenAPI value, the argument value will override the OpenAPI value.'
            endpoint_configuration: '- (Optional) Configuration block defining API endpoint configuration including endpoint type. Defined below.'
            endpoint_configuration.types: '- (Required) A list of endpoint types. This resource currently only supports managing a single value. Valid values: EDGE, REGIONAL or PRIVATE. If unspecified, defaults to EDGE. Must be declared as REGIONAL in non-Commercial partitions. Refer to the documentation for more information on the difference between edge-optimized and regional APIs.'
            endpoint_configuration.vpc_endpoint_ids: '- (Optional) Set of VPC Endpoint identifiers. It is only supported for PRIVATE endpoint type. If importing an OpenAPI specification via the body argument, this corresponds to the x-amazon-apigateway-endpoint-configuration extension vpcEndpointIds property. If the argument value is provided and is different than the OpenAPI value, the argument value will override the OpenAPI value.'
            execution_arn: |-
                - The execution ARN part to be used in lambda_permission's source_arn
                when allowing API Gateway to invoke a Lambda function,
                e.g., arn:aws:execute-api:eu-west-2:123456789012:z4675bid1j, which can be concatenated with allowed stage, method and resource path.
            id: '- The ID of the REST API'
            minimum_compression_size: '- (Optional) Minimum response size to compress for the REST API. Integer between -1 and 10485760 (10MB). Setting a value greater than -1 will enable compression, -1 disables compression (default). If importing an OpenAPI specification via the body argument, this corresponds to the x-amazon-apigateway-minimum-compression-size extension. If the argument value (except -1) is provided and is different than the OpenAPI value, the argument value will override the OpenAPI value.'
            name: '- (Required) Name of the REST API. If importing an OpenAPI specification via the body argument, this corresponds to the info.title field. If the argument value is different than the OpenAPI value, the argument value will override the OpenAPI value.'
            parameters: '- (Optional) Map of customizations for importing the specification in the body argument. For example, to exclude DocumentationParts from an imported API, set ignore equal to documentation. Additional documentation, including other parameters such as basepath, can be found in the API Gateway Developer Guide.'
            policy: '- (Optional) JSON formatted policy document that controls access to the API Gateway. For more information about building AWS IAM policy documents with Terraform, see the AWS IAM Policy Document Guide. Terraform will only perform drift detection of its value when present in a configuration. It is recommended to use the aws_api_gateway_rest_api_policy resource instead. If importing an OpenAPI specification via the body argument, this corresponds to the x-amazon-apigateway-policy extension. If the argument value is provided and is different than the OpenAPI value, the argument value will override the OpenAPI value.'
            root_resource_id: '- The resource ID of the REST API''s root'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_api_gateway_rest_api_policy:
        subCategory: API Gateway
        description: Provides an API Gateway REST API Policy.
        name: aws_api_gateway_rest_api_policy
        title: aws_api_gateway_rest_api_policy
        examples:
            - name: test
              manifest: |-
                {
                  "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Principal\": {\n        \"AWS\": \"*\"\n      },\n      \"Action\": \"execute-api:Invoke\",\n      \"Resource\": \"${aws_api_gateway_rest_api.test.execution_arn}\",\n      \"Condition\": {\n        \"IpAddress\": {\n          \"aws:SourceIp\": \"123.123.123.123/32\"\n        }\n      }\n    }\n  ]\n}\n",
                  "rest_api_id": "${aws_api_gateway_rest_api.test.id}"
                }
              references:
                rest_api_id: aws_api_gateway_rest_api.test.id
              dependencies:
                aws_api_gateway_rest_api.test: |-
                    {
                      "name": "example-rest-api"
                    }
        argumentDocs:
            id: '- The ID of the REST API'
            policy: '- (Required) JSON formatted policy document that controls access to the API Gateway. For more information about building AWS IAM policy documents with Terraform, see the AWS IAM Policy Document Guide'
            rest_api_id: '- (Required) The ID of the REST API.'
        importStatements: []
    aws_api_gateway_stage:
        subCategory: API Gateway
        description: Manages an API Gateway Stage.
        name: aws_api_gateway_stage
        title: aws_api_gateway_stage
        examples:
            - name: example
              manifest: |-
                {
                  "deployment_id": "${aws_api_gateway_deployment.example.id}",
                  "rest_api_id": "${aws_api_gateway_rest_api.example.id}",
                  "stage_name": "example"
                }
              references:
                deployment_id: aws_api_gateway_deployment.example.id
                rest_api_id: aws_api_gateway_rest_api.example.id
              dependencies:
                aws_api_gateway_deployment.example: |-
                    {
                      "lifecycle": [
                        {
                          "create_before_destroy": true
                        }
                      ],
                      "rest_api_id": "${aws_api_gateway_rest_api.example.id}",
                      "triggers": {
                        "redeployment": "${sha1(jsonencode(aws_api_gateway_rest_api.example.body))}"
                      }
                    }
                aws_api_gateway_method_settings.example: |-
                    {
                      "method_path": "*/*",
                      "rest_api_id": "${aws_api_gateway_rest_api.example.id}",
                      "settings": [
                        {
                          "logging_level": "INFO",
                          "metrics_enabled": true
                        }
                      ],
                      "stage_name": "${aws_api_gateway_stage.example.stage_name}"
                    }
                aws_api_gateway_rest_api.example: |-
                    {
                      "body": "${jsonencode({\n    openapi = \"3.0.1\"\n    info = {\n      title   = \"example\"\n      version = \"1.0\"\n    }\n    paths = {\n      \"/path1\" = {\n        get = {\n          x-amazon-apigateway-integration = {\n            httpMethod           = \"GET\"\n            payloadFormatVersion = \"1.0\"\n            type                 = \"HTTP_PROXY\"\n            uri                  = \"https://ip-ranges.amazonaws.com/ip-ranges.json\"\n          }\n        }\n      }\n    }\n  })}",
                      "name": "example"
                    }
            - name: example
              manifest: |-
                {
                  "depends_on": [
                    "${aws_cloudwatch_log_group.example}"
                  ],
                  "stage_name": "${var.stage_name}"
                }
              references:
                stage_name: var.stage_name
              dependencies:
                aws_api_gateway_rest_api.example: '{}'
                aws_cloudwatch_log_group.example: |-
                    {
                      "name": "API-Gateway-Execution-Logs_${aws_api_gateway_rest_api.example.id}/${var.stage_name}",
                      "retention_in_days": 7
                    }
        argumentDocs:
            access_log_settings: '- (Optional) Enables access logs for the API stage. See Access Log Settings below.'
            arn: '- Amazon Resource Name (ARN)'
            cache_cluster_enabled: '- (Optional) Specifies whether a cache cluster is enabled for the stage'
            cache_cluster_size: '- (Optional) The size of the cache cluster for the stage, if enabled. Allowed values include 0.5, 1.6, 6.1, 13.5, 28.4, 58.2, 118 and 237.'
            canary_settings: '- (Optional) Configuration settings of a canary deployment. See Canary Settings below.'
            client_certificate_id: '- (Optional) The identifier of a client certificate for the stage.'
            deployment_id: '- (Required) The ID of the deployment that the stage points to'
            description: '- (Optional) The description of the stage.'
            destination_arn: '- (Required) The Amazon Resource Name (ARN) of the CloudWatch Logs log group or Kinesis Data Firehose delivery stream to receive access logs. If you specify a Kinesis Data Firehose delivery stream, the stream name must begin with amazon-apigateway-. Automatically removes trailing :* if present.'
            documentation_version: '- (Optional) The version of the associated API documentation'
            execution_arn: |-
                - The execution ARN to be used in lambda_permission's source_arn
                when allowing API Gateway to invoke a Lambda function,
                e.g., arn:aws:execute-api:eu-west-2:123456789012:z4675bid1j/prod
            format: |-
                - (Required) The formatting and values recorded in the logs.
                For more information on configuring the log format rules visit the AWS documentation
            id: '- The ID of the stage'
            invoke_url: |-
                - The URL to invoke the API pointing to the stage,
                e.g., https://z4675bid1j.execute-api.eu-west-2.amazonaws.com/prod
            percent_traffic: '- (Optional) The percent 0.0 - 100.0 of traffic to divert to the canary deployment.'
            rest_api_id: '- (Required) The ID of the associated REST API'
            stage_name: '- (Required) The name of the stage'
            stage_variable_overrides: '- (Optional) A map of overridden stage variables (including new variables) for the canary deployment.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            use_stage_cache: '- (Optional) Whether the canary deployment uses the stage cache. Defaults to false.'
            variables: '- (Optional) A map that defines the stage variables'
            web_acl_arn: '- The ARN of the WebAcl associated with the Stage.'
            xray_tracing_enabled: '- (Optional) Whether active tracing with X-ray is enabled. Defaults to false.'
        importStatements: []
    aws_api_gateway_usage_plan:
        subCategory: API Gateway
        description: Provides an API Gateway Usage Plan.
        name: aws_api_gateway_usage_plan
        title: aws_api_gateway_usage_plan
        examples:
            - name: example
              manifest: |-
                {
                  "api_stages": [
                    {
                      "api_id": "${aws_api_gateway_rest_api.example.id}",
                      "stage": "${aws_api_gateway_stage.development.stage_name}"
                    },
                    {
                      "api_id": "${aws_api_gateway_rest_api.example.id}",
                      "stage": "${aws_api_gateway_stage.production.stage_name}"
                    }
                  ],
                  "description": "my description",
                  "name": "my-usage-plan",
                  "product_code": "MYCODE",
                  "quota_settings": [
                    {
                      "limit": 20,
                      "offset": 2,
                      "period": "WEEK"
                    }
                  ],
                  "throttle_settings": [
                    {
                      "burst_limit": 5,
                      "rate_limit": 10
                    }
                  ]
                }
              references:
                api_stages.api_id: aws_api_gateway_rest_api.example.id
                api_stages.stage: aws_api_gateway_stage.production.stage_name
              dependencies:
                aws_api_gateway_deployment.example: |-
                    {
                      "lifecycle": [
                        {
                          "create_before_destroy": true
                        }
                      ],
                      "rest_api_id": "${aws_api_gateway_rest_api.example.id}",
                      "triggers": {
                        "redeployment": "${sha1(jsonencode(aws_api_gateway_rest_api.example.body))}"
                      }
                    }
                aws_api_gateway_rest_api.example: |-
                    {
                      "body": "${jsonencode({\n    openapi = \"3.0.1\"\n    info = {\n      title   = \"example\"\n      version = \"1.0\"\n    }\n    paths = {\n      \"/path1\" = {\n        get = {\n          x-amazon-apigateway-integration = {\n            httpMethod           = \"GET\"\n            payloadFormatVersion = \"1.0\"\n            type                 = \"HTTP_PROXY\"\n            uri                  = \"https://ip-ranges.amazonaws.com/ip-ranges.json\"\n          }\n        }\n      }\n    }\n  })}",
                      "name": "example"
                    }
                aws_api_gateway_stage.development: |-
                    {
                      "deployment_id": "${aws_api_gateway_deployment.example.id}",
                      "rest_api_id": "${aws_api_gateway_rest_api.example.id}",
                      "stage_name": "development"
                    }
                aws_api_gateway_stage.production: |-
                    {
                      "deployment_id": "${aws_api_gateway_deployment.example.id}",
                      "rest_api_id": "${aws_api_gateway_rest_api.example.id}",
                      "stage_name": "production"
                    }
        argumentDocs:
            api_id: (Required) - API Id of the associated API stage in a usage plan.
            api_stages: '- (Optional) The associated API stages of the usage plan.'
            arn: '- Amazon Resource Name (ARN)'
            burst_limit: (Optional) - The API request burst limit, the maximum rate limit over a time ranging from one to a few seconds, depending upon whether the underlying token bucket is at its full capacity.
            description: '- (Optional) The description of a usage plan.'
            id: '- The ID of the API resource'
            limit: (Optional) - The maximum number of requests that can be made in a given time period.
            name: '- (Required) The name of the usage plan.'
            offset: (Optional) - The number of requests subtracted from the given limit in the initial time period.
            path: (Required) - The method to apply the throttle settings for. Specfiy the path and method, for example /test/GET.
            period: (Optional) - The time period in which the limit applies. Valid values are "DAY", "WEEK" or "MONTH".
            product_code: '- (Optional) The AWS Marketplace product identifier to associate with the usage plan as a SaaS product on AWS Marketplace.'
            quota_settings: '- (Optional) The quota settings of the usage plan.'
            rate_limit: (Optional) - The API request steady-state rate limit.
            stage: (Required) - API stage name of the associated API stage in a usage plan.
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            throttle: '- (Optional) The throttling limits of the usage plan.'
            throttle_settings: '- (Optional) The throttling limits of the usage plan.'
        importStatements: []
    aws_api_gateway_usage_plan_key:
        subCategory: API Gateway
        description: Provides an API Gateway Usage Plan Key.
        name: aws_api_gateway_usage_plan_key
        title: aws_api_gateway_usage_plan_key
        examples:
            - name: main
              manifest: |-
                {
                  "key_id": "${aws_api_gateway_api_key.mykey.id}",
                  "key_type": "API_KEY",
                  "usage_plan_id": "${aws_api_gateway_usage_plan.myusageplan.id}"
                }
              references:
                key_id: aws_api_gateway_api_key.mykey.id
                usage_plan_id: aws_api_gateway_usage_plan.myusageplan.id
              dependencies:
                aws_api_gateway_api_key.mykey: |-
                    {
                      "name": "my_key"
                    }
                aws_api_gateway_rest_api.test: |-
                    {
                      "name": "MyDemoAPI"
                    }
                aws_api_gateway_usage_plan.myusageplan: |-
                    {
                      "api_stages": [
                        {
                          "api_id": "${aws_api_gateway_rest_api.test.id}",
                          "stage": "${aws_api_gateway_deployment.foo.stage_name}"
                        }
                      ],
                      "name": "my_usage_plan"
                    }
        argumentDocs:
            id: '- The Id of a usage plan key.'
            key_id: '- (Required) The identifier of the API key resource.'
            key_type: '- (Required) The type of the API key resource. Currently, the valid key type is API_KEY.'
            name: '- The name of a usage plan key.'
            usage_plan_id: '- (Required) The Id of the usage plan resource representing to associate the key to.'
            value: '- The value of a usage plan key.'
        importStatements: []
    aws_api_gateway_vpc_link:
        subCategory: API Gateway
        description: Provides an API Gateway VPC Link.
        name: aws_api_gateway_vpc_link
        title: aws_api_gateway_vpc_link
        examples:
            - name: example
              manifest: |-
                {
                  "description": "example description",
                  "name": "example",
                  "target_arns": [
                    "${aws_lb.example.arn}"
                  ]
                }
              dependencies:
                aws_lb.example: |-
                    {
                      "internal": true,
                      "load_balancer_type": "network",
                      "name": "example",
                      "subnet_mapping": [
                        {
                          "subnet_id": "12345"
                        }
                      ]
                    }
        argumentDocs:
            description: '- (Optional) The description of the VPC link.'
            id: '- The identifier of the VpcLink.'
            name: '- (Required) The name used to label and identify the VPC link.'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            target_arns: '- (Required, ForceNew) The list of network load balancer arns in the VPC targeted by the VPC link. Currently AWS only supports 1 target.'
        importStatements: []
    aws_apigatewayv2_api:
        subCategory: API Gateway V2
        description: Manages an Amazon API Gateway Version 2 API.
        name: aws_apigatewayv2_api
        title: aws_apigatewayv2_api
        examples:
            - name: example
              manifest: |-
                {
                  "name": "example-websocket-api",
                  "protocol_type": "WEBSOCKET",
                  "route_selection_expression": "$request.body.action"
                }
            - name: example
              manifest: |-
                {
                  "name": "example-http-api",
                  "protocol_type": "HTTP"
                }
        argumentDocs:
            allow_credentials: '- (Optional) Whether credentials are included in the CORS request.'
            allow_headers: '- (Optional) The set of allowed HTTP headers.'
            allow_methods: '- (Optional) The set of allowed HTTP methods.'
            allow_origins: '- (Optional) The set of allowed origins.'
            api_endpoint: '- The URI of the API, of the form https://{api-id}.execute-api.{region}.amazonaws.com for HTTP APIs and wss://{api-id}.execute-api.{region}.amazonaws.com for WebSocket APIs.'
            api_key_selection_expression: |-
                - (Optional) An API key selection expression.
                Valid values: $context.authorizer.usageIdentifierKey, $request.header.x-api-key. Defaults to $request.header.x-api-key.
                Applicable for WebSocket APIs.
            arn: '- The ARN of the API.'
            body: '- (Optional) An OpenAPI specification that defines the set of routes and integrations to create as part of the HTTP APIs. Supported only for HTTP APIs.'
            cors_configuration: '- (Optional) The cross-origin resource sharing (CORS) configuration. Applicable for HTTP APIs.'
            credentials_arn: '- (Optional) Part of quick create. Specifies any credentials required for the integration. Applicable for HTTP APIs.'
            description: '- (Optional) The description of the API. Must be less than or equal to 1024 characters in length.'
            disable_execute_api_endpoint: |-
                - (Optional) Whether clients can invoke the API by using the default execute-api endpoint.
                By default, clients can invoke the API with the default {api_id}.execute-api.{region}.amazonaws.com endpoint.
                To require that clients use a custom domain name to invoke the API, disable the default endpoint.
            execution_arn: |-
                - The ARN prefix to be used in an aws_lambda_permission's source_arn attribute
                or in an aws_iam_policy to authorize access to the @connections API.
                See the Amazon API Gateway Developer Guide for details.
            expose_headers: '- (Optional) The set of exposed HTTP headers.'
            fail_on_warnings: '- (Optional) Whether warnings should return an error while API Gateway is creating or updating the resource using an OpenAPI specification. Defaults to false. Applicable for HTTP APIs.'
            id: '- The API identifier.'
            max_age: '- (Optional) The number of seconds that the browser should cache preflight request results.'
            name: '- (Required) The name of the API. Must be less than or equal to 128 characters in length.'
            protocol_type: '- (Required) The API protocol. Valid values: HTTP, WEBSOCKET.'
            route_key: '- (Optional) Part of quick create. Specifies any route key. Applicable for HTTP APIs.'
            route_selection_expression: |-
                - (Optional) The route selection expression for the API.
                Defaults to $request.method $request.path.
            tags: '- (Optional) A map of tags to assign to the API. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            target: |-
                - (Optional) Part of quick create. Quick create produces an API with an integration, a default catch-all route, and a default stage which is configured to automatically deploy changes.
                For HTTP integrations, specify a fully qualified URL. For Lambda integrations, specify a function ARN.
                The type of the integration will be HTTP_PROXY or AWS_PROXY, respectively. Applicable for HTTP APIs.
            version: '- (Optional) A version identifier for the API. Must be between 1 and 64 characters in length.'
        importStatements: []
    aws_apigatewayv2_api_mapping:
        subCategory: API Gateway V2
        description: Manages an Amazon API Gateway Version 2 API mapping.
        name: aws_apigatewayv2_api_mapping
        title: aws_apigatewayv2_api_mapping
        examples:
            - name: example
              manifest: |-
                {
                  "api_id": "${aws_apigatewayv2_api.example.id}",
                  "domain_name": "${aws_apigatewayv2_domain_name.example.id}",
                  "stage": "${aws_apigatewayv2_stage.example.id}"
                }
              references:
                api_id: aws_apigatewayv2_api.example.id
                domain_name: aws_apigatewayv2_domain_name.example.id
                stage: aws_apigatewayv2_stage.example.id
        argumentDocs:
            api_id: '- (Required) The API identifier.'
            api_mapping_key: '- (Optional) The API mapping key.'
            domain_name: '- (Required) The domain name. Use the aws_apigatewayv2_domain_name resource to configure a domain name.'
            id: '- The API mapping identifier.'
            stage: '- (Required) The API stage. Use the aws_apigatewayv2_stage resource to configure an API stage.'
        importStatements: []
    aws_apigatewayv2_authorizer:
        subCategory: API Gateway V2
        description: Manages an Amazon API Gateway Version 2 authorizer.
        name: aws_apigatewayv2_authorizer
        title: aws_apigatewayv2_authorizer
        examples:
            - name: example
              manifest: |-
                {
                  "api_id": "${aws_apigatewayv2_api.example.id}",
                  "authorizer_type": "REQUEST",
                  "authorizer_uri": "${aws_lambda_function.example.invoke_arn}",
                  "identity_sources": [
                    "route.request.header.Auth"
                  ],
                  "name": "example-authorizer"
                }
              references:
                api_id: aws_apigatewayv2_api.example.id
                authorizer_uri: aws_lambda_function.example.invoke_arn
            - name: example
              manifest: |-
                {
                  "api_id": "${aws_apigatewayv2_api.example.id}",
                  "authorizer_type": "JWT",
                  "identity_sources": [
                    "$request.header.Authorization"
                  ],
                  "jwt_configuration": [
                    {
                      "audience": [
                        "example"
                      ],
                      "issuer": "https://${aws_cognito_user_pool.example.endpoint}"
                    }
                  ],
                  "name": "example-authorizer"
                }
              references:
                api_id: aws_apigatewayv2_api.example.id
        argumentDocs:
            api_id: '- (Required) The API identifier.'
            audience: '- (Optional) A list of the intended recipients of the JWT. A valid JWT must provide an aud that matches at least one entry in this list.'
            authorizer_credentials_arn: |-
                - (Optional) The required credentials as an IAM role for API Gateway to invoke the authorizer.
                Supported only for REQUEST authorizers.
            authorizer_payload_format_version: |-
                - (Optional) The format of the payload sent to an HTTP API Lambda authorizer. Required for HTTP API Lambda authorizers.
                Valid values: 1.0, 2.0.
            authorizer_result_ttl_in_seconds: |-
                - (Optional) The time to live (TTL) for cached authorizer results, in seconds. If it equals 0, authorization caching is disabled.
                If it is greater than 0, API Gateway caches authorizer responses. The maximum value is 3600, or 1 hour. Defaults to 300.
                Supported only for HTTP API Lambda authorizers.
            authorizer_type: |-
                - (Required) The authorizer type. Valid values: JWT, REQUEST.
                Specify REQUEST for a Lambda function using incoming request parameters.
                For HTTP APIs, specify JWT to use JSON Web Tokens.
            authorizer_uri: |-
                - (Optional) The authorizer's Uniform Resource Identifier (URI).
                For REQUEST authorizers this must be a well-formed Lambda function URI, such as the invoke_arn attribute of the aws_lambda_function resource.
                Supported only for REQUEST authorizers. Must be between 1 and 2048 characters in length.
            enable_simple_responses: |-
                - (Optional) Whether a Lambda authorizer returns a response in a simple format. If enabled, the Lambda authorizer can return a boolean value instead of an IAM policy.
                Supported only for HTTP APIs.
            id: '- The authorizer identifier.'
            identity_sources: |-
                - (Optional) The identity sources for which authorization is requested.
                For REQUEST authorizers the value is a list of one or more mapping expressions of the specified request parameters.
                For JWT authorizers the single entry specifies where to extract the JSON Web Token (JWT) from inbound requests.
            issuer: '- (Optional) The base domain of the identity provider that issues JSON Web Tokens, such as the endpoint attribute of the aws_cognito_user_pool resource.'
            jwt_configuration: |-
                - (Optional) The configuration of a JWT authorizer. Required for the JWT authorizer type.
                Supported only for HTTP APIs.
            name: '- (Required) The name of the authorizer. Must be between 1 and 128 characters in length.'
        importStatements: []
    aws_apigatewayv2_deployment:
        subCategory: API Gateway V2
        description: Manages an Amazon API Gateway Version 2 deployment.
        name: aws_apigatewayv2_deployment
        title: aws_apigatewayv2_deployment
        examples:
            - name: example
              manifest: |-
                {
                  "api_id": "${aws_apigatewayv2_route.example.api_id}",
                  "description": "Example deployment",
                  "lifecycle": [
                    {
                      "create_before_destroy": true
                    }
                  ]
                }
              references:
                api_id: aws_apigatewayv2_route.example.api_id
            - name: example
              manifest: |-
                {
                  "api_id": "${aws_apigatewayv2_api.example.id}",
                  "description": "Example deployment",
                  "lifecycle": [
                    {
                      "create_before_destroy": true
                    }
                  ],
                  "triggers": {
                    "redeployment": "${sha1(join(\",\", list(\n      jsonencode(aws_apigatewayv2_integration.example),\n      jsonencode(aws_apigatewayv2_route.example),\n    )))}"
                  }
                }
              references:
                api_id: aws_apigatewayv2_api.example.id
        argumentDocs:
            api_id: '- (Required) The API identifier.'
            auto_deployed: '- Whether the deployment was automatically released.'
            description: '- (Optional) The description for the deployment resource. Must be less than or equal to 1024 characters in length.'
            id: '- The deployment identifier.'
            triggers: '- (Optional) A map of arbitrary keys and values that, when changed, will trigger a redeployment. To force a redeployment without changing these keys/values, use the terraform taint command.'
        importStatements: []
    aws_apigatewayv2_domain_name:
        subCategory: API Gateway V2
        description: Manages an Amazon API Gateway Version 2 domain name.
        name: aws_apigatewayv2_domain_name
        title: aws_apigatewayv2_domain_name
        examples:
            - name: example
              manifest: |-
                {
                  "domain_name": "ws-api.example.com",
                  "domain_name_configuration": [
                    {
                      "certificate_arn": "${aws_acm_certificate.example.arn}",
                      "endpoint_type": "REGIONAL",
                      "security_policy": "TLS_1_2"
                    }
                  ]
                }
              references:
                domain_name_configuration.certificate_arn: aws_acm_certificate.example.arn
            - name: example
              manifest: |-
                {
                  "domain_name": "http-api.example.com",
                  "domain_name_configuration": [
                    {
                      "certificate_arn": "${aws_acm_certificate.example.arn}",
                      "endpoint_type": "REGIONAL",
                      "security_policy": "TLS_1_2"
                    }
                  ]
                }
              references:
                domain_name_configuration.certificate_arn: aws_acm_certificate.example.arn
              dependencies:
                aws_route53_record.example: |-
                    {
                      "alias": [
                        {
                          "evaluate_target_health": false,
                          "name": "${aws_apigatewayv2_domain_name.example.domain_name_configuration[0].target_domain_name}",
                          "zone_id": "${aws_apigatewayv2_domain_name.example.domain_name_configuration[0].hosted_zone_id}"
                        }
                      ],
                      "name": "${aws_apigatewayv2_domain_name.example.domain_name}",
                      "type": "A",
                      "zone_id": "${aws_route53_zone.example.zone_id}"
                    }
        argumentDocs:
            api_mapping_selection_expression: '- API mapping selection expression for the domain name.'
            arn: '- ARN of the domain name.'
            create: '- (Default 10 minutes) Used for creating the domain name'
            domain_name: '- (Required) Domain name. Must be between 1 and 512 characters in length.'
            domain_name_configuration: '- (Required) Domain name configuration. See below.'
            domain_name_configuration.certificate_arn: '- (Required) ARN of an AWS-managed certificate that will be used by the endpoint for the domain name. AWS Certificate Manager is the only supported source. Use the aws_acm_certificate resource to configure an ACM certificate.'
            domain_name_configuration.endpoint_type: '- (Required) Endpoint type. Valid values: REGIONAL.'
            domain_name_configuration.hosted_zone_id: '- (Computed) Amazon Route 53 Hosted Zone ID of the endpoint.'
            domain_name_configuration.ownership_verification_certificate_arn: '- (Optional) ARN of the AWS-issued certificate used to validate custom domain ownership (when certificate_arn is issued via an ACM Private CA or mutual_tls_authentication is configured with an ACM-imported certificate.)'
            domain_name_configuration.security_policy: '- (Required) Transport Layer Security (TLS) version of the security policy for the domain name. Valid values: TLS_1_2.'
            domain_name_configuration.target_domain_name: '- (Computed) Target domain name.'
            id: '- Domain name identifier.'
            mutual_tls_authentication: '- (Optional) Mutual TLS authentication configuration for the domain name.'
            mutual_tls_authentication.truststore_uri: '- (Required) Amazon S3 URL that specifies the truststore for mutual TLS authentication, for example, s3://bucket-name/key-name. The truststore can contain certificates from public or private certificate authorities. To update the truststore, upload a new version to S3, and then update your custom domain name to use the new version.'
            mutual_tls_authentication.truststore_version: '- (Optional) Version of the S3 object that contains the truststore. To specify a version, you must have versioning enabled for the S3 bucket.'
            tags: '- (Optional) Map of tags to assign to the domain name. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            update: '- (Default 60 minutes) Used for updating the domain name'
        importStatements: []
    aws_apigatewayv2_integration:
        subCategory: API Gateway V2
        description: Manages an Amazon API Gateway Version 2 integration.
        name: aws_apigatewayv2_integration
        title: aws_apigatewayv2_integration
        examples:
            - name: example
              manifest: |-
                {
                  "api_id": "${aws_apigatewayv2_api.example.id}",
                  "integration_type": "MOCK"
                }
              references:
                api_id: aws_apigatewayv2_api.example.id
            - name: example
              manifest: |-
                {
                  "api_id": "${aws_apigatewayv2_api.example.id}",
                  "connection_type": "INTERNET",
                  "content_handling_strategy": "CONVERT_TO_TEXT",
                  "description": "Lambda example",
                  "integration_method": "POST",
                  "integration_type": "AWS",
                  "integration_uri": "${aws_lambda_function.example.invoke_arn}",
                  "passthrough_behavior": "WHEN_NO_MATCH"
                }
              references:
                api_id: aws_apigatewayv2_api.example.id
                integration_uri: aws_lambda_function.example.invoke_arn
              dependencies:
                aws_lambda_function.example: |-
                    {
                      "filename": "example.zip",
                      "function_name": "Example",
                      "handler": "index.handler",
                      "role": "${aws_iam_role.example.arn}",
                      "runtime": "nodejs12.x"
                    }
            - name: example
              manifest: |-
                {
                  "api_id": "${aws_apigatewayv2_api.example.id}",
                  "credentials_arn": "${aws_iam_role.example.arn}",
                  "description": "SQS example",
                  "integration_subtype": "SQS-SendMessage",
                  "integration_type": "AWS_PROXY",
                  "request_parameters": {
                    "MessageBody": "$request.body.message",
                    "QueueUrl": "$request.header.queueUrl"
                  }
                }
              references:
                api_id: aws_apigatewayv2_api.example.id
                credentials_arn: aws_iam_role.example.arn
            - name: example
              manifest: |-
                {
                  "api_id": "${aws_apigatewayv2_api.example.id}",
                  "connection_id": "${aws_apigatewayv2_vpc_link.example.id}",
                  "connection_type": "VPC_LINK",
                  "credentials_arn": "${aws_iam_role.example.arn}",
                  "description": "Example with a load balancer",
                  "integration_method": "ANY",
                  "integration_type": "HTTP_PROXY",
                  "integration_uri": "${aws_lb_listener.example.arn}",
                  "request_parameters": {
                    "append:header.authforintegration": "$context.authorizer.authorizerResponse",
                    "overwrite:path": "staticValueForIntegration"
                  },
                  "response_parameters": [
                    {
                      "mappings": {
                        "append:header.auth": "$context.authorizer.authorizerResponse"
                      },
                      "status_code": 403
                    },
                    {
                      "mappings": {
                        "overwrite:statuscode": "204"
                      },
                      "status_code": 200
                    }
                  ],
                  "tls_config": [
                    {
                      "server_name_to_verify": "example.com"
                    }
                  ]
                }
              references:
                api_id: aws_apigatewayv2_api.example.id
                connection_id: aws_apigatewayv2_vpc_link.example.id
                credentials_arn: aws_iam_role.example.arn
                integration_uri: aws_lb_listener.example.arn
        argumentDocs:
            api_id: '- (Required) The API identifier.'
            connection_id: '- (Optional) The ID of the VPC link for a private integration. Supported only for HTTP APIs. Must be between 1 and 1024 characters in length.'
            connection_type: '- (Optional) The type of the network connection to the integration endpoint. Valid values: INTERNET, VPC_LINK. Default is INTERNET.'
            content_handling_strategy: '- (Optional) How to handle response payload content type conversions. Valid values: CONVERT_TO_BINARY, CONVERT_TO_TEXT. Supported only for WebSocket APIs.'
            credentials_arn: '- (Optional) The credentials required for the integration, if any.'
            description: '- (Optional) The description of the integration.'
            id: '- The integration identifier.'
            integration_method: '- (Optional) The integration''s HTTP method. Must be specified if integration_type is not MOCK.'
            integration_response_selection_expression: '- The integration response selection expression for the integration.'
            integration_subtype: '- (Optional) Specifies the AWS service action to invoke. Supported only for HTTP APIs when integration_type is AWS_PROXY. See the AWS service integration reference documentation for supported values. Must be between 1 and 128 characters in length.'
            integration_type: |-
                - (Required) The integration type of an integration.
                Valid values: AWS (supported only for WebSocket APIs), AWS_PROXY, HTTP (supported only for WebSocket APIs), HTTP_PROXY, MOCK (supported only for WebSocket APIs). For an HTTP API private integration, use HTTP_PROXY.
            integration_uri: |-
                - (Optional) The URI of the Lambda function for a Lambda proxy integration, when integration_type is AWS_PROXY.
                For an HTTP integration, specify a fully-qualified URL. For an HTTP API private integration, specify the ARN of an Application Load Balancer listener, Network Load Balancer listener, or AWS Cloud Map service.
            mappings: |-
                - (Required) A key-value map. The key of ths map identifies the location of the request parameter to change, and how to change it. The corresponding value specifies the new data for the parameter.
                See the Amazon API Gateway Developer Guide for details.
            passthrough_behavior: |-
                - (Optional) The pass-through behavior for incoming requests based on the Content-Type header in the request, and the available mapping templates specified as the request_templates attribute.
                Valid values: WHEN_NO_MATCH, WHEN_NO_TEMPLATES, NEVER. Default is WHEN_NO_MATCH. Supported only for WebSocket APIs.
            payload_format_version: '- (Optional) The format of the payload sent to an integration. Valid values: 1.0, 2.0. Default is 1.0.'
            request_parameters: |-
                - (Optional) For WebSocket APIs, a key-value map specifying request parameters that are passed from the method request to the backend.
                For HTTP APIs with a specified integration_subtype, a key-value map specifying parameters that are passed to AWS_PROXY integrations.
                For HTTP APIs without a specified integration_subtype, a key-value map specifying how to transform HTTP requests before sending them to the backend.
                See the Amazon API Gateway Developer Guide for details.
            request_templates: '- (Optional) A map of Velocity templates that are applied on the request payload based on the value of the Content-Type header sent by the client. Supported only for WebSocket APIs.'
            response_parameters: '- (Optional) Mappings to transform the HTTP response from a backend integration before returning the response to clients. Supported only for HTTP APIs.'
            server_name_to_verify: '- (Optional) If you specify a server name, API Gateway uses it to verify the hostname on the integration''s certificate. The server name is also included in the TLS handshake to support Server Name Indication (SNI) or virtual hosting.'
            status_code: '- (Required) The HTTP status code in the range 200-599.'
            template_selection_expression: '- (Optional) The template selection expression for the integration.'
            timeout_milliseconds: |-
                - (Optional) Custom timeout between 50 and 29,000 milliseconds for WebSocket APIs and between 50 and 30,000 milliseconds for HTTP APIs.
                The default timeout is 29 seconds for WebSocket APIs and 30 seconds for HTTP APIs.
                Terraform will only perform drift detection of its value when present in a configuration.
            tls_config: '- (Optional) The TLS configuration for a private integration. Supported only for HTTP APIs.'
        importStatements: []
    aws_apigatewayv2_integration_response:
        subCategory: API Gateway V2
        description: Manages an Amazon API Gateway Version 2 integration response.
        name: aws_apigatewayv2_integration_response
        title: aws_apigatewayv2_integration_response
        examples:
            - name: example
              manifest: |-
                {
                  "api_id": "${aws_apigatewayv2_api.example.id}",
                  "integration_id": "${aws_apigatewayv2_integration.example.id}",
                  "integration_response_key": "/200/"
                }
              references:
                api_id: aws_apigatewayv2_api.example.id
                integration_id: aws_apigatewayv2_integration.example.id
        argumentDocs:
            api_id: '- (Required) The API identifier.'
            content_handling_strategy: '- (Optional) How to handle response payload content type conversions. Valid values: CONVERT_TO_BINARY, CONVERT_TO_TEXT.'
            id: '- The integration response identifier.'
            integration_id: '- (Required) The identifier of the aws_apigatewayv2_integration.'
            integration_response_key: '- (Required) The integration response key.'
            response_templates: '- (Optional) A map of Velocity templates that are applied on the request payload based on the value of the Content-Type header sent by the client.'
            template_selection_expression: '- (Optional) The template selection expression for the integration response.'
        importStatements: []
    aws_apigatewayv2_model:
        subCategory: API Gateway V2
        description: Manages an Amazon API Gateway Version 2 model.
        name: aws_apigatewayv2_model
        title: aws_apigatewayv2_model
        examples:
            - name: example
              manifest: |-
                {
                  "api_id": "${aws_apigatewayv2_api.example.id}",
                  "content_type": "application/json",
                  "name": "example",
                  "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"ExampleModel\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": { \"type\": \"string\" }\n  }\n}\n"
                }
              references:
                api_id: aws_apigatewayv2_api.example.id
        argumentDocs:
            api_id: '- (Required) The API identifier.'
            content_type: '- (Required)  The content-type for the model, for example, application/json. Must be between 1 and 256 characters in length.'
            description: '- (Optional) The description of the model. Must be between 1 and 128 characters in length.'
            id: '- The model identifier.'
            name: '- (Required) The name of the model. Must be alphanumeric. Must be between 1 and 128 characters in length.'
            schema: '- (Required) The schema for the model. This should be a JSON schema draft 4 model. Must be less than or equal to 32768 characters in length.'
        importStatements: []
    aws_apigatewayv2_route:
        subCategory: API Gateway V2
        description: Manages an Amazon API Gateway Version 2 route.
        name: aws_apigatewayv2_route
        title: aws_apigatewayv2_route
        examples:
            - name: example
              manifest: |-
                {
                  "api_id": "${aws_apigatewayv2_api.example.id}",
                  "route_key": "$default"
                }
              references:
                api_id: aws_apigatewayv2_api.example.id
              dependencies:
                aws_apigatewayv2_api.example: |-
                    {
                      "name": "example-websocket-api",
                      "protocol_type": "WEBSOCKET",
                      "route_selection_expression": "$request.body.action"
                    }
            - name: example
              manifest: |-
                {
                  "api_id": "${aws_apigatewayv2_api.example.id}",
                  "route_key": "ANY /example/{proxy+}",
                  "target": "integrations/${aws_apigatewayv2_integration.example.id}"
                }
              references:
                api_id: aws_apigatewayv2_api.example.id
              dependencies:
                aws_apigatewayv2_api.example: |-
                    {
                      "name": "example-http-api",
                      "protocol_type": "HTTP"
                    }
                aws_apigatewayv2_integration.example: |-
                    {
                      "api_id": "${aws_apigatewayv2_api.example.id}",
                      "integration_method": "ANY",
                      "integration_type": "HTTP_PROXY",
                      "integration_uri": "https://example.com/{proxy}"
                    }
        argumentDocs:
            api_id: '- (Required) The API identifier.'
            api_key_required: '- (Optional) Boolean whether an API key is required for the route. Defaults to false. Supported only for WebSocket APIs.'
            authorization_scopes: '- (Optional) The authorization scopes supported by this route. The scopes are used with a JWT authorizer to authorize the method invocation.'
            authorization_type: |-
                - (Optional) The authorization type for the route.
                For WebSocket APIs, valid values are NONE for open access, AWS_IAM for using AWS IAM permissions, and CUSTOM for using a Lambda authorizer.
                For HTTP APIs, valid values are NONE for open access, JWT for using JSON Web Tokens, AWS_IAM for using AWS IAM permissions, and CUSTOM for using a Lambda authorizer.
                Defaults to NONE.
            authorizer_id: '- (Optional) The identifier of the aws_apigatewayv2_authorizer resource to be associated with this route.'
            id: '- The route identifier.'
            model_selection_expression: '- (Optional) The model selection expression for the route. Supported only for WebSocket APIs.'
            operation_name: '- (Optional) The operation name for the route. Must be between 1 and 64 characters in length.'
            request_models: '- (Optional) The request models for the route. Supported only for WebSocket APIs.'
            request_parameter: '- (Optional) The request parameters for the route. Supported only for WebSocket APIs.'
            request_parameter_key: '- (Required) Request parameter key. This is a request data mapping parameter.'
            required: '- (Required) Boolean whether or not the parameter is required.'
            route_key: '- (Required) The route key for the route. For HTTP APIs, the route key can be either $default, or a combination of an HTTP method and resource path, for example, GET /pets.'
            route_response_selection_expression: '- (Optional) The route response selection expression for the route. Supported only for WebSocket APIs.'
            target: '- (Optional) The target for the route, of the form integrations/IntegrationID, where IntegrationID is the identifier of an aws_apigatewayv2_integration resource.'
        importStatements: []
    aws_apigatewayv2_route_response:
        subCategory: API Gateway V2
        description: Manages an Amazon API Gateway Version 2 route response.
        name: aws_apigatewayv2_route_response
        title: aws_apigatewayv2_route_response
        examples:
            - name: example
              manifest: |-
                {
                  "api_id": "${aws_apigatewayv2_api.example.id}",
                  "route_id": "${aws_apigatewayv2_route.example.id}",
                  "route_response_key": "$default"
                }
              references:
                api_id: aws_apigatewayv2_api.example.id
                route_id: aws_apigatewayv2_route.example.id
        argumentDocs:
            api_id: '- (Required) The API identifier.'
            id: '- The route response identifier.'
            model_selection_expression: '- (Optional) The model selection expression for the route response.'
            response_models: '- (Optional) The response models for the route response.'
            route_id: '- (Required) The identifier of the aws_apigatewayv2_route.'
            route_response_key: '- (Required) The route response key.'
        importStatements: []
    aws_apigatewayv2_stage:
        subCategory: API Gateway V2
        description: Manages an Amazon API Gateway Version 2 stage.
        name: aws_apigatewayv2_stage
        title: aws_apigatewayv2_stage
        examples:
            - name: example
              manifest: |-
                {
                  "api_id": "${aws_apigatewayv2_api.example.id}",
                  "name": "example-stage"
                }
              references:
                api_id: aws_apigatewayv2_api.example.id
        argumentDocs:
            access_log_settings: |-
                - (Optional) Settings for logging access in this stage.
                Use the aws_api_gateway_account resource to configure permissions for CloudWatch Logging.
            api_id: '- (Required) The API identifier.'
            arn: '- The ARN of the stage.'
            auto_deploy: '- (Optional) Whether updates to an API automatically trigger a new deployment. Defaults to false. Applicable for HTTP APIs.'
            client_certificate_id: |-
                - (Optional) The identifier of a client certificate for the stage. Use the aws_api_gateway_client_certificate resource to configure a client certificate.
                Supported only for WebSocket APIs.
            data_trace_enabled: |-
                - (Optional) Whether data trace logging is enabled for the default route. Affects the log entries pushed to Amazon CloudWatch Logs.
                Defaults to false. Supported only for WebSocket APIs.
            default_route_settings: '- (Optional) The default route settings for the stage.'
            deployment_id: '- (Optional) The deployment identifier of the stage. Use the aws_apigatewayv2_deployment resource to configure a deployment.'
            description: '- (Optional) The description for the stage. Must be less than or equal to 1024 characters in length.'
            destination_arn: '- (Required) The ARN of the CloudWatch Logs log group to receive access logs. Any trailing :* is trimmed from the ARN.'
            detailed_metrics_enabled: '- (Optional) Whether detailed metrics are enabled for the default route. Defaults to false.'
            execution_arn: |-
                - The ARN prefix to be used in an aws_lambda_permission's source_arn attribute.
                For WebSocket APIs this attribute can additionally be used in an aws_iam_policy to authorize access to the @connections API.
                See the Amazon API Gateway Developer Guide for details.
            format: '- (Required) A single line format of the access logs of data, as specified by selected $context variables.'
            id: '- The stage identifier.'
            invoke_url: |-
                - The URL to invoke the API pointing to the stage,
                e.g., wss://z4675bid1j.execute-api.eu-west-2.amazonaws.com/example-stage, or https://z4675bid1j.execute-api.eu-west-2.amazonaws.com/
            logging_level: |-
                - (Optional) The logging level for the default route. Affects the log entries pushed to Amazon CloudWatch Logs.
                Valid values: ERROR, INFO, OFF. Defaults to OFF. Supported only for WebSocket APIs. Terraform will only perform drift detection of its value when present in a configuration.
            name: '- (Required) The name of the stage. Must be between 1 and 128 characters in length.'
            route_key: '- (Required) Route key.'
            route_settings: '- (Optional) Route settings for the stage.'
            stage_variables: '- (Optional) A map that defines the stage variables for the stage.'
            tags: '- (Optional) A map of tags to assign to the stage. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            throttling_burst_limit: '- (Optional) The throttling burst limit for the default route.'
            throttling_rate_limit: '- (Optional) The throttling rate limit for the default route.'
        importStatements: []
    aws_apigatewayv2_vpc_link:
        subCategory: API Gateway V2
        description: Manages an Amazon API Gateway Version 2 VPC Link.
        name: aws_apigatewayv2_vpc_link
        title: aws_apigatewayv2_vpc_link
        examples:
            - name: example
              manifest: |-
                {
                  "name": "example",
                  "security_group_ids": [
                    "${data.aws_security_group.example.id}"
                  ],
                  "subnet_ids": "${data.aws_subnet_ids.example.ids}",
                  "tags": {
                    "Usage": "example"
                  }
                }
              references:
                subnet_ids: data.aws_subnet_ids.example.ids
        argumentDocs:
            arn: '- The VPC Link ARN.'
            id: '- The VPC Link identifier.'
            name: '- (Required) The name of the VPC Link. Must be between 1 and 128 characters in length.'
            security_group_ids: '- (Required) Security group IDs for the VPC Link.'
            subnet_ids: '- (Required) Subnet IDs for the VPC Link.'
            tags: '- (Optional) A map of tags to assign to the VPC Link. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_app_cookie_stickiness_policy:
        subCategory: ELB Classic
        description: Provides an application cookie stickiness policy, which allows an ELB to wed its stickiness cookie to a cookie generated by your application.
        name: aws_app_cookie_stickiness_policy
        title: aws_app_cookie_stickiness_policy
        examples:
            - name: foo
              manifest: |-
                {
                  "cookie_name": "MyAppCookie",
                  "lb_port": 80,
                  "load_balancer": "${aws_elb.lb.name}",
                  "name": "foo_policy"
                }
              references:
                load_balancer: aws_elb.lb.name
              dependencies:
                aws_elb.lb: |-
                    {
                      "availability_zones": [
                        "us-east-1a"
                      ],
                      "listener": [
                        {
                          "instance_port": 8000,
                          "instance_protocol": "http",
                          "lb_port": 80,
                          "lb_protocol": "http"
                        }
                      ],
                      "name": "test-lb"
                    }
        argumentDocs:
            cookie_name: '- (Required) The application cookie whose lifetime the ELB''s cookie should follow.'
            id: '- The ID of the policy.'
            lb_port: |-
                - (Required) The load balancer port to which the policy
                should be applied. This must be an active listener on the load
                balancer.
            load_balancer: |-
                - (Required) The name of load balancer to which the policy
                should be attached.
            name: '- (Required) The name of the stickiness policy.'
        importStatements: []
    aws_appautoscaling_policy:
        subCategory: Application Auto Scaling
        description: Provides an Application AutoScaling Policy resource.
        name: aws_appautoscaling_policy
        title: aws_appautoscaling_policy
        examples:
            - name: dynamodb_table_read_policy
              manifest: |-
                {
                  "name": "DynamoDBReadCapacityUtilization:${aws_appautoscaling_target.dynamodb_table_read_target.resource_id}",
                  "policy_type": "TargetTrackingScaling",
                  "resource_id": "${aws_appautoscaling_target.dynamodb_table_read_target.resource_id}",
                  "scalable_dimension": "${aws_appautoscaling_target.dynamodb_table_read_target.scalable_dimension}",
                  "service_namespace": "${aws_appautoscaling_target.dynamodb_table_read_target.service_namespace}",
                  "target_tracking_scaling_policy_configuration": [
                    {
                      "predefined_metric_specification": [
                        {
                          "predefined_metric_type": "DynamoDBReadCapacityUtilization"
                        }
                      ],
                      "target_value": 70
                    }
                  ]
                }
              references:
                resource_id: aws_appautoscaling_target.dynamodb_table_read_target.resource_id
                scalable_dimension: aws_appautoscaling_target.dynamodb_table_read_target.scalable_dimension
                service_namespace: aws_appautoscaling_target.dynamodb_table_read_target.service_namespace
              dependencies:
                aws_appautoscaling_target.dynamodb_table_read_target: |-
                    {
                      "max_capacity": 100,
                      "min_capacity": 5,
                      "resource_id": "table/tableName",
                      "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
                      "service_namespace": "dynamodb"
                    }
            - name: ecs_policy
              manifest: |-
                {
                  "name": "scale-down",
                  "policy_type": "StepScaling",
                  "resource_id": "${aws_appautoscaling_target.ecs_target.resource_id}",
                  "scalable_dimension": "${aws_appautoscaling_target.ecs_target.scalable_dimension}",
                  "service_namespace": "${aws_appautoscaling_target.ecs_target.service_namespace}",
                  "step_scaling_policy_configuration": [
                    {
                      "adjustment_type": "ChangeInCapacity",
                      "cooldown": 60,
                      "metric_aggregation_type": "Maximum",
                      "step_adjustment": [
                        {
                          "metric_interval_upper_bound": 0,
                          "scaling_adjustment": -1
                        }
                      ]
                    }
                  ]
                }
              references:
                resource_id: aws_appautoscaling_target.ecs_target.resource_id
                scalable_dimension: aws_appautoscaling_target.ecs_target.scalable_dimension
                service_namespace: aws_appautoscaling_target.ecs_target.service_namespace
              dependencies:
                aws_appautoscaling_target.ecs_target: |-
                    {
                      "max_capacity": 4,
                      "min_capacity": 1,
                      "resource_id": "service/clusterName/serviceName",
                      "scalable_dimension": "ecs:service:DesiredCount",
                      "service_namespace": "ecs"
                    }
            - name: replicas
              manifest: |-
                {
                  "name": "cpu-auto-scaling",
                  "policy_type": "TargetTrackingScaling",
                  "resource_id": "${aws_appautoscaling_target.replicas.resource_id}",
                  "scalable_dimension": "${aws_appautoscaling_target.replicas.scalable_dimension}",
                  "service_namespace": "${aws_appautoscaling_target.replicas.service_namespace}",
                  "target_tracking_scaling_policy_configuration": [
                    {
                      "predefined_metric_specification": [
                        {
                          "predefined_metric_type": "RDSReaderAverageCPUUtilization"
                        }
                      ],
                      "scale_in_cooldown": 300,
                      "scale_out_cooldown": 300,
                      "target_value": 75
                    }
                  ]
                }
              references:
                resource_id: aws_appautoscaling_target.replicas.resource_id
                scalable_dimension: aws_appautoscaling_target.replicas.scalable_dimension
                service_namespace: aws_appautoscaling_target.replicas.service_namespace
              dependencies:
                aws_appautoscaling_target.replicas: |-
                    {
                      "max_capacity": 15,
                      "min_capacity": 1,
                      "resource_id": "cluster:${aws_rds_cluster.example.id}",
                      "scalable_dimension": "rds:cluster:ReadReplicaCount",
                      "service_namespace": "rds"
                    }
            - name: ecs_policy
              manifest: |-
                {
                  "step_scaling_policy_configuration": [
                    {
                      "step_adjustment": [
                        {
                          "metric_interval_lower_bound": 1,
                          "metric_interval_upper_bound": 2,
                          "scaling_adjustment": -1
                        },
                        {
                          "metric_interval_lower_bound": 2,
                          "metric_interval_upper_bound": 3,
                          "scaling_adjustment": 1
                        }
                      ]
                    }
                  ]
                }
            - name: example
              manifest: |-
                {
                  "policy_type": "TargetTrackingScaling",
                  "target_tracking_scaling_policy_configuration": [
                    {
                      "customized_metric_specification": [
                        {
                          "dimensions": [
                            {
                              "name": "MyOptionalMetricDimensionName",
                              "value": "MyOptionalMetricDimensionValue"
                            }
                          ],
                          "metric_name": "MyUtilizationMetric",
                          "namespace": "MyNamespace",
                          "statistic": "Average",
                          "unit": "Percent"
                        }
                      ],
                      "target_value": 40
                    }
                  ]
                }
        argumentDocs:
            arn: '- The ARN assigned by AWS to the scaling policy.'
            name: '- (Required) The name of the policy. Must be between 1 and 255 characters in length.'
            policy_type: '- (Optional) The policy type. Valid values are StepScaling and TargetTrackingScaling. Defaults to StepScaling. Certain services only support only one policy type. For more information see the Target Tracking Scaling Policies and Step Scaling Policies documentation.'
            resource_id: '- (Required) The resource type and unique identifier string for the resource associated with the scaling policy. Documentation can be found in the ResourceId parameter at: AWS Application Auto Scaling API Reference'
            scalable_dimension: '- (Required) The scalable dimension of the scalable target. Documentation can be found in the ScalableDimension parameter at: AWS Application Auto Scaling API Reference'
            service_namespace: '- (Required) The AWS service namespace of the scalable target. Documentation can be found in the ServiceNamespace parameter at: AWS Application Auto Scaling API Reference'
            step_scaling_policy_configuration: '- (Optional) Step scaling policy configuration, requires policy_type = "StepScaling" (default). See supported fields below.'
            step_scaling_policy_configuration.adjustment_type: '- (Required) Specifies whether the adjustment is an absolute number or a percentage of the current capacity. Valid values are ChangeInCapacity, ExactCapacity, and PercentChangeInCapacity.'
            step_scaling_policy_configuration.cooldown: '- (Required) The amount of time, in seconds, after a scaling activity completes and before the next scaling activity can start.'
            step_scaling_policy_configuration.metric_aggregation_type: '- (Optional) The aggregation type for the policy''s metrics. Valid values are "Minimum", "Maximum", and "Average". Without a value, AWS will treat the aggregation type as "Average".'
            step_scaling_policy_configuration.metric_interval_lower_bound: '- (Optional) The lower bound for the difference between the alarm threshold and the CloudWatch metric. Without a value, AWS will treat this bound as negative infinity.'
            step_scaling_policy_configuration.metric_interval_upper_bound: '- (Optional) The upper bound for the difference between the alarm threshold and the CloudWatch metric. Without a value, AWS will treat this bound as infinity. The upper bound must be greater than the lower bound.'
            step_scaling_policy_configuration.min_adjustment_magnitude: '- (Optional) The minimum number to adjust your scalable dimension as a result of a scaling activity. If the adjustment type is PercentChangeInCapacity, the scaling policy changes the scalable dimension of the scalable target by this amount.'
            step_scaling_policy_configuration.scaling_adjustment: '- (Required) The number of members by which to scale, when the adjustment bounds are breached. A positive value scales up. A negative value scales down.'
            step_scaling_policy_configuration.step_adjustment: '- (Optional) A set of adjustments that manage scaling. These have the following structure:'
            target_tracking_scaling_policy_configuration: '- (Optional) A target tracking policy, requires policy_type = "TargetTrackingScaling". See supported fields below.'
            target_tracking_scaling_policy_configuration.customized_metric_specification: '- (Optional) A custom CloudWatch metric. Documentation can be found  at: AWS Customized Metric Specification. See supported fields below.'
            target_tracking_scaling_policy_configuration.dimensions: '- (Optional) Configuration block(s) with the dimensions of the metric if the metric was published with dimensions. Detailed below.'
            target_tracking_scaling_policy_configuration.disable_scale_in: '- (Optional) Indicates whether scale in by the target tracking policy is disabled. If the value is true, scale in is disabled and the target tracking policy won''t remove capacity from the scalable resource. Otherwise, scale in is enabled and the target tracking policy can remove capacity from the scalable resource. The default value is false.'
            target_tracking_scaling_policy_configuration.metric_name: '- (Required) The name of the metric.'
            target_tracking_scaling_policy_configuration.name: '- (Required) Name of the dimension.'
            target_tracking_scaling_policy_configuration.namespace: '- (Required) The namespace of the metric.'
            target_tracking_scaling_policy_configuration.predefined_metric_specification: '- (Optional) A predefined metric. See supported fields below.'
            target_tracking_scaling_policy_configuration.predefined_metric_type: '- (Required) The metric type.'
            target_tracking_scaling_policy_configuration.resource_label: '- (Optional) Reserved for future use if the predefined_metric_type is not ALBRequestCountPerTarget. If the predefined_metric_type is ALBRequestCountPerTarget, you must specify this argument. Documentation can be found at: AWS Predefined Scaling Metric Specification. Must be less than or equal to 1023 characters in length.'
            target_tracking_scaling_policy_configuration.scale_in_cooldown: '- (Optional) The amount of time, in seconds, after a scale in activity completes before another scale in activity can start.'
            target_tracking_scaling_policy_configuration.scale_out_cooldown: '- (Optional) The amount of time, in seconds, after a scale out activity completes before another scale out activity can start.'
            target_tracking_scaling_policy_configuration.statistic: '- (Required) The statistic of the metric. Valid values: Average, Minimum, Maximum, SampleCount, and Sum.'
            target_tracking_scaling_policy_configuration.target_value: '- (Required) The target value for the metric.'
            target_tracking_scaling_policy_configuration.unit: '- (Optional) The unit of the metric.'
            target_tracking_scaling_policy_configuration.value: '- (Required) Value of the dimension.'
        importStatements: []
    aws_appautoscaling_scheduled_action:
        subCategory: Application Auto Scaling
        description: Provides an Application AutoScaling ScheduledAction resource.
        name: aws_appautoscaling_scheduled_action
        title: aws_appautoscaling_scheduled_action
        examples:
            - name: dynamodb
              manifest: |-
                {
                  "name": "dynamodb",
                  "resource_id": "${aws_appautoscaling_target.dynamodb.resource_id}",
                  "scalable_dimension": "${aws_appautoscaling_target.dynamodb.scalable_dimension}",
                  "scalable_target_action": [
                    {
                      "max_capacity": 200,
                      "min_capacity": 1
                    }
                  ],
                  "schedule": "at(2006-01-02T15:04:05)",
                  "service_namespace": "${aws_appautoscaling_target.dynamodb.service_namespace}"
                }
              references:
                resource_id: aws_appautoscaling_target.dynamodb.resource_id
                scalable_dimension: aws_appautoscaling_target.dynamodb.scalable_dimension
                service_namespace: aws_appautoscaling_target.dynamodb.service_namespace
              dependencies:
                aws_appautoscaling_target.dynamodb: |-
                    {
                      "max_capacity": 100,
                      "min_capacity": 5,
                      "resource_id": "table/tableName",
                      "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
                      "service_namespace": "dynamodb"
                    }
            - name: ecs
              manifest: |-
                {
                  "name": "ecs",
                  "resource_id": "${aws_appautoscaling_target.ecs.resource_id}",
                  "scalable_dimension": "${aws_appautoscaling_target.ecs.scalable_dimension}",
                  "scalable_target_action": [
                    {
                      "max_capacity": 10,
                      "min_capacity": 1
                    }
                  ],
                  "schedule": "at(2006-01-02T15:04:05)",
                  "service_namespace": "${aws_appautoscaling_target.ecs.service_namespace}"
                }
              references:
                resource_id: aws_appautoscaling_target.ecs.resource_id
                scalable_dimension: aws_appautoscaling_target.ecs.scalable_dimension
                service_namespace: aws_appautoscaling_target.ecs.service_namespace
              dependencies:
                aws_appautoscaling_target.ecs: |-
                    {
                      "max_capacity": 4,
                      "min_capacity": 1,
                      "resource_id": "service/clusterName/serviceName",
                      "scalable_dimension": "ecs:service:DesiredCount",
                      "service_namespace": "ecs"
                    }
        argumentDocs:
            arn: '- The Amazon Resource Name (ARN) of the scheduled action.'
            end_time: '- (Optional) The date and time for the scheduled action to end in RFC 3339 format. The timezone is not affected by the setting of timezone.'
            max_capacity: '- (Optional) The maximum capacity. At least one of max_capacity or min_capacity must be set.'
            min_capacity: '- (Optional) The minimum capacity. At least one of min_capacity or max_capacity must be set.'
            name: '- (Required) The name of the scheduled action.'
            resource_id: '- (Required) The identifier of the resource associated with the scheduled action. Documentation can be found in the parameter at: AWS Application Auto Scaling API Reference'
            scalable_dimension: '- (Required) The scalable dimension. Documentation can be found in the parameter at: AWS Application Auto Scaling API Reference Example: ecs:service:DesiredCount'
            scalable_target_action: '- (Required) The new minimum and maximum capacity. You can set both values or just one. See below'
            schedule: '- (Required) The schedule for this action. The following formats are supported: At expressions - at(yyyy-mm-ddThh:mm:ss), Rate expressions - rate(valueunit), Cron expressions - cron(fields). Times for at expressions and cron expressions are evaluated using the time zone configured in timezone. Documentation can be found in the parameter at: AWS Application Auto Scaling API Reference'
            service_namespace: '- (Required) The namespace of the AWS service. Documentation can be found in the parameter at: AWS Application Auto Scaling API Reference Example: ecs'
            start_time: '- (Optional) The date and time for the scheduled action to start in RFC 3339 format. The timezone is not affected by the setting of timezone.'
            timezone: '- (Optional) The time zone used when setting a scheduled action by using an at or cron expression. Does not affect timezone for start_time and end_time. Valid values are the canonical names of the IANA time zones supported by Joda-Time, such as Etc/GMT+9 or Pacific/Tahiti. Default is UTC.'
        importStatements: []
    aws_appautoscaling_target:
        subCategory: Application Auto Scaling
        description: Provides an Application AutoScaling ScalableTarget resource.
        name: aws_appautoscaling_target
        title: aws_appautoscaling_target
        examples:
            - name: dynamodb_table_read_target
              manifest: |-
                {
                  "max_capacity": 100,
                  "min_capacity": 5,
                  "resource_id": "table/${aws_dynamodb_table.example.name}",
                  "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
                  "service_namespace": "dynamodb"
                }
            - name: dynamodb_index_read_target
              manifest: |-
                {
                  "max_capacity": 100,
                  "min_capacity": 5,
                  "resource_id": "table/${aws_dynamodb_table.example.name}/index/${var.index_name}",
                  "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
                  "service_namespace": "dynamodb"
                }
            - name: ecs_target
              manifest: |-
                {
                  "max_capacity": 4,
                  "min_capacity": 1,
                  "resource_id": "service/${aws_ecs_cluster.example.name}/${aws_ecs_service.example.name}",
                  "scalable_dimension": "ecs:service:DesiredCount",
                  "service_namespace": "ecs"
                }
            - name: replicas
              manifest: |-
                {
                  "max_capacity": 15,
                  "min_capacity": 1,
                  "resource_id": "cluster:${aws_rds_cluster.example.id}",
                  "scalable_dimension": "rds:cluster:ReadReplicaCount",
                  "service_namespace": "rds"
                }
        argumentDocs:
            max_capacity: '- (Required) The max capacity of the scalable target.'
            min_capacity: '- (Required) The min capacity of the scalable target.'
            resource_id: '- (Required) The resource type and unique identifier string for the resource associated with the scaling policy. Documentation can be found in the ResourceId parameter at: AWS Application Auto Scaling API Reference'
            role_arn: '- (Optional) The ARN of the IAM role that allows Application AutoScaling to modify your scalable target on your behalf. This defaults to an IAM Service-Linked Role for most services and custom IAM Roles are ignored by the API for those namespaces. See the AWS Application Auto Scaling documentation for more information about how this service interacts with IAM.'
            scalable_dimension: '- (Required) The scalable dimension of the scalable target. Documentation can be found in the ScalableDimension parameter at: AWS Application Auto Scaling API Reference'
            service_namespace: '- (Required) The AWS service namespace of the scalable target. Documentation can be found in the ServiceNamespace parameter at: AWS Application Auto Scaling API Reference'
        importStatements: []
    aws_appconfig_application:
        subCategory: AppConfig
        description: Provides an AppConfig Application resource.
        name: aws_appconfig_application
        title: aws_appconfig_application
        examples:
            - name: example
              manifest: |-
                {
                  "description": "Example AppConfig Application",
                  "name": "example-application-tf",
                  "tags": {
                    "Type": "AppConfig Application"
                  }
                }
        argumentDocs:
            arn: '- The Amazon Resource Name (ARN) of the AppConfig Application.'
            description: '- (Optional) The description of the application. Can be at most 1024 characters.'
            id: '- The AppConfig application ID.'
            name: '- (Required) The name for the application. Must be between 1 and 64 characters in length.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_appconfig_configuration_profile:
        subCategory: AppConfig
        description: Provides an AppConfig Configuration Profile resource.
        name: aws_appconfig_configuration_profile
        title: aws_appconfig_configuration_profile
        examples:
            - name: example
              manifest: |-
                {
                  "application_id": "${aws_appconfig_application.example.id}",
                  "description": "Example Configuration Profile",
                  "location_uri": "hosted",
                  "name": "example-configuration-profile-tf",
                  "tags": {
                    "Type": "AppConfig Configuration Profile"
                  },
                  "validator": [
                    {
                      "content": "${aws_lambda_function.example.arn}",
                      "type": "LAMBDA"
                    }
                  ]
                }
              references:
                application_id: aws_appconfig_application.example.id
                validator.content: aws_lambda_function.example.arn
        argumentDocs:
            application_id: '- (Required, Forces new resource) The application ID. Must be between 4 and 7 characters in length.'
            arn: '- The Amazon Resource Name (ARN) of the AppConfig Configuration Profile.'
            configuration_profile_id: '- The configuration profile ID.'
            description: '- (Optional) The description of the configuration profile. Can be at most 1024 characters.'
            id: '- The AppConfig configuration profile ID and application ID separated by a colon (:).'
            location_uri: '- (Required, Forces new resource) A URI to locate the configuration. You can specify the AWS AppConfig hosted configuration store, Systems Manager (SSM) document, an SSM Parameter Store parameter, or an Amazon S3 object. For the hosted configuration store, specify hosted. For an SSM document, specify either the document name in the format ssm-document://<Document_name> or the Amazon Resource Name (ARN). For a parameter, specify either the parameter name in the format ssm-parameter://<Parameter_name> or the ARN. For an Amazon S3 object, specify the URI in the following format: s3://<bucket>/<objectKey>.'
            name: '- (Required) The name for the configuration profile. Must be between 1 and 64 characters in length.'
            retrieval_role_arn: '- (Optional) The ARN of an IAM role with permission to access the configuration at the specified location_uri. A retrieval role ARN is not required for configurations stored in the AWS AppConfig hosted configuration store. It is required for all other sources that store your configuration.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            type: '- (Optional) The type of configurations contained in the profile. Valid values: AWS.AppConfig.FeatureFlags and AWS.Freeform.  Default: AWS.Freeform.'
            validator: '- (Optional) A set of methods for validating the configuration. Maximum of 2. See Validator below for more details.'
            validator.content: '- (Optional, Required when type is LAMBDA) Either the JSON Schema content or the Amazon Resource Name (ARN) of an AWS Lambda function.'
            validator.type: '- (Optional) The type of validator. Valid values: JSON_SCHEMA and LAMBDA.'
        importStatements: []
    aws_appconfig_deployment:
        subCategory: AppConfig
        description: Provides an AppConfig Deployment resource.
        name: aws_appconfig_deployment
        title: aws_appconfig_deployment
        examples:
            - name: example
              manifest: |-
                {
                  "application_id": "${aws_appconfig_application.example.id}",
                  "configuration_profile_id": "${aws_appconfig_configuration_profile.example.configuration_profile_id}",
                  "configuration_version": "${aws_appconfig_hosted_configuration_version.example.version_number}",
                  "deployment_strategy_id": "${aws_appconfig_deployment_strategy.example.id}",
                  "description": "My example deployment",
                  "environment_id": "${aws_appconfig_environment.example.environment_id}",
                  "tags": {
                    "Type": "AppConfig Deployment"
                  }
                }
              references:
                application_id: aws_appconfig_application.example.id
                configuration_profile_id: aws_appconfig_configuration_profile.example.configuration_profile_id
                configuration_version: aws_appconfig_hosted_configuration_version.example.version_number
                deployment_strategy_id: aws_appconfig_deployment_strategy.example.id
                environment_id: aws_appconfig_environment.example.environment_id
        argumentDocs:
            application_id: '- (Required, Forces new resource) The application ID. Must be between 4 and 7 characters in length.'
            arn: '- The Amazon Resource Name (ARN) of the AppConfig Deployment.'
            configuration_profile_id: '- (Required, Forces new resource) The configuration profile ID. Must be between 4 and 7 characters in length.'
            configuration_version: '- (Required, Forces new resource) The configuration version to deploy. Can be at most 1024 characters.'
            deployment_number: '- The deployment number.'
            deployment_strategy_id: '- (Required, Forces new resource) The deployment strategy ID or name of a predefined deployment strategy. See Predefined Deployment Strategies for more details.'
            description: '- (Optional, Forces new resource) The description of the deployment. Can be at most 1024 characters.'
            environment_id: '- (Required, Forces new resource) The environment ID. Must be between 4 and 7 characters in length.'
            id: '- The AppConfig application ID, environment ID, and deployment number separated by a slash (/).'
            state: '- The state of the deployment.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_appconfig_deployment_strategy:
        subCategory: AppConfig
        description: Provides an AppConfig Deployment Strategy resource.
        name: aws_appconfig_deployment_strategy
        title: aws_appconfig_deployment_strategy
        examples:
            - name: example
              manifest: |-
                {
                  "deployment_duration_in_minutes": 3,
                  "description": "Example Deployment Strategy",
                  "final_bake_time_in_minutes": 4,
                  "growth_factor": 10,
                  "growth_type": "LINEAR",
                  "name": "example-deployment-strategy-tf",
                  "replicate_to": "NONE",
                  "tags": {
                    "Type": "AppConfig Deployment Strategy"
                  }
                }
        argumentDocs:
            arn: '- The Amazon Resource Name (ARN) of the AppConfig Deployment Strategy.'
            deployment_duration_in_minutes: '- (Required) Total amount of time for a deployment to last. Minimum value of 0, maximum value of 1440.'
            description: '- (Optional) A description of the deployment strategy. Can be at most 1024 characters.'
            final_bake_time_in_minutes: '- (Optional) The amount of time AWS AppConfig monitors for alarms before considering the deployment to be complete and no longer eligible for automatic roll back. Minimum value of 0, maximum value of 1440.'
            growth_factor: '- (Required) The percentage of targets to receive a deployed configuration during each interval. Minimum value of 1.0, maximum value of 100.0.'
            growth_type: '- (Optional) The algorithm used to define how percentage grows over time. Valid value: LINEAR and EXPONENTIAL. Defaults to LINEAR.'
            id: '- The AppConfig deployment strategy ID.'
            name: '- (Required, Forces new resource) A name for the deployment strategy. Must be between 1 and 64 characters in length.'
            replicate_to: '- (Required, Forces new resource) Where to save the deployment strategy. Valid values: NONE and SSM_DOCUMENT.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_appconfig_environment:
        subCategory: AppConfig
        description: Provides an AppConfig Environment resource.
        name: aws_appconfig_environment
        title: aws_appconfig_environment
        examples:
            - name: example
              manifest: |-
                {
                  "application_id": "${aws_appconfig_application.example.id}",
                  "description": "Example AppConfig Environment",
                  "monitor": [
                    {
                      "alarm_arn": "${aws_cloudwatch_metric_alarm.example.arn}",
                      "alarm_role_arn": "${aws_iam_role.example.arn}"
                    }
                  ],
                  "name": "example-environment-tf",
                  "tags": {
                    "Type": "AppConfig Environment"
                  }
                }
              references:
                application_id: aws_appconfig_application.example.id
                monitor.alarm_arn: aws_cloudwatch_metric_alarm.example.arn
                monitor.alarm_role_arn: aws_iam_role.example.arn
              dependencies:
                aws_appconfig_application.example: |-
                    {
                      "description": "Example AppConfig Application",
                      "name": "example-application-tf",
                      "tags": {
                        "Type": "AppConfig Application"
                      }
                    }
        argumentDocs:
            application_id: '- (Required, Forces new resource) The AppConfig application ID. Must be between 4 and 7 characters in length.'
            arn: '- The Amazon Resource Name (ARN) of the AppConfig Environment.'
            description: '- (Optional) The description of the environment. Can be at most 1024 characters.'
            environment_id: '- The AppConfig environment ID.'
            id: '- The AppConfig environment ID and application ID separated by a colon (:).'
            monitor: '- (Optional) Set of Amazon CloudWatch alarms to monitor during the deployment process. Maximum of 5. See Monitor below for more details.'
            monitor.alarm_arn: '- (Required) ARN of the Amazon CloudWatch alarm.'
            monitor.alarm_role_arn: '- (Optional) ARN of an IAM role for AWS AppConfig to monitor alarm_arn.'
            name: '- (Required) The name for the environment. Must be between 1 and 64 characters in length.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_appconfig_hosted_configuration_version:
        subCategory: AppConfig
        description: Provides an AppConfig Hosted Configuration Version resource.
        name: aws_appconfig_hosted_configuration_version
        title: aws_appconfig_hosted_configuration_version
        examples:
            - name: example
              manifest: |-
                {
                  "application_id": "${aws_appconfig_application.example.id}",
                  "configuration_profile_id": "${aws_appconfig_configuration_profile.example.configuration_profile_id}",
                  "content": "${jsonencode({\n    foo            = \"bar\",\n    fruit          = [\"apple\", \"pear\", \"orange\"],\n    isThingEnabled = true\n  })}",
                  "content_type": "application/json",
                  "description": "Example Freeform Hosted Configuration Version"
                }
              references:
                application_id: aws_appconfig_application.example.id
                configuration_profile_id: aws_appconfig_configuration_profile.example.configuration_profile_id
            - name: example
              manifest: |-
                {
                  "application_id": "${aws_appconfig_application.example.id}",
                  "configuration_profile_id": "${aws_appconfig_configuration_profile.example.configuration_profile_id}",
                  "content": "${jsonencode({\n    flags : {\n      foo : {\n        name : \"foo\",\n        _deprecation : {\n          \"status\" : \"planned\"\n        }\n      },\n      bar : {\n        name : \"bar\",\n        attributes : {\n          someAttribute : {\n            constraints : {\n              type : \"string\",\n              required : true\n            }\n          },\n          someOtherAttribute : {\n            constraints : {\n              type : \"number\",\n              required : true\n            }\n          }\n        }\n      }\n    },\n    values : {\n      foo : {\n        enabled : \"true\",\n      },\n      bar : {\n        enabled : \"true\",\n        someAttribute : \"Hello World\",\n        someOtherAttribute : 123\n      }\n    },\n    version : \"1\"\n  })}",
                  "content_type": "application/json",
                  "description": "Example Feature Flag Configuration Version"
                }
              references:
                application_id: aws_appconfig_application.example.id
                configuration_profile_id: aws_appconfig_configuration_profile.example.configuration_profile_id
        argumentDocs:
            application_id: '- (Required, Forces new resource) The application ID.'
            arn: '- The Amazon Resource Name (ARN) of the AppConfig  hosted configuration version.'
            configuration_profile_id: '- (Required, Forces new resource) The configuration profile ID.'
            content: '- (Required, Forces new resource) The content of the configuration or the configuration data.'
            content_type: '- (Required, Forces new resource) A standard MIME type describing the format of the configuration content. For more information, see Content-Type.'
            description: '- (Optional, Forces new resource) A description of the configuration.'
            id: '- The AppConfig application ID, configuration profile ID, and version number separated by a slash (/).'
            version_number: '- The version number of the hosted configuration.'
        importStatements: []
    aws_appflow_connector_profile:
        subCategory: AppFlow
        description: Provides an AppFlow Connector Profile resource.
        name: aws_appflow_connector_profile
        title: aws_appflow_connector_profile
        examples:
            - name: example
              manifest: |-
                {
                  "connection_mode": "Public",
                  "connector_profile_config": [
                    {
                      "connector_profile_credentials": [
                        {
                          "redshift": [
                            {
                              "password": "${aws_redshift_cluster.example.master_password}",
                              "username": "${aws_redshift_cluster.example.master_username}"
                            }
                          ]
                        }
                      ],
                      "connector_profile_properties": [
                        {
                          "redshift": [
                            {
                              "bucket_name": "${aws_s3_bucket.example.name}",
                              "database_url": "jdbc:redshift://${aws_redshift_cluster.example.endpoint}/${aws_redshift_cluster.example.database_name}",
                              "role_arn": "${aws_iam_role.example.arn}"
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "connector_type": "Redshift",
                  "name": "example_profile"
                }
              references:
                connector_profile_config.connector_profile_credentials.redshift.password: aws_redshift_cluster.example.master_password
                connector_profile_config.connector_profile_credentials.redshift.username: aws_redshift_cluster.example.master_username
                connector_profile_config.connector_profile_properties.redshift.bucket_name: aws_s3_bucket.example.name
                connector_profile_config.connector_profile_properties.redshift.role_arn: aws_iam_role.example.arn
              dependencies:
                aws_iam_role.example: |-
                    {
                      "assume_role_policy": "${jsonencode({\n    Version = \"2012-10-17\"\n    Statement = [\n      {\n        Action = \"sts:AssumeRole\"\n        Effect = \"Allow\"\n        Sid    = \"\"\n        Principal = {\n          Service = \"ec2.amazonaws.com\"\n        }\n      },\n    ]\n  })}",
                      "managed_policy_arns": [
                        "${data.aws_iam_policy.test.arn}"
                      ],
                      "name": "example_role"
                    }
                aws_redshift_cluster.example: |-
                    {
                      "cluster_identifier": "example_cluster",
                      "cluster_type": "single-node",
                      "database_name": "example_db",
                      "master_password": "examplePassword123!",
                      "master_username": "exampleuser",
                      "node_type": "dc1.large"
                    }
                aws_s3_bucket.example: |-
                    {
                      "bucket": "example_bucket"
                    }
        argumentDocs:
            access_key_id: (Required) - The Access Key portion of the credentials.
            access_token: (Optional) - The access token used to access the connector on your behalf.
            account_name: (Optional) - The name of the account.
            amplitude: (Optional) - The connector-specific credentials required when using Amplitude. See Amplitude Connector Profile Credentials for more details.
            api_key: (Required) - A unique alphanumeric identifier used to authenticate a user, developer, or calling program to your API.
            api_secret_key: (Optional) - The API secret key required for API key authentication.
            api_token: (Required) - The API tokens used by Dynatrace API to authenticate various API calls.
            application_host_url: (Required) - The location of the SAPOData resource.
            application_key: (Required) - Application keys, in conjunction with your API key, give you full access to Datadog’s programmatic API. Application keys are associated with the user account that created them. The application key is used to log all requests made to the API.
            application_service_path: (Required) - The application path to catalog service.
            arn: '- The Amazon Resource Name (ARN) of the connector profile.'
            auth_code: (Optional) - The code provided by the connector when it has been authenticated via the connected app.
            auth_code_url: (Required) - The authorization code url required to redirect to SAP Login Page to fetch authorization code for OAuth type authentication.
            authentication_type: '(Required) - The authentication type that the custom connector uses for authenticating while creating a connector profile. One of: APIKEY, BASIC, CUSTOM, OAUTH2.'
            basic: (Optional) - The basic credentials that are required for the authentication of the user.
            basic_auth_credentials: (Optional) - The SAPOData basic authentication credentials.
            bucket_name: (Required) - A name for the associated Amazon S3 bucket.
            bucket_prefix: (Optional) - The object key for the destination bucket in which Amazon AppFlow places the files.
            client_credentials_arn: (Optional) - The secret manager ARN, which contains the client ID and client secret of the connected app.
            client_id: (Optional) - The identifier for the desired client.
            client_number: (Required) - The client number for the client creating the connection.
            client_secret: (Optional) - The client secret used by the OAuth client to authenticate to the authorization server.
            connection_mode: '(Required) - Indicates the connection mode and specifies whether it is public or private. Private flows use AWS PrivateLink to route data over AWS infrastructure without exposing it to the public internet. One of: Public, Private.'
            connector_label: (Optional) - The label of the connector. The label is unique for each ConnectorRegistration in your AWS account. Only needed if calling for CustomConnector connector type.
            connector_profile_config: (Required) - Defines the connector-specific configuration and credentials. See Connector Profile Config for more details.
            connector_profile_credentials: (Required) - The connector-specific credentials required by each connector. See Connector Profile Credentials for more details.
            connector_profile_properties: (Required) - The connector-specific properties of the profile configuration. See Connector Profile Properties for more details.
            connector_type: '(Required) - The type of connector. One of: Amplitude, CustomConnector, CustomerProfiles, Datadog, Dynatrace, EventBridge, Googleanalytics, Honeycode, Infornexus, LookoutMetrics, Marketo, Redshift, S3, Salesforce, SAPOData, Servicenow, Singular, Slack, Snowflake, Trendmicro, Upsolver, Veeva, Zendesk.'
            credentials_arn: '- The Amazon Resource Name (ARN) of the connector profile credentials.'
            credentials_map: (Optional) - A map that holds custom authentication credentials.
            custom: (Optional) - If the connector uses the custom authentication mechanism, this holds the required credentials.
            custom_authentication_type: (Required) - The custom authentication type that the connector uses.
            custom_connector: (Optional) - The connector-specific profile credentials required when using the custom connector. See Custom Connector Profile Credentials for more details.
            database_url: (Required) - The JDBC URL of the Amazon Redshift cluster.
            datadog: (Optional) - The connector-specific credentials required when using Datadog. See Datadog Connector Profile Credentials for more details.
            datakey: (Required) - The encryption keys used to encrypt data.
            dynatrace: (Optional) - The connector-specific credentials required when using Dynatrace. See Dynatrace Connector Profile Credentials for more details.
            google_analytics: (Optional) - The connector-specific credentials required when using Google Analytics. See Google Analytics Connector Profile Credentials for more details.
            honeycode: (Optional) - The connector-specific credentials required when using Amazon Honeycode. See Honeycode Connector Profile Credentials for more details.
            infor_nexus: (Optional) - The connector-specific credentials required when using Infor Nexus. See Infor Nexus Connector Profile Credentials for more details.
            instance_url: (Required) - The location of the Datadog resource.
            is_sandbox_environment: (Optional) - Indicates whether the connector profile applies to a sandbox or production environment.
            kms_arn: (Optional) - The ARN (Amazon Resource Name) of the Key Management Service (KMS) key you provide for encryption. This is required if you do not want to use the Amazon AppFlow-managed KMS key. If you don't provide anything here, Amazon AppFlow uses the Amazon AppFlow-managed KMS key.
            logon_language: (Optional) - The logon language of SAPOData instance.
            marketo: (Optional) - The connector-specific credentials required when using Marketo. See Marketo Connector Profile Credentials for more details.
            'name ': (Required) - The name of the connector profile. The name is unique for each ConnectorProfile in your AWS account.
            oauth_credentials: (Optional) - The SAPOData OAuth type authentication credentials.
            oauth_properties: (Optional) - The SAPOData OAuth properties required for OAuth type authentication.
            oauth_request: (Optional) - Used by select connectors for which the OAuth workflow is supported. See OAuth Request for more details.
            oauth_scopes: (Required) - The OAuth scopes required for OAuth type authentication.
            oauth2: (Optional) - The OAuth 2.0 credentials required for the authentication of the user.
            oauth2_grant_type: '(Required) - The OAuth 2.0 grant type used by connector for OAuth 2.0 authentication. One of: AUTHORIZATION_CODE, CLIENT_CREDENTIALS.'
            oauth2_properties: (Optional) - The OAuth 2.0 properties required for OAuth 2.0 authentication.
            password: (Required) - The password to use to connect to a resource.
            port_number: (Required) - The port number of the SAPOData instance.
            private_link_service_name: (Optional) - The SAPOData Private Link service name to be used for private data transfers.
            profile_properties: (Optional) - A map of properties that are required to create a profile for the custom connector.
            redirect_uri: (Optional) - The URL to which the authentication server redirects the browser after authorization has been granted.
            redshift: (Optional) - The connector-specific credentials required when using Amazon Redshift. See Redshift Connector Profile Credentials for more details.
            refresh_token: (Optional) - The refresh token used to refresh an expired access token.
            region: (Optional) - The AWS Region of the Snowflake account.
            role_arn: (Required) - The Amazon Resource Name (ARN) of the IAM role.
            salesforce: (Optional) - The connector-specific credentials required when using Salesforce. See Salesforce Connector Profile Credentials for more details.
            sapo_data: (Optional) - The connector-specific credentials required when using SAPOData. See SAPOData Connector Profile Credentials for more details.
            secret_access_key: (Required) - The secret key used to sign requests.
            secret_key: (Required) - The Secret Access Key portion of the credentials.
            service_now: (Optional) - The connector-specific credentials required when using ServiceNow. See ServiceNow Connector Profile Credentials for more details.
            singular: (Optional) - The connector-specific credentials required when using Singular. See Singular Connector Profile Credentials for more details.
            slack: (Optional) - The connector-specific credentials required when using Slack. See Slack Connector Profile Credentials for more details.
            snowflake: (Optional) - The connector-specific credentials required when using Snowflake. See Snowflake Connector Profile Credentials for more details.
            stage: '(Required) - The name of the Amazon S3 stage that was created while setting up an Amazon S3 stage in the Snowflake account. This is written in the following format: <Database>.<Schema>.<Stage Name>.'
            token_url: (Required) - The token URL required for OAuth 2.0 authentication.
            token_url_custom_properties: (Optional) - Associates your token URL with a map of properties that you define. Use this parameter to provide any additional details that the connector requires to authenticate your request.
            trendmicro: (Optional) - The connector-specific credentials required when using Trend Micro. See Trend Micro Connector Profile Credentials for more details.
            user_id: (Required) - The identifier for the user.
            username: (Required) - The username to use to connect to a resource.
            veeva: (Optional) - The connector-specific credentials required when using Veeva. See Veeva Connector Profile Credentials for more details.
            warehouse: (Required) - The name of the Snowflake warehouse.
            zendesk: (Optional) - The connector-specific credentials required when using Zendesk. See Zendesk Connector Profile Credentials for more details.
        importStatements: []
    aws_appflow_flow:
        subCategory: AppFlow
        description: Provides an AppFlow Flow resource.
        name: aws_appflow_flow
        title: aws_appflow_flow
        examples:
            - name: example
              manifest: |-
                {
                  "destination_flow_config": [
                    {
                      "connector_type": "S3",
                      "destination_connector_properties": [
                        {
                          "s3": [
                            {
                              "bucket_name": "${aws_s3_bucket_policy.example_destination.bucket}",
                              "s3_output_format_config": [
                                {
                                  "prefix_config": [
                                    {
                                      "prefix_type": "PATH"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "name": "example",
                  "source_flow_config": [
                    {
                      "connector_type": "S3",
                      "source_connector_properties": [
                        {
                          "s3": [
                            {
                              "bucket_name": "${aws_s3_bucket_policy.example_source.bucket}",
                              "bucket_prefix": "example"
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "task": [
                    {
                      "connector_operator": [
                        {
                          "s3": "NO_OP"
                        }
                      ],
                      "destination_field": "exampleField",
                      "source_fields": [
                        "exampleField"
                      ],
                      "task_type": "Map"
                    }
                  ],
                  "trigger_config": [
                    {
                      "trigger_type": "OnDemand"
                    }
                  ]
                }
              references:
                destination_flow_config.destination_connector_properties.s3.bucket_name: aws_s3_bucket_policy.example_destination.bucket
                source_flow_config.source_connector_properties.s3.bucket_name: aws_s3_bucket_policy.example_source.bucket
              dependencies:
                aws_s3_bucket.example_destination: |-
                    {
                      "bucket": "example_destination"
                    }
                aws_s3_bucket.example_source: |-
                    {
                      "bucket": "example_source"
                    }
                aws_s3_bucket_policy.example_destination: |-
                    {
                      "bucket": "${aws_s3_bucket.example_destination.id}",
                      "policy": "\n{\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Sid\": \"AllowAppFlowDestinationActions\",\n            \"Principal\": {\n                \"Service\": \"appflow.amazonaws.com\"\n            },\n            \"Action\": [\n                \"s3:PutObject\",\n                \"s3:AbortMultipartUpload\",\n                \"s3:ListMultipartUploadParts\",\n                \"s3:ListBucketMultipartUploads\",\n                \"s3:GetBucketAcl\",\n                \"s3:PutObjectAcl\"\n            ],\n            \"Resource\": [\n                \"arn:aws:s3:::example_destination\",\n                \"arn:aws:s3:::example_destination/*\"\n            ]\n        }\n    ],\n\t\"Version\": \"2012-10-17\"\n}\n"
                    }
                aws_s3_bucket_policy.example_source: |-
                    {
                      "bucket": "${aws_s3_bucket.example_source.id}",
                      "policy": "{\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Sid\": \"AllowAppFlowSourceActions\",\n            \"Principal\": {\n                \"Service\": \"appflow.amazonaws.com\"\n            },\n            \"Action\": [\n                \"s3:ListBucket\",\n                \"s3:GetObject\"\n            ],\n            \"Resource\": [\n                \"arn:aws:s3:::example_source\",\n                \"arn:aws:s3:::example_source/*\"\n            ]\n        }\n    ],\n\t\"Version\": \"2012-10-17\"\n}\n"
                    }
                aws_s3_object.example: |-
                    {
                      "bucket": "${aws_s3_bucket.example_source.id}",
                      "key": "example_source.csv",
                      "source": "example_source.csv"
                    }
            - name: example
              manifest: |-
                {
                  "trigger_config": [
                    {
                      "scheduled": [
                        {
                          "schedule_expression": "rate(1minutes)"
                        }
                      ]
                    }
                  ]
                }
        argumentDocs:
            aggregation_config: '- (Optional) The aggregation settings that you can use to customize the output format of your flow data. See Aggregation Config for more details.'
            aggregation_type: '- (Optional) Specifies whether Amazon AppFlow aggregates the flow records into a single file, or leave them unaggregated. Valid values are None and SingleFile.'
            amplitude: '- (Optional) Specifies the information that is required for querying Amplitude. See Generic Source Properties for more details.'
            api_version: '- (Optional) The API version that the destination connector uses.'
            arn: '- The flow''s Amazon Resource Name (ARN).'
            bucket_name: '- (Required) The Amazon S3 bucket name in which Amazon AppFlow places the transferred data.'
            bucket_prefix: '- (Optional) The object key for the bucket in which Amazon AppFlow places the destination files.'
            connector_operator: '- (Optional) The operation to be performed on the provided source fields. See Connector Operator for details.'
            connector_profile_name: '- (Optional) The name of the connector profile. This name must be unique for each connector profile in the AWS account.'
            connector_type: '- (Required) The type of connector, such as Salesforce, Amplitude, and so on. Valid values are Salesforce, Singular, Slack, Redshift, S3, Marketo, Googleanalytics, Zendesk, Servicenow, Datadog, Trendmicro, Snowflake, Dynatrace, Infornexus, Amplitude, Veeva, EventBridge, LookoutMetrics, Upsolver, Honeycode, CustomerProfiles, SAPOData, and CustomConnector.'
            custom_connector: '- (Optional) The properties that are required to query the custom Connector. See Custom Connector Destination Properties for more details.'
            custom_properties: '- (Optional) The custom properties that are specific to the connector when it''s used as a destination in the flow. Maximum of 50 items.'
            customer_profiles: '- (Optional) The properties that are required to query Amazon Connect Customer Profiles. See Customer Profiles Destination Properties for more details.'
            datadog: '- (Optional) Specifies the information that is required for querying Datadog. See Generic Source Properties for more details.'
            datetime_type_field_name: '- (Optional) A field that specifies the date time or timestamp field as the criteria to use when importing incremental records from the source.'
            description: '- (Optional) A description of the flow you want to create.'
            destination_connector_properties: '- (Required) This stores the information that is required to query a particular connector. See Destination Connector Properties for more information.'
            destination_field: '- (Optional) A field in a destination connector, or a field value against which Amazon AppFlow validates a source field.'
            destination_flow_config: '- (Required) A Destination Flow Config that controls how Amazon AppFlow places data in the destination connector.'
            document_type: '- (Optional) The document type specified in the Veeva document extract flow.'
            domain_name: '- (Required) The unique name of the Amazon Connect Customer Profiles domain.'
            dynatrace: '- (Optional) The operation to be performed on the provided Dynatrace source fields. Valid values are PROJECTION, BETWEEN, EQUAL_TO, ADDITION, MULTIPLICATION, DIVISION, SUBTRACTION, MASK_ALL, MASK_FIRST_N, MASK_LAST_N, VALIDATE_NON_NULL, VALIDATE_NON_ZERO, VALIDATE_NON_NEGATIVE, VALIDATE_NUMERIC, and NO_OP.'
            dynratrace: '- (Optional) Specifies the information that is required for querying Dynatrace. See Generic Source Properties for more details.'
            enable_dynamic_field_update: '- (Optional, boolean) The flag that enables dynamic fetching of new (recently added) fields in the Salesforce objects while running a flow.'
            entity_name: '- (Required) The entity specified in the custom connector as a destination in the flow.'
            error_handling_config: '- (Optional) The settings that determine how Amazon AppFlow handles an error when placing data in the destination. See Error Handling Config for more details.'
            event_bridge: '- (Optional) The properties that are required to query Amazon EventBridge. See Generic Destination Properties for more details.'
            fail_on_first_destination_error: '- (Optional, boolean) Specifies if the flow should fail after the first instance of a failure when attempting to place data in the destination.'
            file_type: '- (Optional) Indicates the file type that Amazon AppFlow places in the Amazon S3 bucket. Valid values are CSV, JSON, and PARQUET.'
            google_analytics: '- (Optional) The operation to be performed on the provided Google Analytics source fields. Valid values are PROJECTION and BETWEEN.'
            honeycode: '- (Optional) The properties that are required to query Amazon Honeycode. See Generic Destination Properties for more details.'
            id_field_names: '- (Optional) The name of the field that Amazon AppFlow uses as an ID when performing a write operation such as update, delete, or upsert.'
            include_all_versions: '- (Optional, boolean) Boolean value to include All Versions of files in Veeva document extract flow.'
            include_deleted_records: '- (Optional, boolean) Indicates whether Amazon AppFlow includes deleted files in the flow run.'
            include_renditions: '- (Optional, boolean) Boolean value to include file renditions in Veeva document extract flow.'
            include_source_files: '- (Optional, boolean) Boolean value to include source files in Veeva document extract flow.'
            incremental_pull_config: '- (Optional) Defines the configuration for a scheduled incremental data pull. If a valid configuration is provided, the fields specified in the configuration are used when querying for the incremental data pull. See Incremental Pull Config for more details.'
            infor_nexus: '- (Optional) Specifies the information that is required for querying Infor Nexus. See Generic Source Properties for more details.'
            intermediate_bucket_name: '- (Required) The intermediate bucket that Amazon AppFlow uses when moving data into Amazon Redshift.'
            kms_arn: '- (Optional) The ARN (Amazon Resource Name) of the Key Management Service (KMS) key you provide for encryption. This is required if you do not want to use the Amazon AppFlow-managed KMS key. If you don''t provide anything here, Amazon AppFlow uses the Amazon AppFlow-managed KMS key.'
            marketo: '- (Optional) The properties that are required to query Marketo. See Generic Destination Properties for more details.'
            name: '- (Required) The name of the flow.'
            object: '- (Required) The object specified in the flow destination.'
            object_path: '- (Required) The object path specified in the SAPOData flow destination.'
            object_type_name: '- (Optional) The object specified in the Amazon Connect Customer Profiles flow destination.'
            prefix_config: '- (Optional) Determines the prefix that Amazon AppFlow applies to the folder name in the Amazon S3 bucket. You can name folders according to the flow frequency and date. See Prefix Config for more details.'
            prefix_format: '- (Optional) Determines the level of granularity that''s included in the prefix. Valid values are YEAR, MONTH, DAY, HOUR, and MINUTE.'
            prefix_type: '- (Optional) Determines the format of the prefix, and whether it applies to the file name, file path, or both. Valid values are FILENAME, PATH, and PATH_AND_FILENAME.'
            redshift: '- (Optional) The properties that are required to query Amazon Redshift. See Redshift Destination Properties for more details.'
            s3: '- (Optional) The properties that are required to query Amazon S3. See S3 Destination Properties for more details.'
            s3_input_file_type: '- (Optional) The file type that Amazon AppFlow gets from your Amazon S3 bucket. Valid values are CSV and JSON.'
            s3_input_format_config: '- (Optional) When you use Amazon S3 as the source, the configuration format that you provide the flow input data. See S3 Input Format Config for details.'
            s3_output_format_config: '- (Optional) The configuration that determines how Amazon AppFlow should format the flow output data when Amazon S3 is used as the destination. See S3 Output Format Config for more details.'
            salesforce: '- (Optional) The properties that are required to query Salesforce. See Salesforce Destination Properties for more details.'
            sapo_data: '- (Optional) The properties that are required to query SAPOData. See SAPOData Destination Properties for more details.'
            service_now: '- (Optional) Specifies the information that is required for querying ServiceNow. See Generic Source Properties for more details.'
            singular: '- (Optional) Specifies the information that is required for querying Singular. See Generic Source Properties for more details.'
            slack: '- (Optional) Specifies the information that is required for querying Slack. See Generic Source Properties for more details.'
            snowflake: '- (Optional) The properties that are required to query Snowflake. See Snowflake Destination Properties for more details.'
            source_connector_properties: '- (Required) Specifies the information that is required to query a particular source connector. See Source Connector Properties for details.'
            source_fields: '- (Required) The source fields to which a particular task is applied.'
            source_flow_config: '- (Required) The Source Flow Config that controls how Amazon AppFlow retrieves data from the source connector.'
            success_response_handling_config: '- (Optional) Determines how Amazon AppFlow handles the success response that it gets from the connector after placing data. See Success Response Handling Config for more details.'
            tags: '- (Optional) Key-value mapping of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            task: '- (Required) A Task that Amazon AppFlow performs while transferring the data in the flow run.'
            task_properties: '- (Optional) A map used to store task-related information. The execution service looks for particular information based on the TaskType. Valid keys are VALUE, VALUES, DATA_TYPE, UPPER_BOUND, LOWER_BOUND, SOURCE_DATA_TYPE, DESTINATION_DATA_TYPE, VALIDATION_ACTION, MASK_VALUE, MASK_LENGTH, TRUNCATE_LENGTH, MATH_OPERATION_FIELDS_ORDER, CONCAT_FORMAT, SUBFIELD_CATEGORY_MAP, and EXCLUDE_SOURCE_FIELDS_LIST.'
            task_type: '- (Required) Specifies the particular task implementation that Amazon AppFlow performs. Valid values are Arithmetic, Filter, Map, Map_all, Mask, Merge, Passthrough, Truncate, and Validate.'
            trend_micro: '- (Optional) Specifies the information that is required for querying Trend Micro. See Generic Source Properties for more details.'
            trendmicro: '- (Optional) The operation to be performed on the provided Trend Micro source fields. Valid values are PROJECTION, EQUAL_TO, ADDITION, MULTIPLICATION, DIVISION, SUBTRACTION, MASK_ALL, MASK_FIRST_N, MASK_LAST_N, VALIDATE_NON_NULL, VALIDATE_NON_ZERO, VALIDATE_NON_NEGATIVE, VALIDATE_NUMERIC, and NO_OP.'
            trigger_config: '- (Required) A Trigger that determine how and when the flow runs.'
            trigger_properties: '- (Optional) Specifies the configuration details of a schedule-triggered flow as defined by the user. Currently, these settings only apply to the Scheduled trigger type. See Scheduled Trigger Properties for details.'
            trigger_properties.data_pull_mode: '- (Optional) Specifies whether a scheduled flow has an incremental data transfer or a complete data transfer for each flow run. Valid values are Incremental and Complete.'
            trigger_properties.first_execution_from: '- (Optional) Specifies the date range for the records to import from the connector in the first flow run. Must be a valid RFC3339 timestamp.'
            trigger_properties.schedule_end_time: '- (Optional) Specifies the scheduled end time for a schedule-triggered flow. Must be a valid RFC3339 timestamp.'
            trigger_properties.schedule_expression: '- (Required) The scheduling expression that determines the rate at which the schedule will run, for example rate(5minutes).'
            trigger_properties.schedule_offset: '- (Optional) Specifies the optional offset that is added to the time interval for a schedule-triggered flow. Maximum value of 36000.'
            trigger_properties.schedule_start_time: '- (Optional) Specifies the scheduled start time for a schedule-triggered flow. Must be a valid RFC3339 timestamp.'
            trigger_properties.timezone: '- (Optional) Specifies the time zone used when referring to the date and time of a scheduled-triggered flow, such as America/New_York.'
            trigger_type: '- (Required) Specifies the type of flow trigger. Valid values are Scheduled, Event, and OnDemand.'
            upsolver: '- (Optional) The properties that are required to query Upsolver. See Upsolver Destination Properties for more details.'
            veeva: '- (Optional) Specifies the information that is required for querying Veeva. See Veeva Source Properties for more details.'
            write_operation: '- (Optional) The possible write operations in the destination connector. When this value is not provided, this defaults to the INSERT operation. Valid values are INSERT, UPSERT, UPDATE, and DELETE.'
            write_operation_type: '- (Optional) Specifies the type of write operation to be performed in the custom connector when it''s used as destination. Valid values are INSERT, UPSERT, UPDATE, and DELETE.'
            zendesk: '- (Optional) The properties that are required to query Zendesk. See Zendesk Destination Properties for more details.'
        importStatements: []
    aws_appintegrations_event_integration:
        subCategory: AppIntegrations
        description: Provides details about a specific Amazon AppIntegrations Event Integration
        name: aws_appintegrations_event_integration
        title: aws_appintegrations_event_integration
        examples:
            - name: example
              manifest: |-
                {
                  "description": "Example Description",
                  "event_filter": [
                    {
                      "source": "aws.partner/examplepartner.com"
                    }
                  ],
                  "eventbridge_bus": "default",
                  "name": "example-name",
                  "tags": {
                    "Name": "Example Event Integration"
                  }
                }
        argumentDocs:
            arn: '- The Amazon Resource Name (ARN) of the Event Integration.'
            description: '- (Optional) Specifies the description of the Event Integration.'
            event_filter: '- (Required) A block that defines the configuration information for the event filter. The Event Filter block is documented below.'
            event_filter.source: '- (Required) The source of the events.'
            eventbridge_bus: '- (Required) Specifies the EventBridge bus.'
            id: '- The identifier of the Event Integration which is the name of the Event Integration.'
            name: '- (Required) Specifies the name of the Event Integration.'
            tags: '- (Optional) Tags to apply to the Event Integration. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_applicationinsights_application:
        subCategory: CloudWatch Application Insights
        description: Provides a CloudWatch Application Insights Application resource
        name: aws_applicationinsights_application
        title: aws_applicationinsights_application
        examples:
            - name: example
              manifest: |-
                {
                  "resource_group_name": "${aws_resourcegroups_group.example.name}"
                }
              references:
                resource_group_name: aws_resourcegroups_group.example.name
              dependencies:
                aws_resourcegroups_group.example: |-
                    {
                      "name": "example",
                      "resource_query": [
                        {
                          "query": "\t{\n\t\t\"ResourceTypeFilters\": [\n\t\t  \"AWS::EC2::Instance\"\n\t\t],\n\t\t\"TagFilters\": [\n\t\t  {\n\t\t\t\"Key\": \"Stage\",\n\t\t\t\"Values\": [\n\t\t\t  \"Test\"\n\t\t\t]\n\t\t  }\n\t\t]\n\t  }\n"
                        }
                      ]
                    }
        argumentDocs:
            arn: '- Amazon Resource Name (ARN) of the Application.'
            auto_config_enabled: '- (Optional)  Indicates whether Application Insights automatically configures unmonitored resources in the resource group.'
            auto_create: '- (Optional) Configures all of the resources in the resource group by applying the recommended configurations.'
            cwe_monitor_enabled: '- (Optional)  Indicates whether Application Insights can listen to CloudWatch events for the application resources, such as instance terminated, failed deployment, and others.'
            grouping_type: '- (Optional) Application Insights can create applications based on a resource group or on an account. To create an account-based application using all of the resources in the account, set this parameter to ACCOUNT_BASED.'
            id: '- The name of the resource group.'
            ops_center_enabled: '- (Optional) When set to true, creates opsItems for any problems detected on an application.'
            ops_item_sns_topic_arn: '- (Optional) The SNS topic provided to Application Insights that is associated to the created opsItem. Allows you to receive notifications for updates to the opsItem.'
            resource_group_name: '- (Required) The name of the resource group.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_appmesh_gateway_route:
        subCategory: App Mesh
        description: Provides an AWS App Mesh gateway route resource.
        name: aws_appmesh_gateway_route
        title: aws_appmesh_gateway_route
        examples:
            - name: example
              manifest: |-
                {
                  "mesh_name": "example-service-mesh",
                  "name": "example-gateway-route",
                  "spec": [
                    {
                      "http_route": [
                        {
                          "action": [
                            {
                              "target": [
                                {
                                  "virtual_service": [
                                    {
                                      "virtual_service_name": "${aws_appmesh_virtual_service.example.name}"
                                    }
                                  ]
                                }
                              ]
                            }
                          ],
                          "match": [
                            {
                              "prefix": "/"
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "tags": {
                    "Environment": "test"
                  },
                  "virtual_gateway_name": "${aws_appmesh_virtual_gateway.example.name}"
                }
              references:
                spec.http_route.action.target.virtual_service.virtual_service_name: aws_appmesh_virtual_service.example.name
                virtual_gateway_name: aws_appmesh_virtual_gateway.example.name
        argumentDocs:
            action: '- (Required) The action to take if a match is determined.'
            arn: '- The ARN of the gateway route.'
            created_date: '- The creation date of the gateway route.'
            grpc_route: '- (Optional) The specification of a gRPC gateway route.'
            http_route: '- (Optional) The specification of an HTTP gateway route.'
            http2_route: '- (Optional) The specification of an HTTP/2 gateway route.'
            id: '- The ID of the gateway route.'
            last_updated_date: '- The last update date of the gateway route.'
            match: '- (Required) The criteria for determining a request match.'
            mesh_name: '- (Required) The name of the service mesh in which to create the gateway route. Must be between 1 and 255 characters in length.'
            mesh_owner: '- (Optional) The AWS account ID of the service mesh''s owner. Defaults to the account ID the AWS provider is currently connected to.'
            name: '- (Required) The name to use for the gateway route. Must be between 1 and 255 characters in length.'
            prefix: '- (Required) Specifies the path to match requests with. This parameter must always start with /, which by itself matches all requests to the virtual service name.'
            resource_owner: '- The resource owner''s AWS account ID.'
            service_name: '- (Required) The fully qualified domain name for the service to match from the request.'
            spec: '- (Required) The gateway route specification to apply.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            target: '- (Required) The target that traffic is routed to when a request matches the gateway route.'
            virtual_gateway_name: '- (Required) The name of the virtual gateway to associate the gateway route with. Must be between 1 and 255 characters in length.'
            virtual_service: '- (Required) The virtual service gateway route target.'
            virtual_service_name: '- (Required) The name of the virtual service that traffic is routed to. Must be between 1 and 255 characters in length.'
        importStatements: []
    aws_appmesh_mesh:
        subCategory: App Mesh
        description: Provides an AWS App Mesh service mesh resource.
        name: aws_appmesh_mesh
        title: aws_appmesh_mesh
        examples:
            - name: simple
              manifest: |-
                {
                  "name": "simpleapp"
                }
            - name: simple
              manifest: |-
                {
                  "name": "simpleapp",
                  "spec": [
                    {
                      "egress_filter": [
                        {
                          "type": "ALLOW_ALL"
                        }
                      ]
                    }
                  ]
                }
        argumentDocs:
            arn: '- The ARN of the service mesh.'
            created_date: '- The creation date of the service mesh.'
            egress_filter: '- (Optional) The egress filter rules for the service mesh.'
            id: '- The ID of the service mesh.'
            last_updated_date: '- The last update date of the service mesh.'
            mesh_owner: '- The AWS account ID of the service mesh''s owner.'
            name: '- (Required) The name to use for the service mesh. Must be between 1 and 255 characters in length.'
            resource_owner: '- The resource owner''s AWS account ID.'
            spec: '- (Optional) The service mesh specification to apply.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            type: |-
                - (Optional) The egress filter type. By default, the type is DROP_ALL.
                Valid values are ALLOW_ALL and DROP_ALL.
        importStatements: []
    aws_appmesh_route:
        subCategory: App Mesh
        description: Provides an AWS App Mesh route resource.
        name: aws_appmesh_route
        title: aws_appmesh_route
        examples:
            - name: serviceb
              manifest: |-
                {
                  "mesh_name": "${aws_appmesh_mesh.simple.id}",
                  "name": "serviceB-route",
                  "spec": [
                    {
                      "http_route": [
                        {
                          "action": [
                            {
                              "weighted_target": [
                                {
                                  "virtual_node": "${aws_appmesh_virtual_node.serviceb1.name}",
                                  "weight": 90
                                },
                                {
                                  "virtual_node": "${aws_appmesh_virtual_node.serviceb2.name}",
                                  "weight": 10
                                }
                              ]
                            }
                          ],
                          "match": [
                            {
                              "prefix": "/"
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "virtual_router_name": "${aws_appmesh_virtual_router.serviceb.name}"
                }
              references:
                mesh_name: aws_appmesh_mesh.simple.id
                spec.http_route.action.weighted_target.virtual_node: aws_appmesh_virtual_node.serviceb2.name
                virtual_router_name: aws_appmesh_virtual_router.serviceb.name
            - name: serviceb
              manifest: |-
                {
                  "mesh_name": "${aws_appmesh_mesh.simple.id}",
                  "name": "serviceB-route",
                  "spec": [
                    {
                      "http_route": [
                        {
                          "action": [
                            {
                              "weighted_target": [
                                {
                                  "virtual_node": "${aws_appmesh_virtual_node.serviceb.name}",
                                  "weight": 100
                                }
                              ]
                            }
                          ],
                          "match": [
                            {
                              "header": [
                                {
                                  "match": [
                                    {
                                      "prefix": "123"
                                    }
                                  ],
                                  "name": "clientRequestId"
                                }
                              ],
                              "method": "POST",
                              "prefix": "/",
                              "scheme": "https"
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "virtual_router_name": "${aws_appmesh_virtual_router.serviceb.name}"
                }
              references:
                mesh_name: aws_appmesh_mesh.simple.id
                spec.http_route.action.weighted_target.virtual_node: aws_appmesh_virtual_node.serviceb.name
                virtual_router_name: aws_appmesh_virtual_router.serviceb.name
            - name: serviceb
              manifest: |-
                {
                  "mesh_name": "${aws_appmesh_mesh.simple.id}",
                  "name": "serviceB-route",
                  "spec": [
                    {
                      "http_route": [
                        {
                          "action": [
                            {
                              "weighted_target": [
                                {
                                  "virtual_node": "${aws_appmesh_virtual_node.serviceb.name}",
                                  "weight": 100
                                }
                              ]
                            }
                          ],
                          "match": [
                            {
                              "prefix": "/"
                            }
                          ],
                          "retry_policy": [
                            {
                              "http_retry_events": [
                                "server-error"
                              ],
                              "max_retries": 1,
                              "per_retry_timeout": [
                                {
                                  "unit": "s",
                                  "value": 15
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "virtual_router_name": "${aws_appmesh_virtual_router.serviceb.name}"
                }
              references:
                mesh_name: aws_appmesh_mesh.simple.id
                spec.http_route.action.weighted_target.virtual_node: aws_appmesh_virtual_node.serviceb.name
                virtual_router_name: aws_appmesh_virtual_router.serviceb.name
            - name: serviceb
              manifest: |-
                {
                  "mesh_name": "${aws_appmesh_mesh.simple.id}",
                  "name": "serviceB-route",
                  "spec": [
                    {
                      "tcp_route": [
                        {
                          "action": [
                            {
                              "weighted_target": [
                                {
                                  "virtual_node": "${aws_appmesh_virtual_node.serviceb1.name}",
                                  "weight": 100
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "virtual_router_name": "${aws_appmesh_virtual_router.serviceb.name}"
                }
              references:
                mesh_name: aws_appmesh_mesh.simple.id
                spec.tcp_route.action.weighted_target.virtual_node: aws_appmesh_virtual_node.serviceb1.name
                virtual_router_name: aws_appmesh_virtual_router.serviceb.name
        argumentDocs:
            action: '- (Required) The action to take if a match is determined.'
            arn: '- The ARN of the route.'
            created_date: '- The creation date of the route.'
            end: '- (Required) The end of the range.'
            exact: '- (Optional) The value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.'
            grpc_retry_events: |-
                - (Optional) List of gRPC retry events.
                Valid values: cancelled, deadline-exceeded, internal, resource-exhausted, unavailable.
            grpc_route: '- (Optional) The gRPC routing information for the route.'
            header: '- (Optional) The client request headers to match on.'
            http_retry_events: |-
                - (Optional) List of HTTP retry events.
                Valid values: client-error (HTTP status code 409), gateway-error (HTTP status codes 502, 503, and 504), server-error (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), stream-error (retry on refused stream).
            http_route: '- (Optional) The HTTP routing information for the route.'
            http2_route: '- (Optional) The HTTP/2 routing information for the route.'
            id: '- The ID of the route.'
            idle: '- (Optional) The idle timeout. An idle timeout bounds the amount of time that a connection may be idle.'
            invert: '- (Optional) If true, the match is on the opposite of the match criteria. Default is false.'
            last_updated_date: '- The last update date of the route.'
            match: '- (Required) The criteria for determining an gRPC request match.'
            max_retries: '- (Required) The maximum number of retries.'
            mesh_name: '- (Required) The name of the service mesh in which to create the route. Must be between 1 and 255 characters in length.'
            mesh_owner: '- (Optional) The AWS account ID of the service mesh''s owner. Defaults to the account ID the AWS provider is currently connected to.'
            metadata: '- (Optional) The data to match from the gRPC request.'
            method: '- (Optional) The client request header method to match on. Valid values: GET, HEAD, POST, PUT, DELETE, CONNECT, OPTIONS, TRACE, PATCH.'
            method_name: '- (Optional) The method name to match from the request. If you specify a name, you must also specify a service_name.'
            name: '- (Required) The name to use for the route. Must be between 1 and 255 characters in length.'
            per_request: '- (Optional) The per request timeout.'
            per_retry_timeout: '- (Required) The per-retry timeout.'
            prefix: '- (Optional) The value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.'
            priority: |-
                - (Optional) The priority for the route, between 0 and 1000.
                Routes are matched based on the specified value, where 0 is the highest priority.
            range: '- (Optional) The object that specifies the range of numbers that the value sent by the client must be included in.'
            regex: '- (Optional) The value sent by the client must include the specified characters. Must be between 1 and 255 characters in length.'
            resource_owner: '- The resource owner''s AWS account ID.'
            retry_policy: '- (Optional) The retry policy.'
            scheme: '- (Optional) The client request header scheme to match on. Valid values: http, https.'
            service_name: '- (Optional) The fully qualified domain name for the service to match from the request.'
            spec: '- (Required) The route specification to apply.'
            start: '- (Requited) The start of the range.'
            suffix: '- (Optional) The value sent by the client must end with the specified characters. Must be between 1 and 255 characters in length.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            tcp_retry_events: '- (Optional) List of TCP retry events. The only valid value is connection-error.'
            tcp_route: '- (Optional) The TCP routing information for the route.'
            timeout: '- (Optional) The types of timeouts.'
            unit: '- (Required) The unit of time. Valid values: ms, s.'
            value: '- (Required) The number of time units. Minimum value of 0.'
            virtual_node: '- (Required) The virtual node to associate with the weighted target. Must be between 1 and 255 characters in length.'
            virtual_router_name: '- (Required) The name of the virtual router in which to create the route. Must be between 1 and 255 characters in length.'
            weight: '- (Required) The relative weight of the weighted target. An integer between 0 and 100.'
            weighted_target: |-
                - (Required) The targets that traffic is routed to when a request matches the route.
                You can specify one or more targets and their relative weights with which to distribute traffic.
        importStatements: []
    aws_appmesh_virtual_gateway:
        subCategory: App Mesh
        description: Provides an AWS App Mesh virtual gateway resource.
        name: aws_appmesh_virtual_gateway
        title: aws_appmesh_virtual_gateway
        examples:
            - name: example
              manifest: |-
                {
                  "mesh_name": "example-service-mesh",
                  "name": "example-virtual-gateway",
                  "spec": [
                    {
                      "listener": [
                        {
                          "port_mapping": [
                            {
                              "port": 8080,
                              "protocol": "http"
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "tags": {
                    "Environment": "test"
                  }
                }
            - name: example
              manifest: |-
                {
                  "mesh_name": "example-service-mesh",
                  "name": "example-virtual-gateway",
                  "spec": [
                    {
                      "listener": [
                        {
                          "port_mapping": [
                            {
                              "port": 8080,
                              "protocol": "http"
                            }
                          ],
                          "tls": [
                            {
                              "certificate": [
                                {
                                  "acm": [
                                    {
                                      "certificate_arn": "${aws_acm_certificate.example.arn}"
                                    }
                                  ]
                                }
                              ],
                              "mode": "STRICT"
                            }
                          ]
                        }
                      ],
                      "logging": [
                        {
                          "access_log": [
                            {
                              "file": [
                                {
                                  "path": "/var/log/access.log"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              references:
                spec.listener.tls.certificate.acm.certificate_arn: aws_acm_certificate.example.arn
        argumentDocs:
            access_log: '- (Optional) The access log configuration for a virtual gateway.'
            acm: '- (Optional) The TLS validation context trust for an AWS Certificate Manager (ACM) certificate.'
            arn: '- The ARN of the virtual gateway.'
            backend_defaults: '- (Optional) The defaults for backends.'
            certificate: (Optional) The virtual gateway's client's Transport Layer Security (TLS) certificate.
            certificate_arn: '- (Required) The Amazon Resource Name (ARN) for the certificate.'
            certificate_authority_arns: '- (Required) One or more ACM Amazon Resource Name (ARN)s.'
            certificate_chain: '- (Required) The certificate chain for the certificate.'
            client_policy: '- (Optional) The default client policy for virtual gateway backends.'
            connection_pool: '- (Optional) The connection pool information for the listener.'
            created_date: '- The creation date of the virtual gateway.'
            enforce: '- (Optional) Whether the policy is enforced. Default is true.'
            exact: '- (Required) The values sent must match the specified values exactly.'
            file: '- (Optional) A local file certificate.'
            grpc: '- (Optional) Connection pool information for gRPC listeners.'
            health_check: '- (Optional) The health check information for the listener.'
            healthy_threshold: '- (Required) The number of consecutive successful health checks that must occur before declaring listener healthy.'
            http: '- (Optional) Connection pool information for HTTP listeners.'
            http2: '- (Optional) Connection pool information for HTTP2 listeners.'
            id: '- The ID of the virtual gateway.'
            interval_millis: '- (Required) The time period in milliseconds between each health check execution.'
            last_updated_date: '- The last update date of the virtual gateway.'
            listener: '- (Required) The listeners that the mesh endpoint is expected to receive inbound traffic from. You can specify one listener.'
            logging: '- (Optional) The inbound and outbound access logging information for the virtual gateway.'
            match: '- (Required) The criteria for determining a SAN''s match.'
            max_connections: '- (Required) Maximum number of outbound TCP connections Envoy can establish concurrently with all hosts in upstream cluster. Minimum value of 1.'
            max_pending_requests: '- (Optional) Number of overflowing requests after max_connections Envoy will queue to upstream cluster. Minimum value of 1.'
            max_requests: '- (Required) Maximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster. Minimum value of 1.'
            mesh_name: '- (Required) The name of the service mesh in which to create the virtual gateway. Must be between 1 and 255 characters in length.'
            mesh_owner: '- (Optional) The AWS account ID of the service mesh''s owner. Defaults to the account ID the AWS provider is currently connected to.'
            mode: '- (Required) The listener''s TLS mode. Valid values: DISABLED, PERMISSIVE, STRICT.'
            name: '- (Required) The name to use for the virtual gateway. Must be between 1 and 255 characters in length.'
            path: '- (Required) The file path to write access logs to. You can use /dev/stdout to send access logs to standard out. Must be between 1 and 255 characters in length.'
            port: '- (Required) The port used for the port mapping.'
            port_mapping: '- (Required) The port mapping information for the listener.'
            ports: '- (Optional) One or more ports that the policy is enforced for.'
            private_key: '- (Required) The private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on.'
            protocol: '- (Required) The protocol used for the port mapping. Valid values are http, http2, tcp and grpc.'
            resource_owner: '- The resource owner''s AWS account ID.'
            sds: '- (Optional) A Secret Discovery Service certificate.'
            secret_name: '- (Required) The name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.'
            spec: '- (Required) The virtual gateway specification to apply.'
            subject_alternative_names: '- (Optional) The SANs for a virtual gateway''s listener''s Transport Layer Security (TLS) validation context.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            timeout_millis: '- (Required) The amount of time to wait when receiving a response from the health check, in milliseconds.'
            tls: '- (Optional) The Transport Layer Security (TLS) client policy.'
            trust: '- (Required) The TLS validation context trust.'
            unhealthy_threshold: '- (Required) The number of consecutive failed health checks that must occur before declaring a virtual gateway unhealthy.'
            validation: '- (Required) The TLS validation context.'
        importStatements: []
    aws_appmesh_virtual_node:
        subCategory: App Mesh
        description: Provides an AWS App Mesh virtual node resource.
        name: aws_appmesh_virtual_node
        title: aws_appmesh_virtual_node
        examples:
            - name: serviceb1
              manifest: |-
                {
                  "mesh_name": "${aws_appmesh_mesh.simple.id}",
                  "name": "serviceBv1",
                  "spec": [
                    {
                      "backend": [
                        {
                          "virtual_service": [
                            {
                              "virtual_service_name": "servicea.simpleapp.local"
                            }
                          ]
                        }
                      ],
                      "listener": [
                        {
                          "port_mapping": [
                            {
                              "port": 8080,
                              "protocol": "http"
                            }
                          ]
                        }
                      ],
                      "service_discovery": [
                        {
                          "dns": [
                            {
                              "hostname": "serviceb.simpleapp.local"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              references:
                mesh_name: aws_appmesh_mesh.simple.id
            - name: serviceb1
              manifest: |-
                {
                  "mesh_name": "${aws_appmesh_mesh.simple.id}",
                  "name": "serviceBv1",
                  "spec": [
                    {
                      "backend": [
                        {
                          "virtual_service": [
                            {
                              "virtual_service_name": "servicea.simpleapp.local"
                            }
                          ]
                        }
                      ],
                      "listener": [
                        {
                          "port_mapping": [
                            {
                              "port": 8080,
                              "protocol": "http"
                            }
                          ]
                        }
                      ],
                      "service_discovery": [
                        {
                          "aws_cloud_map": [
                            {
                              "attributes": {
                                "stack": "blue"
                              },
                              "namespace_name": "${aws_service_discovery_http_namespace.example.name}",
                              "service_name": "serviceb1"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              references:
                mesh_name: aws_appmesh_mesh.simple.id
                spec.service_discovery.aws_cloud_map.namespace_name: aws_service_discovery_http_namespace.example.name
              dependencies:
                aws_service_discovery_http_namespace.example: |-
                    {
                      "name": "example-ns"
                    }
            - name: serviceb1
              manifest: |-
                {
                  "mesh_name": "${aws_appmesh_mesh.simple.id}",
                  "name": "serviceBv1",
                  "spec": [
                    {
                      "backend": [
                        {
                          "virtual_service": [
                            {
                              "virtual_service_name": "servicea.simpleapp.local"
                            }
                          ]
                        }
                      ],
                      "listener": [
                        {
                          "health_check": [
                            {
                              "healthy_threshold": 2,
                              "interval_millis": 5000,
                              "path": "/ping",
                              "protocol": "http",
                              "timeout_millis": 2000,
                              "unhealthy_threshold": 2
                            }
                          ],
                          "port_mapping": [
                            {
                              "port": 8080,
                              "protocol": "http"
                            }
                          ]
                        }
                      ],
                      "service_discovery": [
                        {
                          "dns": [
                            {
                              "hostname": "serviceb.simpleapp.local"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              references:
                mesh_name: aws_appmesh_mesh.simple.id
            - name: serviceb1
              manifest: |-
                {
                  "mesh_name": "${aws_appmesh_mesh.simple.id}",
                  "name": "serviceBv1",
                  "spec": [
                    {
                      "backend": [
                        {
                          "virtual_service": [
                            {
                              "virtual_service_name": "servicea.simpleapp.local"
                            }
                          ]
                        }
                      ],
                      "listener": [
                        {
                          "port_mapping": [
                            {
                              "port": 8080,
                              "protocol": "http"
                            }
                          ]
                        }
                      ],
                      "logging": [
                        {
                          "access_log": [
                            {
                              "file": [
                                {
                                  "path": "/dev/stdout"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "service_discovery": [
                        {
                          "dns": [
                            {
                              "hostname": "serviceb.simpleapp.local"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              references:
                mesh_name: aws_appmesh_mesh.simple.id
        argumentDocs:
            access_log: '- (Optional) The access log configuration for a virtual node.'
            acm: '- (Optional) The TLS validation context trust for an AWS Certificate Manager (ACM) certificate.'
            arn: '- The ARN of the virtual node.'
            attributes: '- (Optional) A string map that contains attributes with values that you can use to filter instances by any custom attribute that you specified when you registered the instance. Only instances that match all of the specified key/value pairs will be returned.'
            aws_cloud_map: '- (Optional) Specifies any AWS Cloud Map information for the virtual node.'
            backend: '- (Optional) The backends to which the virtual node is expected to send outbound traffic.'
            backend_defaults: '- (Optional) The defaults for backends.'
            backends: |-
                attribute of the spec object with one or more backend configuration blocks,
                setting virtual_service_name to the name of the service.
            base_ejection_duration: '- (Required) The base amount of time for which a host is ejected.'
            certificate: (Optional) The virtual node's client's Transport Layer Security (TLS) certificate.
            certificate_arn: '- (Required) The Amazon Resource Name (ARN) for the certificate.'
            certificate_authority_arns: '- (Required) One or more ACM Amazon Resource Name (ARN)s.'
            certificate_chain: '- (Required) The certificate chain for the certificate.'
            client_policy: '- (Optional) The client policy for the backend.'
            connection_pool: '- (Optional) The connection pool information for the listener.'
            created_date: '- The creation date of the virtual node.'
            dns: '- (Optional) Specifies the DNS service name for the virtual node.'
            enforce: '- (Optional) Whether the policy is enforced. Default is true.'
            exact: '- (Required) The values sent must match the specified values exactly.'
            file: '- (Optional) A local file certificate.'
            grpc: '- (Optional) Connection pool information for gRPC listeners.'
            health_check: '- (Optional) The health check information for the listener.'
            healthy_threshold: '- (Required) The number of consecutive successful health checks that must occur before declaring listener healthy.'
            hostname: '- (Required) The DNS host name for your virtual node.'
            http: '- (Optional) Connection pool information for HTTP listeners.'
            http2: '- (Optional) Connection pool information for HTTP2 listeners.'
            id: '- The ID of the virtual node.'
            idle: '- (Optional) The idle timeout. An idle timeout bounds the amount of time that a connection may be idle.'
            interval: '- (Required) The time interval between ejection sweep analysis.'
            interval_millis: '- (Required) The time period in milliseconds between each health check execution.'
            last_updated_date: '- The last update date of the virtual node.'
            listener: '- (Optional) The listeners from which the virtual node is expected to receive inbound traffic.'
            logging: '- (Optional) The inbound and outbound access logging information for the virtual node.'
            match: '- (Required) The criteria for determining a SAN''s match.'
            max_connections: '- (Required) Maximum number of outbound TCP connections Envoy can establish concurrently with all hosts in upstream cluster. Minimum value of 1.'
            max_ejection_percent: |-
                - (Required) Maximum percentage of hosts in load balancing pool for upstream service that can be ejected. Will eject at least one host regardless of the value.
                Minimum value of 0. Maximum value of 100.
            max_pending_requests: '- (Optional) Number of overflowing requests after max_connections Envoy will queue to upstream cluster. Minimum value of 1.'
            max_requests: '- (Required) Maximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster. Minimum value of 1.'
            max_server_errors: '- (Required) Number of consecutive 5xx errors required for ejection. Minimum value of 1.'
            mesh_name: '- (Required) The name of the service mesh in which to create the virtual node. Must be between 1 and 255 characters in length.'
            mesh_owner: '- (Optional) The AWS account ID of the service mesh''s owner. Defaults to the account ID the AWS provider is currently connected to.'
            mode: '- (Required) The listener''s TLS mode. Valid values: DISABLED, PERMISSIVE, STRICT.'
            name: '- (Required) The name to use for the virtual node. Must be between 1 and 255 characters in length.'
            namespace_name: |-
                - (Required) The name of the AWS Cloud Map namespace to use.
                Use the aws_service_discovery_http_namespace resource to configure a Cloud Map namespace. Must be between 1 and 1024 characters in length.
            outlier_detection: '- (Optional) The outlier detection information for the listener.'
            path: '- (Required) The file path to write access logs to. You can use /dev/stdout to send access logs to standard out. Must be between 1 and 255 characters in length.'
            per_request: '- (Optional) The per request timeout.'
            port: '- (Required) The port used for the port mapping.'
            port_mapping: '- (Required) The port mapping information for the listener.'
            ports: '- (Optional) One or more ports that the policy is enforced for.'
            private_key: '- (Required) The private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on.'
            protocol: '- (Required) The protocol used for the port mapping. Valid values are http, http2, tcp and grpc.'
            resource_owner: '- The resource owner''s AWS account ID.'
            sds: '- (Optional) A Secret Discovery Service certificate.'
            secret_name: '- (Required) The name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.'
            service_discovery: '- (Optional) The service discovery information for the virtual node.'
            service_name: attribute of the dns object to hostname.
            spec: '- (Required) The virtual node specification to apply.'
            subject_alternative_names: '- (Optional) The SANs for a TLS validation context.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            tcp: '- (Optional) Connection pool information for TCP listeners.'
            timeout: '- (Optional) Timeouts for different protocols.'
            timeout_millis: '- (Required) The amount of time to wait when receiving a response from the health check, in milliseconds.'
            tls: '- (Optional) The Transport Layer Security (TLS) client policy.'
            trust: '- (Required) The TLS validation context trust.'
            unhealthy_threshold: '- (Required) The number of consecutive failed health checks that must occur before declaring a virtual node unhealthy.'
            unit: '- (Required) The unit of time. Valid values: ms, s.'
            validation: '- (Required) The TLS validation context.'
            value: '- (Required) The number of time units. Minimum value of 0.'
            virtual_service: '- (Required) Specifies a virtual service to use as a backend for a virtual node.'
            virtual_service_name: '- (Required) The name of the virtual service that is acting as a virtual node backend. Must be between 1 and 255 characters in length.'
        importStatements: []
    aws_appmesh_virtual_router:
        subCategory: App Mesh
        description: Provides an AWS App Mesh virtual router resource.
        name: aws_appmesh_virtual_router
        title: aws_appmesh_virtual_router
        examples:
            - name: serviceb
              manifest: |-
                {
                  "mesh_name": "${aws_appmesh_mesh.simple.id}",
                  "name": "serviceB",
                  "spec": [
                    {
                      "listener": [
                        {
                          "port_mapping": [
                            {
                              "port": 8080,
                              "protocol": "http"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              references:
                mesh_name: aws_appmesh_mesh.simple.id
        argumentDocs:
            arn: '- The ARN of the virtual router.'
            created_date: '- The creation date of the virtual router.'
            id: '- The ID of the virtual router.'
            last_updated_date: '- The last update date of the virtual router.'
            listener: configuration block to the spec argument.
            mesh_name: '- (Required) The name of the service mesh in which to create the virtual router. Must be between 1 and 255 characters in length.'
            mesh_owner: '- (Optional) The AWS account ID of the service mesh''s owner. Defaults to the account ID the AWS provider is currently connected to.'
            name: '- (Required) The name to use for the virtual router. Must be between 1 and 255 characters in length.'
            port: '- (Required) The port used for the port mapping.'
            port_mapping: '- (Required) The port mapping information for the listener.'
            protocol: '- (Required) The protocol used for the port mapping. Valid values are http,http2, tcp and grpc.'
            resource_owner: '- The resource owner''s AWS account ID.'
            service_names: |-
                from the spec argument.
                AWS has created a aws_appmesh_virtual_service resource for each of service names.
                These resource can be imported using terraform import.
            spec: '- (Required) The virtual router specification to apply.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_appmesh_virtual_service:
        subCategory: App Mesh
        description: Provides an AWS App Mesh virtual service resource.
        name: aws_appmesh_virtual_service
        title: aws_appmesh_virtual_service
        examples:
            - name: servicea
              manifest: |-
                {
                  "mesh_name": "${aws_appmesh_mesh.simple.id}",
                  "name": "servicea.simpleapp.local",
                  "spec": [
                    {
                      "provider": [
                        {
                          "virtual_node": [
                            {
                              "virtual_node_name": "${aws_appmesh_virtual_node.serviceb1.name}"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              references:
                mesh_name: aws_appmesh_mesh.simple.id
                spec.provider.virtual_node.virtual_node_name: aws_appmesh_virtual_node.serviceb1.name
            - name: servicea
              manifest: |-
                {
                  "mesh_name": "${aws_appmesh_mesh.simple.id}",
                  "name": "servicea.simpleapp.local",
                  "spec": [
                    {
                      "provider": [
                        {
                          "virtual_router": [
                            {
                              "virtual_router_name": "${aws_appmesh_virtual_router.serviceb.name}"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              references:
                mesh_name: aws_appmesh_mesh.simple.id
                spec.provider.virtual_router.virtual_router_name: aws_appmesh_virtual_router.serviceb.name
        argumentDocs:
            arn: '- The ARN of the virtual service.'
            created_date: '- The creation date of the virtual service.'
            id: '- The ID of the virtual service.'
            last_updated_date: '- The last update date of the virtual service.'
            mesh_name: '- (Required) The name of the service mesh in which to create the virtual service. Must be between 1 and 255 characters in length.'
            mesh_owner: '- (Optional) The AWS account ID of the service mesh''s owner. Defaults to the account ID the AWS provider is currently connected to.'
            name: '- (Required) The name to use for the virtual service. Must be between 1 and 255 characters in length.'
            provider: '- (Optional) The App Mesh object that is acting as the provider for a virtual service. You can specify a single virtual node or virtual router.'
            resource_owner: '- The resource owner''s AWS account ID.'
            spec: '- (Required) The virtual service specification to apply.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            virtual_node: '- (Optional) The virtual node associated with a virtual service.'
            virtual_node_name: '- (Required) The name of the virtual node that is acting as a service provider. Must be between 1 and 255 characters in length.'
            virtual_router: '- (Optional) The virtual router associated with a virtual service.'
            virtual_router_name: '- (Required) The name of the virtual router that is acting as a service provider. Must be between 1 and 255 characters in length.'
        importStatements: []
    aws_apprunner_auto_scaling_configuration_version:
        subCategory: App Runner
        description: Manages an App Runner AutoScaling Configuration Version.
        name: aws_apprunner_auto_scaling_configuration_version
        title: aws_apprunner_auto_scaling_configuration_version
        examples:
            - name: example
              manifest: |-
                {
                  "auto_scaling_configuration_name": "example",
                  "max_concurrency": 50,
                  "max_size": 10,
                  "min_size": 2,
                  "tags": {
                    "Name": "example-apprunner-autoscaling"
                  }
                }
        argumentDocs:
            arn: '- ARN of this auto scaling configuration version.'
            auto_scaling_configuration_name: '- (Required, Forces new resource) Name of the auto scaling configuration.'
            auto_scaling_configuration_revision: '- The revision of this auto scaling configuration.'
            latest: '- Whether the auto scaling configuration has the highest auto_scaling_configuration_revision among all configurations that share the same auto_scaling_configuration_name.'
            max_concurrency: '- (Optional, Forces new resource) The maximal number of concurrent requests that you want an instance to process. When the number of concurrent requests goes over this limit, App Runner scales up your service.'
            max_size: '- (Optional, Forces new resource) The maximal number of instances that App Runner provisions for your service.'
            min_size: '- (Optional, Forces new resource) The minimal number of instances that App Runner provisions for your service.'
            status: '- The current state of the auto scaling configuration. An INACTIVE configuration revision has been deleted and can''t be used. It is permanently removed some time after deletion.'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_apprunner_connection:
        subCategory: App Runner
        description: Manages an App Runner Connection.
        name: aws_apprunner_connection
        title: aws_apprunner_connection
        examples:
            - name: example
              manifest: |-
                {
                  "connection_name": "example",
                  "provider_type": "GITHUB",
                  "tags": {
                    "Name": "example-apprunner-connection"
                  }
                }
        argumentDocs:
            arn: '- ARN of the connection.'
            connection_name: '- (Required) Name of the connection.'
            provider_type: '- (Required) The source repository provider. Valid values: GITHUB.'
            status: '- The current state of the App Runner connection. When the state is AVAILABLE, you can use the connection to create an aws_apprunner_service resource.'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_apprunner_custom_domain_association:
        subCategory: App Runner
        description: Manages an App Runner Custom Domain association.
        name: aws_apprunner_custom_domain_association
        title: aws_apprunner_custom_domain_association
        examples:
            - name: example
              manifest: |-
                {
                  "domain_name": "example.com",
                  "service_arn": "${aws_apprunner_service.example.arn}"
                }
              references:
                service_arn: aws_apprunner_service.example.arn
        argumentDocs:
            certificate_validation_records: '- A set of certificate CNAME records used for this domain name. See Certificate Validation Records below for more details.'
            dns_target: '- The App Runner subdomain of the App Runner service. The custom domain name is mapped to this target name. Attribute only available if resource created (not imported) with Terraform.'
            domain_name: '- (Required) The custom domain endpoint to association. Specify a base domain e.g., example.com or a subdomain e.g., subdomain.example.com.'
            enable_www_subdomain: (Optional) Whether to associate the subdomain with the App Runner service in addition to the base domain. Defaults to true.
            id: '- The domain_name and service_arn separated by a comma (,).'
            name: '- The certificate CNAME record name.'
            service_arn: '- (Required) The ARN of the App Runner service.'
            status: '- The current state of the certificate CNAME record validation. It should change to SUCCESS after App Runner completes validation with your DNS.'
            type: '- The record type, always CNAME.'
            value: '- The certificate CNAME record value.'
        importStatements: []
    aws_apprunner_observability_configuration:
        subCategory: App Runner
        description: Manages an App Runner Observability Configuration.
        name: aws_apprunner_observability_configuration
        title: aws_apprunner_observability_configuration
        examples:
            - name: example
              manifest: |-
                {
                  "observability_configuration_name": "example",
                  "tags": {
                    "Name": "example-apprunner-observability-configuration"
                  },
                  "trace_configuration": [
                    {
                      "vendor": "AWSXRAY"
                    }
                  ]
                }
        argumentDocs:
            arn: '- ARN of this observability configuration.'
            latest: '- Whether the observability configuration has the highest observability_configuration_revision among all configurations that share the same observability_configuration_name.'
            observability_configuration_name: '- (Required, Forces new resource) Name of the observability configuration.'
            observability_configuration_revision: '- The revision of this observability configuration.'
            status: '- The current state of the observability configuration. An INACTIVE configuration revision has been deleted and can''t be used. It is permanently removed some time after deletion.'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            trace_configuration: '- (Optional) The configuration of the tracing feature within this observability configuration. If you don''t specify it, App Runner doesn''t enable tracing. See Trace Configuration below for more details.'
            trace_configuration.vendor: '- (Required) The implementation provider chosen for tracing App Runner services. Valid values: AWSXRAY.'
        importStatements: []
    aws_apprunner_service:
        subCategory: App Runner
        description: Manages an App Runner Service.
        name: aws_apprunner_service
        title: aws_apprunner_service
        examples:
            - name: example
              manifest: |-
                {
                  "network_configuration": [
                    {
                      "egress_configuration": [
                        {
                          "egress_type": "VPC",
                          "vpc_connector_arn": "${aws_apprunner_vpc_connector.connector.arn}"
                        }
                      ]
                    }
                  ],
                  "service_name": "example",
                  "source_configuration": [
                    {
                      "authentication_configuration": [
                        {
                          "connection_arn": "${aws_apprunner_connection.example.arn}"
                        }
                      ],
                      "code_repository": [
                        {
                          "code_configuration": [
                            {
                              "code_configuration_values": [
                                {
                                  "build_command": "python setup.py develop",
                                  "port": "8000",
                                  "runtime": "PYTHON_3",
                                  "start_command": "python runapp.py"
                                }
                              ],
                              "configuration_source": "API"
                            }
                          ],
                          "repository_url": "https://github.com/example/my-example-python-app",
                          "source_code_version": [
                            {
                              "type": "BRANCH",
                              "value": "main"
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "tags": {
                    "Name": "example-apprunner-service"
                  }
                }
              references:
                network_configuration.egress_configuration.vpc_connector_arn: aws_apprunner_vpc_connector.connector.arn
                source_configuration.authentication_configuration.connection_arn: aws_apprunner_connection.example.arn
            - name: example
              manifest: |-
                {
                  "service_name": "example",
                  "source_configuration": [
                    {
                      "auto_deployment_enabled": false,
                      "image_repository": [
                        {
                          "image_configuration": [
                            {
                              "port": "8000"
                            }
                          ],
                          "image_identifier": "public.ecr.aws/aws-containers/hello-app-runner:latest",
                          "image_repository_type": "ECR_PUBLIC"
                        }
                      ]
                    }
                  ],
                  "tags": {
                    "Name": "example-apprunner-service"
                  }
                }
            - name: example
              manifest: |-
                {
                  "observability_configuration": [
                    {
                      "observability_configuration_arn": "${aws_apprunner_observability_configuration.example.arn}",
                      "observability_enabled": true
                    }
                  ],
                  "service_name": "example",
                  "source_configuration": [
                    {
                      "auto_deployment_enabled": false,
                      "image_repository": [
                        {
                          "image_configuration": [
                            {
                              "port": "8000"
                            }
                          ],
                          "image_identifier": "public.ecr.aws/aws-containers/hello-app-runner:latest",
                          "image_repository_type": "ECR_PUBLIC"
                        }
                      ]
                    }
                  ],
                  "tags": {
                    "Name": "example-apprunner-service"
                  }
                }
              references:
                observability_configuration.observability_configuration_arn: aws_apprunner_observability_configuration.example.arn
              dependencies:
                aws_apprunner_observability_configuration.example: |-
                    {
                      "observability_configuration_name": "example",
                      "trace_configuration": [
                        {
                          "vendor": "AWSXRAY"
                        }
                      ]
                    }
        argumentDocs:
            API: |-
                - App Runner uses configuration values provided in the CodeConfigurationValues
                parameter and ignores the apprunner.yaml file in the source code repository.
            REPOSITORY: |-
                - App Runner reads configuration values from the apprunner.yaml file in the
                source code repository and ignores the CodeConfigurationValues parameter.
            arn: '- ARN of the App Runner service.'
            auto_scaling_configuration_arn: '- ARN of an App Runner automatic scaling configuration resource that you want to associate with your service. If not provided, App Runner associates the latest revision of a default auto scaling configuration.'
            code_configuration.code_configuration_values: '- (Optional) Basic configuration for building and running the App Runner service. Use this parameter to quickly launch an App Runner service without providing an apprunner.yaml file in the source code repository (or ignoring the file if it exists). See Code Configuration Values below for more details.'
            code_configuration.code_configuration_values.build_command: '- (Optional) The command App Runner runs to build your application.'
            code_configuration.code_configuration_values.port: '- (Optional) The port that your application listens to in the container. Defaults to "8080".'
            code_configuration.code_configuration_values.runtime: '- (Required) A runtime environment type for building and running an App Runner service. Represents a programming language runtime. Valid values: PYTHON_3, NODEJS_12.'
            code_configuration.code_configuration_values.runtime_environment_variables: '- (Optional) Environment variables available to your running App Runner service. A map of key/value pairs. Keys with a prefix of AWSAPPRUNNER are reserved for system use and aren''t valid.'
            code_configuration.code_configuration_values.start_command: '- (Optional) The command App Runner runs to start your application.'
            code_configuration.configuration_source: '- (Required) The source of the App Runner configuration. Valid values: REPOSITORY, API. Values are interpreted as follows:'
            code_repository.code_configuration: '- (Optional) Configuration for building and running the service from a source code repository. See Code Configuration below for more details.'
            code_repository.repository_url: '- (Required) The location of the repository that contains the source code.'
            code_repository.source_code_version: '- (Required) The version that should be used within the source code repository. See Source Code Version below for more details.'
            encryption_configuration: '- (Forces new resource) An optional custom encryption key that App Runner uses to encrypt the copy of your source repository that it maintains and your service logs. By default, App Runner uses an AWS managed CMK. See Encryption Configuration below for more details.'
            encryption_configuration.kms_key: '- (Required) The ARN of the KMS key used for encryption.'
            health_check_configuration: '- (Forces new resource) Settings of the health check that AWS App Runner performs to monitor the health of your service. See Health Check Configuration below for more details.'
            health_check_configuration.healthy_threshold: '- (Optional) The number of consecutive checks that must succeed before App Runner decides that the service is healthy. Defaults to 1. Minimum value of 1. Maximum value of 20.'
            health_check_configuration.interval: '- (Optional) The time interval, in seconds, between health checks. Defaults to 5. Minimum value of 1. Maximum value of 20.'
            health_check_configuration.path: '- (Optional) The URL to send requests to for health checks. Defaults to /. Minimum length of 0. Maximum length of 51200.'
            health_check_configuration.protocol: '- (Optional) The IP protocol that App Runner uses to perform health checks for your service. Valid values: TCP, HTTP. Defaults to TCP. If you set protocol to HTTP, App Runner sends health check requests to the HTTP path specified by path.'
            health_check_configuration.timeout: '- (Optional) The time, in seconds, to wait for a health check response before deciding it failed. Defaults to 2. Minimum value of  1. Maximum value of 20.'
            health_check_configuration.unhealthy_threshold: '- (Optional) The number of consecutive checks that must fail before App Runner decides that the service is unhealthy. Defaults to 5. Minimum value of  1. Maximum value of 20.'
            image_configuration.port: '- (Optional) The port that your application listens to in the container. Defaults to "8080".'
            image_configuration.runtime_environment_variables: '- (Optional) Environment variables available to your running App Runner service. A map of key/value pairs. Keys with a prefix of AWSAPPRUNNER are reserved for system use and aren''t valid.'
            image_configuration.start_command: '- (Optional) A command App Runner runs to start the application in the source image. If specified, this command overrides the Docker image’s default start command.'
            image_repository.image_configuration: '- (Optional) Configuration for running the identified image. See Image Configuration below for more details.'
            image_repository.image_identifier: |-
                - (Required) The identifier of an image. For an image in Amazon Elastic Container Registry (Amazon ECR), this is an image name. For the
                image name format, see Pulling an image in the Amazon ECR User Guide.
            image_repository.image_repository_type: '- (Required) The type of the image repository. This reflects the repository provider and whether the repository is private or public. Valid values: ECR , ECR_PUBLIC.'
            instance_configuration: '- The runtime configuration of instances (scaling units) of the App Runner service. See Instance Configuration below for more details.'
            instance_configuration.cpu: '- (Optional) The number of CPU units reserved for each instance of your App Runner service represented as a String. Defaults to 1024. Valid values: 1024|2048|(1|2) vCPU.'
            instance_configuration.instance_role_arn: '- (Optional) The Amazon Resource Name (ARN) of an IAM role that provides permissions to your App Runner service. These are permissions that your code needs when it calls any AWS APIs.'
            instance_configuration.memory: '- (Optional) The amount of memory, in MB or GB, reserved for each instance of your App Runner service. Defaults to 2048. Valid values: 2048|3072|4096|(2|3|4) GB.'
            network_configuration: '- Configuration settings related to network traffic of the web application that the App Runner service runs. See Network Configuration below for more details.'
            network_configuration.egress_configuration: '- (Optional) Network configuration settings for outbound message traffic.'
            network_configuration.egress_type: '- (Optional) The type of egress configuration.Set to DEFAULT for access to resources hosted on public networks.Set to VPC to associate your service to a custom VPC specified by VpcConnectorArn.'
            network_configuration.vpc_connector_arn: '- The Amazon Resource Name (ARN) of the App Runner VPC connector that you want to associate with your App Runner service. Only valid when EgressType = VPC.'
            observability_configuration: '- The observability configuration of your service. See Observability Configuration below for more details.'
            observability_configuration.observability_configuration_arn: '- (Required) The Amazon Resource Name (ARN) of the observability configuration that is associated with the service.'
            observability_configuration.observability_enabled: '- (Required) When true, an observability configuration resource is associated with the service.'
            service_id: '- An alphanumeric ID that App Runner generated for this service. Unique within the AWS Region.'
            service_name: '- (Forces new resource) Name of the service.'
            service_url: '- A subdomain URL that App Runner generated for this service. You can use this URL to access your service web application.'
            source_code_version.type: '- (Required) The type of version identifier. For a git-based repository, branches represent versions. Valid values: BRANCH.'
            source_code_version.value: '- (Required) A source code version. For a git-based repository, a branch name maps to a specific version. App Runner uses the most recent commit to the branch.'
            source_configuration: '- The source to deploy to the App Runner service. Can be a code or an image repository. See Source Configuration below for more details.'
            source_configuration.authentication_configuration: '- (Optional) Describes resources needed to authenticate access to some source repositories. See Authentication Configuration below for more details.'
            source_configuration.authentication_configuration.access_role_arn: '- (Optional) ARN of the IAM role that grants the App Runner service access to a source repository. Required for ECR image repositories (but not for ECR Public)'
            source_configuration.authentication_configuration.connection_arn: '- (Optional) ARN of the App Runner connection that enables the App Runner service to connect to a source repository. Required for GitHub code repositories.'
            source_configuration.auto_deployments_enabled: '- (Optional) Whether continuous integration from the source repository is enabled for the App Runner service. If set to true, each repository change (source code commit or new image version) starts a deployment. Defaults to true.'
            source_configuration.code_repository: '- (Optional) Description of a source code repository. See Code Repository below for more details.'
            source_configuration.image_repository: '- (Optional) Description of a source image repository. See Image Repository below for more details.'
            status: '- The current state of the App Runner service.'
            tags: '- Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_apprunner_vpc_connector:
        subCategory: App Runner
        description: Manages an App Runner VPC Connector.
        name: aws_apprunner_vpc_connector
        title: aws_apprunner_vpc_connector
        examples:
            - name: connector
              manifest: |-
                {
                  "security_groups": [
                    "sg1",
                    "sg2"
                  ],
                  "subnets": [
                    "subnet1",
                    "subnet2"
                  ],
                  "vpc_connector_name": "name"
                }
        argumentDocs:
            security_groups: '- A list of IDs of security groups that App Runner should use for access to AWS resources under the specified subnets. If not specified, App Runner uses the default security group of the Amazon VPC. The default security group allows all outbound traffic.'
            status: '- The current state of the VPC connector. If the status of a connector revision is INACTIVE, it was deleted and can''t be used. Inactive connector revisions are permanently removed some time after they are deleted.'
            subnets: (Required) A list of IDs of subnets that App Runner should use when it associates your service with a custom Amazon VPC. Specify IDs of subnets of a single Amazon VPC. App Runner determines the Amazon VPC from the subnets you specify.
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            vpc_connector_arn: '- The Amazon Resource Name (ARN) of VPC connector.'
            vpc_connector_name: '- (Required) A name for the VPC connector.'
            vpc_connector_revision: '- The revision of VPC connector. It''s unique among all the active connectors ("Status": "ACTIVE") that share the same Name.'
        importStatements: []
    aws_appstream_directory_config:
        subCategory: AppStream 2.0
        description: Provides an AppStream Directory Config
        name: aws_appstream_directory_config
        title: aws_appstream_directory_config
        examples:
            - name: example
              manifest: |-
                {
                  "directory_name": "NAME OF DIRECTORY",
                  "organizational_unit_distinguished_names": [
                    "DISTINGUISHED NAME"
                  ],
                  "service_account_credentials": [
                    {
                      "account_name": "NAME OF ACCOUNT",
                      "account_password": "PASSWORD OF ACCOUNT"
                    }
                  ]
                }
        argumentDocs:
            created_time: '-  Date and time, in UTC and extended RFC 3339 format, when the directory config was created.'
            directory_name: '- (Required) Fully qualified name of the directory.'
            id: '- Unique identifier (ID) of the appstream directory config.'
            organizational_unit_distinguished_names: '- (Required) Distinguished names of the organizational units for computer accounts.'
            service_account_credentials: '- (Required) Configuration block for the name of the directory and organizational unit (OU) to use to join the directory config to a Microsoft Active Directory domain. See service_account_credentials below.'
            service_account_credentials.account_name: '- (Required) User name of the account. This account must have the following privileges: create computer objects, join computers to the domain, and change/reset the password on descendant computer objects for the organizational units specified.'
            service_account_credentials.account_password: '- (Required) Password for the account.'
        importStatements: []
    aws_appstream_fleet:
        subCategory: AppStream 2.0
        description: Provides an AppStream fleet
        name: aws_appstream_fleet
        title: aws_appstream_fleet
        examples:
            - name: test_fleet
              manifest: |-
                {
                  "compute_capacity": [
                    {
                      "desired_instances": 1
                    }
                  ],
                  "description": "test fleet",
                  "display_name": "test-fleet",
                  "enable_default_internet_access": false,
                  "fleet_type": "ON_DEMAND",
                  "idle_disconnect_timeout_in_seconds": 60,
                  "image_name": "Amazon-AppStream2-Sample-Image-02-04-2019",
                  "instance_type": "stream.standard.large",
                  "max_user_duration_in_seconds": 600,
                  "name": "test-fleet",
                  "tags": {
                    "TagName": "tag-value"
                  },
                  "vpc_config": [
                    {
                      "subnet_ids": [
                        "subnet-06e9b13400c225127"
                      ]
                    }
                  ]
                }
        argumentDocs:
            arn: '- ARN of the appstream fleet.'
            compute_capacity: '- (Required) Configuration block for the desired capacity of the fleet. See below.'
            compute_capacity.available: '- Number of currently available instances that can be used to stream sessions.'
            compute_capacity.desired_instances: '- (Required) Desired number of streaming instances.'
            compute_capacity.in_use: '- Number of instances in use for streaming.'
            compute_capacity.running: '- Total number of simultaneous streaming instances that are running.'
            created_time: '-  Date and time, in UTC and extended RFC 3339 format, when the fleet was created.'
            description: '- (Optional) Description to display.'
            disconnect_timeout_in_seconds: '- (Optional) Amount of time that a streaming session remains active after users disconnect.'
            display_name: '- (Optional) Human-readable friendly name for the AppStream fleet.'
            domain_join_info: '- (Optional) Configuration block for the name of the directory and organizational unit (OU) to use to join the fleet to a Microsoft Active Directory domain. See below.'
            domain_join_info.directory_name: '- (Optional) Fully qualified name of the directory (for example, corp.example.com).'
            domain_join_info.organizational_unit_distinguished_name: '- (Optional) Distinguished name of the organizational unit for computer accounts.'
            enable_default_internet_access: '- (Optional) Enables or disables default internet access for the fleet.'
            fleet_type: '- (Optional) Fleet type. Valid values are: ON_DEMAND, ALWAYS_ON'
            iam_role_arn: '- (Optional) ARN of the IAM role to apply to the fleet.'
            id: '- Unique identifier (ID) of the appstream fleet.'
            idle_disconnect_timeout_in_seconds: '- (Optional) Amount of time that users can be idle (inactive) before they are disconnected from their streaming session and the disconnect_timeout_in_seconds time interval begins.'
            image_arn: '- (Optional) ARN of the public, private, or shared image to use.'
            image_name: '- (Optional) Name of the image used to create the fleet.'
            instance_type: '- (Required) Instance type to use when launching fleet instances.'
            max_user_duration_in_seconds: '- (Optional) Maximum amount of time that a streaming session can remain active, in seconds.'
            name: '- (Required) Unique name for the fleet.'
            state: '- State of the fleet. Can be STARTING, RUNNING, STOPPING or STOPPED'
            stream_view: '- (Optional) AppStream 2.0 view that is displayed to your users when they stream from the fleet. When APP is specified, only the windows of applications opened by users display. When DESKTOP is specified, the standard desktop that is provided by the operating system displays. If not specified, defaults to APP.'
            tags: '- (Optional) Map of tags to attach to AppStream instances.'
            vpc_config: '- (Optional) Configuration block for the VPC configuration for the image builder. See below.'
            vpc_config.security_group_ids: '- Identifiers of the security groups for the fleet or image builder.'
            vpc_config.subnet_ids: '- Identifiers of the subnets to which a network interface is attached from the fleet instance or image builder instance.'
        importStatements: []
    aws_appstream_fleet_stack_association:
        subCategory: AppStream 2.0
        description: Manages an AppStream Fleet Stack association.
        name: aws_appstream_fleet_stack_association
        title: aws_appstream_fleet_stack_association
        examples:
            - name: example
              manifest: |-
                {
                  "fleet_name": "${aws_appstream_fleet.example.name}",
                  "stack_name": "${aws_appstream_stack.example.name}"
                }
              references:
                fleet_name: aws_appstream_fleet.example.name
                stack_name: aws_appstream_stack.example.name
              dependencies:
                aws_appstream_fleet.example: |-
                    {
                      "compute_capacity": [
                        {
                          "desired_instances": 1
                        }
                      ],
                      "image_name": "Amazon-AppStream2-Sample-Image-02-04-2019",
                      "instance_type": "stream.standard.small",
                      "name": "NAME"
                    }
                aws_appstream_stack.example: |-
                    {
                      "name": "STACK NAME"
                    }
        argumentDocs:
            fleet_name: '- (Required) Name of the fleet.'
            id: '- Unique ID of the appstream stack fleet association, composed of the fleet_name and stack_name separated by a slash (/).'
            stack_name: (Required) Name of the stack.
        importStatements: []
    aws_appstream_image_builder:
        subCategory: AppStream 2.0
        description: Provides an AppStream image builder
        name: aws_appstream_image_builder
        title: aws_appstream_image_builder
        examples:
            - name: test_fleet
              manifest: |-
                {
                  "description": "Description of a ImageBuilder",
                  "display_name": "Display name of a ImageBuilder",
                  "enable_default_internet_access": false,
                  "image_name": "AppStream-WinServer2012R2-07-19-2021",
                  "instance_type": "stream.standard.large",
                  "name": "Name",
                  "tags": {
                    "Name": "Example Image Builder"
                  },
                  "vpc_config": [
                    {
                      "subnet_ids": [
                        "${aws_subnet.example.id}"
                      ]
                    }
                  ]
                }
        argumentDocs:
            access_endpoint: '- (Optional) Set of interface VPC endpoint (interface endpoint) objects. Maximum of 4. See below.'
            access_endpoint.endpoint_type: '- (Required) Type of interface endpoint.'
            access_endpoint.vpce_id: '- (Optional) Identifier (ID) of the VPC in which the interface endpoint is used.'
            appstream_agent_version: '- (Optional) The version of the AppStream 2.0 agent to use for this image builder.'
            arn: '- ARN of the appstream image builder.'
            created_time: '-  Date and time, in UTC and extended RFC 3339 format, when the image builder was created.'
            description: '- (Optional) Description to display.'
            display_name: '- (Optional) Human-readable friendly name for the AppStream image builder.'
            domain_join_info: '- (Optional) Configuration block for the name of the directory and organizational unit (OU) to use to join the image builder to a Microsoft Active Directory domain. See below.'
            domain_join_info.directory_name: '- (Optional) Fully qualified name of the directory (for example, corp.example.com).'
            domain_join_info.organizational_unit_distinguished_name: '- (Optional) Distinguished name of the organizational unit for computer accounts.'
            enable_default_internet_access: '- (Optional) Enables or disables default internet access for the image builder.'
            iam_role_arn: '- (Optional) ARN of the IAM role to apply to the image builder.'
            id: '- The name of the image builder.'
            image_arn: '- (Optional, Required if image_name not provided) ARN of the public, private, or shared image to use.'
            image_name: '- (Optional, Required if image_arn not provided) Name of the image used to create the image builder.'
            instance_type: '- (Required) The instance type to use when launching the image builder.'
            name: '- (Required) Unique name for the image builder.'
            state: '- State of the image builder. Can be: PENDING, UPDATING_AGENT, RUNNING, STOPPING, STOPPED, REBOOTING, SNAPSHOTTING, DELETING, FAILED, UPDATING, PENDING_QUALIFICATION'
            tags: '- (Optional) A map of tags to assign to the instance. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            vpc_config: '- (Optional) Configuration block for the VPC configuration for the image builder. See below.'
            vpc_config.security_group_ids: '- (Optional) Identifiers of the security groups for the image builder or image builder.'
            vpc_config.subnet_ids: '- (Optional) Identifiers of the subnets to which a network interface is attached from the image builder instance or image builder instance.'
        importStatements: []
    aws_appstream_stack:
        subCategory: AppStream 2.0
        description: Provides an AppStream stack
        name: aws_appstream_stack
        title: aws_appstream_stack
        examples:
            - name: example
              manifest: |-
                {
                  "application_settings": [
                    {
                      "enabled": true,
                      "settings_group": "SettingsGroup"
                    }
                  ],
                  "description": "stack description",
                  "display_name": "stack display name",
                  "feedback_url": "http://your-domain/feedback",
                  "name": "stack name",
                  "redirect_url": "http://your-domain/redirect",
                  "storage_connectors": [
                    {
                      "connector_type": "HOMEFOLDERS"
                    }
                  ],
                  "tags": {
                    "TagName": "TagValue"
                  },
                  "user_settings": [
                    {
                      "action": "CLIPBOARD_COPY_FROM_LOCAL_DEVICE",
                      "permission": "ENABLED"
                    },
                    {
                      "action": "CLIPBOARD_COPY_TO_LOCAL_DEVICE",
                      "permission": "ENABLED"
                    },
                    {
                      "action": "FILE_UPLOAD",
                      "permission": "ENABLED"
                    },
                    {
                      "action": "FILE_DOWNLOAD",
                      "permission": "ENABLED"
                    }
                  ]
                }
        argumentDocs:
            application_settings: '- (Optional) Settings for application settings persistence.'
            arn: '- ARN of the appstream stack.'
            created_time: '- Date and time, in UTC and extended RFC 3339 format, when the stack was created.'
            description: '- (Optional) Description for the AppStream stack.'
            display_name: '- (Optional) Stack name to display.'
            embed_host_domains: '- (Optional) Domains where AppStream 2.0 streaming sessions can be embedded in an iframe. You must approve the domains that you want to host embedded AppStream 2.0 streaming sessions.'
            feedback_url: '- (Optional) URL that users are redirected to after they click the Send Feedback link. If no URL is specified, no Send Feedback link is displayed. .'
            id: '- Unique ID of the appstream stack.'
            name: '- (Required) Unique name for the AppStream stack.'
            redirect_url: '- (Optional) URL that users are redirected to after their streaming session ends.'
            storage_connectors: '- (Optional) Configuration block for the storage connectors to enable. See below.'
            storage_connectors.connector_type: '- (Required) Type of storage connector. Valid values are: HOMEFOLDERS, GOOGLE_DRIVE, ONE_DRIVE.'
            storage_connectors.domains: '- (Optional) Names of the domains for the account.'
            storage_connectors.resource_identifier: '- (Optional) ARN of the storage connector.'
            user_settings: '- (Optional) Configuration block for the actions that are enabled or disabled for users during their streaming sessions. By default, these actions are enabled. See below.'
            user_settings.action: '- (Required) Action that is enabled or disabled. Valid values are: CLIPBOARD_COPY_FROM_LOCAL_DEVICE,  CLIPBOARD_COPY_TO_LOCAL_DEVICE, FILE_UPLOAD, FILE_DOWNLOAD, PRINTING_TO_LOCAL_DEVICE, DOMAIN_PASSWORD_SIGNIN, DOMAIN_SMART_CARD_SIGNIN.'
            user_settings.permission: '- (Required) Indicates whether the action is enabled or disabled. Valid values are: ENABLED, DISABLED.'
        importStatements: []
    aws_appstream_user:
        subCategory: AppStream 2.0
        description: Provides an AppStream user
        name: aws_appstream_user
        title: aws_appstream_user
        examples:
            - name: example
              manifest: |-
                {
                  "authentication_type": "USERPOOL",
                  "first_name": "FIRST NAME",
                  "last_name": "LAST NAME",
                  "user_name": "EMAIL"
                }
        argumentDocs:
            arn: '- ARN of the appstream user.'
            authentication_type: '- (Required) Authentication type for the user. You must specify USERPOOL. Valid values: API, SAML, USERPOOL'
            created_time: '- Date and time, in UTC and extended RFC 3339 format, when the user was created.'
            enabled: '- (Optional) Specifies whether the user in the user pool is enabled.'
            first_name: '- (Optional) First name, or given name, of the user.'
            id: '- Unique ID of the appstream user.'
            last_name: '- (Optional) Last name, or surname, of the user.'
            send_email_notification: '- (Optional) Send an email notification.'
            status: '- Status of the user in the user pool.'
            user_name: '- (Required) Email address of the user.'
        importStatements: []
    aws_appstream_user_stack_association:
        subCategory: AppStream 2.0
        description: Manages an AppStream User Stack association.
        name: aws_appstream_user_stack_association
        title: aws_appstream_user_stack_association
        examples:
            - name: test
              manifest: |-
                {
                  "authentication_type": "${aws_appstream_user.test.authentication_type}",
                  "stack_name": "${aws_appstream_stack.test.name}",
                  "user_name": "${aws_appstream_user.test.user_name}"
                }
              references:
                authentication_type: aws_appstream_user.test.authentication_type
                stack_name: aws_appstream_stack.test.name
                user_name: aws_appstream_user.test.user_name
              dependencies:
                aws_appstream_stack.test: |-
                    {
                      "name": "STACK NAME"
                    }
                aws_appstream_user.test: |-
                    {
                      "authentication_type": "USERPOOL",
                      "user_name": "EMAIL"
                    }
        argumentDocs:
            authentication_type: '- (Required) Authentication type for the user.'
            id: '- Unique ID of the appstream User Stack association.'
            send_email_notification: '- (Optional) Specifies whether a welcome email is sent to a user after the user is created in the user pool.'
            stack_name: (Required) Name of the stack that is associated with the user.
            user_name: (Required) Email address of the user who is associated with the stack.
        importStatements: []
    aws_appsync_api_cache:
        subCategory: AppSync
        description: Provides an AppSync API Cache.
        name: aws_appsync_api_cache
        title: aws_appsync_api_cache
        examples:
            - name: example
              manifest: |-
                {
                  "api_caching_behavior": "FULL_REQUEST_CACHING",
                  "api_id": "${aws_appsync_graphql_api.example.id}",
                  "ttl": 900,
                  "type": "LARGE"
                }
              references:
                api_id: aws_appsync_graphql_api.example.id
              dependencies:
                aws_appsync_graphql_api.example: |-
                    {
                      "authentication_type": "API_KEY",
                      "name": "example"
                    }
        argumentDocs:
            api_caching_behavior: '- (Required) Caching behavior. Valid values are FULL_REQUEST_CACHING and PER_RESOLVER_CACHING.'
            api_id: '- (Required) The GraphQL API ID.'
            at_rest_encryption_enabled: '- (Optional) At-rest encryption flag for cache. You cannot update this setting after creation.'
            id: '- The AppSync API ID.'
            transit_encryption_enabled: '- (Optional) Transit encryption flag when connecting to cache. You cannot update this setting after creation.'
            ttl: '- (Required) TTL in seconds for cache entries.'
            type: '- (Required) The cache instance type. Valid values are SMALL, MEDIUM, LARGE, XLARGE, LARGE_2X, LARGE_4X, LARGE_8X, LARGE_12X, T2_SMALL, T2_MEDIUM, R4_LARGE, R4_XLARGE, R4_2XLARGE, R4_4XLARGE, R4_8XLARGE.'
        importStatements: []
    aws_appsync_api_key:
        subCategory: AppSync
        description: Provides an AppSync API Key.
        name: aws_appsync_api_key
        title: aws_appsync_api_key
        examples:
            - name: example
              manifest: |-
                {
                  "api_id": "${aws_appsync_graphql_api.example.id}",
                  "expires": "2018-05-03T04:00:00Z"
                }
              references:
                api_id: aws_appsync_graphql_api.example.id
              dependencies:
                aws_appsync_graphql_api.example: |-
                    {
                      "authentication_type": "API_KEY",
                      "name": "example"
                    }
        argumentDocs:
            api_id: '- (Required) The ID of the associated AppSync API'
            description: '- (Optional) The API key description. Defaults to "Managed by Terraform".'
            expires: '- (Optional) RFC3339 string representation of the expiry date. Rounded down to nearest hour. By default, it is 7 days from the date of creation.'
            id: '- API Key ID (Formatted as ApiId:Key)'
            key: '- The API key'
        importStatements: []
    aws_appsync_datasource:
        subCategory: AppSync
        description: Provides an AppSync DataSource.
        name: aws_appsync_datasource
        title: aws_appsync_datasource
        examples:
            - name: example
              manifest: |-
                {
                  "api_id": "${aws_appsync_graphql_api.example.id}",
                  "dynamodb_config": [
                    {
                      "table_name": "${aws_dynamodb_table.example.name}"
                    }
                  ],
                  "name": "tf_appsync_example",
                  "service_role_arn": "${aws_iam_role.example.arn}",
                  "type": "AMAZON_DYNAMODB"
                }
              references:
                api_id: aws_appsync_graphql_api.example.id
                dynamodb_config.table_name: aws_dynamodb_table.example.name
                service_role_arn: aws_iam_role.example.arn
              dependencies:
                aws_appsync_graphql_api.example: |-
                    {
                      "authentication_type": "API_KEY",
                      "name": "tf_appsync_example"
                    }
                aws_dynamodb_table.example: |-
                    {
                      "attribute": [
                        {
                          "name": "UserId",
                          "type": "S"
                        }
                      ],
                      "hash_key": "UserId",
                      "name": "example",
                      "read_capacity": 1,
                      "write_capacity": 1
                    }
                aws_iam_role.example: |-
                    {
                      "assume_role_policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"appsync.amazonaws.com\"\n      },\n      \"Effect\": \"Allow\"\n    }\n  ]\n}\n",
                      "name": "example"
                    }
                aws_iam_role_policy.example: |-
                    {
                      "name": "example",
                      "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": [\n        \"dynamodb:*\"\n      ],\n      \"Effect\": \"Allow\",\n      \"Resource\": [\n        \"${aws_dynamodb_table.example.arn}\"\n      ]\n    }\n  ]\n}\n",
                      "role": "${aws_iam_role.example.id}"
                    }
        argumentDocs:
            api_id: '- (Required) The API ID for the GraphQL API for the DataSource.'
            arn: '- The ARN'
            description: '- (Optional) A description of the DataSource.'
            dynamodb_config: '- (Optional) DynamoDB settings. See below'
            dynamodb_config.region: '- (Optional) AWS region of the DynamoDB table. Defaults to current region.'
            dynamodb_config.table_name: '- (Required) Name of the DynamoDB table.'
            dynamodb_config.use_caller_credentials: '- (Optional) Set to true to use Amazon Cognito credentials with this data source.'
            elasticsearch_config: '- (Optional) Amazon Elasticsearch settings. See below'
            elasticsearch_config.endpoint: '- (Required) HTTP endpoint of the Elasticsearch domain.'
            elasticsearch_config.region: '- (Optional) AWS region of Elasticsearch domain. Defaults to current region.'
            http_config: '- (Optional) HTTP settings. See below'
            http_config.authorization_config: '- (Optional) The authorization configuration in case the HTTP endpoint requires authorization. See Authorization Config.'
            http_config.authorization_config.authorization_type: '- (Optional) The authorization type that the HTTP endpoint requires. Default values is AWS_IAM.'
            http_config.authorization_config.aws_iam_config: '- (Optional) The Identity and Access Management (IAM) settings. See AWS IAM Config.'
            http_config.authorization_config.aws_iam_config.signing_region: '- (Optional) The signing Amazon Web Services Region for IAM authorization.'
            http_config.authorization_config.aws_iam_config.signing_service_name: '- (Optional) The signing service name for IAM authorization.'
            http_config.endpoint: '- (Required) HTTP URL.'
            lambda_config: '- (Optional) AWS Lambda settings. See below'
            lambda_config.function_arn: '- (Required) The ARN for the Lambda function.'
            name: '- (Required) A user-supplied name for the DataSource.'
            relational_database_config: (Optional) AWS RDS settings. See Relational Database Config
            relational_database_config.http_endpoint_config: '- (Required) The Amazon RDS HTTP endpoint configuration. See HTTP Endpoint Config.'
            relational_database_config.http_endpoint_config.aws_secret_store_arn: '- (Required) AWS secret store ARN for database credentials.'
            relational_database_config.http_endpoint_config.database_name: '- (Optional) Logical database name.'
            relational_database_config.http_endpoint_config.db_cluster_identifier: '- (Required) Amazon RDS cluster identifier.'
            relational_database_config.http_endpoint_config.region: '- (Optional) AWS Region for RDS HTTP endpoint. Defaults to current region.'
            relational_database_config.http_endpoint_config.schema: '- (Optional) Logical schema name.'
            relational_database_config.source_type: '- (Optional) Source type for the relational database. Valid values: RDS_HTTP_ENDPOINT.'
            service_role_arn: '- (Optional) The IAM service role ARN for the data source.'
            type: '- (Required) The type of the DataSource. Valid values: AWS_LAMBDA, AMAZON_DYNAMODB, AMAZON_ELASTICSEARCH, HTTP, NONE, RELATIONAL_DATABASE.'
        importStatements: []
    aws_appsync_domain_name:
        subCategory: AppSync
        description: Provides an AppSync Domain Name.
        name: aws_appsync_domain_name
        title: aws_appsync_domain_name
        examples:
            - name: example
              manifest: |-
                {
                  "certificate_arn": "${aws_acm_certificate.example.arn}",
                  "domain_name": "api.example.com"
                }
              references:
                certificate_arn: aws_acm_certificate.example.arn
        argumentDocs:
            appsync_domain_name: '- The domain name that AppSync provides.'
            certificate_arn: '- (Required) The Amazon Resource Name (ARN) of the certificate. This can be an Certificate Manager (ACM) certificate or an Identity and Access Management (IAM) server certificate. The certifiacte must reside in us-east-1.'
            description: '- (Optional)  A description of the Domain Name.'
            domain_name: '- (Required) The domain name.'
            hosted_zone_id: '- The ID of your Amazon Route 53 hosted zone.'
            id: '- The Appsync Domain Name.'
        importStatements: []
    aws_appsync_domain_name_api_association:
        subCategory: AppSync
        description: Provides an AppSync API Association.
        name: aws_appsync_domain_name_api_association
        title: aws_appsync_domain_name_api_association
        examples:
            - name: example
              manifest: |-
                {
                  "api_id": "${aws_appsync_graphql_api.example.id}",
                  "domain_name": "${aws_appsync_domain_name.example.domain_name}"
                }
              references:
                api_id: aws_appsync_graphql_api.example.id
                domain_name: aws_appsync_domain_name.example.domain_name
        argumentDocs:
            api_id: '- (Required) The API ID.'
            domain_name: '- (Required) The Appsync domain name.'
            id: '- The Appsync domain name.'
        importStatements: []
    aws_appsync_function:
        subCategory: AppSync
        description: Provides an AppSync Function.
        name: aws_appsync_function
        title: aws_appsync_function
        examples:
            - name: example
              manifest: |-
                {
                  "api_id": "${aws_appsync_graphql_api.example.id}",
                  "data_source": "${aws_appsync_datasource.example.name}",
                  "name": "example",
                  "request_mapping_template": "{\n    \"version\": \"2018-05-29\",\n    \"method\": \"GET\",\n    \"resourcePath\": \"/\",\n    \"params\":{\n        \"headers\": $utils.http.copyheaders($ctx.request.headers)\n    }\n}\n",
                  "response_mapping_template": "#if($ctx.result.statusCode == 200)\n    $ctx.result.body\n#else\n    $utils.appendError($ctx.result.body, $ctx.result.statusCode)\n#end\n"
                }
              references:
                api_id: aws_appsync_graphql_api.example.id
                data_source: aws_appsync_datasource.example.name
              dependencies:
                aws_appsync_datasource.example: |-
                    {
                      "api_id": "${aws_appsync_graphql_api.example.id}",
                      "http_config": [
                        {
                          "endpoint": "http://example.com"
                        }
                      ],
                      "name": "example",
                      "type": "HTTP"
                    }
                aws_appsync_graphql_api.example: |-
                    {
                      "authentication_type": "API_KEY",
                      "name": "example",
                      "schema": "type Mutation {\n  putPost(id: ID!, title: String!): Post\n}\n\ntype Post {\n  id: ID!\n  title: String!\n}\n\ntype Query {\n  singlePost(id: ID!): Post\n}\n\nschema {\n  query: Query\n  mutation: Mutation\n}\n"
                    }
        argumentDocs:
            api_id: '- (Required) The ID of the associated AppSync API.'
            arn: '- The ARN of the Function object.'
            conflict_detection: '- (Optional) The Conflict Detection strategy to use. Valid values are NONE and VERSION.'
            conflict_handler: '- (Optional) The Conflict Resolution strategy to perform in the event of a conflict. Valid values are NONE, OPTIMISTIC_CONCURRENCY, AUTOMERGE, and LAMBDA.'
            data_source: '- (Required) The Function DataSource name.'
            description: '- (Optional) The Function description.'
            function_id: '- A unique ID representing the Function object.'
            function_version: '- (Optional) The version of the request mapping template. Currently the supported value is 2018-05-29.'
            id: '- API Function ID (Formatted as ApiId-FunctionId)'
            lambda_conflict_handler_arn: '- (Optional) The Amazon Resource Name (ARN) for the Lambda function to use as the Conflict Handler.'
            lambda_conflict_handler_config: '- (Optional) The Lambda Conflict Handler Config when configuring LAMBDA as the Conflict Handler. See Lambda Conflict Handler Config.'
            max_batch_size: '- (Optional) The maximum batching size for a resolver. Valid values are between 0 and 2000.'
            name: '- (Required) The Function name. The function name does not have to be unique.'
            request_mapping_template: '- (Required) The Function request mapping template. Functions support only the 2018-05-29 version of the request mapping template.'
            response_mapping_template: '- (Required) The Function response mapping template.'
            sync_config: '- (Optional) Describes a Sync configuration for a resolver. See Sync Config.'
        importStatements: []
    aws_appsync_graphql_api:
        subCategory: AppSync
        description: Provides an AppSync GraphQL API.
        name: aws_appsync_graphql_api
        title: aws_appsync_graphql_api
        examples:
            - name: example
              manifest: |-
                {
                  "authentication_type": "API_KEY",
                  "name": "example"
                }
            - name: example
              manifest: |-
                {
                  "authentication_type": "AWS_IAM",
                  "name": "example"
                }
            - name: example
              manifest: |-
                {
                  "authentication_type": "AMAZON_COGNITO_USER_POOLS",
                  "name": "example",
                  "user_pool_config": [
                    {
                      "aws_region": "${data.aws_region.current.name}",
                      "default_action": "DENY",
                      "user_pool_id": "${aws_cognito_user_pool.example.id}"
                    }
                  ]
                }
              references:
                user_pool_config.aws_region: data.aws_region.current.name
                user_pool_config.user_pool_id: aws_cognito_user_pool.example.id
            - name: example
              manifest: |-
                {
                  "authentication_type": "OPENID_CONNECT",
                  "name": "example",
                  "openid_connect_config": [
                    {
                      "issuer": "https://example.com"
                    }
                  ]
                }
            - name: example
              manifest: |-
                {
                  "authentication_type": "AWS_LAMBDA",
                  "lambda_authorizer_config": [
                    {
                      "authorizer_uri": "arn:aws:lambda:us-east-1:123456789012:function:custom_lambda_authorizer"
                    }
                  ],
                  "name": "example"
                }
              dependencies:
                aws_lambda_permission.appsync_lambda_authorizer: |-
                    {
                      "action": "lambda:InvokeFunction",
                      "function_name": "custom_lambda_authorizer",
                      "principal": "appsync.amazonaws.com",
                      "source_arn": "${aws_appsync_graphql_api.example.arn}",
                      "statement_id": "appsync_lambda_authorizer"
                    }
            - name: example
              manifest: |-
                {
                  "additional_authentication_provider": [
                    {
                      "authentication_type": "AWS_IAM"
                    }
                  ],
                  "authentication_type": "API_KEY",
                  "name": "example"
                }
            - name: example
              manifest: |-
                {
                  "authentication_type": "AWS_IAM",
                  "name": "example",
                  "schema": "schema {\n\tquery: Query\n}\ntype Query {\n  test: Int\n}\n"
                }
            - name: example
              manifest: |-
                {
                  "log_config": [
                    {
                      "cloudwatch_logs_role_arn": "${aws_iam_role.example.arn}",
                      "field_log_level": "ERROR"
                    }
                  ]
                }
              references:
                log_config.cloudwatch_logs_role_arn: aws_iam_role.example.arn
              dependencies:
                aws_iam_role.example: |-
                    {
                      "assume_role_policy": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n        \"Effect\": \"Allow\",\n        \"Principal\": {\n            \"Service\": \"appsync.amazonaws.com\"\n        },\n        \"Action\": \"sts:AssumeRole\"\n        }\n    ]\n}\n",
                      "name": "example"
                    }
                aws_iam_role_policy_attachment.example: |-
                    {
                      "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSAppSyncPushToCloudWatchLogs",
                      "role": "${aws_iam_role.example.name}"
                    }
            - name: example
              manifest: |-
                {
                  "authentication_type": "API_KEY",
                  "name": "example"
                }
              dependencies:
                aws_wafv2_web_acl.example: |-
                    {
                      "default_action": [
                        {
                          "allow": [
                            {}
                          ]
                        }
                      ],
                      "description": "Example of a managed rule.",
                      "name": "managed-rule-example",
                      "rule": [
                        {
                          "name": "rule-1",
                          "override_action": [
                            {
                              "block": [
                                {}
                              ]
                            }
                          ],
                          "priority": 1,
                          "statement": [
                            {
                              "managed_rule_group_statement": [
                                {
                                  "name": "AWSManagedRulesCommonRuleSet",
                                  "vendor_name": "AWS"
                                }
                              ]
                            }
                          ],
                          "visibility_config": [
                            {
                              "cloudwatch_metrics_enabled": false,
                              "metric_name": "friendly-rule-metric-name",
                              "sampled_requests_enabled": false
                            }
                          ]
                        }
                      ],
                      "scope": "REGIONAL",
                      "visibility_config": [
                        {
                          "cloudwatch_metrics_enabled": false,
                          "metric_name": "friendly-metric-name",
                          "sampled_requests_enabled": false
                        }
                      ]
                    }
                aws_wafv2_web_acl_association.example: |-
                    {
                      "resource_arn": "${aws_appsync_graphql_api.example.arn}",
                      "web_acl_arn": "${aws_wafv2_web_acl.example.arn}"
                    }
        argumentDocs:
            additional_authentication_provider: '- (Optional) One or more additional authentication providers for the GraphqlApi. Defined below.'
            additional_authentication_provider.authentication_type: '- (Required) The authentication type. Valid values: API_KEY, AWS_IAM, AMAZON_COGNITO_USER_POOLS, OPENID_CONNECT, AWS_LAMBDA'
            additional_authentication_provider.openid_connect_config: '- (Optional) Nested argument containing OpenID Connect configuration. Defined below.'
            additional_authentication_provider.user_pool_config: '- (Optional) The Amazon Cognito User Pool configuration. Defined below.'
            arn: '- The ARN'
            authentication_type: '- (Required) The authentication type. Valid values: API_KEY, AWS_IAM, AMAZON_COGNITO_USER_POOLS, OPENID_CONNECT, AWS_LAMBDA'
            id: '- API ID'
            lambda_authorizer_config: '- (Optional) Nested argument containing Lambda authorizer configuration. Defined below.'
            lambda_authorizer_config.authorizer_result_ttl_in_seconds: '- (Optional) The number of seconds a response should be cached for. The default is 5 minutes (300 seconds). The Lambda function can override this by returning a ttlOverride key in its response. A value of 0 disables caching of responses. Minimum value of 0. Maximum value of 3600.'
            lambda_authorizer_config.authorizer_uri: '- (Required) The ARN of the Lambda function to be called for authorization. Note: This Lambda function must have a resource-based policy assigned to it, to allow lambda:InvokeFunction from service principal appsync.amazonaws.com.'
            lambda_authorizer_config.identity_validation_expression: '- (Optional) A regular expression for validation of tokens before the Lambda function is called.'
            log_config: '- (Optional) Nested argument containing logging configuration. Defined below.'
            log_config.cloudwatch_logs_role_arn: '- (Required) Amazon Resource Name of the service role that AWS AppSync will assume to publish to Amazon CloudWatch logs in your account.'
            log_config.exclude_verbose_content: '- (Optional) Set to TRUE to exclude sections that contain information such as headers, context, and evaluated mapping templates, regardless of logging  level. Valid values: true, false. Default value: false'
            log_config.field_log_level: '- (Required) Field logging level. Valid values: ALL, ERROR, NONE.'
            name: '- (Required) A user-supplied name for the GraphqlApi.'
            openid_connect_config: '- (Optional) Nested argument containing OpenID Connect configuration. Defined below.'
            openid_connect_config.auth_ttl: '- (Optional) Number of milliseconds a token is valid after being authenticated.'
            openid_connect_config.client_id: '- (Optional) Client identifier of the Relying party at the OpenID identity provider. This identifier is typically obtained when the Relying party is registered with the OpenID identity provider. You can specify a regular expression so the AWS AppSync can validate against multiple client identifiers at a time.'
            openid_connect_config.iat_ttl: '- (Optional) Number of milliseconds a token is valid after being issued to a user.'
            openid_connect_config.issuer: '- (Required) Issuer for the OpenID Connect configuration. The issuer returned by discovery MUST exactly match the value of iss in the ID Token.'
            schema: '- (Optional) The schema definition, in GraphQL schema language format. Terraform cannot perform drift detection of this configuration.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            uris: '- Map of URIs associated with the APIE.g., uris["GRAPHQL"] = https://ID.appsync-api.REGION.amazonaws.com/graphql'
            user_pool_config: '- (Optional) The Amazon Cognito User Pool configuration. Defined below.'
            user_pool_config.app_id_client_regex: '- (Optional) A regular expression for validating the incoming Amazon Cognito User Pool app client ID.'
            user_pool_config.aws_region: '- (Optional) The AWS region in which the user pool was created.'
            user_pool_config.default_action: '- (Required only if Cognito is used as the default auth provider) The action that you want your GraphQL API to take when a request that uses Amazon Cognito User Pool authentication doesn''t match the Amazon Cognito User Pool configuration. Valid: ALLOW and DENY'
            user_pool_config.user_pool_id: '- (Required) The user pool ID.'
            xray_enabled: '- (Optional) Whether tracing with X-ray is enabled. Defaults to false.'
        importStatements: []
    aws_appsync_resolver:
        subCategory: AppSync
        description: Provides an AppSync Resolver.
        name: aws_appsync_resolver
        title: aws_appsync_resolver
        examples:
            - name: test
              manifest: |-
                {
                  "api_id": "${aws_appsync_graphql_api.test.id}",
                  "caching_config": [
                    {
                      "caching_keys": [
                        "$context.identity.sub",
                        "$context.arguments.id"
                      ],
                      "ttl": 60
                    }
                  ],
                  "data_source": "${aws_appsync_datasource.test.name}",
                  "field": "singlePost",
                  "request_template": "{\n    \"version\": \"2018-05-29\",\n    \"method\": \"GET\",\n    \"resourcePath\": \"/\",\n    \"params\":{\n        \"headers\": $utils.http.copyheaders($ctx.request.headers)\n    }\n}\n",
                  "response_template": "#if($ctx.result.statusCode == 200)\n    $ctx.result.body\n#else\n    $utils.appendError($ctx.result.body, $ctx.result.statusCode)\n#end\n",
                  "type": "Query"
                }
              references:
                api_id: aws_appsync_graphql_api.test.id
                data_source: aws_appsync_datasource.test.name
              dependencies:
                aws_appsync_datasource.test: |-
                    {
                      "api_id": "${aws_appsync_graphql_api.test.id}",
                      "http_config": [
                        {
                          "endpoint": "http://example.com"
                        }
                      ],
                      "name": "tf_example",
                      "type": "HTTP"
                    }
                aws_appsync_graphql_api.test: |-
                    {
                      "authentication_type": "API_KEY",
                      "name": "tf-example",
                      "schema": "type Mutation {\n\tputPost(id: ID!, title: String!): Post\n}\n\ntype Post {\n\tid: ID!\n\ttitle: String!\n}\n\ntype Query {\n\tsinglePost(id: ID!): Post\n}\n\nschema {\n\tquery: Query\n\tmutation: Mutation\n}\n"
                    }
            - name: Mutation_pipelineTest
              manifest: |-
                {
                  "api_id": "${aws_appsync_graphql_api.test.id}",
                  "field": "pipelineTest",
                  "kind": "PIPELINE",
                  "pipeline_config": [
                    {
                      "functions": [
                        "${aws_appsync_function.test1.function_id}",
                        "${aws_appsync_function.test2.function_id}",
                        "${aws_appsync_function.test3.function_id}"
                      ]
                    }
                  ],
                  "request_template": "{}",
                  "response_template": "$util.toJson($ctx.result)",
                  "type": "Mutation"
                }
              references:
                api_id: aws_appsync_graphql_api.test.id
              dependencies:
                aws_appsync_datasource.test: |-
                    {
                      "api_id": "${aws_appsync_graphql_api.test.id}",
                      "http_config": [
                        {
                          "endpoint": "http://example.com"
                        }
                      ],
                      "name": "tf_example",
                      "type": "HTTP"
                    }
                aws_appsync_graphql_api.test: |-
                    {
                      "authentication_type": "API_KEY",
                      "name": "tf-example",
                      "schema": "type Mutation {\n\tputPost(id: ID!, title: String!): Post\n}\n\ntype Post {\n\tid: ID!\n\ttitle: String!\n}\n\ntype Query {\n\tsinglePost(id: ID!): Post\n}\n\nschema {\n\tquery: Query\n\tmutation: Mutation\n}\n"
                    }
        argumentDocs:
            api_id: '- (Required) The API ID for the GraphQL API.'
            arn: '- The ARN'
            caching_config: '- (Optional) The CachingConfig.'
            caching_keys: '- (Optional) The list of caching key.'
            conflict_detection: '- (Optional) The Conflict Detection strategy to use. Valid values are NONE and VERSION.'
            conflict_handler: '- (Optional) The Conflict Resolution strategy to perform in the event of a conflict. Valid values are NONE, OPTIMISTIC_CONCURRENCY, AUTOMERGE, and LAMBDA.'
            data_source: '- (Optional) The DataSource name.'
            field: '- (Required) The field name from the schema defined in the GraphQL API.'
            functions: '- (Required) The list of Function ID.'
            kind: '- (Optional) The resolver type. Valid values are UNIT and PIPELINE.'
            lambda_conflict_handler_arn: '- (Optional) The Amazon Resource Name (ARN) for the Lambda function to use as the Conflict Handler.'
            lambda_conflict_handler_config: '- (Optional) The Lambda Conflict Handler Config when configuring LAMBDA as the Conflict Handler. See Lambda Conflict Handler Config.'
            max_batch_size: '- (Optional) The maximum batching size for a resolver. Valid values are between 0 and 2000.'
            pipeline_config: '- (Optional) The PipelineConfig.'
            request_template: '- (Optional) The request mapping template for UNIT resolver or ''before mapping template'' for PIPELINE resolver. Required for non-Lambda resolvers.'
            response_template: '- (Optional) The response mapping template for UNIT resolver or ''after mapping template'' for PIPELINE resolver. Required for non-Lambda resolvers.'
            sync_config: '- (Optional) Describes a Sync configuration for a resolver. See Sync Config.'
            ttl: '- (Optional) The TTL in seconds.'
            type: '- (Required) The type name from the schema defined in the GraphQL API.'
        importStatements: []
    aws_athena_data_catalog:
        subCategory: Athena
        description: Provides an Athena data catalog.
        name: aws_athena_data_catalog
        title: aws_athena_data_catalog
        examples:
            - name: example
              manifest: |-
                {
                  "description": "Example Athena data catalog",
                  "name": "athena-data-catalog",
                  "parameters": {
                    "function": "arn:aws:lambda:eu-central-1:123456789012:function:not-important-lambda-function"
                  },
                  "tags": {
                    "Name": "example-athena-data-catalog"
                  },
                  "type": "LAMBDA"
                }
            - name: example
              manifest: |-
                {
                  "description": "Hive based Data Catalog",
                  "name": "hive-data-catalog",
                  "parameters": {
                    "metadata-function": "arn:aws:lambda:eu-central-1:123456789012:function:not-important-lambda-function"
                  },
                  "type": "HIVE"
                }
            - name: example
              manifest: |-
                {
                  "description": "Glue based Data Catalog",
                  "name": "glue-data-catalog",
                  "parameters": {
                    "catalog-id": "123456789012"
                  },
                  "type": "GLUE"
                }
            - name: example
              manifest: |-
                {
                  "description": "Lambda based Data Catalog",
                  "name": "lambda-data-catalog",
                  "parameters": {
                    "metadata-function": "arn:aws:lambda:eu-central-1:123456789012:function:not-important-lambda-function-1",
                    "record-function": "arn:aws:lambda:eu-central-1:123456789012:function:not-important-lambda-function-2"
                  },
                  "type": "LAMBDA"
                }
        argumentDocs:
            arn: '- ARN of the data catalog.'
            description: '- (Required) A description of the data catalog.'
            id: '- Name of the data catalog.'
            name: '- (Required) The name of the data catalog. The catalog name must be unique for the AWS account and can use a maximum of 128 alphanumeric, underscore, at sign, or hyphen characters.'
            parameters: '- (Required) Key value pairs that specifies the Lambda function or functions to use for the data catalog. The mapping used depends on the catalog type.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            type: '- (Required) The type of data catalog: LAMBDA for a federated catalog, GLUE for AWS Glue Catalog, or HIVE for an external hive metastore.'
        importStatements: []
    aws_athena_database:
        subCategory: Athena
        description: Provides an Athena database.
        name: aws_athena_database
        title: aws_athena_database
        examples:
            - name: example
              manifest: |-
                {
                  "bucket": "${aws_s3_bucket.example.bucket}",
                  "name": "database_name"
                }
              references:
                bucket: aws_s3_bucket.example.bucket
              dependencies:
                aws_s3_bucket.example: |-
                    {
                      "bucket": "example"
                    }
            - name: example
              manifest: |-
                {
                  "bucket": "${aws_s3_bucket.example.bucket}",
                  "lifecycle": [
                    {
                      "ignore_changes": [
                        "${bucket}"
                      ]
                    }
                  ],
                  "name": "database_name"
                }
              references:
                bucket: aws_s3_bucket.example.bucket
        argumentDocs:
            acl_configuration: '- (Optional) Indicates that an Amazon S3 canned ACL should be set to control ownership of stored query results. See ACL Configuration below.'
            bucket: '- (Required) Name of S3 bucket to save the results of the query execution.'
            comment: '- (Optional) Description of the database.'
            encryption_configuration: '- (Optional) The encryption key block AWS Athena uses to decrypt the data in S3, such as an AWS Key Management Service (AWS KMS) key. See Encryption Configuration below.'
            encryption_option: '- (Required) The type of key; one of SSE_S3, SSE_KMS, CSE_KMS'
            expected_bucket_owner: '- (Optional) The AWS account ID that you expect to be the owner of the Amazon S3 bucket.'
            force_destroy: '- (Optional, Default: false) A boolean that indicates all tables should be deleted from the database so that the database can be destroyed without error. The tables are not recoverable.'
            id: '- The database name'
            kms_key: '- (Optional) The KMS key ARN or ID; required for key types SSE_KMS and CSE_KMS.'
            name: '- (Required) Name of the database to create.'
            properties: '- (Optional) A key-value map of custom metadata properties for the database definition.'
            s3_acl_option: '- (Required) The Amazon S3 canned ACL that Athena should specify when storing query results. Valid value is BUCKET_OWNER_FULL_CONTROL.'
        importStatements: []
    aws_athena_named_query:
        subCategory: Athena
        description: Provides an Athena Named Query resource.
        name: aws_athena_named_query
        title: aws_athena_named_query
        examples:
            - name: foo
              manifest: |-
                {
                  "database": "${aws_athena_database.hoge.name}",
                  "name": "bar",
                  "query": "SELECT * FROM ${aws_athena_database.hoge.name} limit 10;",
                  "workgroup": "${aws_athena_workgroup.test.id}"
                }
              references:
                database: aws_athena_database.hoge.name
                workgroup: aws_athena_workgroup.test.id
              dependencies:
                aws_athena_database.hoge: |-
                    {
                      "bucket": "${aws_s3_bucket.hoge.id}",
                      "name": "users"
                    }
                aws_athena_workgroup.test: |-
                    {
                      "configuration": [
                        {
                          "result_configuration": [
                            {
                              "encryption_configuration": [
                                {
                                  "encryption_option": "SSE_KMS",
                                  "kms_key_arn": "${aws_kms_key.test.arn}"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "name": "example"
                    }
                aws_kms_key.test: |-
                    {
                      "deletion_window_in_days": 7,
                      "description": "Athena KMS Key"
                    }
                aws_s3_bucket.hoge: |-
                    {
                      "bucket": "tf-test"
                    }
        argumentDocs:
            database: '- (Required) The database to which the query belongs.'
            description: '- (Optional) A brief explanation of the query. Maximum length of 1024.'
            id: '- The unique ID of the query.'
            name: '- (Required) The plain language name for the query. Maximum length of 128.'
            query: '- (Required) The text of the query itself. In other words, all query statements. Maximum length of 262144.'
            workgroup: '- (Optional) The workgroup to which the query belongs. Defaults to primary'
        importStatements: []
    aws_athena_workgroup:
        subCategory: Athena
        description: Manages an Athena Workgroup.
        name: aws_athena_workgroup
        title: aws_athena_workgroup
        examples:
            - name: example
              manifest: |-
                {
                  "configuration": [
                    {
                      "enforce_workgroup_configuration": true,
                      "publish_cloudwatch_metrics_enabled": true,
                      "result_configuration": [
                        {
                          "encryption_configuration": [
                            {
                              "encryption_option": "SSE_KMS",
                              "kms_key_arn": "${aws_kms_key.example.arn}"
                            }
                          ],
                          "output_location": "s3://${aws_s3_bucket.example.bucket}/output/"
                        }
                      ]
                    }
                  ],
                  "name": "example"
                }
              references:
                configuration.result_configuration.encryption_configuration.kms_key_arn: aws_kms_key.example.arn
        argumentDocs:
            acl_configuration: '- (Optional) Indicates that an Amazon S3 canned ACL should be set to control ownership of stored query results. See ACL Configuration below.'
            arn: '- Amazon Resource Name (ARN) of the workgroup'
            bytes_scanned_cutoff_per_query: '- (Optional) Integer for the upper data usage limit (cutoff) for the amount of bytes a single query in a workgroup is allowed to scan. Must be at least 10485760.'
            configuration: '- (Optional) Configuration block with various settings for the workgroup. Documented below.'
            description: '- (Optional) Description of the workgroup.'
            effective_engine_version: '-  The engine version on which the query runs. If selected_engine_version is set to AUTO, the effective engine version is chosen by Athena.'
            encryption_configuration: '- (Optional) Configuration block with encryption settings. See Encryption Configuration below.'
            encryption_option: '- (Required) Indicates whether Amazon S3 server-side encryption with Amazon S3-managed keys (SSE_S3), server-side encryption with KMS-managed keys (SSE_KMS), or client-side encryption with KMS-managed keys (CSE_KMS) is used. If a query runs in a workgroup and the workgroup overrides client-side settings, then the workgroup''s setting for encryption is used. It specifies whether query results must be encrypted, for all queries that run in this workgroup.'
            enforce_workgroup_configuration: '- (Optional) Boolean whether the settings for the workgroup override client-side settings. For more information, see Workgroup Settings Override Client-Side Settings. Defaults to true.'
            engine_version: '- (Optional) Configuration block for the Athena Engine Versioning. For more information, see Athena Engine Versioning. See Engine Version below.'
            expected_bucket_owner: '- (Optional) The AWS account ID that you expect to be the owner of the Amazon S3 bucket.'
            force_destroy: '- (Optional) The option to delete the workgroup and its contents even if the workgroup contains any named queries.'
            id: '- The workgroup name'
            kms_key_arn: '- (Optional) For SSE_KMS and CSE_KMS, this is the KMS key Amazon Resource Name (ARN).'
            name: '- (Required) Name of the workgroup.'
            output_location: '- (Optional) The location in Amazon S3 where your query results are stored, such as s3://path/to/query/bucket/. For more information, see Queries and Query Result Files.'
            publish_cloudwatch_metrics_enabled: '- (Optional) Boolean whether Amazon CloudWatch metrics are enabled for the workgroup. Defaults to true.'
            requester_pays_enabled: '- (Optional) If set to true , allows members assigned to a workgroup to reference Amazon S3 Requester Pays buckets in queries. If set to false , workgroup members cannot query data from Requester Pays buckets, and queries that retrieve data from Requester Pays buckets cause an error. The default is false . For more information about Requester Pays buckets, see Requester Pays Buckets in the Amazon Simple Storage Service Developer Guide.'
            result_configuration: '- (Optional) Configuration block with result settings. See Result Configuration below.'
            s3_acl_option: '- (Required) The Amazon S3 canned ACL that Athena should specify when storing query results. Valid value is BUCKET_OWNER_FULL_CONTROL.'
            selected_engine_version: '- (Optional) The requested engine version. Defaults to AUTO.'
            state: '- (Optional) State of the workgroup. Valid values are DISABLED or ENABLED. Defaults to ENABLED.'
            tags: '- (Optional) Key-value map of resource tags for the workgroup. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_autoscaling_attachment:
        subCategory: Auto Scaling
        description: Provides an AutoScaling Group Attachment resource.
        name: aws_autoscaling_attachment
        title: aws_autoscaling_attachment
        examples:
            - name: asg_attachment_bar
              manifest: |-
                {
                  "autoscaling_group_name": "${aws_autoscaling_group.asg.id}",
                  "elb": "${aws_elb.bar.id}"
                }
              references:
                autoscaling_group_name: aws_autoscaling_group.asg.id
                elb: aws_elb.bar.id
            - name: asg_attachment_bar
              manifest: |-
                {
                  "autoscaling_group_name": "${aws_autoscaling_group.asg.id}",
                  "lb_target_group_arn": "${aws_lb_target_group.test.arn}"
                }
              references:
                autoscaling_group_name: aws_autoscaling_group.asg.id
                lb_target_group_arn: aws_lb_target_group.test.arn
            - name: asg_attachment_bar
              manifest: |-
                {
                  "autoscaling_group_name": "${aws_autoscaling_group.asg.id}",
                  "elb": "${aws_elb.test.id}"
                }
              references:
                autoscaling_group_name: aws_autoscaling_group.asg.id
                elb: aws_elb.test.id
              dependencies:
                aws_autoscaling_group.asg: |-
                    {
                      "lifecycle": [
                        {
                          "ignore_changes": [
                            "${load_balancers}",
                            "${target_group_arns}"
                          ]
                        }
                      ]
                    }
        argumentDocs:
            alb_target_group_arn: '- (Optional, Deprecated use lb_target_group_arn instead) The ARN of an ALB Target Group.'
            autoscaling_group_name: '- (Required) Name of ASG to associate with the ELB.'
            elb: '- (Optional) The name of the ELB.'
            lb_target_group_arn: '- (Optional) The ARN of a load balancer target group.'
        importStatements: []
    aws_autoscaling_group:
        subCategory: Auto Scaling
        description: Provides an Auto Scaling Group resource.
        name: aws_autoscaling_group
        title: aws_autoscaling_group
        examples:
            - name: bar
              manifest: |-
                {
                  "desired_capacity": 4,
                  "force_delete": true,
                  "health_check_grace_period": 300,
                  "health_check_type": "ELB",
                  "initial_lifecycle_hook": [
                    {
                      "default_result": "CONTINUE",
                      "heartbeat_timeout": 2000,
                      "lifecycle_transition": "autoscaling:EC2_INSTANCE_LAUNCHING",
                      "name": "foobar",
                      "notification_metadata": "{\n  \"foo\": \"bar\"\n}\n",
                      "notification_target_arn": "arn:aws:sqs:us-east-1:444455556666:queue1*",
                      "role_arn": "arn:aws:iam::123456789012:role/S3Access"
                    }
                  ],
                  "launch_configuration": "${aws_launch_configuration.foobar.name}",
                  "max_size": 5,
                  "min_size": 2,
                  "name": "foobar3-terraform-test",
                  "placement_group": "${aws_placement_group.test.id}",
                  "tag": [
                    {
                      "key": "foo",
                      "propagate_at_launch": true,
                      "value": "bar"
                    },
                    {
                      "key": "lorem",
                      "propagate_at_launch": false,
                      "value": "ipsum"
                    }
                  ],
                  "timeouts": [
                    {
                      "delete": "15m"
                    }
                  ],
                  "vpc_zone_identifier": [
                    "${aws_subnet.example1.id}",
                    "${aws_subnet.example2.id}"
                  ]
                }
              references:
                launch_configuration: aws_launch_configuration.foobar.name
                placement_group: aws_placement_group.test.id
              dependencies:
                aws_placement_group.test: |-
                    {
                      "name": "test",
                      "strategy": "cluster"
                    }
            - name: bar
              manifest: |-
                {
                  "availability_zones": [
                    "us-east-1a"
                  ],
                  "desired_capacity": 1,
                  "launch_template": [
                    {
                      "id": "${aws_launch_template.foobar.id}",
                      "version": "$Latest"
                    }
                  ],
                  "max_size": 1,
                  "min_size": 1
                }
              references:
                launch_template.id: aws_launch_template.foobar.id
              dependencies:
                aws_launch_template.foobar: |-
                    {
                      "image_id": "ami-1a2b3c",
                      "instance_type": "t2.micro",
                      "name_prefix": "foobar"
                    }
            - name: example
              manifest: |-
                {
                  "availability_zones": [
                    "us-east-1a"
                  ],
                  "desired_capacity": 1,
                  "max_size": 1,
                  "min_size": 1,
                  "mixed_instances_policy": [
                    {
                      "launch_template": [
                        {
                          "launch_template_specification": [
                            {
                              "launch_template_id": "${aws_launch_template.example.id}"
                            }
                          ],
                          "override": [
                            {
                              "instance_type": "c4.large",
                              "weighted_capacity": "3"
                            },
                            {
                              "instance_type": "c3.large",
                              "weighted_capacity": "2"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              references:
                mixed_instances_policy.launch_template.launch_template_specification.launch_template_id: aws_launch_template.example.id
              dependencies:
                aws_launch_template.example: |-
                    {
                      "image_id": "${data.aws_ami.example.id}",
                      "instance_type": "c5.large",
                      "name_prefix": "example"
                    }
            - name: example
              manifest: |-
                {
                  "capacity_rebalance": true,
                  "desired_capacity": 12,
                  "max_size": 15,
                  "min_size": 12,
                  "mixed_instances_policy": [
                    {
                      "instances_distribution": [
                        {
                          "on_demand_base_capacity": 0,
                          "on_demand_percentage_above_base_capacity": 25,
                          "spot_allocation_strategy": "capacity-optimized"
                        }
                      ],
                      "launch_template": [
                        {
                          "launch_template_specification": [
                            {
                              "launch_template_id": "${aws_launch_template.example.id}"
                            }
                          ],
                          "override": [
                            {
                              "instance_type": "c4.large",
                              "weighted_capacity": "3"
                            },
                            {
                              "instance_type": "c3.large",
                              "weighted_capacity": "2"
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "vpc_zone_identifier": [
                    "${aws_subnet.example1.id}",
                    "${aws_subnet.example2.id}"
                  ]
                }
              references:
                mixed_instances_policy.launch_template.launch_template_specification.launch_template_id: aws_launch_template.example.id
              dependencies:
                aws_launch_template.example: |-
                    {
                      "image_id": "${data.aws_ami.example.id}",
                      "instance_type": "c5.large",
                      "name_prefix": "example"
                    }
            - name: example
              manifest: |-
                {
                  "availability_zones": [
                    "us-east-1a"
                  ],
                  "desired_capacity": 1,
                  "max_size": 1,
                  "min_size": 1,
                  "mixed_instances_policy": [
                    {
                      "launch_template": [
                        {
                          "launch_template_specification": [
                            {
                              "launch_template_id": "${aws_launch_template.example.id}"
                            }
                          ],
                          "override": [
                            {
                              "instance_type": "c4.large",
                              "weighted_capacity": "3"
                            },
                            {
                              "instance_type": "c6g.large",
                              "launch_template_specification": [
                                {
                                  "launch_template_id": "${aws_launch_template.example2.id}"
                                }
                              ],
                              "weighted_capacity": "2"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              references:
                mixed_instances_policy.launch_template.launch_template_specification.launch_template_id: aws_launch_template.example.id
                mixed_instances_policy.launch_template.override.launch_template_specification.launch_template_id: aws_launch_template.example2.id
              dependencies:
                aws_launch_template.example: |-
                    {
                      "image_id": "${data.aws_ami.example.id}",
                      "instance_type": "c5.large",
                      "name_prefix": "example"
                    }
                aws_launch_template.example2: |-
                    {
                      "image_id": "${data.aws_ami.example2.id}",
                      "name_prefix": "example2"
                    }
            - name: example
              manifest: |-
                {
                  "availability_zones": [
                    "us-east-1a"
                  ],
                  "desired_capacity": 1,
                  "max_size": 1,
                  "min_size": 1,
                  "mixed_instances_policy": [
                    {
                      "launch_template": [
                        {
                          "launch_template_specification": [
                            {
                              "launch_template_id": "${aws_launch_template.example.id}"
                            }
                          ],
                          "override": [
                            {
                              "instance_requirements": [
                                {
                                  "memory_mib": [
                                    {
                                      "min": 1000
                                    }
                                  ],
                                  "vcpu_count": [
                                    {
                                      "min": 4
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              references:
                mixed_instances_policy.launch_template.launch_template_specification.launch_template_id: aws_launch_template.example.id
              dependencies:
                aws_launch_template.example: |-
                    {
                      "image_id": "${data.aws_ami.example.id}",
                      "instance_type": "c5.large",
                      "name_prefix": "example"
                    }
            - name: bar
              manifest: |-
                {
                  "launch_configuration": "${aws_launch_configuration.foobar.name}",
                  "max_size": 5,
                  "min_size": 2,
                  "name": "foobar3-terraform-test",
                  "tags": "${concat(\n    [\n      {\n        \"key\"                 = \"interpolation1\"\n        \"value\"               = \"value3\"\n        \"propagate_at_launch\" = true\n      },\n      {\n        \"key\"                 = \"interpolation2\"\n        \"value\"               = \"value4\"\n        \"propagate_at_launch\" = true\n      },\n    ],\n    var.extra_tags,\n  )}",
                  "vpc_zone_identifier": [
                    "${aws_subnet.example1.id}",
                    "${aws_subnet.example2.id}"
                  ]
                }
              references:
                launch_configuration: aws_launch_configuration.foobar.name
            - name: example
              manifest: |-
                {
                  "availability_zones": [
                    "us-east-1a"
                  ],
                  "desired_capacity": 1,
                  "instance_refresh": [
                    {
                      "preferences": [
                        {
                          "min_healthy_percentage": 50
                        }
                      ],
                      "strategy": "Rolling",
                      "triggers": [
                        "tag"
                      ]
                    }
                  ],
                  "launch_template": [
                    {
                      "id": "${aws_launch_template.example.id}",
                      "version": "${aws_launch_template.example.latest_version}"
                    }
                  ],
                  "max_size": 2,
                  "min_size": 1,
                  "tag": [
                    {
                      "key": "Key",
                      "propagate_at_launch": true,
                      "value": "Value"
                    }
                  ]
                }
              references:
                launch_template.id: aws_launch_template.example.id
                launch_template.version: aws_launch_template.example.latest_version
              dependencies:
                aws_launch_template.example: |-
                    {
                      "image_id": "${data.aws_ami.example.id}",
                      "instance_type": "t3.nano"
                    }
            - name: example
              manifest: |-
                {
                  "availability_zones": [
                    "us-east-1a"
                  ],
                  "desired_capacity": 1,
                  "max_size": 5,
                  "min_size": 1,
                  "warm_pool": [
                    {
                      "instance_reuse_policy": [
                        {
                          "reuse_on_scale_in": true
                        }
                      ],
                      "max_group_prepared_capacity": 10,
                      "min_size": 1,
                      "pool_state": "Hibernated"
                    }
                  ]
                }
              dependencies:
                aws_launch_template.example: |-
                    {
                      "image_id": "${data.aws_ami.example.id}",
                      "instance_type": "c5.large",
                      "name_prefix": "example"
                    }
        argumentDocs:
            accelerator_count: '- (Optional) Block describing the minimum and maximum number of accelerators (GPUs, FPGAs, or AWS Inferentia chips). Default is no minimum or maximum.'
            accelerator_count.max: '- (Optional) Maximum. Set to 0 to exclude instance types with accelerators.'
            accelerator_count.min: '- (Optional) Minimum.'
            accelerator_manufacturers: '- (Optional) List of accelerator manufacturer names. Default is any manufacturer.'
            accelerator_names: '- (Optional) List of accelerator names. Default is any acclerator.'
            accelerator_total_memory_mib: '- (Optional) Block describing the minimum and maximum total memory of the accelerators. Default is no minimum or maximum.'
            accelerator_total_memory_mib.max: '- (Optional) Maximum.'
            accelerator_total_memory_mib.min: '- (Optional) Minimum.'
            accelerator_types: '- (Optional) List of accelerator types. Default is any accelerator type.'
            arn: '- The ARN for this Auto Scaling Group'
            availability_zones: '- (Optional) A list of one or more availability zones for the group. Used for EC2-Classic, attaching a network interface via id from a launch template and default subnets when not specified with vpc_zone_identifier argument. Conflicts with vpc_zone_identifier.'
            bare_metal: '- (Optional) Indicate whether bare metal instace types should be included, excluded, or required. Default is excluded.'
            baseline_ebs_bandwidth_mbps: '- (Optional) Block describing the minimum and maximum baseline EBS bandwidth, in Mbps. Default is no minimum or maximum.'
            baseline_ebs_bandwidth_mbps.max: '- (Optional) Maximum.'
            baseline_ebs_bandwidth_mbps.min: '- (Optional) Minimum.'
            burstable_performance: '- (Optional) Indicate whether burstable performance instance types should be included, excluded, or required. Default is excluded.'
            capacity_rebalance: '- (Optional) Indicates whether capacity rebalance is enabled. Otherwise, capacity rebalance is disabled.'
            checkpoint_delay: '- (Optional) The number of seconds to wait after a checkpoint. Defaults to 3600.'
            checkpoint_percentages: '- (Optional) List of percentages for each checkpoint. Values must be unique and in ascending order. To replace all instances, the final number must be 100.'
            context: '- (Optional) Reserved.'
            cpu_manufacturers: (Optional) List of CPU manufacturer names. Default is any manufacturer.
            default_cooldown: '- (Optional) The amount of time, in seconds, after a scaling activity completes before another scaling activity can start.'
            default_instance_warmup: '- (Optional) The amount of time, in seconds, until a newly launched instance can contribute to the Amazon CloudWatch metrics. This delay lets an instance finish initializing before Amazon EC2 Auto Scaling aggregates instance metrics, resulting in more reliable usage data. Set this value equal to the amount of time that it takes for resource consumption to become stable after an instance reaches the InService state. (See Set the default instance warmup for an Auto Scaling group)'
            delete: '- (Default 10 minutes) Used for destroying ASG.'
            desired_capacity: |-
                - (Optional) The number of Amazon EC2 instances that
                should be running in the group. (See also Waiting for
                Capacity below.)
            enabled_metrics: '- (Optional) A list of metrics to collect. The allowed values are defined by the underlying AWS API.'
            excluded_instance_types: '- (Optional) List of instance types to exclude. You can use strings with one or more wild cards, represented by an asterisk (*). The following are examples: c5*, m5a.*, r*, *3*. For example, if you specify c5*, you are excluding the entire C5 instance family, which includes all C5a and C5n instance types. If you specify m5a.*, you are excluding all the M5a instance types, but not the M5n instance types. Maximum of 400 entries in the list; each entry is limited to 30 characters. Default is no excluded instance types.'
            force_delete: |-
                - (Optional) Allows deleting the Auto Scaling Group without waiting
                for all instances in the pool to terminate.  You can force an Auto Scaling Group to delete
                even if it's in the process of scaling a resource. Normally, Terraform
                drains all the instances before deleting the group.  This bypasses that
                behavior and potentially leaves resources dangling.
            health_check_grace_period: '- (Optional, Default: 300) Time (in seconds) after instance comes into service before checking health.'
            health_check_type: '- (Optional) "EC2" or "ELB". Controls how health checking is done.'
            id: '- The Auto Scaling Group id.'
            initial_lifecycle_hook: |-
                - (Optional) One or more
                Lifecycle Hooks
                to attach to the Auto Scaling Group before instances are launched. The
                syntax is exactly the same as the separate
                aws_autoscaling_lifecycle_hook
                resource, without the autoscaling_group_name attribute. Please note that this will only work when creating
                a new Auto Scaling Group. For all other use-cases, please use aws_autoscaling_lifecycle_hook resource.
            instance_generations: '- (Optional) List of instance generation names. Default is any generation.'
            instance_refresh: |-
                - (Optional) If this block is configured, start an
                Instance Refresh
                when this Auto Scaling Group is updated. Defined below.
            instance_requirements: '- (Optional) Override the instance type in the Launch Template with instance types that satisfy the requirements.'
            instance_reuse_policy: '- (Optional) Indicates whether instances in the Auto Scaling group can be returned to the warm pool on scale in. The default is to terminate instances in the Auto Scaling group when the group scales in.'
            instance_type: '- (Optional) Override the instance type in the Launch Template.'
            instance_warmup: '- (Optional) The number of seconds until a newly launched instance is configured and ready to use. Default behavior is to use the Auto Scaling Group''s health check grace period.'
            key: '- (Required) Key'
            launch_configuration: '- (Optional) The name of the launch configuration to use.'
            launch_template: '- (Optional) Nested argument with Launch template specification to use to launch instances. See Launch Template below for more details.'
            launch_template.id: '- (Optional) The ID of the launch template. Conflicts with name.'
            launch_template.name: '- (Optional) The name of the launch template. Conflicts with id.'
            launch_template.version: '- (Optional) Template version. Can be version number, $Latest, or $Default. (Default: $Default).'
            launch_template_id: '- (Optional) The ID of the launch template. Conflicts with launch_template_name.'
            launch_template_name: '- (Optional) The name of the launch template. Conflicts with launch_template_id.'
            launch_template_specification: '- (Required) Nested argument defines the Launch Template. Defined below.'
            load_balancers: |-
                (Optional) A list of elastic load balancer names to add to the autoscaling
                group names. Only valid for classic load balancers. For ALBs, use target_group_arns instead.
            local_storage: '- (Optional) Indicate whether instance types with local storage volumes are included, excluded, or required. Default is included.'
            local_storage_types: '- (Optional) List of local storage type names. Default any storage type.'
            max_group_prepared_capacity: '- (Optional) Specifies the total maximum number of instances that are allowed to be in the warm pool or in any state except Terminated for the Auto Scaling group.'
            max_instance_lifetime: (Optional) The maximum amount of time, in seconds, that an instance can be in service, values must be either equal to 0 or between 86400 and 31536000 seconds.
            max_size: '- (Required) The maximum size of the Auto Scaling Group.'
            memory_gib_per_vcpu: '- (Optional) Block describing the minimum and maximum amount of memory (GiB) per vCPU. Default is no minimum or maximum.'
            memory_gib_per_vcpu.max: '- (Optional) Maximum. May be a decimal number, e.g. 0.5.'
            memory_gib_per_vcpu.min: '- (Optional) Minimum. May be a decimal number, e.g. 0.5.'
            memory_mib: '- (Required) Block describing the minimum and maximum amount of memory (MiB). Default is no maximum.'
            memory_mib.max: '- (Optional) Maximum.'
            memory_mib.min: '- (Required) Minimum.'
            metrics_granularity: '- (Optional) The granularity to associate with the metrics to collect. The only valid value is 1Minute. Default is 1Minute.'
            min_elb_capacity: |-
                - (Optional) Setting this causes Terraform to wait for
                this number of instances from this Auto Scaling Group to show up healthy in the
                ELB only on creation. Updates will not wait on ELB instance number changes.
                (See also Waiting for Capacity below.)
            min_healthy_percentage: '- (Optional) The amount of capacity in the Auto Scaling group that must remain healthy during an instance refresh to allow the operation to continue, as a percentage of the desired capacity of the Auto Scaling group. Defaults to 90.'
            min_size: |-
                - (Required) The minimum size of the Auto Scaling Group.
                (See also Waiting for Capacity below.)
            mixed_instances_policy: (Optional) Configuration block containing settings to define launch targets for Auto Scaling groups. See Mixed Instances Policy below for more details.
            mixed_instances_policy.instances_distribution: '- (Optional) Nested argument containing settings on how to mix on-demand and Spot instances in the Auto Scaling group. Defined below.'
            mixed_instances_policy.launch_template: '- (Required) Nested argument containing launch template settings along with the overrides to specify multiple instance types and weights. Defined below.'
            name: '- (Optional) The name of the Auto Scaling Group. By default generated by Terraform. Conflicts with name_prefix.'
            name_prefix: |-
                - (Optional) Creates a unique name beginning with the specified
                prefix. Conflicts with name.
            network_interface_count: '- (Optional) Block describing the minimum and maximum number of network interfaces. Default is no minimum or maximum.'
            network_interface_count.max: '- (Optional) Maximum.'
            network_interface_count.min: '- (Optional) Minimum.'
            on_demand_allocation_strategy: '- (Optional) Strategy to use when launching on-demand instances. Valid values: prioritized. Default: prioritized.'
            on_demand_base_capacity: '- (Optional) Absolute minimum amount of desired capacity that must be fulfilled by on-demand instances. Default: 0.'
            on_demand_max_price_percentage_over_lowest_price: '- (Optional) The price protection threshold for On-Demand Instances. This is the maximum you’ll pay for an On-Demand Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Default is 20.'
            on_demand_percentage_above_base_capacity: '- (Optional) Percentage split between on-demand and Spot instances above the base on-demand capacity. Default: 100.'
            override: '- (Optional) List of nested arguments provides the ability to specify multiple instance types. This will override the same parameter in the launch template. For on-demand instances, Auto Scaling considers the order of preference of instance types to launch based on the order specified in the overrides list. Defined below.'
            placement_group: (Optional) The name of the placement group into which you'll launch your instances, if any.
            pool_state: '- (Optional) Sets the instance state to transition to after the lifecycle hooks finish. Valid values are: Stopped (default), Running or Hibernated.'
            preferences: '- (Optional) Override default parameters for Instance Refresh.'
            propagate_at_launch: |-
                - (Required) Enables propagation of the tag to
                Amazon EC2 instances launched via this ASG
            protect_from_scale_in: |-
                (Optional) Indicates whether newly launched instances
                are automatically protected from termination by Amazon EC2 Auto Scaling when
                scaling in. For more information about preventing instances from terminating
                on scale in, see Using instance scale-in protection
                in the Amazon EC2 Auto Scaling User Guide.
            require_hibernate_support: '- (Optional) Indicate whether instance types must support On-Demand Instance Hibernation, either true or false. Default is false.'
            reuse_on_scale_in: '- (Optional) Specifies whether instances in the Auto Scaling group can be returned to the warm pool on scale in.'
            service_linked_role_arn: (Optional) The ARN of the service-linked role that the ASG will use to call other AWS services
            spot_allocation_strategy: '- (Optional) How to allocate capacity across the Spot pools. Valid values: lowest-price, capacity-optimized, capacity-optimized-prioritized. Default: lowest-price.'
            spot_instance_pools: '- (Optional) Number of Spot pools per availability zone to allocate capacity. EC2 Auto Scaling selects the cheapest Spot pools and evenly allocates Spot capacity across the number of Spot pools that you specify. Only available with spot_allocation_strategy set to lowest-price. Otherwise it must be set to 0, if it has been defined before. Default: 2.'
            spot_max_price: '- (Optional) Maximum price per unit hour that the user is willing to pay for the Spot instances. Default: an empty string which means the on-demand price.'
            spot_max_price_percentage_over_lowest_price: '- (Optional) The price protection threshold for Spot Instances. This is the maximum you’ll pay for a Spot Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Default is 100.'
            strategy: '- (Required) The strategy to use for instance refresh. The only allowed value is Rolling. See StartInstanceRefresh Action for more information.'
            suspended_processes: |-
                - (Optional) A list of processes to suspend for the Auto Scaling Group. The allowed values are Launch, Terminate, HealthCheck, ReplaceUnhealthy, AZRebalance, AlarmNotification, ScheduledActions, AddToLoadBalancer.
                Note that if you suspend either the Launch or Terminate process types, it can prevent your Auto Scaling Group from functioning properly.
            tag: (Optional) Configuration block(s) containing resource tags. Conflicts with tags. See Tag below for more details.
            tags: (Optional, Deprecated use tag instead) Set of maps containing resource tags. Conflicts with tag. See Tags below for more details.
            target_group_arns: (Optional) A set of aws_alb_target_group ARNs, for use with Application or Network Load Balancing.
            termination_policies: (Optional) A list of policies to decide how the instances in the Auto Scaling Group should be terminated. The allowed values are OldestInstance, NewestInstance, OldestLaunchConfiguration, ClosestToNextInstanceHour, OldestLaunchTemplate, AllocationStrategy, Default.
            total_local_storage_gb: '- (Optional) Block describing the minimum and maximum total local storage (GB). Default is no minimum or maximum.'
            total_local_storage_gb.max: '- (Optional) Maximum. May be a decimal number, e.g. 0.5.'
            total_local_storage_gb.min: '- (Optional) Minimum. May be a decimal number, e.g. 0.5.'
            triggers: '- (Optional) Set of additional property names that will trigger an Instance Refresh. A refresh will always be triggered by a change in any of launch_configuration, launch_template, or mixed_instances_policy.'
            value: '- (Required) Value'
            vcpu_count: '- (Required) Block describing the minimum and maximum number of vCPUs. Default is no maximum.'
            vcpu_count.max: '- (Optional) Maximum.'
            vcpu_count.min: '- (Required) Minimum.'
            version: '- (Optional) Template version. Can be version number, $Latest, or $Default. (Default: $Default).'
            vpc_zone_identifier: (Optional) A list of subnet IDs to launch resources in. Subnets automatically determine which availability zones the group will reside. Conflicts with availability_zones.
            wait_for_capacity_timeout: |-
                (Default: "10m") A maximum
                duration that Terraform should
                wait for ASG instances to be healthy before timing out.  (See also Waiting
                for Capacity below.) Setting this to "0" causes
                Terraform to skip all Capacity Waiting behavior.
            wait_for_elb_capacity: |-
                - (Optional) Setting this will cause Terraform to wait
                for exactly this number of healthy instances from this Auto Scaling Group in
                all attached load balancers on both create and update operations. (Takes
                precedence over min_elb_capacity behavior.)
                (See also Waiting for Capacity below.)
            warm_pool: |-
                - (Optional) If this block is configured, add a Warm Pool
                to the specified Auto Scaling group. Defined below
            weighted_capacity: '- (Optional) The number of capacity units, which gives the instance type a proportional weight to other instance types.'
        importStatements: []
    aws_autoscaling_group_tag:
        subCategory: Auto Scaling
        description: Manages an individual Autoscaling Group tag
        name: aws_autoscaling_group_tag
        title: aws_autoscaling_group_tag
        examples:
            - name: example
              manifest: |-
                {
                  "autoscaling_group_name": "${each.value}",
                  "for_each": "${toset(\n    [for asg in flatten(\n      [for resources in aws_eks_node_group.example.resources : resources.autoscaling_groups]\n    ) : asg.name]\n  )}",
                  "tag": [
                    {
                      "key": "k8s.io/cluster-autoscaler/node-template/label/eks.amazonaws.com/capacityType",
                      "propagate_at_launch": false,
                      "value": "SPOT"
                    }
                  ]
                }
              references:
                autoscaling_group_name: each.value
              dependencies:
                aws_eks_node_group.example: |-
                    {
                      "cluster_name": "example",
                      "node_group_name": "example"
                    }
        argumentDocs:
            autoscaling_group_name: '- (Required) The name of the Autoscaling Group to apply the tag to.'
            id: '- ASG name and key, separated by a comma (,)'
            tag: '- (Required) The tag to create. The tag block is documented below.'
            tag.key: '- (Required) Tag name.'
            tag.propagate_at_launch: '- (Required) Whether to propagate the tags to instances launched by the ASG.'
            tag.value: '- (Required) Tag value.'
        importStatements: []
    aws_autoscaling_lifecycle_hook:
        subCategory: Auto Scaling
        description: Provides an AutoScaling Lifecycle Hook resource.
        name: aws_autoscaling_lifecycle_hook
        title: aws_autoscaling_lifecycle_hook
        examples:
            - name: foobar
              manifest: |-
                {
                  "autoscaling_group_name": "${aws_autoscaling_group.foobar.name}",
                  "default_result": "CONTINUE",
                  "heartbeat_timeout": 2000,
                  "lifecycle_transition": "autoscaling:EC2_INSTANCE_LAUNCHING",
                  "name": "foobar",
                  "notification_metadata": "{\n  \"foo\": \"bar\"\n}\n",
                  "notification_target_arn": "arn:aws:sqs:us-east-1:444455556666:queue1*",
                  "role_arn": "arn:aws:iam::123456789012:role/S3Access"
                }
              references:
                autoscaling_group_name: aws_autoscaling_group.foobar.name
              dependencies:
                aws_autoscaling_group.foobar: |-
                    {
                      "availability_zones": [
                        "us-west-2a"
                      ],
                      "health_check_type": "EC2",
                      "name": "terraform-test-foobar5",
                      "tag": [
                        {
                          "key": "Foo",
                          "propagate_at_launch": true,
                          "value": "foo-bar"
                        }
                      ],
                      "termination_policies": [
                        "OldestInstance"
                      ]
                    }
        argumentDocs:
            autoscaling_group_name: '- (Required) The name of the Auto Scaling group to which you want to assign the lifecycle hook'
            default_result: '- (Optional) Defines the action the Auto Scaling group should take when the lifecycle hook timeout elapses or if an unexpected failure occurs. The value for this parameter can be either CONTINUE or ABANDON. The default value for this parameter is ABANDON.'
            heartbeat_timeout: '- (Optional) Defines the amount of time, in seconds, that can elapse before the lifecycle hook times out. When the lifecycle hook times out, Auto Scaling performs the action defined in the DefaultResult parameter'
            lifecycle_transition: '- (Required) The instance state to which you want to attach the lifecycle hook. For a list of lifecycle hook types, see describe-lifecycle-hook-types'
            name: '- (Required) The name of the lifecycle hook.'
            notification_metadata: '- (Optional) Contains additional information that you want to include any time Auto Scaling sends a message to the notification target.'
            notification_target_arn: '- (Optional) The ARN of the notification target that Auto Scaling will use to notify you when an instance is in the transition state for the lifecycle hook. This ARN target can be either an SQS queue or an SNS topic.'
            role_arn: '- (Optional) The ARN of the IAM role that allows the Auto Scaling group to publish to the specified notification target.'
        importStatements: []
    aws_autoscaling_notification:
        subCategory: Auto Scaling
        description: Provides an AutoScaling Group with Notification support
        name: aws_autoscaling_notification
        title: aws_autoscaling_notification
        examples:
            - name: example_notifications
              manifest: |-
                {
                  "group_names": [
                    "${aws_autoscaling_group.bar.name}",
                    "${aws_autoscaling_group.foo.name}"
                  ],
                  "notifications": [
                    "autoscaling:EC2_INSTANCE_LAUNCH",
                    "autoscaling:EC2_INSTANCE_TERMINATE",
                    "autoscaling:EC2_INSTANCE_LAUNCH_ERROR",
                    "autoscaling:EC2_INSTANCE_TERMINATE_ERROR"
                  ],
                  "topic_arn": "${aws_sns_topic.example.arn}"
                }
              references:
                topic_arn: aws_sns_topic.example.arn
              dependencies:
                aws_autoscaling_group.bar: |-
                    {
                      "name": "foobar1-terraform-test"
                    }
                aws_autoscaling_group.foo: |-
                    {
                      "name": "barfoo-terraform-test"
                    }
                aws_sns_topic.example: |-
                    {
                      "name": "example-topic"
                    }
        argumentDocs:
            group_names: '- (Required) A list of AutoScaling Group Names'
            notifications: |-
                - (Required) A list of Notification Types that trigger
                notifications. Acceptable values are documented in the AWS documentation here
            topic_arn: '- (Required) The Topic ARN for notifications to be sent through'
        importStatements: []
    aws_autoscaling_policy:
        subCategory: Auto Scaling
        description: Provides an AutoScaling Scaling Group resource.
        name: aws_autoscaling_policy
        title: aws_autoscaling_policy
        examples:
            - name: bat
              manifest: |-
                {
                  "adjustment_type": "ChangeInCapacity",
                  "autoscaling_group_name": "${aws_autoscaling_group.bar.name}",
                  "cooldown": 300,
                  "name": "foobar3-terraform-test",
                  "scaling_adjustment": 4
                }
              references:
                autoscaling_group_name: aws_autoscaling_group.bar.name
              dependencies:
                aws_autoscaling_group.bar: |-
                    {
                      "availability_zones": [
                        "us-east-1a"
                      ],
                      "force_delete": true,
                      "health_check_grace_period": 300,
                      "health_check_type": "ELB",
                      "launch_configuration": "${aws_launch_configuration.foo.name}",
                      "max_size": 5,
                      "min_size": 2,
                      "name": "foobar3-terraform-test"
                    }
            - name: example
              manifest: |-
                {
                  "autoscaling_group_name": "my-test-asg",
                  "name": "foo",
                  "policy_type": "PredictiveScaling",
                  "predictive_scaling_configuration": [
                    {
                      "metric_specification": [
                        {
                          "customized_capacity_metric_specification": [
                            {
                              "metric_data_queries": [
                                {
                                  "expression": "SUM(SEARCH('{AWS/AutoScaling,AutoScalingGroupName} MetricName=\"GroupInServiceIntances\" my-test-asg', 'Average', 300))",
                                  "id": "capacity_sum",
                                  "return_data": false
                                },
                                {
                                  "expression": "SUM(SEARCH('{AWS/EC2,AutoScalingGroupName} MetricName=\"CPUUtilization\" my-test-asg', 'Sum', 300))",
                                  "id": "load_sum",
                                  "return_data": false
                                },
                                {
                                  "expression": "load_sum / capacity_sum",
                                  "id": "weighted_average"
                                }
                              ]
                            }
                          ],
                          "customized_load_metric_specification": [
                            {
                              "metric_data_queries": [
                                {
                                  "expression": "SUM(SEARCH('{AWS/EC2,AutoScalingGroupName} MetricName=\"CPUUtilization\" my-test-asg', 'Sum', 3600))",
                                  "id": "load_sum"
                                }
                              ]
                            }
                          ],
                          "customized_scaling_metric_specification": [
                            {
                              "metric_data_queries": [
                                {
                                  "id": "scaling",
                                  "metric_stat": [
                                    {
                                      "metric": [
                                        {
                                          "dimensions": [
                                            {
                                              "name": "AutoScalingGroupName",
                                              "value": "my-test-asg"
                                            }
                                          ],
                                          "metric_name": "CPUUtilization",
                                          "namespace": "AWS/EC2"
                                        }
                                      ],
                                      "stat": "Average"
                                    }
                                  ]
                                }
                              ]
                            }
                          ],
                          "target_value": 10
                        }
                      ]
                    }
                  ]
                }
            - name: example
              manifest: |-
                {
                  "autoscaling_group_name": "my-test-asg",
                  "name": "foo",
                  "policy_type": "PredictiveScaling",
                  "predictive_scaling_configuration": [
                    {
                      "metric_specification": [
                        {
                          "customized_scaling_metric_specification": [
                            {
                              "metric_data_queries": [
                                {
                                  "id": "scaling",
                                  "metric_stat": [
                                    {
                                      "metric": [
                                        {
                                          "dimensions": [
                                            {
                                              "name": "AutoScalingGroupName",
                                              "value": "my-test-asg"
                                            }
                                          ],
                                          "metric_name": "CPUUtilization",
                                          "namespace": "AWS/EC2"
                                        }
                                      ],
                                      "stat": "Average"
                                    }
                                  ]
                                }
                              ]
                            }
                          ],
                          "predefined_load_metric_specification": [
                            {
                              "predefined_metric_type": "ASGTotalCPUUtilization",
                              "resource_label": "testLabel"
                            }
                          ],
                          "target_value": 10
                        }
                      ]
                    }
                  ]
                }
            - name: example
              manifest: |-
                {
                  "step_adjustment": [
                    {
                      "metric_interval_lower_bound": 1,
                      "metric_interval_upper_bound": 2,
                      "scaling_adjustment": -1
                    },
                    {
                      "metric_interval_lower_bound": 2,
                      "metric_interval_upper_bound": 3,
                      "scaling_adjustment": 1
                    }
                  ]
                }
            - name: example
              manifest: |-
                {
                  "target_tracking_configuration": [
                    {
                      "predefined_metric_specification": [
                        {
                          "predefined_metric_type": "ASGAverageCPUUtilization"
                        }
                      ],
                      "target_value": 40
                    }
                  ]
                }
        argumentDocs:
            adjustment_type: '- (Optional) Specifies whether the adjustment is an absolute number or a percentage of the current capacity. Valid values are ChangeInCapacity, ExactCapacity, and PercentChangeInCapacity.'
            arn: '- The ARN assigned by AWS to the scaling policy.'
            autoscaling_group_name: '- (Required) The name of the autoscaling group.'
            cooldown: '- (Optional) The amount of time, in seconds, after a scaling activity completes and before the next scaling activity can start.'
            customized_metric_specification: '- (Optional) A customized metric. Conflicts with predefined_metric_specification.'
            customized_metric_specification.metric_dimension: '- (Optional) The dimensions of the metric.'
            customized_metric_specification.metric_dimension.name: '- (Required) The name of the dimension.'
            customized_metric_specification.metric_dimension.value: '- (Required) The value of the dimension.'
            customized_metric_specification.metric_name: '- (Required) The name of the metric.'
            customized_metric_specification.namespace: '- (Required) The namespace of the metric.'
            customized_metric_specification.statistic: '- (Required) The statistic of the metric.'
            customized_metric_specification.unit: '- (Optional) The unit of the metric.'
            disable_scale_in: '- (Optional, Default: false) Indicates whether scale in by the target tracking policy is disabled.'
            enabled: '- (Optional) Indicates whether the scaling policy is enabled or disabled. Default: true.'
            estimated_instance_warmup: '- (Optional) The estimated time, in seconds, until a newly launched instance will contribute CloudWatch metrics. Without a value, AWS will default to the group''s specified cooldown period.'
            metric_aggregation_type: '- (Optional) The aggregation type for the policy''s metrics. Valid values are "Minimum", "Maximum", and "Average". Without a value, AWS will treat the aggregation type as "Average".'
            metric_interval_lower_bound: |-
                - (Optional) The lower bound for the
                difference between the alarm threshold and the CloudWatch metric.
                Without a value, AWS will treat this bound as negative infinity.
            metric_interval_upper_bound: |-
                - (Optional) The upper bound for the
                difference between the alarm threshold and the CloudWatch metric.
                Without a value, AWS will treat this bound as positive infinity. The upper bound
                must be greater than the lower bound.
            min_adjustment_magnitude: '- (Optional) Minimum value to scale by when adjustment_type is set to PercentChangeInCapacity.'
            name: '- (Required) The name of the policy.'
            policy_type: '- (Optional) The policy type, either "SimpleScaling", "StepScaling", "TargetTrackingScaling", or "PredictiveScaling". If this value isn''t provided, AWS will default to "SimpleScaling."'
            predefined_metric_specification: '- (Optional) A predefined metric. Conflicts with customized_metric_specification.'
            predefined_metric_specification.predefined_metric_type: '- (Required) The metric type.'
            predefined_metric_specification.resource_label: '- (Optional) Identifies the resource associated with the metric type.'
            predictive_scaling_configuration: '- (Optional) The predictive scaling policy configuration to use with Amazon EC2 Auto Scaling.'
            predictive_scaling_configuration.max_capacity_breach_behavior: '- (Optional) Defines the behavior that should be applied if the forecast capacity approaches or exceeds the maximum capacity of the Auto Scaling group. Valid values are HonorMaxCapacity or IncreaseMaxCapacity. Default is HonorMaxCapacity.'
            predictive_scaling_configuration.max_capacity_buffer: '- (Optional) The size of the capacity buffer to use when the forecast capacity is close to or exceeds the maximum capacity. Valid range is 0 to 100. If set to 0, Amazon EC2 Auto Scaling may scale capacity higher than the maximum capacity to equal but not exceed forecast capacity.'
            predictive_scaling_configuration.metric_specification: '- (Required) This structure includes the metrics and target utilization to use for predictive scaling.'
            predictive_scaling_configuration.metric_specification.customized_capacity_metric_specification: '- (Optional) The customized capacity metric specification. The field is only valid when you use customized_load_metric_specification'
            predictive_scaling_configuration.metric_specification.customized_capacity_metric_specification.metric_data_queries: '- (Required) A list of up to 10 structures that defines custom capacity metric in predictive scaling policy'
            predictive_scaling_configuration.metric_specification.customized_capacity_metric_specification.metric_data_queries.expression: '- (Optional) The math expression used on the returned metric. You must specify either expression or metric_stat, but not both.'
            predictive_scaling_configuration.metric_specification.customized_capacity_metric_specification.metric_data_queries.id: '- (Required) A short name for the metric used in predictive scaling policy.'
            predictive_scaling_configuration.metric_specification.customized_capacity_metric_specification.metric_data_queries.label: '- (Optional) A human-readable label for this metric or expression.'
            predictive_scaling_configuration.metric_specification.customized_capacity_metric_specification.metric_data_queries.metric_stat: '- (Optional) A structure that defines CloudWatch metric to be used in predictive scaling policy. You must specify either expression or metric_stat, but not both.'
            ? predictive_scaling_configuration.metric_specification.customized_capacity_metric_specification.metric_data_queries.metric_stat.metric
            : '- (Required) A structure that defines the CloudWatch metric to return, including the metric name, namespace, and dimensions.'
            ? predictive_scaling_configuration.metric_specification.customized_capacity_metric_specification.metric_data_queries.metric_stat.metric.dimensions
            : '- (Optional) The dimensions of the metric.'
            ? predictive_scaling_configuration.metric_specification.customized_capacity_metric_specification.metric_data_queries.metric_stat.metric.dimensions.name
            : '- (Required) The name of the dimension.'
            ? predictive_scaling_configuration.metric_specification.customized_capacity_metric_specification.metric_data_queries.metric_stat.metric.dimensions.value
            : '- (Required) The value of the dimension.'
            ? predictive_scaling_configuration.metric_specification.customized_capacity_metric_specification.metric_data_queries.metric_stat.metric.metric_name
            : '- (Required) The name of the metric.'
            ? predictive_scaling_configuration.metric_specification.customized_capacity_metric_specification.metric_data_queries.metric_stat.metric.namespace
            : '- (Required) The namespace of the metric.'
            ? predictive_scaling_configuration.metric_specification.customized_capacity_metric_specification.metric_data_queries.metric_stat.stat
            : '- (Required) The statistic of the metrics to return.'
            ? predictive_scaling_configuration.metric_specification.customized_capacity_metric_specification.metric_data_queries.metric_stat.unit
            : '- (Optional) The unit of the metrics to return.'
            predictive_scaling_configuration.metric_specification.customized_capacity_metric_specification.metric_data_queries.return_data: '- (Optional) A boolean that indicates whether to return the timestamps and raw data values of this metric, the default it true'
            predictive_scaling_configuration.metric_specification.customized_load_metric_specification: '- (Optional) The customized load metric specification.'
            predictive_scaling_configuration.metric_specification.customized_load_metric_specification.metric_data_queries: '- (Required) A list of up to 10 structures that defines custom load metric in predictive scaling policy'
            predictive_scaling_configuration.metric_specification.customized_scaling_metric_specification: '- (Optional) The customized scaling metric specification.'
            predictive_scaling_configuration.metric_specification.customized_scaling_metric_specification.metric_data_queries: '- (Required) A list of up to 10 structures that defines custom scaling metric in predictive scaling policy'
            predictive_scaling_configuration.metric_specification.predefined_load_metric_specification: '- (Optional) The predefined load metric specification.'
            predictive_scaling_configuration.metric_specification.predefined_load_metric_specification.predefined_metric_type: '- (Required) The metric type. Valid values are ASGTotalCPUUtilization, ASGTotalNetworkIn, ASGTotalNetworkOut, or ALBTargetGroupRequestCount.'
            predictive_scaling_configuration.metric_specification.predefined_load_metric_specification.resource_label: '- (Required) A label that uniquely identifies a specific Application Load Balancer target group from which to determine the request count served by your Auto Scaling group.'
            predictive_scaling_configuration.metric_specification.predefined_metric_pair_specification: '- (Optional) The metric pair specification from which Amazon EC2 Auto Scaling determines the appropriate scaling metric and load metric to use.'
            predictive_scaling_configuration.metric_specification.predefined_metric_pair_specification.predefined_metric_type: '- (Required) Indicates which metrics to use. There are two different types of metrics for each metric type: one is a load metric and one is a scaling metric. For example, if the metric type is ASGCPUUtilization, the Auto Scaling group''s total CPU metric is used as the load metric, and the average CPU metric is used for the scaling metric. Valid values are ASGCPUUtilization, ASGNetworkIn, ASGNetworkOut, or ALBRequestCount.'
            predictive_scaling_configuration.metric_specification.predefined_metric_pair_specification.resource_label: '- (Required) A label that uniquely identifies a specific Application Load Balancer target group from which to determine the request count served by your Auto Scaling group.'
            predictive_scaling_configuration.metric_specification.predefined_scaling_metric_specification: '- (Optional) The predefined scaling metric specification.'
            predictive_scaling_configuration.metric_specification.predefined_scaling_metric_specification.predefined_metric_type: '- (Required) Describes a scaling metric for a predictive scaling policy. Valid values are ASGAverageCPUUtilization, ASGAverageNetworkIn, ASGAverageNetworkOut, or ALBRequestCountPerTarget.'
            predictive_scaling_configuration.metric_specification.predefined_scaling_metric_specification.resource_label: '- (Required) A label that uniquely identifies a specific Application Load Balancer target group from which to determine the request count served by your Auto Scaling group.'
            predictive_scaling_configuration.mode: '- (Optional) The predictive scaling mode. Valid values are ForecastAndScale and ForecastOnly. Default is ForecastOnly.'
            predictive_scaling_configuration.scheduling_buffer_time: '- (Optional) The amount of time, in seconds, by which the instance launch time can be advanced. Minimum is 0.'
            scaling_adjustment: '- (Optional) The number of instances by which to scale. adjustment_type determines the interpretation of this number (e.g., as an absolute number or as a percentage of the existing Auto Scaling group size). A positive increment adds to the current capacity and a negative value removes from the current capacity.'
            step_adjustment: |-
                - (Optional) A set of adjustments that manage
                group scaling. These have the following structure:
            target_tracking_configuration: '- (Optional) A target tracking policy. These have the following structure:'
            target_value: '- (Required) The target value for the metric.'
        importStatements: []
    aws_autoscaling_schedule:
        subCategory: Auto Scaling
        description: Provides an AutoScaling Schedule resource.
        name: aws_autoscaling_schedule
        title: aws_autoscaling_schedule
        examples:
            - name: foobar
              manifest: |-
                {
                  "autoscaling_group_name": "${aws_autoscaling_group.foobar.name}",
                  "desired_capacity": 0,
                  "end_time": "2016-12-12T06:00:00Z",
                  "max_size": 1,
                  "min_size": 0,
                  "scheduled_action_name": "foobar",
                  "start_time": "2016-12-11T18:00:00Z"
                }
              references:
                autoscaling_group_name: aws_autoscaling_group.foobar.name
              dependencies:
                aws_autoscaling_group.foobar: |-
                    {
                      "availability_zones": [
                        "us-west-2a"
                      ],
                      "force_delete": true,
                      "health_check_grace_period": 300,
                      "health_check_type": "ELB",
                      "max_size": 1,
                      "min_size": 1,
                      "name": "terraform-test-foobar5",
                      "termination_policies": [
                        "OldestInstance"
                      ]
                    }
        argumentDocs:
            arn: '- The ARN assigned by AWS to the autoscaling schedule.'
            autoscaling_group_name: '- (Required) The name or Amazon Resource Name (ARN) of the Auto Scaling group.'
            desired_capacity: '- (Optional) The number of EC2 instances that should be running in the group. Default 0.  Set to -1 if you don''t want to change the desired capacity at the scheduled time.'
            end_time: |-
                - (Optional) The time for this action to end, in "YYYY-MM-DDThh:mm:ssZ" format in UTC/GMT only (for example, 2014-06-01T00:00:00Z ).
                If you try to schedule your action in the past, Auto Scaling returns an error message.
            max_size: |-
                - (Optional) The maximum size for the Auto Scaling group. Default 0.
                Set to -1 if you don't want to change the maximum size at the scheduled time.
            min_size: |-
                - (Optional) The minimum size for the Auto Scaling group. Default 0.
                Set to -1 if you don't want to change the minimum size at the scheduled time.
            recurrence: '- (Optional) The time when recurring future actions will start. Start time is specified by the user following the Unix cron syntax format.'
            scheduled_action_name: '- (Required) The name of this scaling action.'
            start_time: |-
                - (Optional) The time for this action to start, in "YYYY-MM-DDThh:mm:ssZ" format in UTC/GMT only (for example, 2014-06-01T00:00:00Z ).
                If you try to schedule your action in the past, Auto Scaling returns an error message.
            time_zone: '- (Optional)  The timezone for the cron expression. Valid values are the canonical names of the IANA time zones (such as Etc/GMT+9 or Pacific/Tahiti).'
        importStatements: []
    aws_autoscalingplans_scaling_plan:
        subCategory: Auto Scaling Plans
        description: Manages an AWS Auto Scaling scaling plan.
        name: aws_autoscalingplans_scaling_plan
        title: aws_autoscalingplans_scaling_plan
        examples:
            - name: example
              manifest: |-
                {
                  "application_source": [
                    {
                      "tag_filter": [
                        {
                          "key": "application",
                          "values": [
                            "example"
                          ]
                        }
                      ]
                    }
                  ],
                  "name": "example-dynamic-cost-optimization",
                  "scaling_instruction": [
                    {
                      "max_capacity": 3,
                      "min_capacity": 0,
                      "resource_id": "${format(\"autoScalingGroup/%s\", aws_autoscaling_group.example.name)}",
                      "scalable_dimension": "autoscaling:autoScalingGroup:DesiredCapacity",
                      "service_namespace": "autoscaling",
                      "target_tracking_configuration": [
                        {
                          "predefined_scaling_metric_specification": [
                            {
                              "predefined_scaling_metric_type": "ASGAverageCPUUtilization"
                            }
                          ],
                          "target_value": 70
                        }
                      ]
                    }
                  ]
                }
              dependencies:
                aws_autoscaling_group.example: |-
                    {
                      "availability_zones": [
                        "${data.aws_availability_zones.available.names[0]}"
                      ],
                      "launch_configuration": "${aws_launch_configuration.example.name}",
                      "max_size": 3,
                      "min_size": 0,
                      "name_prefix": "example",
                      "tags": [
                        {
                          "key": "application",
                          "propagate_at_launch": true,
                          "value": "example"
                        }
                      ]
                    }
            - name: example
              manifest: |-
                {
                  "application_source": [
                    {
                      "tag_filter": [
                        {
                          "key": "application",
                          "values": [
                            "example"
                          ]
                        }
                      ]
                    }
                  ],
                  "name": "example-predictive-cost-optimization",
                  "scaling_instruction": [
                    {
                      "disable_dynamic_scaling": true,
                      "max_capacity": 3,
                      "min_capacity": 0,
                      "predefined_load_metric_specification": [
                        {
                          "predefined_load_metric_type": "ASGTotalCPUUtilization"
                        }
                      ],
                      "predictive_scaling_max_capacity_behavior": "SetForecastCapacityToMaxCapacity",
                      "predictive_scaling_mode": "ForecastAndScale",
                      "resource_id": "${format(\"autoScalingGroup/%s\", aws_autoscaling_group.example.name)}",
                      "scalable_dimension": "autoscaling:autoScalingGroup:DesiredCapacity",
                      "service_namespace": "autoscaling",
                      "target_tracking_configuration": [
                        {
                          "predefined_scaling_metric_specification": [
                            {
                              "predefined_scaling_metric_type": "ASGAverageCPUUtilization"
                            }
                          ],
                          "target_value": 70
                        }
                      ]
                    }
                  ]
                }
              dependencies:
                aws_autoscaling_group.example: |-
                    {
                      "availability_zones": [
                        "${data.aws_availability_zones.available.names[0]}"
                      ],
                      "launch_configuration": "${aws_launch_configuration.example.name}",
                      "max_size": 3,
                      "min_size": 0,
                      "name_prefix": "example",
                      "tags": [
                        {
                          "key": "application",
                          "propagate_at_launch": true,
                          "value": "example"
                        }
                      ]
                    }
        argumentDocs:
            application_source: '- (Required) A CloudFormation stack or set of tags. You can create one scaling plan per application source.'
            cloudformation_stack_arn: '- (Optional) The Amazon Resource Name (ARN) of a AWS CloudFormation stack.'
            customized_load_metric_specification: |-
                - (Optional) The customized load metric to use for predictive scaling. You must specify either customized_load_metric_specification or predefined_load_metric_specification when configuring predictive scaling.
                More details can be found in the AWS Auto Scaling API Reference.
            customized_scaling_metric_specification: |-
                - (Optional) A customized metric. You can specify either customized_scaling_metric_specification or predefined_scaling_metric_specification.
                More details can be found in the AWS Auto Scaling API Reference.
            dimensions: '- (Optional) The dimensions of the metric.'
            disable_dynamic_scaling: '- (Optional) Boolean controlling whether dynamic scaling by AWS Auto Scaling is disabled. Defaults to false.'
            disable_scale_in: '- (Optional) Boolean indicating whether scale in by the target tracking scaling policy is disabled. Defaults to false.'
            estimated_instance_warmup: |-
                - (Optional) The estimated time, in seconds, until a newly launched instance can contribute to the CloudWatch metrics.
                This value is used only if the resource is an Auto Scaling group.
            id: '- The scaling plan identifier.'
            key: '- (Required) The tag key.'
            max_capacity: '- (Required) The maximum capacity of the resource. The exception to this upper limit is if you specify a non-default setting for predictive_scaling_max_capacity_behavior.'
            metric_name: '- (Required) The name of the metric.'
            min_capacity: '- (Required) The minimum capacity of the resource.'
            name: '- (Required) The name of the scaling plan. Names cannot contain vertical bars, colons, or forward slashes.'
            namespace: '- (Required) The namespace of the metric.'
            predefined_load_metric_specification: |-
                - (Optional) The predefined load metric to use for predictive scaling. You must specify either predefined_load_metric_specification or customized_load_metric_specification when configuring predictive scaling.
                More details can be found in the AWS Auto Scaling API Reference.
            predefined_load_metric_type: '- (Required) The metric type. Valid values: ALBTargetGroupRequestCount, ASGTotalCPUUtilization, ASGTotalNetworkIn, ASGTotalNetworkOut.'
            predefined_scaling_metric_specification: |-
                - (Optional) A predefined metric. You can specify either predefined_scaling_metric_specification or customized_scaling_metric_specification.
                More details can be found in the AWS Auto Scaling API Reference.
            predefined_scaling_metric_type: '- (Required) The metric type. Valid values: ALBRequestCountPerTarget, ASGAverageCPUUtilization, ASGAverageNetworkIn, ASGAverageNetworkOut, DynamoDBReadCapacityUtilization, DynamoDBWriteCapacityUtilization, ECSServiceAverageCPUUtilization, ECSServiceAverageMemoryUtilization, EC2SpotFleetRequestAverageCPUUtilization, EC2SpotFleetRequestAverageNetworkIn, EC2SpotFleetRequestAverageNetworkOut, RDSReaderAverageCPUUtilization, RDSReaderAverageDatabaseConnections.'
            predictive_scaling_max_capacity_behavior: |-
                - (Optional) Defines the behavior that should be applied if the forecast capacity approaches or exceeds the maximum capacity specified for the resource.
                Valid values: SetForecastCapacityToMaxCapacity, SetMaxCapacityAboveForecastCapacity, SetMaxCapacityToForecastCapacity.
            predictive_scaling_max_capacity_buffer: '- (Optional) The size of the capacity buffer to use when the forecast capacity is close to or exceeds the maximum capacity.'
            predictive_scaling_mode: '- (Optional) The predictive scaling mode. Valid values: ForecastAndScale, ForecastOnly.'
            resource_id: '- (Required) The ID of the resource. This string consists of the resource type and unique identifier.'
            resource_label: '- (Optional) Identifies the resource associated with the metric type.'
            scalable_dimension: '- (Required) The scalable dimension associated with the resource. Valid values: autoscaling:autoScalingGroup:DesiredCapacity, dynamodb:index:ReadCapacityUnits, dynamodb:index:WriteCapacityUnits, dynamodb:table:ReadCapacityUnits, dynamodb:table:WriteCapacityUnits, ecs:service:DesiredCount, ec2:spot-fleet-request:TargetCapacity, rds:cluster:ReadReplicaCount.'
            scale_in_cooldown: |-
                - (Optional) The amount of time, in seconds, after a scale in activity completes before another scale in activity can start.
                This value is not used if the scalable resource is an Auto Scaling group.
            scale_out_cooldown: |-
                - (Optional) The amount of time, in seconds, after a scale-out activity completes before another scale-out activity can start.
                This value is not used if the scalable resource is an Auto Scaling group.
            scaling_instruction: '- (Required) The scaling instructions. More details can be found in the AWS Auto Scaling API Reference.'
            scaling_plan_version: '- The version number of the scaling plan. This value is always 1.'
            scaling_policy_update_behavior: '- (Optional) Controls whether a resource''s externally created scaling policies are kept or replaced. Valid values: KeepExternalPolicies, ReplaceExternalPolicies. Defaults to KeepExternalPolicies.'
            scheduled_action_buffer_time: '- (Optional) The amount of time, in seconds, to buffer the run time of scheduled scaling actions when scaling out.'
            service_namespace: '- (Required) The namespace of the AWS service. Valid values: autoscaling, dynamodb, ecs, ec2, rds.'
            statistic: '- (Required) The statistic of the metric. Currently, the value must always be Sum.'
            tag_filter: '- (Optional) A set of tags.'
            target_tracking_configuration: |-
                - (Required) The structure that defines new target tracking configurations. Each of these structures includes a specific scaling metric and a target value for the metric, along with various parameters to use with dynamic scaling.
                More details can be found in the AWS Auto Scaling API Reference.
            target_value: '- (Required) The target value for the metric.'
            unit: '- (Optional) The unit of the metric.'
            values: '- (Optional) The tag values.'
        importStatements: []
    aws_backup_framework:
        subCategory: Backup
        description: Provides an AWS Backup Framework resource.
        name: aws_backup_framework
        title: aws_backup_framework
        examples:
            - name: Example
              manifest: |-
                {
                  "control": [
                    {
                      "input_parameter": [
                        {
                          "name": "requiredRetentionDays",
                          "value": "35"
                        }
                      ],
                      "name": "BACKUP_RECOVERY_POINT_MINIMUM_RETENTION_CHECK"
                    },
                    {
                      "input_parameter": [
                        {
                          "name": "requiredFrequencyUnit",
                          "value": "hours"
                        },
                        {
                          "name": "requiredRetentionDays",
                          "value": "35"
                        },
                        {
                          "name": "requiredFrequencyValue",
                          "value": "1"
                        }
                      ],
                      "name": "BACKUP_PLAN_MIN_FREQUENCY_AND_MIN_RETENTION_CHECK"
                    },
                    {
                      "name": "BACKUP_RECOVERY_POINT_ENCRYPTED"
                    },
                    {
                      "name": "BACKUP_RESOURCES_PROTECTED_BY_BACKUP_PLAN",
                      "scope": [
                        {
                          "compliance_resource_types": [
                            "EBS"
                          ]
                        }
                      ]
                    },
                    {
                      "name": "BACKUP_RECOVERY_POINT_MANUAL_DELETION_DISABLED"
                    }
                  ],
                  "description": "this is an example framework",
                  "name": "exampleFramework",
                  "tags": {
                    "Name": "Example Framework"
                  }
                }
        argumentDocs:
            arn: '- The ARN of the backup framework.'
            compliance_resource_ids: '- (Optional) The ID of the only AWS resource that you want your control scope to contain. Minimum number of 1 item. Maximum number of 100 items.'
            compliance_resource_types: '- (Optional) Describes whether the control scope includes one or more types of resources, such as EFS or RDS.'
            control: '- (Required) One or more control blocks that make up the framework. Each control in the list has a name, input parameters, and scope. Detailed below.'
            creation_time: '- The date and time that a framework is created, in Unix format and Coordinated Universal Time (UTC).'
            deployment_status: '- The deployment status of a framework. The statuses are: CREATE_IN_PROGRESS | UPDATE_IN_PROGRESS | DELETE_IN_PROGRESS | COMPLETED | FAILED.'
            description: '- (Optional) The description of the framework with a maximum of 1,024 characters'
            id: '- The id of the backup framework.'
            input_parameter: '- (Optional) One or more input parameter blocks. An example of a control with two parameters is: "backup plan frequency is at least daily and the retention period is at least 1 year". The first parameter is daily. The second parameter is 1 year. Detailed below.'
            name: '- (Required) The unique name of the framework. The name must be between 1 and 256 characters, starting with a letter, and consisting of letters, numbers, and underscores.'
            scope: '- (Optional) The scope of a control. The control scope defines what the control will evaluate. Three examples of control scopes are: a specific backup plan, all backup plans with a specific tag, or all backup plans. Detailed below.'
            status: '- A framework consists of one or more controls. Each control governs a resource, such as backup plans, backup selections, backup vaults, or recovery points. You can also turn AWS Config recording on or off for each resource. For more information refer to the AWS documentation for Framework Status'
            tags: '- (Optional) Metadata that you can assign to help organize the frameworks you create. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            timeouts.create: '- (Defaults to 2 mins) Used when creating the framework'
            timeouts.delete: '- (Defaults to 2 mins) Used when deleting the framework'
            timeouts.update: '- (Defaults to 2 mins) Used when updating the framework'
            value: '- (Optional) The value of parameter, for example, hourly.'
        importStatements: []
    aws_backup_global_settings:
        subCategory: Backup
        description: Provides an AWS Backup Global Settings resource.
        name: aws_backup_global_settings
        title: aws_backup_global_settings
        examples:
            - name: test
              manifest: |-
                {
                  "global_settings": {
                    "isCrossAccountBackupEnabled": "true"
                  }
                }
        argumentDocs:
            global_settings: '- (Required) A list of resources along with the opt-in preferences for the account.'
            id: '- The AWS Account ID.'
        importStatements: []
    aws_backup_plan:
        subCategory: Backup
        description: Provides an AWS Backup plan resource.
        name: aws_backup_plan
        title: aws_backup_plan
        examples:
            - name: example
              manifest: |-
                {
                  "advanced_backup_setting": [
                    {
                      "backup_options": {
                        "WindowsVSS": "enabled"
                      },
                      "resource_type": "EC2"
                    }
                  ],
                  "name": "tf_example_backup_plan",
                  "rule": [
                    {
                      "lifecycle": [
                        {
                          "delete_after": 14
                        }
                      ],
                      "rule_name": "tf_example_backup_rule",
                      "schedule": "cron(0 12 * * ? *)",
                      "target_vault_name": "${aws_backup_vault.test.name}"
                    }
                  ]
                }
              references:
                rule.target_vault_name: aws_backup_vault.test.name
        argumentDocs:
            advanced_backup_setting: '- (Optional) An object that specifies backup options for each resource type.'
            arn: '- The ARN of the backup plan.'
            backup_options: '- (Required) Specifies the backup option for a selected resource. This option is only available for Windows VSS backup jobs. Set to { WindowsVSS = "enabled" } to enable Windows VSS backup option and create a VSS Windows backup.'
            cold_storage_after: '- (Optional) Specifies the number of days after creation that a recovery point is moved to cold storage.'
            completion_window: '- (Optional) The amount of time AWS Backup attempts a backup before canceling the job and returning an error.'
            copy_action: '- (Optional) Configuration block(s) with copy operation settings. Detailed below.'
            delete_after: '- (Optional) Specifies the number of days after creation that a recovery point is deleted. Must be 90 days greater than cold_storage_after.'
            destination_vault_arn: '- (Required) An Amazon Resource Name (ARN) that uniquely identifies the destination backup vault for the copied backup.'
            enable_continuous_backup: '- (Optional) Enable continuous backups for supported resources.'
            id: '- The id of the backup plan.'
            lifecycle: '- (Optional) The lifecycle defines when a protected resource is transitioned to cold storage and when it expires.  Fields documented below.'
            name: '- (Required) The display name of a backup plan.'
            recovery_point_tags: '- (Optional) Metadata that you can assign to help organize the resources that you create.'
            resource_type: '- (Required) The type of AWS resource to be backed up. For VSS Windows backups, the only supported resource type is Amazon EC2. Valid values: EC2.'
            rule: '- (Required) A rule object that specifies a scheduled task that is used to back up a selection of resources.'
            rule_name: '- (Required) An display name for a backup rule.'
            schedule: '- (Optional) A CRON expression specifying when AWS Backup initiates a backup job.'
            start_window: '- (Optional) The amount of time in minutes before beginning a backup.'
            tags: '- (Optional) Metadata that you can assign to help organize the plans you create. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            target_vault_name: '- (Required) The name of a logical container where backups are stored.'
            version: '- Unique, randomly generated, Unicode, UTF-8 encoded string that serves as the version ID of the backup plan.'
        importStatements: []
    aws_backup_region_settings:
        subCategory: Backup
        description: Provides an AWS Backup Region Settings resource.
        name: aws_backup_region_settings
        title: aws_backup_region_settings
        examples:
            - name: test
              manifest: |-
                {
                  "resource_type_management_preference": {
                    "DynamoDB": true,
                    "EFS": true
                  },
                  "resource_type_opt_in_preference": {
                    "Aurora": true,
                    "DocumentDB": true,
                    "DynamoDB": true,
                    "EBS": true,
                    "EC2": true,
                    "EFS": true,
                    "FSx": true,
                    "Neptune": true,
                    "RDS": true,
                    "Storage Gateway": true,
                    "VirtualMachine": true
                  }
                }
        argumentDocs:
            id: '- The AWS region.'
            resource_type_management_preference: '- (Optional) A map of services along with the management preferences for the Region.'
            resource_type_opt_in_preference: '- (Required) A map of services along with the opt-in preferences for the Region.'
        importStatements: []
    aws_backup_report_plan:
        subCategory: Backup
        description: Provides an AWS Backup Report Plan resource.
        name: aws_backup_report_plan
        title: aws_backup_report_plan
        examples:
            - name: example
              manifest: |-
                {
                  "description": "example description",
                  "name": "example_name",
                  "report_delivery_channel": [
                    {
                      "formats": [
                        "CSV",
                        "JSON"
                      ],
                      "s3_bucket_name": "example-bucket-name"
                    }
                  ],
                  "report_setting": [
                    {
                      "report_template": "RESTORE_JOB_REPORT"
                    }
                  ],
                  "tags": {
                    "Name": "Example Report Plan"
                  }
                }
        argumentDocs:
            arn: '- The ARN of the backup report plan.'
            creation_time: '- The date and time that a report plan is created, in Unix format and Coordinated Universal Time (UTC).'
            deployment_status: '- The deployment status of a report plan. The statuses are: CREATE_IN_PROGRESS | UPDATE_IN_PROGRESS | DELETE_IN_PROGRESS | COMPLETED.'
            description: '- (Optional) The description of the report plan with a maximum of 1,024 characters'
            formats: '- (Optional) A list of the format of your reports: CSV, JSON, or both. If not specified, the default format is CSV.'
            framework_arns: '- (Optional) Specifies the Amazon Resource Names (ARNs) of the frameworks a report covers.'
            id: '- The id of the backup report plan.'
            name: '- (Required) The unique name of the report plan. The name must be between 1 and 256 characters, starting with a letter, and consisting of letters, numbers, and underscores.'
            number_of_frameworks: '- (Optional) Specifies the number of frameworks a report covers.'
            report_delivery_channel: '- (Required) An object that contains information about where and how to deliver your reports, specifically your Amazon S3 bucket name, S3 key prefix, and the formats of your reports. Detailed below.'
            report_setting: '- (Required) An object that identifies the report template for the report. Reports are built using a report template. Detailed below.'
            report_template: '- (Required) Identifies the report template for the report. Reports are built using a report template. The report templates are: RESOURCE_COMPLIANCE_REPORT | CONTROL_COMPLIANCE_REPORT | BACKUP_JOB_REPORT | COPY_JOB_REPORT | RESTORE_JOB_REPORT.'
            s3_bucket_name: '- (Required) The unique name of the S3 bucket that receives your reports.'
            s3_key_prefix: '- (Optional) The prefix for where Backup Audit Manager delivers your reports to Amazon S3. The prefix is this part of the following path: s3://your-bucket-name/prefix/Backup/us-west-2/year/month/day/report-name. If not specified, there is no prefix.'
            tags: '- (Optional) Metadata that you can assign to help organize the report plans you create. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_backup_selection:
        subCategory: Backup
        description: Manages selection conditions for AWS Backup plan resources.
        name: aws_backup_selection
        title: aws_backup_selection
        examples:
            - name: example
              manifest: |-
                {
                  "iam_role_arn": "${aws_iam_role.example.arn}"
                }
              references:
                iam_role_arn: aws_iam_role.example.arn
              dependencies:
                aws_iam_role.example: |-
                    {
                      "assume_role_policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": [\"sts:AssumeRole\"],\n      \"Effect\": \"allow\",\n      \"Principal\": {\n        \"Service\": [\"backup.amazonaws.com\"]\n      }\n    }\n  ]\n}\n",
                      "name": "example"
                    }
                aws_iam_role_policy_attachment.example: |-
                    {
                      "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSBackupServiceRolePolicyForBackup",
                      "role": "${aws_iam_role.example.name}"
                    }
            - name: example
              manifest: |-
                {
                  "iam_role_arn": "${aws_iam_role.example.arn}",
                  "name": "tf_example_backup_selection",
                  "plan_id": "${aws_backup_plan.example.id}",
                  "selection_tag": [
                    {
                      "key": "foo",
                      "type": "STRINGEQUALS",
                      "value": "bar"
                    }
                  ]
                }
              references:
                iam_role_arn: aws_iam_role.example.arn
                plan_id: aws_backup_plan.example.id
            - name: example
              manifest: |-
                {
                  "condition": [
                    {
                      "string_equals": [
                        {
                          "key": "aws:ResourceTag/Component",
                          "value": "rds"
                        }
                      ],
                      "string_like": [
                        {
                          "key": "aws:ResourceTag/Application",
                          "value": "app*"
                        }
                      ],
                      "string_not_equals": [
                        {
                          "key": "aws:ResourceTag/Backup",
                          "value": "false"
                        }
                      ],
                      "string_not_like": [
                        {
                          "key": "aws:ResourceTag/Environment",
                          "value": "test*"
                        }
                      ]
                    }
                  ],
                  "iam_role_arn": "${aws_iam_role.example.arn}",
                  "name": "tf_example_backup_selection",
                  "plan_id": "${aws_backup_plan.example.id}",
                  "resources": [
                    "*"
                  ]
                }
              references:
                iam_role_arn: aws_iam_role.example.arn
                plan_id: aws_backup_plan.example.id
            - name: example
              manifest: |-
                {
                  "iam_role_arn": "${aws_iam_role.example.arn}",
                  "name": "tf_example_backup_selection",
                  "plan_id": "${aws_backup_plan.example.id}",
                  "resources": [
                    "${aws_db_instance.example.arn}",
                    "${aws_ebs_volume.example.arn}",
                    "${aws_efs_file_system.example.arn}"
                  ]
                }
              references:
                iam_role_arn: aws_iam_role.example.arn
                plan_id: aws_backup_plan.example.id
            - name: example
              manifest: |-
                {
                  "iam_role_arn": "${aws_iam_role.example.arn}",
                  "name": "tf_example_backup_selection",
                  "not_resources": [
                    "${aws_db_instance.example.arn}",
                    "${aws_ebs_volume.example.arn}",
                    "${aws_efs_file_system.example.arn}"
                  ],
                  "plan_id": "${aws_backup_plan.example.id}"
                }
              references:
                iam_role_arn: aws_iam_role.example.arn
                plan_id: aws_backup_plan.example.id
        argumentDocs:
            condition: '- (Optional) A list of conditions that you define to assign resources to your backup plans using tags.'
            iam_role_arn: '- (Required) The ARN of the IAM role that AWS Backup uses to authenticate when restoring and backing up the target resource. See the AWS Backup Developer Guide for additional information about using AWS managed policies or creating custom policies attached to the IAM role.'
            id: '- Backup Selection identifier'
            key: '- (Required) The key in a key-value pair.'
            name: '- (Required) The display name of a resource selection document.'
            not_resources: '- (Optional) An array of strings that either contain Amazon Resource Names (ARNs) or match patterns of resources to exclude from a backup plan.'
            plan_id: '- (Required) The backup plan ID to be associated with the selection of resources.'
            resources: '- (Optional) An array of strings that either contain Amazon Resource Names (ARNs) or match patterns of resources to assign to a backup plan.'
            selection_tag: '- (Optional) Tag-based conditions used to specify a set of resources to assign to a backup plan.'
            type: '- (Required) An operation, such as StringEquals, that is applied to a key-value pair used to filter resources in a selection.'
            value: '- (Required) The value in a key-value pair.'
        importStatements: []
    aws_backup_vault:
        subCategory: Backup
        description: Provides an AWS Backup vault resource.
        name: aws_backup_vault
        title: aws_backup_vault
        examples:
            - name: example
              manifest: |-
                {
                  "kms_key_arn": "${aws_kms_key.example.arn}",
                  "name": "example_backup_vault"
                }
              references:
                kms_key_arn: aws_kms_key.example.arn
        argumentDocs:
            arn: '- The ARN of the vault.'
            id: '- The name of the vault.'
            kms_key_arn: '- (Optional) The server-side encryption key that is used to protect your backups.'
            name: '- (Required) Name of the backup vault to create.'
            recovery_points: '- The number of recovery points that are stored in a backup vault.'
            tags: '- (Optional) Metadata that you can assign to help organize the resources that you create. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_backup_vault_lock_configuration:
        subCategory: Backup
        description: Provides an AWS Backup vault lock configuration resource.
        name: aws_backup_vault_lock_configuration
        title: aws_backup_vault_lock_configuration
        examples:
            - name: test
              manifest: |-
                {
                  "backup_vault_name": "example_backup_vault",
                  "changeable_for_days": 3,
                  "max_retention_days": 1200,
                  "min_retention_days": 7
                }
        argumentDocs:
            backup_vault_arn: '- The ARN of the vault.'
            backup_vault_name: '- (Required) Name of the backup vault to add a lock configuration for.'
            changeable_for_days: '- (Optional) The number of days before the lock date.'
            max_retention_days: '- (Optional) The maximum retention period that the vault retains its recovery points.'
            min_retention_days: '- (Optional) The minimum retention period that the vault retains its recovery points.'
        importStatements: []
    aws_backup_vault_notifications:
        subCategory: Backup
        description: Provides an AWS Backup vault notifications resource.
        name: aws_backup_vault_notifications
        title: aws_backup_vault_notifications
        examples:
            - name: test
              manifest: |-
                {
                  "backup_vault_events": [
                    "BACKUP_JOB_STARTED",
                    "RESTORE_JOB_COMPLETED"
                  ],
                  "backup_vault_name": "example_backup_vault",
                  "sns_topic_arn": "${aws_sns_topic.test.arn}"
                }
              references:
                sns_topic_arn: aws_sns_topic.test.arn
              dependencies:
                aws_sns_topic.test: |-
                    {
                      "name": "backup-vault-events"
                    }
                aws_sns_topic_policy.test: |-
                    {
                      "arn": "${aws_sns_topic.test.arn}",
                      "policy": "${data.aws_iam_policy_document.test.json}"
                    }
        argumentDocs:
            backup_vault_arn: '- The ARN of the vault.'
            backup_vault_events: '- (Required) An array of events that indicate the status of jobs to back up resources to the backup vault.'
            backup_vault_name: '- (Required) Name of the backup vault to add notifications for.'
            id: '- The name of the vault.'
            sns_topic_arn: '- (Required) The Amazon Resource Name (ARN) that specifies the topic for a backup vault’s events'
        importStatements: []
    aws_backup_vault_policy:
        subCategory: Backup
        description: Provides an AWS Backup vault policy resource.
        name: aws_backup_vault_policy
        title: aws_backup_vault_policy
        examples:
            - name: example
              manifest: |-
                {
                  "backup_vault_name": "${aws_backup_vault.example.name}",
                  "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Id\": \"default\",\n  \"Statement\": [\n    {\n      \"Sid\": \"default\",\n      \"Effect\": \"Allow\",\n      \"Principal\": {\n        \"AWS\": \"*\"\n      },\n      \"Action\": [\n\t\t\"backup:DescribeBackupVault\",\n\t\t\"backup:DeleteBackupVault\",\n\t\t\"backup:PutBackupVaultAccessPolicy\",\n\t\t\"backup:DeleteBackupVaultAccessPolicy\",\n\t\t\"backup:GetBackupVaultAccessPolicy\",\n\t\t\"backup:StartBackupJob\",\n\t\t\"backup:GetBackupVaultNotifications\",\n\t\t\"backup:PutBackupVaultNotifications\"\n      ],\n      \"Resource\": \"${aws_backup_vault.example.arn}\"\n    }\n  ]\n}\n"
                }
              references:
                backup_vault_name: aws_backup_vault.example.name
              dependencies:
                aws_backup_vault.example: |-
                    {
                      "name": "example"
                    }
        argumentDocs:
            backup_vault_arn: '- The ARN of the vault.'
            backup_vault_name: '- (Required) Name of the backup vault to add policy for.'
            id: '- The name of the vault.'
            policy: '- (Required) The backup vault access policy document in JSON format.'
        importStatements: []
    aws_batch_compute_environment:
        subCategory: Batch
        description: Creates a AWS Batch compute environment.
        name: aws_batch_compute_environment
        title: aws_batch_compute_environment
        examples:
            - name: sample
              manifest: |-
                {
                  "compute_environment_name": "sample",
                  "compute_resources": [
                    {
                      "instance_role": "${aws_iam_instance_profile.ecs_instance_role.arn}",
                      "instance_type": [
                        "c4.large"
                      ],
                      "max_vcpus": 16,
                      "min_vcpus": 0,
                      "security_group_ids": [
                        "${aws_security_group.sample.id}"
                      ],
                      "subnets": [
                        "${aws_subnet.sample.id}"
                      ],
                      "type": "EC2"
                    }
                  ],
                  "depends_on": [
                    "${aws_iam_role_policy_attachment.aws_batch_service_role}"
                  ],
                  "service_role": "${aws_iam_role.aws_batch_service_role.arn}",
                  "type": "MANAGED"
                }
              references:
                compute_resources.instance_role: aws_iam_instance_profile.ecs_instance_role.arn
                service_role: aws_iam_role.aws_batch_service_role.arn
              dependencies:
                aws_iam_instance_profile.ecs_instance_role: |-
                    {
                      "name": "ecs_instance_role",
                      "role": "${aws_iam_role.ecs_instance_role.name}"
                    }
                aws_iam_role.aws_batch_service_role: |-
                    {
                      "assume_role_policy": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n\t{\n\t    \"Action\": \"sts:AssumeRole\",\n\t    \"Effect\": \"Allow\",\n\t    \"Principal\": {\n\t\t\"Service\": \"batch.amazonaws.com\"\n\t    }\n\t}\n    ]\n}\n",
                      "name": "aws_batch_service_role"
                    }
                aws_iam_role.ecs_instance_role: |-
                    {
                      "assume_role_policy": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n\t{\n\t    \"Action\": \"sts:AssumeRole\",\n\t    \"Effect\": \"Allow\",\n\t    \"Principal\": {\n\t        \"Service\": \"ec2.amazonaws.com\"\n\t    }\n\t}\n    ]\n}\n",
                      "name": "ecs_instance_role"
                    }
                aws_iam_role_policy_attachment.aws_batch_service_role: |-
                    {
                      "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSBatchServiceRole",
                      "role": "${aws_iam_role.aws_batch_service_role.name}"
                    }
                aws_iam_role_policy_attachment.ecs_instance_role: |-
                    {
                      "policy_arn": "arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role",
                      "role": "${aws_iam_role.ecs_instance_role.name}"
                    }
                aws_security_group.sample: |-
                    {
                      "egress": [
                        {
                          "cidr_blocks": [
                            "0.0.0.0/0"
                          ],
                          "from_port": 0,
                          "protocol": "-1",
                          "to_port": 0
                        }
                      ],
                      "name": "aws_batch_compute_environment_security_group"
                    }
                aws_subnet.sample: |-
                    {
                      "cidr_block": "10.1.1.0/24",
                      "vpc_id": "${aws_vpc.sample.id}"
                    }
                aws_vpc.sample: |-
                    {
                      "cidr_block": "10.1.0.0/16"
                    }
            - name: sample
              manifest: |-
                {
                  "compute_environment_name": "sample",
                  "compute_resources": [
                    {
                      "max_vcpus": 16,
                      "security_group_ids": [
                        "${aws_security_group.sample.id}"
                      ],
                      "subnets": [
                        "${aws_subnet.sample.id}"
                      ],
                      "type": "FARGATE"
                    }
                  ],
                  "depends_on": [
                    "${aws_iam_role_policy_attachment.aws_batch_service_role}"
                  ],
                  "service_role": "${aws_iam_role.aws_batch_service_role.arn}",
                  "type": "MANAGED"
                }
              references:
                service_role: aws_iam_role.aws_batch_service_role.arn
        argumentDocs:
            arn: '- The Amazon Resource Name (ARN) of the compute environment.'
            compute_environment_name: '- (Optional, Forces new resource) The name for your compute environment. Up to 128 letters (uppercase and lowercase), numbers, and underscores are allowed. If omitted, Terraform will assign a random, unique name.'
            compute_environment_name_prefix: '- (Optional, Forces new resource) Creates a unique compute environment name beginning with the specified prefix. Conflicts with compute_environment_name.'
            compute_resources: '- (Optional) Details of the compute resources managed by the compute environment. This parameter is required for managed compute environments. See details below.'
            compute_resources.allocation_strategy: '- (Optional) The allocation strategy to use for the compute resource in case not enough instances of the best fitting instance type can be allocated. Valid items are BEST_FIT_PROGRESSIVE, SPOT_CAPACITY_OPTIMIZED or BEST_FIT. Defaults to BEST_FIT. See AWS docs for details. This parameter isn''t applicable to jobs running on Fargate resources, and shouldn''t be specified.'
            compute_resources.bid_percentage: '- (Optional) Integer of maximum percentage that a Spot Instance price can be when compared with the On-Demand price for that instance type before instances are launched. For example, if your bid percentage is 20% (20), then the Spot price must be below 20% of the current On-Demand price for that EC2 instance. If you leave this field empty, the default value is 100% of the On-Demand price. This parameter isn''t applicable to jobs running on Fargate resources, and shouldn''t be specified.'
            compute_resources.desired_vcpus: '- (Optional) The desired number of EC2 vCPUS in the compute environment. This parameter isn''t applicable to jobs running on Fargate resources, and shouldn''t be specified.'
            compute_resources.ec2_configuration: '- (Optional) Provides information used to select Amazon Machine Images (AMIs) for EC2 instances in the compute environment. If Ec2Configuration isn''t specified, the default is ECS_AL2. This parameter isn''t applicable to jobs that are running on Fargate resources, and shouldn''t be specified.'
            compute_resources.ec2_configuration.image_id_override: '- (Optional) The AMI ID used for instances launched in the compute environment that match the image type. This setting overrides the image_id argument in the compute_resources block.'
            compute_resources.ec2_configuration.image_type: '- (Optional) The image type to match with the instance type to select an AMI. If the image_id_override parameter isn''t specified, then a recent Amazon ECS-optimized Amazon Linux 2 AMI (ECS_AL2) is used.'
            compute_resources.ec2_key_pair: '- (Optional) The EC2 key pair that is used for instances launched in the compute environment. This parameter isn''t applicable to jobs running on Fargate resources, and shouldn''t be specified.'
            compute_resources.image_id: '- (Optional) The Amazon Machine Image (AMI) ID used for instances launched in the compute environment. This parameter isn''t applicable to jobs running on Fargate resources, and shouldn''t be specified. (Deprecated, use ec2_configuration image_id_override instead)'
            compute_resources.instance_role: '- (Optional) The Amazon ECS instance role applied to Amazon EC2 instances in a compute environment. This parameter isn''t applicable to jobs running on Fargate resources, and shouldn''t be specified.'
            compute_resources.instance_type: '- (Optional) A list of instance types that may be launched. This parameter isn''t applicable to jobs running on Fargate resources, and shouldn''t be specified.'
            compute_resources.launch_template: '- (Optional) The launch template to use for your compute resources. See details below. This parameter isn''t applicable to jobs running on Fargate resources, and shouldn''t be specified.'
            compute_resources.launch_template.launch_template_id: '- (Optional) ID of the launch template. You must specify either the launch template ID or launch template name in the request, but not both.'
            compute_resources.launch_template.launch_template_name: '- (Optional) Name of the launch template.'
            compute_resources.launch_template.version: '- (Optional) The version number of the launch template. Default: The default version of the launch template.'
            compute_resources.max_vcpus: '- (Required) The maximum number of EC2 vCPUs that an environment can reach.'
            compute_resources.min_vcpus: '- (Optional) The minimum number of EC2 vCPUs that an environment should maintain. For EC2 or SPOT compute environments, if the parameter is not explicitly defined, a 0 default value will be set. This parameter isn''t applicable to jobs running on Fargate resources, and shouldn''t be specified.'
            compute_resources.security_group_ids: '- (Required) A list of EC2 security group that are associated with instances launched in the compute environment.'
            compute_resources.spot_iam_fleet_role: '- (Optional) The Amazon Resource Name (ARN) of the Amazon EC2 Spot Fleet IAM role applied to a SPOT compute environment. This parameter is required for SPOT compute environments. This parameter isn''t applicable to jobs running on Fargate resources, and shouldn''t be specified.'
            compute_resources.subnets: '- (Required) A list of VPC subnets into which the compute resources are launched.'
            compute_resources.tags: '- (Optional) Key-value pair tags to be applied to resources that are launched in the compute environment. This parameter isn''t applicable to jobs running on Fargate resources, and shouldn''t be specified.'
            compute_resources.type: '- (Required) The type of compute environment. Valid items are EC2, SPOT, FARGATE or FARGATE_SPOT.'
            ecs_cluster_arn: '- The Amazon Resource Name (ARN) of the underlying Amazon ECS cluster used by the compute environment.'
            service_role: '- (Required) The full Amazon Resource Name (ARN) of the IAM role that allows AWS Batch to make calls to other AWS services on your behalf.'
            state: '- (Optional) The state of the compute environment. If the state is ENABLED, then the compute environment accepts jobs from a queue and can scale out automatically based on queues. Valid items are ENABLED or DISABLED. Defaults to ENABLED.'
            status: '- The current status of the compute environment (for example, CREATING or VALID).'
            status_reason: '- A short, human-readable string to provide additional details about the current status of the compute environment.'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            type: '- (Required) The type of the compute environment. Valid items are MANAGED or UNMANAGED.'
        importStatements: []
    aws_batch_job_definition:
        subCategory: Batch
        description: Provides a Batch Job Definition resource.
        name: aws_batch_job_definition
        title: aws_batch_job_definition
        examples:
            - name: test
              manifest: |-
                {
                  "container_properties": "{\n\t\"command\": [\"ls\", \"-la\"],\n\t\"image\": \"busybox\",\n\t\"memory\": 1024,\n\t\"vcpus\": 1,\n\t\"volumes\": [\n      {\n        \"host\": {\n          \"sourcePath\": \"/tmp\"\n        },\n        \"name\": \"tmp\"\n      }\n    ],\n\t\"environment\": [\n\t\t{\"name\": \"VARNAME\", \"value\": \"VARVAL\"}\n\t],\n\t\"mountPoints\": [\n\t\t{\n          \"sourceVolume\": \"tmp\",\n          \"containerPath\": \"/tmp\",\n          \"readOnly\": false\n        }\n\t],\n    \"ulimits\": [\n      {\n        \"hardLimit\": 1024,\n        \"name\": \"nofile\",\n        \"softLimit\": 1024\n      }\n    ]\n}\n",
                  "name": "tf_test_batch_job_definition",
                  "type": "container"
                }
            - name: test
              manifest: |-
                {
                  "container_properties": "{\n  \"command\": [\"echo\", \"test\"],\n  \"image\": \"busybox\",\n  \"fargatePlatformConfiguration\": {\n    \"platformVersion\": \"LATEST\"\n  },\n  \"resourceRequirements\": [\n    {\"type\": \"VCPU\", \"value\": \"0.25\"},\n    {\"type\": \"MEMORY\", \"value\": \"512\"}\n  ],\n  \"executionRoleArn\": \"${aws_iam_role.ecs_task_execution_role.arn}\"\n}\n",
                  "name": "tf_test_batch_job_definition",
                  "platform_capabilities": [
                    "FARGATE"
                  ],
                  "type": "container"
                }
              dependencies:
                aws_iam_role.ecs_task_execution_role: |-
                    {
                      "assume_role_policy": "${data.aws_iam_policy_document.assume_role_policy.json}",
                      "name": "tf_test_batch_exec_role"
                    }
                aws_iam_role_policy_attachment.ecs_task_execution_role_policy: |-
                    {
                      "policy_arn": "arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy",
                      "role": "${aws_iam_role.ecs_task_execution_role.name}"
                    }
        argumentDocs:
            arn: '- The Amazon Resource Name of the job definition.'
            container_properties: |-
                - (Optional) A valid container properties
                provided as a single valid JSON document. This parameter is required if the type parameter is container.
            name: '- (Required) Specifies the name of the job definition.'
            parameters: '- (Optional) Specifies the parameter substitution placeholders to set in the job definition.'
            platform_capabilities: '- (Optional) The platform capabilities required by the job definition. If no value is specified, it defaults to EC2. To run the job on Fargate resources, specify FARGATE.'
            propagate_tags: '- (Optional) Specifies whether to propagate the tags from the job definition to the corresponding Amazon ECS task. Default is false.'
            retry_strategy: |-
                - (Optional) Specifies the retry strategy to use for failed jobs that are submitted with this job definition.
                Maximum number of retry_strategy is 1.  Defined below.
            retry_strategy.attempts: '- (Optional) The number of times to move a job to the RUNNABLE status. You may specify between 1 and 10 attempts.'
            retry_strategy.evaluate_on_exit: '- (Optional) The evaluate on exit conditions under which the job should be retried or failed. If this parameter is specified, then the attempts parameter must also be specified. You may specify up to 5 configuration blocks.'
            retry_strategy.evaluate_on_exit.action: '- (Required) Specifies the action to take if all of the specified conditions are met. The values are not case sensitive. Valid values: RETRY, EXIT.'
            retry_strategy.evaluate_on_exit.on_exit_code: '- (Optional) A glob pattern to match against the decimal representation of the exit code returned for a job.'
            retry_strategy.evaluate_on_exit.on_reason: '- (Optional) A glob pattern to match against the reason returned for a job.'
            retry_strategy.evaluate_on_exit.on_status_reason: '- (Optional) A glob pattern to match against the status reason returned for a job.'
            revision: '- The revision of the job definition.'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            timeout: '- (Optional) Specifies the timeout for jobs so that if a job runs longer, AWS Batch terminates the job. Maximum number of timeout is 1. Defined below.'
            timeout.attempt_duration_seconds: '- (Optional) The time duration in seconds after which AWS Batch terminates your jobs if they have not finished. The minimum value for the timeout is 60 seconds.'
            type: '- (Required) The type of job definition.  Must be container.'
        importStatements: []
    aws_batch_job_queue:
        subCategory: Batch
        description: Provides a Batch Job Queue resource.
        name: aws_batch_job_queue
        title: aws_batch_job_queue
        examples:
            - name: test_queue
              manifest: |-
                {
                  "compute_environments": [
                    "${aws_batch_compute_environment.test_environment_1.arn}",
                    "${aws_batch_compute_environment.test_environment_2.arn}"
                  ],
                  "name": "tf-test-batch-job-queue",
                  "priority": 1,
                  "state": "ENABLED"
                }
            - name: example
              manifest: |-
                {
                  "compute_environments": [
                    "${aws_batch_compute_environment.test_environment_1.arn}",
                    "${aws_batch_compute_environment.test_environment_2.arn}"
                  ],
                  "name": "tf-test-batch-job-queue",
                  "priority": 1,
                  "scheduling_policy_arn": "${aws_batch_scheduling_policy.example.arn}",
                  "state": "ENABLED"
                }
              references:
                scheduling_policy_arn: aws_batch_scheduling_policy.example.arn
              dependencies:
                aws_batch_scheduling_policy.example: |-
                    {
                      "fair_share_policy": [
                        {
                          "compute_reservation": 1,
                          "share_decay_seconds": 3600,
                          "share_distribution": [
                            {
                              "share_identifier": "A1*",
                              "weight_factor": 0.1
                            }
                          ]
                        }
                      ],
                      "name": "example"
                    }
        argumentDocs:
            arn: '- The Amazon Resource Name of the job queue.'
            compute_environments: |-
                - (Required) Specifies the set of compute environments
                mapped to a job queue and their order.  The position of the compute environments
                in the list will dictate the order.
            name: '- (Required) Specifies the name of the job queue.'
            priority: |-
                - (Required) The priority of the job queue. Job queues with a higher priority
                are evaluated first when associated with the same compute environment.
            scheduling_policy_arn: '- (Optional) The ARN of the fair share scheduling policy. If this parameter is specified, the job queue uses a fair share scheduling policy. If this parameter isn''t specified, the job queue uses a first in, first out (FIFO) scheduling policy. After a job queue is created, you can replace but can''t remove the fair share scheduling policy.'
            state: '- (Required) The state of the job queue. Must be one of: ENABLED or DISABLED'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_batch_scheduling_policy:
        subCategory: Batch
        description: Provides a Batch Scheduling Policy resource.
        name: aws_batch_scheduling_policy
        title: aws_batch_scheduling_policy
        examples:
            - name: example
              manifest: |-
                {
                  "fair_share_policy": [
                    {
                      "compute_reservation": 1,
                      "share_decay_seconds": 3600,
                      "share_distribution": [
                        {
                          "share_identifier": "A1*",
                          "weight_factor": 0.1
                        },
                        {
                          "share_identifier": "A2",
                          "weight_factor": 0.2
                        }
                      ]
                    }
                  ],
                  "name": "example",
                  "tags": {
                    "Name": "Example Batch Scheduling Policy"
                  }
                }
        argumentDocs:
            arn: '- The Amazon Resource Name of the scheduling policy.'
            fairshare_policy: '- (Optional) A fairshare policy block specifies the compute_reservation, share_delay_seconds, and share_distribution of the scheduling policy. The fairshare_policy block is documented below.'
            fairshare_policy.compute_reservation: '- (Optional) A value used to reserve some of the available maximum vCPU for fair share identifiers that have not yet been used. For more information, see FairsharePolicy.'
            fairshare_policy.share_delay_seconds: '- (Optional) The time period to use to calculate a fair share percentage for each fair share identifier in use, in seconds. For more information, see FairsharePolicy.'
            fairshare_policy.share_distribution: '- (Optional) One or more share distribution blocks which define the weights for the fair share identifiers for the fair share policy. For more information, see FairsharePolicy. The share_distribution block is documented below.'
            fairshare_policy.share_distribution.share_identifier: '- (Required) A fair share identifier or fair share identifier prefix. For more information, see ShareAttributes.'
            fairshare_policy.share_distribution.weight_factor: '- (Optional) The weight factor for the fair share identifier. For more information, see ShareAttributes.'
            name: '- (Required) Specifies the name of the scheduling policy.'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_budgets_budget:
        subCategory: Web Services Budgets
        description: Provides a budgets budget resource.
        name: aws_budgets_budget
        title: aws_budgets_budget
        examples:
            - name: ec2
              manifest: |-
                {
                  "budget_type": "COST",
                  "cost_filter": [
                    {
                      "name": "Service",
                      "values": [
                        "Amazon Elastic Compute Cloud - Compute"
                      ]
                    }
                  ],
                  "limit_amount": "1200",
                  "limit_unit": "USD",
                  "name": "budget-ec2-monthly",
                  "notification": [
                    {
                      "comparison_operator": "GREATER_THAN",
                      "notification_type": "FORECASTED",
                      "subscriber_email_addresses": [
                        "test@example.com"
                      ],
                      "threshold": 100,
                      "threshold_type": "PERCENTAGE"
                    }
                  ],
                  "time_period_end": "2087-06-15_00:00",
                  "time_period_start": "2017-07-01_00:00",
                  "time_unit": "MONTHLY"
                }
            - name: cost
              manifest: |-
                {
                  "budget_type": "COST",
                  "limit_amount": "100",
                  "limit_unit": "USD"
                }
            - name: s3
              manifest: |-
                {
                  "budget_type": "USAGE",
                  "limit_amount": "3",
                  "limit_unit": "GB"
                }
            - name: savings_plan_utilization
              manifest: |-
                {
                  "budget_type": "SAVINGS_PLANS_UTILIZATION",
                  "cost_types": [
                    {
                      "include_credit": false,
                      "include_discount": false,
                      "include_other_subscription": false,
                      "include_recurring": false,
                      "include_refund": false,
                      "include_subscription": true,
                      "include_support": false,
                      "include_tax": false,
                      "include_upfront": false,
                      "use_blended": false
                    }
                  ],
                  "limit_amount": "100.0",
                  "limit_unit": "PERCENTAGE"
                }
            - name: ri_utilization
              manifest: |-
                {
                  "budget_type": "RI_UTILIZATION",
                  "cost_filter": [
                    {
                      "name": "Service",
                      "values": [
                        "Amazon Relational Database Service"
                      ]
                    }
                  ],
                  "cost_types": [
                    {
                      "include_credit": false,
                      "include_discount": false,
                      "include_other_subscription": false,
                      "include_recurring": false,
                      "include_refund": false,
                      "include_subscription": true,
                      "include_support": false,
                      "include_tax": false,
                      "include_upfront": false,
                      "use_blended": false
                    }
                  ],
                  "limit_amount": "100.0",
                  "limit_unit": "PERCENTAGE"
                }
        argumentDocs:
            account_id: '- (Optional) The ID of the target account for budget. Will use current user''s account_id by default if omitted.'
            arn: '- The ARN of the budget.'
            budget_type: '- (Required) Whether this budget tracks monetary cost or usage.'
            comparison_operator: '- (Required) Comparison operator to use to evaluate the condition. Can be LESS_THAN, EQUAL_TO or GREATER_THAN.'
            cost: ""
            cost_filter: '- (Optional) A list of CostFilter name/values pair to apply to budget.'
            cost_filters: '- (Optional, Deprecated) Map of CostFilters key/value pairs to apply to the budget.'
            cost_types: '- (Optional) Object containing CostTypes The types of cost included in a budget, such as tax and subscriptions.'
            id: '- id of resource.'
            include_credit: '- A boolean value whether to include credits in the cost budget. Defaults to true'
            include_discount: '- Specifies whether a budget includes discounts. Defaults to true'
            include_other_subscription: '- A boolean value whether to include other subscription costs in the cost budget. Defaults to true'
            include_recurring: '- A boolean value whether to include recurring costs in the cost budget. Defaults to true'
            include_refund: '- A boolean value whether to include refunds in the cost budget. Defaults to true'
            include_subscription: '- A boolean value whether to include subscriptions in the cost budget. Defaults to true'
            include_support: '- A boolean value whether to include support costs in the cost budget. Defaults to true'
            include_tax: '- A boolean value whether to include tax in the cost budget. Defaults to true'
            include_upfront: '- A boolean value whether to include upfront costs in the cost budget. Defaults to true'
            limit_amount: '- (Required) The amount of cost or usage being measured for a budget.'
            limit_unit: '- (Required) The unit of measurement used for the budget forecast, actual spend, or budget threshold, such as dollars or GB. See Spend documentation.'
            name: '- (Optional) The name of a budget. Unique within accounts.'
            name_prefix: '- (Optional) The prefix of the name of a budget. Unique within accounts.'
            notification: '- (Optional) Object containing Budget Notifications. Can be used multiple times to define more than one budget notification'
            notification_type: '- (Required) What kind of budget value to notify on. Can be ACTUAL or FORECASTED'
            subscriber_email_addresses: '- (Optional) E-Mail addresses to notify. Either this or subscriber_sns_topic_arns is required.'
            subscriber_sns_topic_arns: '- (Optional) SNS topics to notify. Either this or subscriber_email_addresses is required.'
            threshold: '- (Required) Threshold when the notification should be sent.'
            threshold_type: '- (Required) What kind of threshold is defined. Can be PERCENTAGE OR ABSOLUTE_VALUE.'
            time_period_end: '- (Optional) The end of the time period covered by the budget. There are no restrictions on the end date. Format: 2017-01-01_12:00.'
            time_period_start: '- (Optional) The start of the time period covered by the budget. If you don''t specify a start date, AWS defaults to the start of your chosen time period. The start date must come before the end date. Format: 2017-01-01_12:00.'
            time_unit: '- (Required) The length of time until a budget resets the actual and forecasted spend. Valid values: MONTHLY, QUARTERLY, ANNUALLY, and DAILY.'
            usage: ""
            use_amortized: '- Specifies whether a budget uses the amortized rate. Defaults to false'
            use_blended: '- A boolean value whether to use blended costs in the cost budget. Defaults to false'
        importStatements: []
    aws_budgets_budget_action:
        subCategory: Web Services Budgets
        description: Provides a budget action resource.
        name: aws_budgets_budget_action
        title: aws_budgets_budget_action
        examples:
            - name: example
              manifest: |-
                {
                  "action_threshold": [
                    {
                      "action_threshold_type": "ABSOLUTE_VALUE",
                      "action_threshold_value": 100
                    }
                  ],
                  "action_type": "APPLY_IAM_POLICY",
                  "approval_model": "AUTOMATIC",
                  "budget_name": "${aws_budgets_budget.example.name}",
                  "definition": [
                    {
                      "iam_action_definition": [
                        {
                          "policy_arn": "${aws_iam_policy.example.arn}",
                          "roles": [
                            "${aws_iam_role.example.name}"
                          ]
                        }
                      ]
                    }
                  ],
                  "execution_role_arn": "${aws_iam_role.example.arn}",
                  "notification_type": "ACTUAL",
                  "subscriber": [
                    {
                      "address": "example@example.example",
                      "subscription_type": "EMAIL"
                    }
                  ]
                }
              references:
                budget_name: aws_budgets_budget.example.name
                definition.iam_action_definition.policy_arn: aws_iam_policy.example.arn
                execution_role_arn: aws_iam_role.example.arn
              dependencies:
                aws_budgets_budget.example: |-
                    {
                      "budget_type": "USAGE",
                      "limit_amount": "10.0",
                      "limit_unit": "dollars",
                      "name": "example",
                      "time_period_start": "2006-01-02_15:04",
                      "time_unit": "MONTHLY"
                    }
                aws_iam_policy.example: |-
                    {
                      "description": "My example policy",
                      "name": "example",
                      "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": [\n        \"ec2:Describe*\"\n      ],\n      \"Effect\": \"Allow\",\n      \"Resource\": \"*\"\n    }\n  ]\n}\n"
                    }
                aws_iam_role.example: |-
                    {
                      "assume_role_policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Principal\": {\n        \"Service\": [\n          \"budgets.${data.aws_partition.current.dns_suffix}\"\n        ]\n      },\n      \"Action\": [\n        \"sts:AssumeRole\"\n      ]\n    }\n  ]\n}\n",
                      "name": "example"
                    }
        argumentDocs:
            account_id: '- (Optional) The ID of the target account for budget. Will use current user''s account_id by default if omitted.'
            action_id: '- The id of the budget action.'
            action_sub_type: '- (Required) The action subType. Valid values are STOP_EC2_INSTANCES or STOP_RDS_INSTANCES.'
            action_threshold: '- (Required) The trigger threshold of the action. See Action Threshold.'
            action_threshold_type: '- (Required) The type of threshold for a notification. Valid values are PERCENTAGE or ABSOLUTE_VALUE.'
            action_threshold_value: '- (Required) The threshold of a notification.'
            action_type: '- (Required) The type of action. This defines the type of tasks that can be carried out by this action. This field also determines the format for definition. Valid values are APPLY_IAM_POLICY, APPLY_SCP_POLICY, and RUN_SSM_DOCUMENTS.'
            address: '- (Required) The address that AWS sends budget notifications to, either an SNS topic or an email.'
            approval_model: '- (Required) This specifies if the action needs manual or automatic approval. Valid values are AUTOMATIC and MANUAL.'
            arn: '- The ARN of the budget action.'
            budget_name: '- (Required) The name of a budget.'
            definition: '- (Required) Specifies all of the type-specific parameters. See Definition.'
            execution_role_arn: '- (Required) The role passed for action execution and reversion. Roles and actions must be in the same account.'
            groups: '- (Optional) A list of groups to be attached. There must be at least one group.'
            iam_action_definition: '- (Optional) The AWS Identity and Access Management (IAM) action definition details. See IAM Action Definition.'
            id: '- ID of resource.'
            instance_ids: '- (Required) The EC2 and RDS instance IDs.'
            notification_type: '- (Required) The type of a notification. Valid values are ACTUAL or FORECASTED.'
            policy_arn: '- (Required) The Amazon Resource Name (ARN) of the policy to be attached.'
            policy_id: '- (Required) The policy ID attached.'
            region: '- (Required) The Region to run the SSM document.'
            roles: '- (Optional) A list of roles to be attached. There must be at least one role.'
            scp_action_definition: '- (Optional) The service control policies (SCPs) action definition details. See SCP Action Definition.'
            ssm_action_definition: '- (Optional) The AWS Systems Manager (SSM) action definition details. See SSM Action Definition.'
            status: '- The status of the budget action.'
            subscriber: '- (Required) A list of subscribers. See Subscriber.'
            subscription_type: '- (Required) The type of notification that AWS sends to a subscriber. Valid values are SNS or EMAIL.'
            target_ids: '- (Optional) A list of target IDs.'
            users: '- (Optional) A list of users to be attached. There must be at least one user.'
        importStatements: []
    aws_ce_anomaly_monitor:
        subCategory: CE (Cost Explorer)
        description: Provides a CE Cost Anomaly Monitor
        name: aws_ce_anomaly_monitor
        title: aws_ce_anomaly_monitor
        examples:
            - name: service_monitor
              manifest: |-
                {
                  "monitor_dimension": "SERVICE",
                  "monitor_type": "DIMENSIONAL",
                  "name": "AWSServiceMonitor"
                }
            - name: test
              manifest: |-
                {
                  "monitor_specification": "{\n\t\"And\": null,\n\t\"CostCategories\": null,\n\t\"Dimensions\": null,\n\t\"Not\": null,\n\t\"Or\": null,\n\t\"Tags\": {\n\t\t\"Key\": \"CostCenter\",\n\t\t\"MatchOptions\": null,\n\t\t\"Values\": [\n\t\t\t\"10000\"\n\t\t]\n\t}\n}\n",
                  "monitor_type": "CUSTOM",
                  "name": "AWSCustomAnomalyMonitor"
                }
        argumentDocs:
            arn: '- ARN of the anomaly monitor.'
            id: '- Unique ID of the anomaly monitor. Same as arn.'
            monitor_dimension: '- (Required, if monitor_type is DIMENSIONAL) The dimensions to evaluate. Valid values: SERVICE.'
            monitor_specification: '- (Required, if monitor_type is CUSTOM) A valid JSON representation for the Expression object.'
            monitor_type: '- (Required) The possible type values. Valid values: DIMENSIONAL | CUSTOM.'
            name: '- (Required) The name of the monitor.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_ce_anomaly_subscription:
        subCategory: CE (Cost Explorer)
        description: Provides a CE Cost Anomaly Subscription
        name: aws_ce_anomaly_subscription
        title: aws_ce_anomaly_subscription
        examples:
            - name: test
              manifest: |-
                {
                  "frequency": "DAILY",
                  "monitor_arn_list": [
                    "${aws_ce_anomaly_monitor.test.arn}"
                  ],
                  "name": "DAILYSUBSCRIPTION",
                  "subscriber": [
                    {
                      "address": "abc@example.com",
                      "type": "EMAIL"
                    }
                  ],
                  "threshold": 100
                }
              dependencies:
                aws_ce_anomaly_monitor.test: |-
                    {
                      "dimension": "SERVICE",
                      "name": "AWSServiceMonitor",
                      "type": "DIMENSIONAL"
                    }
            - name: realtime_subscription
              manifest: |-
                {
                  "depends_on": [
                    "${aws_sns_topic_policy.default}"
                  ],
                  "frequency": "IMMEDIATE",
                  "monitor_arn_list": [
                    "${aws_ce_anomaly_monitor.anomaly_monitor.arn}"
                  ],
                  "name": "RealtimeAnomalySubscription",
                  "subscriber": [
                    {
                      "address": "${aws_sns_topic.cost_anomaly_updates.arn}",
                      "type": "SNS"
                    }
                  ],
                  "threshold": 0
                }
              references:
                subscriber.address: aws_sns_topic.cost_anomaly_updates.arn
              dependencies:
                aws_ce_anomaly_monitor.anomaly_monitor: |-
                    {
                      "dimension": "SERVICE",
                      "name": "AWSServiceMonitor",
                      "type": "DIMENSIONAL"
                    }
                aws_sns_topic.cost_anomaly_updates: |-
                    {
                      "name": "CostAnomalyUpdates"
                    }
                aws_sns_topic_policy.default: |-
                    {
                      "arn": "${aws_sns_topic.cost_anomaly_updates.arn}",
                      "policy": "${data.aws_iam_policy_document.sns_topic_policy.json}"
                    }
        argumentDocs:
            account_id: '- (Optional) The unique identifier for the AWS account in which the anomaly subscription ought to be created.'
            address: '- (Required) The address of the subscriber. If type is SNS, this will be the arn of the sns topic. If type is EMAIL, this will be the destination email address.'
            arn: '- ARN of the anomaly subscription.'
            frequency: '- (Required) The frequency that anomaly reports are sent. Valid Values: DAILY | IMMEDIATE | WEEKLY.'
            id: '- Unique ID of the anomaly subscription. Same as arn.'
            monitor_arn_list: '- (Required) A list of cost anomaly monitors.'
            name: '- (Required) The name for the subscription.'
            subscriber: '- (Required) A subscriber configuration. Multiple subscribers can be defined.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            threshold: '- (Required) The dollar value that triggers a notification if the threshold is exceeded.'
            type: '- (Required) The type of subscription. Valid Values: SNS | EMAIL.'
        importStatements: []
    aws_ce_cost_allocation_tag:
        subCategory: CE (Cost Explorer)
        description: Provides a CE Cost Allocation Tag
        name: aws_ce_cost_allocation_tag
        title: aws_ce_cost_allocation_tag
        examples:
            - name: example
              manifest: |-
                {
                  "status": "Active",
                  "tag_key": "example"
                }
        argumentDocs:
            id: '- The key for the cost allocation tag.'
            status: '- (Required) The status of a cost allocation tag. Valid values are Active and Inactive.'
            tag_key: '- (Required) The key for the cost allocation tag.'
            type: '- The type of cost allocation tag.'
        importStatements: []
    aws_ce_cost_category:
        subCategory: CE (Cost Explorer)
        description: Provides a CE Cost Category Definition
        name: aws_ce_cost_category
        title: aws_ce_cost_category
        examples:
            - name: test
              manifest: |-
                {
                  "name": "NAME",
                  "rule": [
                    {
                      "rule": [
                        {
                          "dimension": [
                            {
                              "key": "LINKED_ACCOUNT_NAME",
                              "match_options": [
                                "ENDS_WITH"
                              ],
                              "values": [
                                "-prod"
                              ]
                            }
                          ]
                        }
                      ],
                      "value": "production"
                    },
                    {
                      "rule": [
                        {
                          "dimension": [
                            {
                              "key": "LINKED_ACCOUNT_NAME",
                              "match_options": [
                                "ENDS_WITH"
                              ],
                              "values": [
                                "-stg"
                              ]
                            }
                          ]
                        }
                      ],
                      "value": "staging"
                    },
                    {
                      "rule": [
                        {
                          "dimension": [
                            {
                              "key": "LINKED_ACCOUNT_NAME",
                              "match_options": [
                                "ENDS_WITH"
                              ],
                              "values": [
                                "-dev"
                              ]
                            }
                          ]
                        }
                      ],
                      "value": "testing"
                    }
                  ],
                  "rule_version": "CostCategoryExpression.v1"
                }
        argumentDocs:
            arn: '- ARN of the cost category.'
            default_value: '- (Optional) Default value for the cost category.'
            effective_end: '- Effective end data of your Cost Category.'
            effective_start: '- Effective state data of your Cost Category.'
            id: '- Unique ID of the cost category.'
            name: '- (Required) Unique name for the Cost Category.'
            rule: '- (Required) Configuration block for the Cost Category rules used to categorize costs. See below.'
            rule.and: '- (Optional) Return results that match both Dimension objects.'
            rule.cost_category: '- (Optional) Configuration block for the filter that''s based on CostCategory values. See below.'
            rule.cost_category.key: '- (Optional) Unique name of the Cost Category.'
            rule.cost_category.match_options: '- (Optional) Match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE. Valid values are: EQUALS,  ABSENT, STARTS_WITH, ENDS_WITH, CONTAINS, CASE_SENSITIVE, CASE_INSENSITIVE.'
            rule.cost_category.values: '- (Optional) Specific value of the Cost Category.'
            rule.dimension: '- (Optional) Configuration block for the specific Dimension to use for Expression. See below.'
            rule.dimension.key: '- (Optional) Unique name of the Cost Category.'
            rule.dimension.match_options: '- (Optional) Match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE. Valid values are: EQUALS,  ABSENT, STARTS_WITH, ENDS_WITH, CONTAINS, CASE_SENSITIVE, CASE_INSENSITIVE.'
            rule.dimension.values: '- (Optional) Specific value of the Cost Category.'
            rule.inherited_value: '- (Optional) Configuration block for the value the line item is categorized as if the line item contains the matched dimension. See below.'
            rule.inherited_value.dimension_key: '- (Optional) Key to extract cost category values.'
            rule.inherited_value.dimension_name: '- (Optional) Name of the dimension that''s used to group costs. If you specify LINKED_ACCOUNT_NAME, the cost category value is based on account name. If you specify TAG, the cost category value will be based on the value of the specified tag key. Valid values are LINKED_ACCOUNT_NAME, TAG'
            rule.not: '- (Optional) Return results that match both Dimension object.'
            rule.or: '- (Optional) Return results that match both Dimension object.'
            rule.rule: '- (Optional) Configuration block for the Expression object used to categorize costs. See below.'
            rule.tag: '- (Optional) Configuration block for the specific Tag to use for Expression. See below.'
            rule.tag.key: '- (Optional) Key for the tag.'
            rule.tag.match_options: '- (Optional) Match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE. Valid values are: EQUALS,  ABSENT, STARTS_WITH, ENDS_WITH, CONTAINS, CASE_SENSITIVE, CASE_INSENSITIVE.'
            rule.tag.values: '- (Optional) Specific value of the Cost Category.'
            rule.type: '- (Optional) You can define the CostCategoryRule rule type as either REGULAR or INHERITED_VALUE.'
            rule.value: '- (Optional) Default value for the cost category.'
            rule_version: '- (Required) Rule schema version in this particular Cost Category.'
            split_charge_rule: '- (Optional) Configuration block for the split charge rules used to allocate your charges between your Cost Category values. See below.'
            split_charge_rule.method: '- (Required) Method that''s used to define how to split your source costs across your targets. Valid values are FIXED, PROPORTIONAL, EVEN'
            split_charge_rule.parameter: '- (Optional) Configuration block for the parameters for a split charge method. This is only required for the FIXED method. See below.'
            split_charge_rule.parameter.type: '- (Optional) Parameter type.'
            split_charge_rule.parameter.values: '- (Optional) Parameter values.'
            split_charge_rule.source: '- (Required) Cost Category value that you want to split.'
            split_charge_rule.targets: '- (Required) Cost Category values that you want to split costs across. These values can''t be used as a source in other split charge rules.'
        importStatements: []
    aws_chime_voice_connector:
        subCategory: Chime
        description: Enables you to connect your phone system to the telephone network at a substantial cost savings by using SIP trunking.
        name: aws_chime_voice_connector
        title: aws_chime_voice_connector
        examples:
            - name: test
              manifest: |-
                {
                  "aws_region": "us-east-1",
                  "name": "connector-test-1",
                  "require_encryption": true
                }
        argumentDocs:
            aws_region: '- (Optional) The AWS Region in which the Amazon Chime Voice Connector is created. Default value: us-east-1'
            name: '- (Required) The name of the Amazon Chime Voice Connector.'
            outbound_host_name: '- The outbound host name for the Amazon Chime Voice Connector.'
            require_encryption: '- (Required) When enabled, requires encryption for the Amazon Chime Voice Connector.'
        importStatements: []
    aws_chime_voice_connector_group:
        subCategory: Chime
        description: Creates an Amazon Chime Voice Connector group under the administrator's AWS account.
        name: aws_chime_voice_connector_group
        title: aws_chime_voice_connector_group
        examples:
            - name: group
              manifest: |-
                {
                  "connector": [
                    {
                      "priority": 1,
                      "voice_connector_id": "${aws_chime_voice_connector.vc1.id}"
                    },
                    {
                      "priority": 3,
                      "voice_connector_id": "${aws_chime_voice_connector.vc2.id}"
                    }
                  ],
                  "name": "test-group"
                }
              references:
                connector.voice_connector_id: aws_chime_voice_connector.vc2.id
              dependencies:
                aws_chime_voice_connector.vc1: |-
                    {
                      "aws_region": "us-east-1",
                      "name": "connector-test-1",
                      "require_encryption": true
                    }
                aws_chime_voice_connector.vc2: |-
                    {
                      "aws_region": "us-west-2",
                      "name": "connector-test-2",
                      "require_encryption": true
                    }
        argumentDocs:
            connector: '- (Optional) The Amazon Chime Voice Connectors to route inbound calls to.'
            connector.priority: '- (Required) The priority associated with the Amazon Chime Voice Connector, with 1 being the highest priority. Higher priority Amazon Chime Voice Connectors are attempted first.'
            connector.voice_connector_id: '- (Required) The Amazon Chime Voice Connector ID.'
            id: '- Amazon Chime Voice Connector group ID.'
            name: '- (Required) The name of the Amazon Chime Voice Connector group.'
        importStatements: []
    aws_chime_voice_connector_logging:
        subCategory: Chime
        description: Adds a logging configuration for the specified Amazon Chime Voice Connector. The logging configuration specifies whether SIP message logs are enabled for sending to Amazon CloudWatch Logs.
        name: aws_chime_voice_connector_logging
        title: aws_chime_voice_connector_logging
        examples:
            - name: default
              manifest: |-
                {
                  "enable_sip_logs": true,
                  "voice_connector_id": "${aws_chime_voice_connector.default.id}"
                }
              references:
                voice_connector_id: aws_chime_voice_connector.default.id
              dependencies:
                aws_chime_voice_connector.default: |-
                    {
                      "name": "vc-name-test",
                      "require_encryption": true
                    }
        argumentDocs:
            enable_sip_logs: '- (Optional) When true, enables SIP message logs for sending to Amazon CloudWatch Logs.'
            id: '- The Amazon Chime Voice Connector ID.'
            voice_connector_id: '- (Required) The Amazon Chime Voice Connector ID.'
        importStatements: []
    aws_chime_voice_connector_origination:
        subCategory: Chime
        description: Enable origination settings to control inbound calling to your SIP infrastructure.
        name: aws_chime_voice_connector_origination
        title: aws_chime_voice_connector_origination
        examples:
            - name: default
              manifest: |-
                {
                  "disabled": false,
                  "route": [
                    {
                      "host": "127.0.0.1",
                      "port": 8081,
                      "priority": 1,
                      "protocol": "TCP",
                      "weight": 1
                    },
                    {
                      "host": "127.0.0.2",
                      "port": 8082,
                      "priority": 2,
                      "protocol": "TCP",
                      "weight": 10
                    }
                  ],
                  "voice_connector_id": "${aws_chime_voice_connector.default.id}"
                }
              references:
                voice_connector_id: aws_chime_voice_connector.default.id
              dependencies:
                aws_chime_voice_connector.default: |-
                    {
                      "name": "test",
                      "require_encryption": true
                    }
        argumentDocs:
            disabled: '- (Optional) When origination settings are disabled, inbound calls are not enabled for your Amazon Chime Voice Connector.'
            id: '- The Amazon Chime Voice Connector ID.'
            route: '- (Required) Set of call distribution properties defined for your SIP hosts. See route below for more details. Minimum of 1. Maximum of 20.'
            route.host: '- (Required) The FQDN or IP address to contact for origination traffic.'
            route.port: '- (Required) The designated origination route port. Defaults to 5060.'
            route.priority: '- (Required) The priority associated with the host, with 1 being the highest priority. Higher priority hosts are attempted first.'
            route.protocol: '- (Required) The protocol to use for the origination route. Encryption-enabled Amazon Chime Voice Connectors use TCP protocol by default.'
            route.weight: '- (Required) The weight associated with the host. If hosts are equal in priority, calls are redistributed among them based on their relative weight.'
            voice_connector_id: '- (Required) The Amazon Chime Voice Connector ID.'
        importStatements: []
    aws_chime_voice_connector_streaming:
        subCategory: Chime
        description: The streaming configuration associated with an Amazon Chime Voice Connector. Specifies whether media streaming is enabled for sending to Amazon Kinesis, and shows the retention period for the Amazon Kinesis data, in hours.
        name: aws_chime_voice_connector_streaming
        title: aws_chime_voice_connector_streaming
        examples:
            - name: default
              manifest: |-
                {
                  "data_retention": 7,
                  "disabled": false,
                  "streaming_notification_targets": [
                    "SQS"
                  ],
                  "voice_connector_id": "${aws_chime_voice_connector.default.id}"
                }
              references:
                voice_connector_id: aws_chime_voice_connector.default.id
              dependencies:
                aws_chime_voice_connector.default: |-
                    {
                      "name": "vc-name-test",
                      "require_encryption": true
                    }
        argumentDocs:
            data_retention: '- (Required) The retention period, in hours, for the Amazon Kinesis data.'
            disabled: '- (Optional) When true, media streaming to Amazon Kinesis is turned off. Default: false'
            id: '- The Amazon Chime Voice Connector ID.'
            streaming_notification_targets: '- (Optional) The streaming notification targets. Valid Values: EventBridge | SNS | SQS'
            voice_connector_id: '- (Required) The Amazon Chime Voice Connector ID.'
        importStatements: []
    aws_chime_voice_connector_termination:
        subCategory: Chime
        description: Enable Termination settings to control outbound calling from your SIP infrastructure.
        name: aws_chime_voice_connector_termination
        title: aws_chime_voice_connector_termination
        examples:
            - name: default
              manifest: |-
                {
                  "calling_regions": [
                    "US",
                    "CA"
                  ],
                  "cidr_allow_list": [
                    "50.35.78.96/31"
                  ],
                  "cps_limit": 1,
                  "disabled": false,
                  "voice_connector_id": "${aws_chime_voice_connector.default.id}"
                }
              references:
                voice_connector_id: aws_chime_voice_connector.default.id
              dependencies:
                aws_chime_voice_connector.default: |-
                    {
                      "name": "vc-name-test",
                      "require_encryption": true
                    }
        argumentDocs:
            calling_regions: '- (Required) The countries to which calls are allowed, in ISO 3166-1 alpha-2 format.'
            cidr_allow_list: '- (Required) The IP addresses allowed to make calls, in CIDR format.'
            cps_limit: '- (Optional) The limit on calls per second. Max value based on account service quota. Default value of 1.'
            default_phone_number: '- (Optional) The default caller ID phone number.'
            disabled: '- (Optional) When termination settings are disabled, outbound calls can not be made.'
            id: '- The Amazon Chime Voice Connector ID.'
            voice_connector_id: '- (Required) The Amazon Chime Voice Connector ID.'
        importStatements: []
    aws_chime_voice_connector_termination_credentials:
        subCategory: Chime
        description: Adds termination SIP credentials for the specified Amazon Chime Voice Connector.
        name: aws_chime_voice_connector_termination_credentials
        title: aws_chime_voice_connector_termination_credentials
        examples:
            - name: default
              manifest: |-
                {
                  "credentials": [
                    {
                      "password": "test!",
                      "username": "test"
                    }
                  ],
                  "depends_on": [
                    "${aws_chime_voice_connector_termination.default}"
                  ],
                  "voice_connector_id": "${aws_chime_voice_connector.default.id}"
                }
              references:
                voice_connector_id: aws_chime_voice_connector.default.id
              dependencies:
                aws_chime_voice_connector.default: |-
                    {
                      "name": "test",
                      "require_encryption": true
                    }
                aws_chime_voice_connector_termination.default: |-
                    {
                      "calling_regions": [
                        "US",
                        "CA"
                      ],
                      "cidr_allow_list": [
                        "50.35.78.96/31"
                      ],
                      "cps_limit": 1,
                      "disabled": true,
                      "voice_connector_id": "${aws_chime_voice_connector.default.id}"
                    }
        argumentDocs:
            credentials: '- (Required) List of termination SIP credentials.'
            credentials.password: '- (Required) RFC2617 compliant password associated with the SIP credentials.'
            credentials.username: '- (Required) RFC2617 compliant username associated with the SIP credentials.'
            id: '- Amazon Chime Voice Connector ID.'
            voice_connector_id: '- (Required) Amazon Chime Voice Connector ID.'
        importStatements: []
    aws_cloud9_environment_ec2:
        subCategory: Cloud9
        description: Provides a Cloud9 EC2 Development Environment.
        name: aws_cloud9_environment_ec2
        title: aws_cloud9_environment_ec2
        examples:
            - name: example
              manifest: |-
                {
                  "instance_type": "t2.micro",
                  "name": "example-env"
                }
            - name: example
              manifest: |-
                {
                  "instance_type": "t2.micro"
                }
            - name: example
              manifest: |-
                {
                  "instance_type": "t2.micro"
                }
              dependencies:
                aws_eip.cloud9_eip: |-
                    {
                      "instance": "${data.aws_instance.cloud9_instance.id}",
                      "vpc": true
                    }
        argumentDocs:
            arn: '- The ARN of the environment.'
            automatic_stop_time_minutes: '- (Optional) The number of minutes until the running instance is shut down after the environment has last been used.'
            connection_type: '- (Optional) The connection type used for connecting to an Amazon EC2 environment. Valid values are CONNECT_SSH and CONNECT_SSM. For more information please refer AWS documentation for Cloud9.'
            description: '- (Optional) The description of the environment.'
            id: '- The ID of the environment.'
            image_id: '- (Optional) The identifier for the Amazon Machine Image (AMI) that''s used to create the EC2 instance. Valid values are'
            instance_type: '- (Required) The type of instance to connect to the environment, e.g., t2.micro.'
            name: '- (Required) The name of the environment.'
            owner_arn: '- (Optional) The ARN of the environment owner. This can be ARN of any AWS IAM principal. Defaults to the environment''s creator.'
            subnet_id: '- (Optional) The ID of the subnet in Amazon VPC that AWS Cloud9 will use to communicate with the Amazon EC2 instance.'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            type: '- The type of the environment (e.g., ssh or ec2)'
        importStatements: []
    aws_cloud9_environment_membership:
        subCategory: Cloud9
        description: Provides an environment member to an AWS Cloud9 development environment.
        name: aws_cloud9_environment_membership
        title: aws_cloud9_environment_membership
        examples:
            - name: test
              manifest: |-
                {
                  "environment_id": "${aws_cloud9_environment_ec2.test.id}",
                  "permissions": "read-only",
                  "user_arn": "${aws_iam_user.test.arn}"
                }
              references:
                environment_id: aws_cloud9_environment_ec2.test.id
                user_arn: aws_iam_user.test.arn
              dependencies:
                aws_cloud9_environment_ec2.test: |-
                    {
                      "instance_type": "t2.micro",
                      "name": "some-env"
                    }
                aws_iam_user.test: |-
                    {
                      "name": "some-user"
                    }
        argumentDocs:
            environment_id: '- (Required) The ID of the environment that contains the environment member you want to add.'
            id: '- The ID of the environment membership.'
            permissions: '- (Required) The type of environment member permissions you want to associate with this environment member. Allowed values are read-only and read-write .'
            user_arn: '- (Required) The Amazon Resource Name (ARN) of the environment member you want to add.'
            user_id: '- he user ID in AWS Identity and Access Management (AWS IAM) of the environment member.'
        importStatements: []
    aws_cloudcontrolapi_resource:
        subCategory: Cloud Control API
        description: Manages a Cloud Control API Resource.
        name: aws_cloudcontrolapi_resource
        title: aws_cloudcontrolapi_resource
        examples:
            - name: example
              manifest: |-
                {
                  "desired_state": "${jsonencode({\n    ClusterName = \"example\"\n    Tags = [\n      {\n        Key   = \"CostCenter\"\n        Value = \"IT\"\n      }\n    ]\n  })}",
                  "type_name": "AWS::ECS::Cluster"
                }
        argumentDocs:
            desired_state: '- (Required) JSON string matching the CloudFormation resource type schema with desired configuration. Terraform configuration expressions can be converted into JSON using the jsonencode() function.'
            properties: '- JSON string matching the CloudFormation resource type schema with current configuration. Underlying attributes can be referenced via the jsondecode() function, for example, jsondecode(data.aws_cloudcontrolapi_resource.example.properties)["example"].'
            role_arn: '- (Optional) Amazon Resource Name (ARN) of the IAM Role to assume for operations.'
            schema: '- (Optional) JSON string of the CloudFormation resource type schema which is used for plan time validation where possible. Automatically fetched if not provided. In large scale environments with multiple resources using the same type_name, it is recommended to fetch the schema once via the aws_cloudformation_type data source and use this argument to reduce DescribeType API operation throttling. This value is marked sensitive only to prevent large plan differences from showing.'
            type_name: '- (Required) CloudFormation resource type name. For example, AWS::EC2::VPC.'
            type_version_id: '- (Optional) Identifier of the CloudFormation resource type version.'
        importStatements: []
    aws_cloudformation_stack:
        subCategory: CloudFormation
        description: Provides a CloudFormation Stack resource.
        name: aws_cloudformation_stack
        title: aws_cloudformation_stack
        examples:
            - name: network
              manifest: |-
                {
                  "name": "networking-stack",
                  "parameters": {
                    "VPCCidr": "10.0.0.0/16"
                  },
                  "template_body": "{\n  \"Parameters\" : {\n    \"VPCCidr\" : {\n      \"Type\" : \"String\",\n      \"Default\" : \"10.0.0.0/16\",\n      \"Description\" : \"Enter the CIDR block for the VPC. Default is 10.0.0.0/16.\"\n    }\n  },\n  \"Resources\" : {\n    \"myVpc\": {\n      \"Type\" : \"AWS::EC2::VPC\",\n      \"Properties\" : {\n        \"CidrBlock\" : { \"Ref\" : \"VPCCidr\" },\n        \"Tags\" : [\n          {\"Key\": \"Name\", \"Value\": \"Primary_CF_VPC\"}\n        ]\n      }\n    }\n  }\n}\n"
                }
        argumentDocs:
            capabilities: |-
                - (Optional) A list of capabilities.
                Valid values: CAPABILITY_IAM, CAPABILITY_NAMED_IAM, or CAPABILITY_AUTO_EXPAND
            create: '- (Default 30 minutes) Used for Creating Stacks'
            delete: '- (Default 30 minutes) Used for destroying stacks.'
            disable_rollback: |-
                - (Optional) Set to true to disable rollback of the stack if stack creation failed.
                Conflicts with on_failure.
            iam_role_arn: '- (Optional) The ARN of an IAM role that AWS CloudFormation assumes to create the stack. If you don''t specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.'
            id: '- A unique identifier of the stack.'
            name: '- (Required) Stack name.'
            notification_arns: '- (Optional) A list of SNS topic ARNs to publish stack related events.'
            on_failure: |-
                - (Optional) Action to be taken if stack creation fails. This must be
                one of: DO_NOTHING, ROLLBACK, or DELETE. Conflicts with disable_rollback.
            outputs: '- A map of outputs from the stack.'
            parameters: '- (Optional) A map of Parameter structures that specify input parameters for the stack.'
            policy_body: |-
                - (Optional) Structure containing the stack policy body.
                Conflicts w/ policy_url.
            policy_url: |-
                - (Optional) Location of a file containing the stack policy.
                Conflicts w/ policy_body.
            tags: '- (Optional) Map of resource tags to associate with this stack. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            template_body: '- (Optional) Structure containing the template body (max size: 51,200 bytes).'
            template_url: '- (Optional) Location of a file containing the template body (max size: 460,800 bytes).'
            timeout_in_minutes: '- (Optional) The amount of time that can pass before the stack status becomes CREATE_FAILED.'
            update: '- (Default 30 minutes) Used for Stack modifications'
        importStatements: []
    aws_cloudformation_stack_set:
        subCategory: CloudFormation
        description: Manages a CloudFormation StackSet.
        name: aws_cloudformation_stack_set
        title: aws_cloudformation_stack_set
        examples:
            - name: example
              manifest: |-
                {
                  "administration_role_arn": "${aws_iam_role.AWSCloudFormationStackSetAdministrationRole.arn}",
                  "name": "example",
                  "parameters": {
                    "VPCCidr": "10.0.0.0/16"
                  },
                  "template_body": "{\n  \"Parameters\" : {\n    \"VPCCidr\" : {\n      \"Type\" : \"String\",\n      \"Default\" : \"10.0.0.0/16\",\n      \"Description\" : \"Enter the CIDR block for the VPC. Default is 10.0.0.0/16.\"\n    }\n  },\n  \"Resources\" : {\n    \"myVpc\": {\n      \"Type\" : \"AWS::EC2::VPC\",\n      \"Properties\" : {\n        \"CidrBlock\" : { \"Ref\" : \"VPCCidr\" },\n        \"Tags\" : [\n          {\"Key\": \"Name\", \"Value\": \"Primary_CF_VPC\"}\n        ]\n      }\n    }\n  }\n}\n"
                }
              references:
                administration_role_arn: aws_iam_role.AWSCloudFormationStackSetAdministrationRole.arn
              dependencies:
                aws_iam_role.AWSCloudFormationStackSetAdministrationRole: |-
                    {
                      "assume_role_policy": "${data.aws_iam_policy_document.AWSCloudFormationStackSetAdministrationRole_assume_role_policy.json}",
                      "name": "AWSCloudFormationStackSetAdministrationRole"
                    }
                aws_iam_role_policy.AWSCloudFormationStackSetAdministrationRole_ExecutionPolicy: |-
                    {
                      "name": "ExecutionPolicy",
                      "policy": "${data.aws_iam_policy_document.AWSCloudFormationStackSetAdministrationRole_ExecutionPolicy.json}",
                      "role": "${aws_iam_role.AWSCloudFormationStackSetAdministrationRole.name}"
                    }
        argumentDocs:
            administration_role_arn: '- (Optional) Amazon Resource Number (ARN) of the IAM Role in the administrator account. This must be defined when using the SELF_MANAGED permission model.'
            arn: '- Amazon Resource Name (ARN) of the StackSet.'
            auto_deployment: '- (Optional) Configuration block containing the auto-deployment model for your StackSet. This can only be defined when using the SERVICE_MANAGED permission model.'
            call_as: '- (Optional) Specifies whether you are acting as an account administrator in the organization''s management account or as a delegated administrator in a member account. Valid values: SELF (default), DELEGATED_ADMIN.'
            capabilities: '- (Optional) A list of capabilities. Valid values: CAPABILITY_IAM, CAPABILITY_NAMED_IAM, CAPABILITY_AUTO_EXPAND.'
            description: '- (Optional) Description of the StackSet.'
            enabled: '- (Optional) Whether or not auto-deployment is enabled.'
            execution_role_name: '- (Optional) Name of the IAM Role in all target accounts for StackSet operations. Defaults to AWSCloudFormationStackSetExecutionRole when using the SELF_MANAGED permission model. This should not be defined when using the SERVICE_MANAGED permission model.'
            id: '- Name of the StackSet.'
            name: '- (Required) Name of the StackSet. The name must be unique in the region where you create your StackSet. The name can contain only alphanumeric characters (case-sensitive) and hyphens. It must start with an alphabetic character and cannot be longer than 128 characters.'
            operation_preferences: '- (Optional) Preferences for how AWS CloudFormation performs a stack set update.'
            operation_preferences.failure_tolerance_count: '- (Optional) The number of accounts, per Region, for which this operation can fail before AWS CloudFormation stops the operation in that Region.'
            operation_preferences.failure_tolerance_percentage: '- (Optional) The percentage of accounts, per Region, for which this stack operation can fail before AWS CloudFormation stops the operation in that Region.'
            operation_preferences.max_concurrent_count: '- (Optional) The maximum number of accounts in which to perform this operation at one time.'
            operation_preferences.max_concurrent_percentage: '- (Optional) The maximum percentage of accounts in which to perform this operation at one time.'
            operation_preferences.region_concurrency_type: '- (Optional) The concurrency type of deploying StackSets operations in Regions, could be in parallel or one Region at a time.'
            operation_preferences.region_order: '- (Optional) The order of the Regions in where you want to perform the stack operation.'
            parameters: '- (Optional) Key-value map of input parameters for the StackSet template. All template parameters, including those with a Default, must be configured or ignored with lifecycle configuration block ignore_changes argument. All NoEcho template parameters must be ignored with the lifecycle configuration block ignore_changes argument.'
            permission_model: '- (Optional) Describes how the IAM roles required for your StackSet are created. Valid values: SELF_MANAGED (default), SERVICE_MANAGED.'
            retain_stacks_on_account_removal: '- (Optional) Whether or not to retain stacks when the account is removed.'
            stack_set_id: '- Unique identifier of the StackSet.'
            tags: '- (Optional) Key-value map of tags to associate with this StackSet and the Stacks created from it. AWS CloudFormation also propagates these tags to supported resources that are created in the Stacks. A maximum number of 50 tags can be specified. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            template_body: '- (Optional) String containing the CloudFormation template body. Maximum size: 51,200 bytes. Conflicts with template_url.'
            template_url: '- (Optional) String containing the location of a file containing the CloudFormation template body. The URL must point to a template that is located in an Amazon S3 bucket. Maximum location file size: 460,800 bytes. Conflicts with template_body.'
            update: '- (Default 30m) How long to wait for a StackSet to be updated.'
        importStatements: []
    aws_cloudformation_stack_set_instance:
        subCategory: CloudFormation
        description: Manages a CloudFormation StackSet Instance.
        name: aws_cloudformation_stack_set_instance
        title: aws_cloudformation_stack_set_instance
        examples:
            - name: example
              manifest: |-
                {
                  "account_id": "123456789012",
                  "region": "us-east-1",
                  "stack_set_name": "${aws_cloudformation_stack_set.example.name}"
                }
              references:
                stack_set_name: aws_cloudformation_stack_set.example.name
            - name: example
              manifest: |-
                {
                  "deployment_targets": [
                    {
                      "organizational_unit_ids": [
                        "${aws_organizations_organization.example.roots[0].id}"
                      ]
                    }
                  ],
                  "region": "us-east-1",
                  "stack_set_name": "${aws_cloudformation_stack_set.example.name}"
                }
              references:
                stack_set_name: aws_cloudformation_stack_set.example.name
        argumentDocs:
            account_id: '- (Optional) Target AWS Account ID to create a Stack based on the StackSet. Defaults to current account.'
            call_as: '- (Optional) Specifies whether you are acting as an account administrator in the organization''s management account or as a delegated administrator in a member account. Valid values: SELF (default), DELEGATED_ADMIN.'
            create: '- (Default 30m) How long to wait for a Stack to be created.'
            delete: '- (Default 30m) How long to wait for a Stack to be deleted.'
            deployment_targets: '- (Optional) The AWS Organizations accounts to which StackSets deploys. StackSets doesn''t deploy stack instances to the organization management account, even if the organization management account is in your organization or in an OU in your organization. Drift detection is not possible for this argument. See deployment_targets below.'
            id: '- StackSet name, target AWS account ID, and target AWS region separated by commas (,)'
            operation_preferences: '- (Optional) Preferences for how AWS CloudFormation performs a stack set operation.'
            organizational_unit_id: '- The organization root ID or organizational unit (OU) IDs specified for deployment_targets.'
            parameter_overrides: '- (Optional) Key-value map of input parameters to override from the StackSet for this Instance.'
            region: '- (Optional) Target AWS Region to create a Stack based on the StackSet. Defaults to current region.'
            retain_stack: '- (Optional) During Terraform resource destroy, remove Instance from StackSet while keeping the Stack and its associated resources. Must be enabled in Terraform state before destroy operation to take effect. You cannot reassociate a retained Stack or add an existing, saved Stack to a new StackSet. Defaults to false.'
            stack_id: '- Stack identifier'
            stack_set_name: '- (Required) Name of the StackSet.'
            update: '- (Default 30m) How long to wait for a Stack to be updated.'
        importStatements: []
    aws_cloudformation_type:
        subCategory: CloudFormation
        description: Manages a version of a CloudFormation Type.
        name: aws_cloudformation_type
        title: aws_cloudformation_type
        examples:
            - name: example
              manifest: |-
                {
                  "lifecycle": [
                    {
                      "create_before_destroy": true
                    }
                  ],
                  "logging_config": [
                    {
                      "log_group_name": "${aws_cloudwatch_log_group.example.name}",
                      "log_role_arn": "${aws_iam_role.example.arn}"
                    }
                  ],
                  "schema_handler_package": "s3://${aws_s3_object.example.bucket}/${aws_s3_object.example.key}",
                  "type": "RESOURCE",
                  "type_name": "ExampleCompany::ExampleService::ExampleResource"
                }
              references:
                logging_config.log_group_name: aws_cloudwatch_log_group.example.name
                logging_config.log_role_arn: aws_iam_role.example.arn
        argumentDocs:
            arn: '- (Optional) Amazon Resource Name (ARN) of the CloudFormation Type version. See also type_arn.'
            default_version_id: '- Identifier of the CloudFormation Type default version.'
            deprecated_status: '- Deprecation status of the version.'
            description: '- Description of the version.'
            documentation_url: '- URL of the documentation for the CloudFormation Type.'
            execution_role_arn: '- (Optional) Amazon Resource Name (ARN) of the IAM Role for CloudFormation to assume when invoking the extension. If your extension calls AWS APIs in any of its handlers, you must create an IAM execution role that includes the necessary permissions to call those AWS APIs, and provision that execution role in your account. When CloudFormation needs to invoke the extension handler, CloudFormation assumes this execution role to create a temporary session token, which it then passes to the extension handler, thereby supplying your extension with the appropriate credentials.'
            is_default_version: '- Whether the CloudFormation Type version is the default version.'
            logging_config: '- (Optional) Configuration block containing logging configuration.'
            logging_config.log_group_name: '- (Required) Name of the CloudWatch Log Group where CloudFormation sends error logging information when invoking the type''s handlers.'
            logging_config.log_role_arn: '- (Required) Amazon Resource Name (ARN) of the IAM Role CloudFormation assumes when sending error logging information to CloudWatch Logs.'
            provisioning_type: '- Provisioning behavior of the CloudFormation Type.'
            schema: '- JSON document of the CloudFormation Type schema.'
            schema_handler_package: '- (Required) URL to the S3 bucket containing the extension project package that contains the necessary files for the extension you want to register. Must begin with s3:// or https://. For example, s3://example-bucket/example-object.'
            source_url: '- URL of the source code for the CloudFormation Type.'
            type: '- (Optional) CloudFormation Registry Type. For example, RESOURCE or MODULE.'
            type_arn: '- (Optional) Amazon Resource Name (ARN) of the CloudFormation Type. See also arn.'
            type_name: '- (Optional) CloudFormation Type name. For example, ExampleCompany::ExampleService::ExampleResource.'
            version_id: '- (Optional) Identifier of the CloudFormation Type version.'
            visibility: '- Scope of the CloudFormation Type.'
        importStatements: []
    aws_cloudfront_cache_policy:
        subCategory: CloudFront
        description: Provides a cache policy for a CloudFront ditribution. When it’s attached to a cache behavior, the cache policy determines the the values that CloudFront includes in the cache key. These values can include HTTP headers, cookies, and URL query strings. CloudFront uses the cache key to find an object in its cache that it can return to the viewer. It also determines the default, minimum, and maximum time to live (TTL) values that you want objects to stay in the CloudFront cache.
        name: aws_cloudfront_cache_policy
        title: aws_cloudfront_cache_policy
        examples:
            - name: example
              manifest: |-
                {
                  "comment": "test comment",
                  "default_ttl": 50,
                  "max_ttl": 100,
                  "min_ttl": 1,
                  "name": "example-policy",
                  "parameters_in_cache_key_and_forwarded_to_origin": [
                    {
                      "cookies_config": [
                        {
                          "cookie_behavior": "whitelist",
                          "cookies": [
                            {
                              "items": [
                                "example"
                              ]
                            }
                          ]
                        }
                      ],
                      "headers_config": [
                        {
                          "header_behavior": "whitelist",
                          "headers": [
                            {
                              "items": [
                                "example"
                              ]
                            }
                          ]
                        }
                      ],
                      "query_strings_config": [
                        {
                          "query_string_behavior": "whitelist",
                          "query_strings": [
                            {
                              "items": [
                                "example"
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
        argumentDocs:
            comment: '- (Optional) A comment to describe the cache policy.'
            cookie_behavior: '- (Required) Determines whether any cookies in viewer requests are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values are none, whitelist, allExcept, all.'
            cookies: '- (Optional) Object that contains a list of cookie names. See Items for more information.'
            cookies_config: '- (Required) Object that determines whether any cookies in viewer requests (and if so, which cookies) are included in the cache key and automatically included in requests that CloudFront sends to the origin. See Cookies Config for more information.'
            default_ttl: '- (Optional) The default amount of time, in seconds, that you want objects to stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated.'
            enable_accept_encoding_brotli: '- (Optional) A flag that can affect whether the Accept-Encoding HTTP header is included in the cache key and included in requests that CloudFront sends to the origin.'
            enable_accept_encoding_gzip: '- (Optional) A flag that can affect whether the Accept-Encoding HTTP header is included in the cache key and included in requests that CloudFront sends to the origin.'
            etag: '- The current version of the cache policy.'
            header_behavior: '- (Required) Determines whether any HTTP headers are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values are none, whitelist.'
            headers: '- (Optional) Object that contains a list of header names. See Items for more information.'
            headers_config: '- (Required) Object that determines whether any HTTP headers (and if so, which headers) are included in the cache key and automatically included in requests that CloudFront sends to the origin. See Headers Config for more information.'
            id: '- The identifier for the cache policy.'
            items: '- (Required) A list of item names (cookies, headers, or query strings).'
            max_ttl: '- (Optional) The maximum amount of time, in seconds, that objects stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated.'
            min_ttl: '- (Required) The minimum amount of time, in seconds, that you want objects to stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated.'
            name: '- (Required) A unique name to identify the cache policy.'
            parameters_in_cache_key_and_forwarded_to_origin: '- (Required) The HTTP headers, cookies, and URL query strings to include in the cache key. See Parameters In Cache Key And Forwarded To Origin for more information.'
            query_string_behavior: '- (Required) Determines whether any URL query strings in viewer requests are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values are none, whitelist, allExcept, all.'
            query_strings: '- (Optional) Object that contains a list of query string names. See Items for more information.'
            query_strings_config: '- (Required) Object that determines whether any URL query strings in viewer requests (and if so, which query strings) are included in the cache key and automatically included in requests that CloudFront sends to the origin. See Query String Config for more information.'
        importStatements: []
    aws_cloudfront_distribution:
        subCategory: CloudFront
        description: Provides a CloudFront web distribution resource.
        name: aws_cloudfront_distribution
        title: aws_cloudfront_distribution
        examples:
            - name: s3_distribution
              manifest: |-
                {
                  "aliases": [
                    "mysite.example.com",
                    "yoursite.example.com"
                  ],
                  "comment": "Some comment",
                  "default_cache_behavior": [
                    {
                      "allowed_methods": [
                        "DELETE",
                        "GET",
                        "HEAD",
                        "OPTIONS",
                        "PATCH",
                        "POST",
                        "PUT"
                      ],
                      "cached_methods": [
                        "GET",
                        "HEAD"
                      ],
                      "default_ttl": 3600,
                      "forwarded_values": [
                        {
                          "cookies": [
                            {
                              "forward": "none"
                            }
                          ],
                          "query_string": false
                        }
                      ],
                      "max_ttl": 86400,
                      "min_ttl": 0,
                      "target_origin_id": "${local.s3_origin_id}",
                      "viewer_protocol_policy": "allow-all"
                    }
                  ],
                  "default_root_object": "index.html",
                  "enabled": true,
                  "is_ipv6_enabled": true,
                  "logging_config": [
                    {
                      "bucket": "mylogs.s3.amazonaws.com",
                      "include_cookies": false,
                      "prefix": "myprefix"
                    }
                  ],
                  "ordered_cache_behavior": [
                    {
                      "allowed_methods": [
                        "GET",
                        "HEAD",
                        "OPTIONS"
                      ],
                      "cached_methods": [
                        "GET",
                        "HEAD",
                        "OPTIONS"
                      ],
                      "compress": true,
                      "default_ttl": 86400,
                      "forwarded_values": [
                        {
                          "cookies": [
                            {
                              "forward": "none"
                            }
                          ],
                          "headers": [
                            "Origin"
                          ],
                          "query_string": false
                        }
                      ],
                      "max_ttl": 31536000,
                      "min_ttl": 0,
                      "path_pattern": "/content/immutable/*",
                      "target_origin_id": "${local.s3_origin_id}",
                      "viewer_protocol_policy": "redirect-to-https"
                    },
                    {
                      "allowed_methods": [
                        "GET",
                        "HEAD",
                        "OPTIONS"
                      ],
                      "cached_methods": [
                        "GET",
                        "HEAD"
                      ],
                      "compress": true,
                      "default_ttl": 3600,
                      "forwarded_values": [
                        {
                          "cookies": [
                            {
                              "forward": "none"
                            }
                          ],
                          "query_string": false
                        }
                      ],
                      "max_ttl": 86400,
                      "min_ttl": 0,
                      "path_pattern": "/content/*",
                      "target_origin_id": "${local.s3_origin_id}",
                      "viewer_protocol_policy": "redirect-to-https"
                    }
                  ],
                  "origin": [
                    {
                      "domain_name": "${aws_s3_bucket.b.bucket_regional_domain_name}",
                      "origin_id": "${local.s3_origin_id}",
                      "s3_origin_config": [
                        {
                          "origin_access_identity": "origin-access-identity/cloudfront/ABCDEFG1234567"
                        }
                      ]
                    }
                  ],
                  "price_class": "PriceClass_200",
                  "restrictions": [
                    {
                      "geo_restriction": [
                        {
                          "locations": [
                            "US",
                            "CA",
                            "GB",
                            "DE"
                          ],
                          "restriction_type": "whitelist"
                        }
                      ]
                    }
                  ],
                  "tags": {
                    "Environment": "production"
                  },
                  "viewer_certificate": [
                    {
                      "cloudfront_default_certificate": true
                    }
                  ]
                }
              references:
                default_cache_behavior.target_origin_id: local.s3_origin_id
                ordered_cache_behavior.target_origin_id: local.s3_origin_id
                origin.domain_name: aws_s3_bucket.b.bucket_regional_domain_name
                origin.origin_id: local.s3_origin_id
              dependencies:
                aws_s3_bucket.b: |-
                    {
                      "bucket": "mybucket",
                      "tags": {
                        "Name": "My bucket"
                      }
                    }
                aws_s3_bucket_acl.b_acl: |-
                    {
                      "acl": "private",
                      "bucket": "${aws_s3_bucket.b.id}"
                    }
            - name: s3_distribution
              manifest: |-
                {
                  "default_cache_behavior": [
                    {
                      "target_origin_id": "groupS3"
                    }
                  ],
                  "origin": [
                    {
                      "domain_name": "${aws_s3_bucket.primary.bucket_regional_domain_name}",
                      "origin_id": "primaryS3",
                      "s3_origin_config": [
                        {
                          "origin_access_identity": "${aws_cloudfront_origin_access_identity.default.cloudfront_access_identity_path}"
                        }
                      ]
                    },
                    {
                      "domain_name": "${aws_s3_bucket.failover.bucket_regional_domain_name}",
                      "origin_id": "failoverS3",
                      "s3_origin_config": [
                        {
                          "origin_access_identity": "${aws_cloudfront_origin_access_identity.default.cloudfront_access_identity_path}"
                        }
                      ]
                    }
                  ],
                  "origin_group": [
                    {
                      "failover_criteria": [
                        {
                          "status_codes": [
                            403,
                            404,
                            500,
                            502
                          ]
                        }
                      ],
                      "member": [
                        {
                          "origin_id": "primaryS3"
                        },
                        {
                          "origin_id": "failoverS3"
                        }
                      ],
                      "origin_id": "groupS3"
                    }
                  ]
                }
              references:
                origin.domain_name: aws_s3_bucket.failover.bucket_regional_domain_name
                origin.s3_origin_config.origin_access_identity: aws_cloudfront_origin_access_identity.default.cloudfront_access_identity_path
            - name: example
              manifest: |-
                {
                  "ordered_cache_behavior": [
                    {
                      "lambda_function_association": [
                        {
                          "event_type": "viewer-request",
                          "include_body": false,
                          "lambda_arn": "${aws_lambda_function.example.qualified_arn}"
                        }
                      ]
                    }
                  ]
                }
              references:
                ordered_cache_behavior.lambda_function_association.lambda_arn: aws_lambda_function.example.qualified_arn
            - name: example
              manifest: |-
                {
                  "ordered_cache_behavior": [
                    {
                      "function_association": [
                        {
                          "event_type": "viewer-request",
                          "function_arn": "${aws_cloudfront_function.example.arn}"
                        }
                      ]
                    }
                  ]
                }
              references:
                ordered_cache_behavior.function_association.function_arn: aws_cloudfront_function.example.arn
        argumentDocs:
            acm_certificate_arn: |-
                - The ARN of the AWS Certificate Manager
                certificate that you wish to use with this distribution. Specify this,
                cloudfront_default_certificate, or iam_certificate_id.  The ACM
                certificate must be in  US-EAST-1.
            aliases: |-
                (Optional) - Extra CNAMEs (alternate domain names), if any, for
                this distribution.
            allowed_methods: |-
                (Required) - Controls which HTTP methods CloudFront
                processes and forwards to your Amazon S3 bucket or your custom origin.
            arn: '- The ARN (Amazon Resource Name) for the distribution. For example: arn:aws:cloudfront::123456789012:distribution/EDFDVBD632BHDS5, where 123456789012 is your AWS account ID.'
            aws_account_number: '- AWS account ID or self'
            bucket: |-
                (Required) - The Amazon S3 bucket to store the access logs in, for
                example, myawslogbucket.s3.amazonaws.com.
            cache_policy_id: |-
                (Optional) - The unique identifier of the cache policy that
                is attached to the cache behavior.
            cached_methods: |-
                (Required) - Controls whether CloudFront caches the
                response to requests using the specified HTTP methods.
            caller_reference: |-
                - Internal value used by CloudFront to allow future
                updates to the distribution configuration.
            cloudfront_default_certificate: |-
                - true if you want viewers to use HTTPS
                to request your objects and you're using the CloudFront domain name for your
                distribution. Specify this, acm_certificate_arn, or iam_certificate_id.
            comment: |-
                (Optional) - Any comments you want to include about the
                distribution.
            compress: |-
                (Optional) - Whether you want CloudFront to automatically
                compress content for web requests that include Accept-Encoding: gzip in
                the request header (default: false).
            connection_attempts: (Optional) - The number of times that CloudFront attempts to connect to the origin. Must be between 1-3. Defaults to 3.
            connection_timeout: (Optional) - The number of seconds that CloudFront waits when trying to establish a connection to the origin. Must be between 1-10. Defaults to 10.
            cookies: |-
                (Required) - The forwarded values cookies
                that specifies how CloudFront handles cookies (maximum one).
            custom_error_response: (Optional) - One or more custom error response elements (multiples allowed).
            custom_header: |-
                (Optional) - One or more sub-resources with name and
                value parameters that specify header data that will be sent to the origin
                (multiples allowed).
            custom_origin_config: |-
                - The CloudFront custom
                origin configuration information. If an S3
                origin is required, use s3_origin_config instead.
            default_cache_behavior: |-
                (Required) - The default cache behavior for this distribution (maximum
                one).
            default_root_object: |-
                (Optional) - The object that you want CloudFront to
                return (for example, index.html) when an end user requests the root URL.
            default_ttl: |-
                (Optional) - The default amount of time (in seconds) that an
                object is in a CloudFront cache before CloudFront forwards another request
                in the absence of an Cache-Control max-age or Expires header.
            domain_name: |-
                (Required) - The DNS domain name of either the S3 bucket, or
                web site of your custom origin.
            enabled: |-
                (Required) - Whether the distribution is enabled to accept end
                user requests for content.
            error_caching_min_ttl: |-
                (Optional) - The minimum amount of time you want
                HTTP error codes to stay in CloudFront caches before CloudFront queries your
                origin to see whether the object has been updated.
            error_code: |-
                (Required) - The 4xx or 5xx HTTP status code that you want to
                customize.
            etag: |-
                - The current version of the distribution's information. For example:
                E2QWRUHAPOMQZL.
            event_type: |-
                (Required) - The specific event to trigger this function.
                Valid values: viewer-request, origin-request, viewer-response,
                origin-response
            failover_criteria: (Required) - The failover criteria for when to failover to the secondary origin
            field_level_encryption_id: (Optional) - Field level encryption configuration ID
            forward: |-
                (Required) - Specifies whether you want CloudFront to forward
                cookies to the origin that is associated with this cache behavior. You can
                specify all, none or whitelist. If whitelist, you must include the
                subsequent whitelisted_names
            forwarded_values: |-
                (Optional) - The forwarded values configuration that specifies how CloudFront
                handles query strings, cookies and headers (maximum one).
            function_arn: (Required) - ARN of the Cloudfront function.
            function_association: |-
                (Optional) - A config block that triggers a cloudfront
                function with specific actions (maximum 2).
            headers: |-
                (Optional) - Specifies the Headers, if any, that you want
                CloudFront to vary upon for this cache behavior. Specify * to include all
                headers.
            hosted_zone_id: |-
                - The CloudFront Route 53 zone ID that can be used to
                route an Alias Resource Record Set to. This attribute is simply an
                alias for the zone ID Z2FDTNDATAQYW2.
            http_port: (Required) - The HTTP port the custom origin listens on.
            http_version: |-
                (Optional) - The maximum HTTP version to support on the
                distribution. Allowed values are http1.1 and http2. The default is
                http2.
            https_port: (Required) - The HTTPS port the custom origin listens on.
            iam_certificate_id: |-
                - The IAM certificate identifier of the custom viewer
                certificate for this distribution if you are using a custom domain. Specify
                this, acm_certificate_arn, or cloudfront_default_certificate.
            id: '- The identifier for the distribution. For example: EDFDVBD632BHDS5.'
            in_progress_validation_batches: |-
                - The number of invalidation batches
                currently in progress.
            include_body: '(Optional) - When set to true it exposes the request body to the lambda function. Defaults to false. Valid values: true, false.'
            include_cookies: |-
                (Optional) - Specifies whether you want CloudFront to
                include cookies in access logs (default: false).
            is_ipv6_enabled: (Optional) - Whether the IPv6 is enabled for the distribution.
            items: '- List of nested attributes for each key group'
            key_group_id: '- The ID of the key group that contains the public keys'
            key_pair_ids: '- Set of CloudFront key pair IDs'
            lambda_arn: (Required) - ARN of the Lambda function.
            lambda_function_association: |-
                (Optional) - A config block that triggers a lambda
                function with specific actions (maximum 4).
            last_modified_time: '- The date and time the distribution was last modified.'
            locations: |-
                (Optional) - The ISO 3166-1-alpha-2 codes for which you
                want CloudFront either to distribute your content (whitelist) or not
                distribute your content (blacklist).
            logging_config: |-
                (Optional) - The logging
                configuration that controls how logs are written
                to your distribution (maximum one).
            max_ttl: |-
                (Optional) - The maximum amount of time (in seconds) that an
                object is in a CloudFront cache before CloudFront forwards another request
                to your origin to determine whether the object has been updated. Only
                effective in the presence of Cache-Control max-age, Cache-Control s-maxage, and Expires headers.
            member: (Required) - Ordered member configuration blocks assigned to the origin group, where the first member is the primary origin. You must specify two members.
            min_ttl: |-
                (Optional) - The minimum amount of time that you want objects to
                stay in CloudFront caches before CloudFront queries your origin to see
                whether the object has been updated. Defaults to 0 seconds.
            minimum_protocol_version: |-
                - The minimum version of the SSL protocol that
                you want CloudFront to use for HTTPS connections. Can only be set if
                cloudfront_default_certificate = false. See all possible values in
                this
                table under "Security policy." Some examples include: TLSv1.2_2019 and
                TLSv1.2_2021. Default: TLSv1. NOTE:
                If you are using a custom certificate (specified with acm_certificate_arn
                or iam_certificate_id), and have specified sni-only in
                ssl_support_method, TLSv1 or later must be specified. If you have
                specified vip in ssl_support_method, only SSLv3 or TLSv1 can be
                specified. If you have specified cloudfront_default_certificate, TLSv1
                must be specified.
            ordered_cache_behavior: |-
                (Optional) - An ordered list of cache behaviors
                resource for this distribution. List from top to bottom
                in order of precedence. The topmost cache behavior will have precedence 0.
            origin: |-
                (Required) - One or more origins for this
                distribution (multiples allowed).
            origin_access_identity: |-
                (Optional) - The CloudFront origin access
                identity to associate with the origin.
            origin_group: |-
                (Optional) - One or more origin_group for this
                distribution (multiples allowed).
            origin_id: (Required) - A unique identifier for the origin.
            origin_keepalive_timeout: '- (Optional) The Custom KeepAlive timeout, in seconds. By default, AWS enforces a limit of 60. But you can request an increase.'
            origin_path: |-
                (Optional) - An optional element that causes CloudFront to
                request your content from a directory in your Amazon S3 bucket or your
                custom origin.
            origin_protocol_policy: |-
                (Required) - The origin protocol policy to apply to
                your origin. One of http-only, https-only, or match-viewer.
            origin_read_timeout: '- (Optional) The Custom Read timeout, in seconds. By default, AWS enforces a limit of 60. But you can request an increase.'
            origin_request_policy_id: |-
                (Optional) - The unique identifier of the origin request policy
                that is attached to the behavior.
            origin_shield: |-
                - The CloudFront Origin Shield
                configuration information. Using Origin Shield can help reduce the load on your origin. For more information, see Using Origin Shield in the Amazon CloudFront Developer Guide.
            origin_shield_region: (Required) - The AWS Region for Origin Shield. To specify a region, use the region code, not the region name. For example, specify the US East (Ohio) region as us-east-2.
            origin_ssl_protocols: |-
                (Required) - The SSL/TLS protocols that you want
                CloudFront to use when communicating with your origin over HTTPS. A list of
                one or more of SSLv3, TLSv1, TLSv1.1, and TLSv1.2.
            path_pattern: |-
                (Required) - The pattern (for example, images/*.jpg) that
                specifies which requests you want this cache behavior to apply to.
            prefix: |-
                (Optional) - An optional string that you want CloudFront to prefix
                to the access log filenames for this distribution, for example, myprefix/.
            price_class: |-
                (Optional) - The price class for this distribution. One of
                PriceClass_All, PriceClass_200, PriceClass_100
            query_string: |-
                (Required) - Indicates whether you want CloudFront to forward
                query strings to the origin that is associated with this cache behavior.
            query_string_cache_keys: |-
                (Optional) - When specified, along with a value of
                true for query_string, all query strings are forwarded, however only the
                query string keys listed in this argument are cached. When omitted with a
                value of true for query_string, all query string keys are cached.
            realtime_log_config_arn: |-
                (Optional) - The ARN of the real-time log configuration
                that is attached to this cache behavior.
            response_code: |-
                (Optional) - The HTTP status code that you want CloudFront
                to return with the custom error page to the viewer.
            response_headers_policy_id: (Optional) - The identifier for a response headers policy.
            response_page_path: |-
                (Optional) - The path of the custom error page (for
                example, /custom_404.html).
            restriction_type: |-
                (Required) - The method that you want to use to restrict
                distribution of your content by country: none, whitelist, or
                blacklist.
            restrictions: |-
                (Required) - The restriction
                configuration for this distribution (maximum one).
            retain_on_delete: |-
                (Optional) - Disables the distribution instead of
                deleting it when destroying the resource through Terraform. If this is set,
                the distribution needs to be deleted manually afterwards. Default: false.
            s3_origin_config: |-
                - The CloudFront S3 origin
                configuration information. If a custom origin is required, use
                custom_origin_config instead.
            smooth_streaming: |-
                (Optional) - Indicates whether you want to distribute
                media files in Microsoft Smooth Streaming format using the origin that is
                associated with this cache behavior.
            ssl_support_method: |-
                : Specifies how you want CloudFront to serve HTTPS
                requests. One of vip or sni-only. Required if you specify
                acm_certificate_arn or iam_certificate_id. NOTE: vip causes
                CloudFront to use a dedicated IP address and may incur extra charges.
            status: |-
                - The current status of the distribution. Deployed if the
                distribution's information is fully propagated throughout the Amazon
                CloudFront system.
            status_codes: (Required) - A list of HTTP status codes for the origin group
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            target_origin_id: |-
                (Required) - The value of ID for the origin that you want
                CloudFront to route requests to when a request matches the path pattern
                either for a cache behavior or for the default cache behavior.
            trusted_key_groups: |-
                (Optional) - A list of key group IDs that CloudFront can use to validate signed URLs or signed cookies.
                See the CloudFront User Guide for more information about this feature.
            trusted_signers: |-
                (Optional) - List of AWS account IDs (or self) that you want to allow to create signed URLs for private content.
                See the CloudFront User Guide for more information about this feature.
            viewer_certificate: |-
                (Required) - The SSL
                configuration for this distribution (maximum
                one).
            viewer_protocol_policy: |-
                (Required) - Use this element to specify the
                protocol that users can use to access the files in the origin specified by
                TargetOriginId when a request matches the path pattern in PathPattern. One
                of allow-all, https-only, or redirect-to-https.
            wait_for_deployment: |-
                (Optional) - If enabled, the resource will wait for
                the distribution status to change from InProgress to Deployed. Setting
                this tofalse will skip the process. Default: true.
            web_acl_id: |-
                (Optional) - A unique identifier that specifies the AWS WAF web ACL,
                if any, to associate with this distribution.
                To specify a web ACL created using the latest version of AWS WAF (WAFv2), use the ACL ARN,
                for example aws_wafv2_web_acl.example.arn. To specify a web
                ACL created using AWS WAF Classic, use the ACL ID, for example aws_waf_web_acl.example.id.
                The WAF Web ACL must exist in the WAF Global (CloudFront) region and the
                credentials configuring this argument must have waf:GetWebACL permissions assigned.
            whitelisted_names: |-
                (Optional) - If you have specified whitelist to
                forward, the whitelisted cookies that you want CloudFront to forward to
                your origin.
        importStatements: []
    aws_cloudfront_field_level_encryption_config:
        subCategory: CloudFront
        description: Provides a CloudFront Field-level Encryption Config resource.
        name: aws_cloudfront_field_level_encryption_config
        title: cloudfront_field_level_encryption_config
        examples:
            - name: test
              manifest: |-
                {
                  "comment": "test comment",
                  "content_type_profile_config": [
                    {
                      "content_type_profiles": [
                        {
                          "items": [
                            {
                              "content_type": "application/x-www-form-urlencoded",
                              "format": "URLEncoded"
                            }
                          ]
                        }
                      ],
                      "forward_when_content_type_is_unknown": true
                    }
                  ],
                  "query_arg_profile_config": [
                    {
                      "forward_when_query_arg_profile_is_unknown": true,
                      "query_arg_profiles": [
                        {
                          "items": [
                            {
                              "profile_id": "${aws_cloudfront_field_level_encryption_profile.test.id}",
                              "query_arg": "Arg1"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              references:
                query_arg_profile_config.query_arg_profiles.items.profile_id: aws_cloudfront_field_level_encryption_profile.test.id
        argumentDocs:
            caller_reference: '- Internal value used by CloudFront to allow future updates to the Field Level Encryption Config.'
            comment: '- (Optional) An optional comment about the Field Level Encryption Config.'
            content_type: '- (Required) he content type for a field-level encryption content type-profile mapping. Valid value is application/x-www-form-urlencoded.'
            content_type_profile_config: '- (Required) Content Type Profile Config specifies when to forward content if a content type isn''t recognized and profiles to use as by default in a request if a query argument doesn''t specify a profile to use.'
            content_type_profiles: '- (Required) Object that contains an attribute items that contains the list of configurations for a field-level encryption content type-profile. See Content Type Profile.'
            etag: '- The current version of the Field Level Encryption Config. For example: E2QWRUHAPOMQZL.'
            format: '- (Required) The format for a field-level encryption content type-profile mapping. Valid value is URLEncoded.'
            forward_when_content_type_is_unknown: '- (Required) specifies what to do when an unknown content type is provided for the profile. If true, content is forwarded without being encrypted when the content type is unknown. If false (the default), an error is returned when the content type is unknown.'
            forward_when_query_arg_profile_is_unknown: '- (Required) Flag to set if you want a request to be forwarded to the origin even if the profile specified by the field-level encryption query argument, fle-profile, is unknown.'
            id: '- The identifier for the Field Level Encryption Config. For example: K3D5EWEUDCCXON.'
            profile_id: '- (Optional) The profile ID for a field-level encryption content type-profile mapping.'
            query_arg: '- (Required) Query argument for field-level encryption query argument-profile mapping.'
            query_arg_profile_config: '- (Required) Query Arg Profile Config that specifies when to forward content if a profile isn''t found and the profile that can be provided as a query argument in a request.'
            query_arg_profiles: '- (Optional) Object that contains an attribute items that contains the list ofrofiles specified for query argument-profile mapping for field-level encryption. see Query Arg Profile.'
        importStatements: []
    aws_cloudfront_field_level_encryption_profile:
        subCategory: CloudFront
        description: Provides a CloudFront Field-level Encryption Profile resource.
        name: aws_cloudfront_field_level_encryption_profile
        title: cloudfront_field_level_encryption_profile
        examples:
            - name: test
              manifest: |-
                {
                  "comment": "test comment",
                  "encryption_entities": [
                    {
                      "items": [
                        {
                          "field_patterns": [
                            {
                              "items": [
                                "DateOfBirth"
                              ]
                            }
                          ],
                          "provider_id": "test provider",
                          "public_key_id": "${aws_cloudfront_public_key.example.id}"
                        }
                      ]
                    }
                  ],
                  "name": "test profile"
                }
              references:
                encryption_entities.items.public_key_id: aws_cloudfront_public_key.example.id
              dependencies:
                aws_cloudfront_public_key.example: |-
                    {
                      "comment": "test public key",
                      "encoded_key": "${file(\"public_key.pem\")}",
                      "name": "test_key"
                    }
        argumentDocs:
            caller_reference: '- Internal value used by CloudFront to allow future updates to the Field Level Encryption Profile.'
            comment: '- (Optional) An optional comment about the Field Level Encryption Profile.'
            encryption_entities: '- (Required) The encryption entities config block for field-level encryption profiles that contains an attribute items which includes the encryption key and field pattern specifications.'
            etag: '- The current version of the Field Level Encryption Profile. For example: E2QWRUHAPOMQZL.'
            field_patterns: '- (Required) Object that contains an attribute items that contains the list of field patterns in a field-level encryption content type profile specify the fields that you want to be encrypted.'
            id: '- The identifier for the Field Level Encryption Profile. For example: K3D5EWEUDCCXON.'
            name: '- (Required) The name of the Field Level Encryption Profile.'
            provider_id: '- (Required) The provider associated with the public key being used for encryption.'
            public_key_id: '- (Required) The public key associated with a set of field-level encryption patterns, to be used when encrypting the fields that match the patterns.'
        importStatements: []
    aws_cloudfront_function:
        subCategory: CloudFront
        description: Provides a CloudFront Function resource. With CloudFront Functions in Amazon CloudFront, you can write lightweight functions in JavaScript for high-scale, latency-sensitive CDN customizations.
        name: aws_cloudfront_function
        title: aws_cloudfront_function
        examples:
            - name: test
              manifest: |-
                {
                  "code": "${file(\"${path.module}/function.js\")}",
                  "comment": "my function",
                  "name": "test",
                  "publish": true,
                  "runtime": "cloudfront-js-1.0"
                }
        argumentDocs:
            arn: '- Amazon Resource Name (ARN) identifying your CloudFront Function.'
            code: '- (Required) Source code of the function'
            comment: '- (Optional) Comment.'
            etag: '- ETag hash of the function. This is the value for the DEVELOPMENT stage of the function.'
            live_stage_etag: '- ETag hash of any LIVE stage of the function.'
            name: '- (Required) Unique name for your CloudFront Function.'
            publish: '- (Optional) Whether to publish creation/change as Live CloudFront Function Version. Defaults to true.'
            runtime: '- (Required) Identifier of the function''s runtime. Currently only cloudfront-js-1.0 is valid.'
            status: '- Status of the function. Can be UNPUBLISHED, UNASSOCIATED or ASSOCIATED.'
        importStatements: []
    aws_cloudfront_key_group:
        subCategory: CloudFront
        description: Provides a CloudFront key group.
        name: aws_cloudfront_key_group
        title: aws_cloudfront_key_group
        examples:
            - name: example
              manifest: |-
                {
                  "comment": "example key group",
                  "items": [
                    "${aws_cloudfront_public_key.example.id}"
                  ],
                  "name": "example-key-group"
                }
              dependencies:
                aws_cloudfront_public_key.example: |-
                    {
                      "comment": "example public key",
                      "encoded_key": "${file(\"public_key.pem\")}",
                      "name": "example-key"
                    }
        argumentDocs:
            comment: '- (Optional) A comment to describe the key group..'
            etag: '- The identifier for this version of the key group.'
            id: '- The identifier for the key group.'
            items: '- (Required) A list of the identifiers of the public keys in the key group.'
            name: '- (Required) A name to identify the key group.'
        importStatements: []
    aws_cloudfront_monitoring_subscription:
        subCategory: CloudFront
        description: Provides a CloudFront monitoring subscription resource.
        name: aws_cloudfront_monitoring_subscription
        title: aws_cloudfront_monitoring_subscription
        examples:
            - name: example
              manifest: |-
                {
                  "distribution_id": "${aws_cloudfront_distribution.example.id}",
                  "monitoring_subscription": [
                    {
                      "realtime_metrics_subscription_config": [
                        {
                          "realtime_metrics_subscription_status": "Enabled"
                        }
                      ]
                    }
                  ]
                }
              references:
                distribution_id: aws_cloudfront_distribution.example.id
        argumentDocs:
            distribution_id: '- (Required) The ID of the distribution that you are enabling metrics for.'
            id: '- The ID of the CloudFront monitoring subscription, which corresponds to the distribution_id.'
            monitoring_subscription: '- (Required) A monitoring subscription. This structure contains information about whether additional CloudWatch metrics are enabled for a given CloudFront distribution.'
            monitoring_subscription.realtime_metrics_subscription_config: '- (Required) A subscription configuration for additional CloudWatch metrics. See below.'
            monitoring_subscription.realtime_metrics_subscription_config.realtime_metrics_subscription_status: '- (Required) A flag that indicates whether additional CloudWatch metrics are enabled for a given CloudFront distribution. Valid values are Enabled and Disabled. See below.'
        importStatements: []
    aws_cloudfront_origin_access_identity:
        subCategory: CloudFront
        description: Provides a CloudFront origin access identity.
        name: aws_cloudfront_origin_access_identity
        title: aws_cloudfront_origin_access_identity
        examples:
            - name: example
              manifest: |-
                {
                  "comment": "Some comment"
                }
        argumentDocs:
            caller_reference: |-
                - Internal value used by CloudFront to allow future
                updates to the origin access identity.
            cloudfront_access_identity_path: |-
                - A shortcut to the full path for the
                origin access identity to use in CloudFront, see below.
            comment: (Optional) - An optional comment for the origin access identity.
            etag: |-
                - The current version of the origin access identity's information.
                For example: E2QWRUHAPOMQZL.
            iam_arn: |-
                - A pre-generated ARN for use in S3 bucket policies (see below).
                Example: arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity E2QWRUHAPOMQZL.
            id: '- The identifier for the distribution. For example: EDFDVBD632BHDS5.'
            s3_canonical_user_id: |-
                - The Amazon S3 canonical user ID for the origin
                access identity, which you use when giving the origin access identity read
                permission to an object in Amazon S3.
        importStatements: []
    aws_cloudfront_origin_request_policy:
        subCategory: CloudFront
        description: Determines the values that CloudFront includes in requests that it sends to the origin.
        name: aws_cloudfront_origin_request_policy
        title: aws_cloudfront_origin_request_policy
        examples:
            - name: example
              manifest: |-
                {
                  "comment": "example comment",
                  "cookies_config": [
                    {
                      "cookie_behavior": "whitelist",
                      "cookies": [
                        {
                          "items": [
                            "example"
                          ]
                        }
                      ]
                    }
                  ],
                  "headers_config": [
                    {
                      "header_behavior": "whitelist",
                      "headers": [
                        {
                          "items": [
                            "example"
                          ]
                        }
                      ]
                    }
                  ],
                  "name": "example-policy",
                  "query_strings_config": [
                    {
                      "query_string_behavior": "whitelist",
                      "query_strings": [
                        {
                          "items": [
                            "example"
                          ]
                        }
                      ]
                    }
                  ]
                }
        argumentDocs:
            comment: '- (Optional) Comment to describe the origin request policy.'
            cookies_config: '- (Required) Object that determines whether any cookies in viewer requests (and if so, which cookies) are included in the origin request key and automatically included in requests that CloudFront sends to the origin. See Cookies Config for more information.'
            etag: '- The current version of the origin request policy.'
            headers_config: '- (Required) Object that determines whether any HTTP headers (and if so, which headers) are included in the origin request key and automatically included in requests that CloudFront sends to the origin. See Headers Config for more information.'
            id: '- The identifier for the origin request policy.'
            name: '- (Required) Unique name to identify the origin request policy.'
            query_strings_config: '- (Required) Object that determines whether any URL query strings in viewer requests (and if so, which query strings) are included in the origin request key and automatically included in requests that CloudFront sends to the origin. See Query String Config for more information.'
        importStatements: []
    aws_cloudfront_public_key:
        subCategory: CloudFront
        description: Provides a CloudFront Public Key which you add to CloudFront to use with features like field-level encryption.
        name: aws_cloudfront_public_key
        title: aws_cloudfront_public_key
        examples:
            - name: example
              manifest: |-
                {
                  "comment": "test public key",
                  "encoded_key": "${file(\"public_key.pem\")}",
                  "name": "test_key"
                }
        argumentDocs:
            caller_reference: '- Internal value used by CloudFront to allow future updates to the public key configuration.'
            comment: '- (Optional) An optional comment about the public key.'
            encoded_key: '- (Required) The encoded public key that you want to add to CloudFront to use with features like field-level encryption.'
            etag: '- The current version of the public key. For example: E2QWRUHAPOMQZL.'
            id: '- The identifier for the public key. For example: K3D5EWEUDCCXON.'
            name: '- (Optional) The name for the public key. By default generated by Terraform.'
            name_prefix: '- (Optional) The name for the public key. Conflicts with name.'
        importStatements: []
    aws_cloudfront_realtime_log_config:
        subCategory: CloudFront
        description: Provides a CloudFront real-time log configuration resource.
        name: aws_cloudfront_realtime_log_config
        title: aws_cloudfront_realtime_log_config
        examples:
            - name: example
              manifest: |-
                {
                  "depends_on": [
                    "${aws_iam_role_policy.example}"
                  ],
                  "endpoint": [
                    {
                      "kinesis_stream_config": [
                        {
                          "role_arn": "${aws_iam_role.example.arn}",
                          "stream_arn": "${aws_kinesis_stream.example.arn}"
                        }
                      ],
                      "stream_type": "Kinesis"
                    }
                  ],
                  "fields": [
                    "timestamp",
                    "c-ip"
                  ],
                  "name": "example",
                  "sampling_rate": 75
                }
              references:
                endpoint.kinesis_stream_config.role_arn: aws_iam_role.example.arn
                endpoint.kinesis_stream_config.stream_arn: aws_kinesis_stream.example.arn
              dependencies:
                aws_iam_role.example: |-
                    {
                      "assume_role_policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"cloudfront.amazonaws.com\"\n      },\n      \"Effect\": \"Allow\"\n    }\n  ]\n}\n",
                      "name": "cloudfront-realtime-log-config-example"
                    }
                aws_iam_role_policy.example: |-
                    {
                      "name": "cloudfront-realtime-log-config-example",
                      "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n        \"Effect\": \"Allow\",\n        \"Action\": [\n          \"kinesis:DescribeStreamSummary\",\n          \"kinesis:DescribeStream\",\n          \"kinesis:PutRecord\",\n          \"kinesis:PutRecords\"\n        ],\n        \"Resource\": \"${aws_kinesis_stream.example.arn}\"\n    }\n  ]\n}\n",
                      "role": "${aws_iam_role.example.id}"
                    }
        argumentDocs:
            arn: '- The ARN (Amazon Resource Name) of the CloudFront real-time log configuration.'
            endpoint: '- (Required) The Amazon Kinesis data streams where real-time log data is sent.'
            fields: '- (Required) The fields that are included in each real-time log record. See the AWS documentation for supported values.'
            id: '- The ID of the CloudFront real-time log configuration.'
            kinesis_stream_config: '- (Required) The Amazon Kinesis data stream configuration.'
            name: '- (Required) The unique name to identify this real-time log configuration.'
            role_arn: |-
                - (Required) The ARN of an IAM role that CloudFront can use to send real-time log data to the Kinesis data stream.
                See the AWS documentation for more information.
            sampling_rate: '- (Required) The sampling rate for this real-time log configuration. The sampling rate determines the percentage of viewer requests that are represented in the real-time log data. An integer between 1 and 100, inclusive.'
            stream_arn: '- (Required) The ARN of the Kinesis data stream.'
            stream_type: '- (Required) The type of data stream where real-time log data is sent. The only valid value is Kinesis.'
        importStatements: []
    aws_cloudfront_response_headers_policy:
        subCategory: CloudFront
        description: Provides a CloudFront response headers policy resource.
        name: aws_cloudfront_response_headers_policy
        title: aws_cloudfront_response_headers_policy
        examples:
            - name: example
              manifest: |-
                {
                  "comment": "test comment",
                  "cors_config": [
                    {
                      "access_control_allow_credentials": true,
                      "access_control_allow_headers": [
                        {
                          "items": [
                            "test"
                          ]
                        }
                      ],
                      "access_control_allow_methods": [
                        {
                          "items": [
                            "GET"
                          ]
                        }
                      ],
                      "access_control_allow_origins": [
                        {
                          "items": [
                            "test.example.comtest"
                          ]
                        }
                      ],
                      "origin_override": true
                    }
                  ],
                  "name": "example-policy"
                }
            - name: example
              manifest: |-
                {
                  "custom_headers_config": [
                    {
                      "items": [
                        {
                          "header": "X-Permitted-Cross-Domain-Policies",
                          "override": true,
                          "value": "none"
                        },
                        {
                          "header": "X-Test",
                          "override": true,
                          "value": "none"
                        }
                      ]
                    }
                  ],
                  "name": "example-headers-policy"
                }
            - name: example
              manifest: |-
                {
                  "custom_headers_config": [
                    {
                      "items": [
                        {
                          "header": "X-Permitted-Cross-Domain-Policies",
                          "override": true,
                          "value": "none"
                        }
                      ]
                    }
                  ],
                  "name": "example-headers-policy",
                  "server_timing_headers_config": [
                    {
                      "enabled": true,
                      "sampling_rate": 50
                    }
                  ]
                }
        argumentDocs:
            access_control_allow_credentials: '- (Required) A Boolean value that CloudFront uses as the value for the Access-Control-Allow-Credentials HTTP response header.'
            access_control_allow_headers: '- (Required) Object that contains an attribute items that contains a list of HTTP header names that CloudFront includes as values for the Access-Control-Allow-Headers HTTP response header.'
            access_control_allow_methods: '- (Required) Object that contains an attribute items that contains a list of HTTP methods that CloudFront includes as values for the Access-Control-Allow-Methods HTTP response header. Valid values: GET | POST | OPTIONS | PUT | DELETE | HEAD | ALL'
            access_control_allow_origins: '- (Optional) Object that contains an attribute items that contains a list of origins that CloudFront can use as the value for the Access-Control-Allow-Origin HTTP response header.'
            access_control_expose_headers: '- (Optional) Object that contains an attribute items that contains a list of HTTP headers that CloudFront includes as values for the Access-Control-Expose-Headers HTTP response header.'
            access_control_max_age_sec: '- (Required) A number that CloudFront uses as the value for the Access-Control-Max-Age HTTP response header.'
            comment: '- (Optional) A comment to describe the response headers policy. The comment cannot be longer than 128 characters.'
            content_security_policy: '- (Optional) The policy directives and their values that CloudFront includes as values for the Content-Security-Policy HTTP response header. See Content Security Policy for more information.'
            content_type_options: '- (Optional) Determines whether CloudFront includes the X-Content-Type-Options HTTP response header with its value set to nosniff. See Content Type Options for more information.'
            cors_config: '- (Optional) A configuration for a set of HTTP response headers that are used for Cross-Origin Resource Sharing (CORS). See Cors Config for more information.'
            custom_headers_config: '- (Optional) Object that contains an attribute items that contains a list of custom headers. See Custom Header for more information.'
            enabled: '- (Required) A Boolean that determines whether CloudFront adds the Server-Timing header to HTTP responses that it sends in response to requests that match a cache behavior that''s associated with this response headers policy.'
            etag: '- The current version of the response headers policy.'
            frame_option: '- (Required) The value of the X-Frame-Options HTTP response header. Valid values: DENY | SAMEORIGIN'
            frame_options: '- (Optional) Determines whether CloudFront includes the X-Frame-Options HTTP response header and the header’s value. See Frame Options for more information.'
            header: '- (Required) The HTTP response header name.'
            id: '- The identifier for the response headers policy.'
            include_subdomains: '- (Optional) A Boolean value that determines whether CloudFront includes the includeSubDomains directive in the Strict-Transport-Security HTTP response header.'
            mode_block: '- (Required) A Boolean value that determines whether CloudFront includes the mode=block directive in the X-XSS-Protection header.'
            name: '- (Required) A unique name to identify the response headers policy.'
            origin_override: '- (Required) A Boolean value that determines how CloudFront behaves for the HTTP response header.'
            override: '- (Required) A Boolean value that determines whether CloudFront overrides a response header with the same name received from the origin with the header specifies here.'
            preload: '- (Optional) A Boolean value that determines whether CloudFront includes the preload directive in the Strict-Transport-Security HTTP response header.'
            protection: '- (Required) A Boolean value that determines the value of the X-XSS-Protection HTTP response header. When this setting is true, the value of the X-XSS-Protection header is 1. When this setting is false, the value of the X-XSS-Protection header is 0.'
            referrer_policy: '- (Optional) Determines whether CloudFront includes the Referrer-Policy HTTP response header and the header’s value. See Referrer Policy for more information.'
            report_uri: '- (Optional) A reporting URI, which CloudFront uses as the value of the report directive in the X-XSS-Protection header. You cannot specify a report_uri when mode_block is true.'
            sampling_rate: '- (Required) A number 0–100 (inclusive) that specifies the percentage of responses that you want CloudFront to add the Server-Timing header to. Valid range: Minimum value of 0.0. Maximum value of 100.0.'
            security_headers_config: '- (Optional) A configuration for a set of security-related HTTP response headers. See Security Headers Config for more information.'
            server_timing_headers_config: '- (Optional) A configuration for enabling the Server-Timing header in HTTP responses sent from CloudFront. See Server Timing Headers Config for more information.'
            strict_transport_security: '- (Optional) Determines whether CloudFront includes the Strict-Transport-Security HTTP response header and the header’s value. See Strict Transport Security for more information.'
            value: '- (Required) The value for the HTTP response header.'
            xss_protection: '- (Optional) Determine whether CloudFront includes the X-XSS-Protection HTTP response header and the header’s value. See XSS Protection for more information.'
        importStatements: []
    aws_cloudhsm_v2_cluster:
        subCategory: CloudHSM
        description: Provides a CloudHSM v2 resource.
        name: aws_cloudhsm_v2_cluster
        title: aws_cloudhsm_v2_cluster
        examples:
            - name: cloudhsm_v2_cluster
              manifest: |-
                {
                  "hsm_type": "hsm1.medium",
                  "subnet_ids": "${aws_subnet.cloudhsm_v2_subnets.*.id}",
                  "tags": {
                    "Name": "example-aws_cloudhsm_v2_cluster"
                  }
                }
              dependencies:
                aws_subnet.cloudhsm_v2_subnets: |-
                    {
                      "availability_zone": "${element(data.aws_availability_zones.available.names, count.index)}",
                      "cidr_block": "${element(var.subnets, count.index)}",
                      "count": 2,
                      "map_public_ip_on_launch": false,
                      "tags": {
                        "Name": "example-aws_cloudhsm_v2_cluster"
                      },
                      "vpc_id": "${aws_vpc.cloudhsm_v2_vpc.id}"
                    }
                aws_vpc.cloudhsm_v2_vpc: |-
                    {
                      "cidr_block": "10.0.0.0/16",
                      "tags": {
                        "Name": "example-aws_cloudhsm_v2_cluster"
                      }
                    }
        argumentDocs:
            cluster_certificates: '- The list of cluster certificates.'
            cluster_certificates.0.aws_hardware_certificate: '- The HSM hardware certificate issued (signed) by AWS CloudHSM.'
            cluster_certificates.0.cluster_certificate: '- The cluster certificate issued (signed) by the issuing certificate authority (CA) of the cluster''s owner.'
            cluster_certificates.0.cluster_csr: '- The certificate signing request (CSR). Available only in UNINITIALIZED state after an HSM instance is added to the cluster.'
            cluster_certificates.0.hsm_certificate: '- The HSM certificate issued (signed) by the HSM hardware.'
            cluster_certificates.0.manufacturer_hardware_certificate: '- The HSM hardware certificate issued (signed) by the hardware manufacturer.'
            cluster_id: '- The id of the CloudHSM cluster.'
            cluster_state: '- The state of the CloudHSM cluster.'
            hsm_type: '- (Required) The type of HSM module in the cluster. Currently, only hsm1.medium is supported.'
            security_group_id: '- The ID of the security group associated with the CloudHSM cluster.'
            source_backup_identifier: '- (Optional) The id of Cloud HSM v2 cluster backup to be restored.'
            subnet_ids: '- (Required) The IDs of subnets in which cluster will operate.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            vpc_id: '- The id of the VPC that the CloudHSM cluster resides in.'
        importStatements: []
    aws_cloudhsm_v2_hsm:
        subCategory: CloudHSM
        description: Provides a CloudHSM v2 HSM module resource.
        name: aws_cloudhsm_v2_hsm
        title: aws_cloudhsm_v2_hsm
        examples:
            - name: cloudhsm_v2_hsm
              manifest: |-
                {
                  "cluster_id": "${data.aws_cloudhsm_v2_cluster.cluster.cluster_id}",
                  "subnet_id": "${data.aws_cloudhsm_v2_cluster.cluster.subnet_ids[0]}"
                }
              references:
                cluster_id: data.aws_cloudhsm_v2_cluster.cluster.cluster_id
                subnet_id: data.aws_cloudhsm_v2_cluster.cluster.subnet_ids[0]
        argumentDocs:
            availability_zone: '- (Optional) The IDs of AZ in which HSM module will be located. Do not use together with subnet_id.'
            cluster_id: '- (Required) The ID of Cloud HSM v2 cluster to which HSM will be added.'
            hsm_eni_id: '- The id of the ENI interface allocated for HSM module.'
            hsm_id: '- The id of the HSM module.'
            hsm_state: '- The state of the HSM module.'
            ip_address: '- (Optional) The IP address of HSM module. Must be within the CIDR of selected subnet.'
            subnet_id: '- (Optional) The ID of subnet in which HSM module will be located.'
        importStatements: []
    aws_cloudsearch_domain:
        subCategory: CloudSearch
        description: Provides an CloudSearch domain resource.
        name: aws_cloudsearch_domain
        title: aws_cloudsearch_domain
        examples:
            - name: example
              manifest: |-
                {
                  "index_field": [
                    {
                      "analysis_scheme": "_en_default_",
                      "highlight": false,
                      "name": "headline",
                      "return": true,
                      "search": true,
                      "sort": true,
                      "type": "text"
                    },
                    {
                      "facet": true,
                      "name": "price",
                      "return": true,
                      "search": true,
                      "sort": true,
                      "source_fields": "headline",
                      "type": "double"
                    }
                  ],
                  "name": "example-domain",
                  "scaling_parameters": [
                    {
                      "desired_instance_type": "search.medium"
                    }
                  ]
                }
        argumentDocs:
            analysis_scheme: '- (Optional) The analysis scheme you want to use for a text field. The analysis scheme specifies the language-specific text processing options that are used during indexing.'
            arn: '- The domain''s ARN.'
            create: '- (Default 30 minutes) How long to wait for the CloudSearch domain to be created.'
            default_value: '- (Optional) The default value for the field. This value is used when no value is specified for the field in the document data.'
            delete: '- (Default 20 minutes) How long to wait for the CloudSearch domain to be deleted.'
            desired_instance_type: '- (Optional) The instance type that you want to preconfigure for your domain. See the AWS documentation for valid values.'
            desired_partition_count: '- (Optional) The number of partitions you want to preconfigure for your domain. Only valid when you select search.2xlarge as the instance type.'
            desired_replication_count: '- (Optional) The number of replicas you want to preconfigure for each index partition.'
            document_service_endpoint: '- The service endpoint for updating documents in a search domain.'
            domain_id: '- An internally generated unique identifier for the domain.'
            endpoint_options: '- (Optional) Domain endpoint options. Documented below.'
            enforce_https: '- (Optional) Enables or disables the requirement that all requests to the domain arrive over HTTPS.'
            facet: '- (Optional) You can get facet information by enabling this.'
            highlight: '- (Optional) You can highlight information.'
            index_field: '- (Optional) The index fields for documents added to the domain. Documented below.'
            multi_az: '- (Optional) Whether or not to maintain extra instances for the domain in a second Availability Zone to ensure high availability.'
            name: '- (Required) The name of the CloudSearch domain.'
            return: '- (Optional) You can enable returning the value of all searchable fields.'
            scaling_parameters: '- (Optional) Domain scaling parameters. Documented below.'
            search: '- (Optional) You can set whether this index should be searchable or not.'
            search_service_endpoint: '- The service endpoint for requesting search results from a search domain.'
            sort: '- (Optional) You can enable the property to be sortable.'
            source_fields: '- (Optional) A comma-separated list of source fields to map to the field. Specifying a source field copies data from one field to another, enabling you to use the same source data in different ways by configuring different options for the fields.'
            tls_security_policy: '- (Optional) The minimum required TLS version. See the AWS documentation for valid values.'
            type: '- (Required) The field type. Valid values: date, date-array, double, double-array, int, int-array, literal, literal-array, text, text-array.'
            update: '- (Default 30 minutes) How long to wait for the CloudSearch domain to be updated.'
        importStatements: []
    aws_cloudsearch_domain_service_access_policy:
        subCategory: CloudSearch
        description: Provides an CloudSearch domain service access policy resource.
        name: aws_cloudsearch_domain_service_access_policy
        title: aws_cloudsearch_domain_service_access_policy
        examples:
            - name: example
              manifest: |-
                {
                  "access_policy": "{\n  \"Version\":\"2012-10-17\",\n  \"Statement\":[{\n    \"Sid\":\"search_only\",\n    \"Effect\":\"Allow\",\n    \"Principal\":\"*\",\n    \"Action\":[\n      \"cloudsearch:search\",\n      \"cloudsearch:document\"\n    ],\n    \"Condition\":{\"IpAddress\":{\"aws:SourceIp\":\"192.0.2.0/32\"}}\n  }]\n}\n",
                  "domain_name": "${aws_cloudsearch_domain.example.id}"
                }
              references:
                domain_name: aws_cloudsearch_domain.example.id
              dependencies:
                aws_cloudsearch_domain.example: |-
                    {
                      "name": "example-domain"
                    }
        argumentDocs:
            access_policy: '- (Required) The access rules you want to configure. These rules replace any existing rules. See the AWS documentation for details.'
            delete: '- (Default 20 minutes) How long to wait for the CloudSearch domain service access policy to be deleted.'
            domain_name: '- (Required) The CloudSearch domain name the policy applies to.'
            update: '- (Default 20 minutes) How long to wait for the CloudSearch domain service access policy to be created or updated.'
        importStatements: []
    aws_cloudtrail:
        subCategory: CloudTrail
        description: Provides a CloudTrail resource.
        name: aws_cloudtrail
        title: aws_cloudtrail
        examples:
            - name: foobar
              manifest: |-
                {
                  "include_global_service_events": false,
                  "name": "tf-trail-foobar",
                  "s3_bucket_name": "${aws_s3_bucket.foo.id}",
                  "s3_key_prefix": "prefix"
                }
              references:
                s3_bucket_name: aws_s3_bucket.foo.id
              dependencies:
                aws_s3_bucket.foo: |-
                    {
                      "bucket": "tf-test-trail",
                      "force_destroy": true
                    }
                aws_s3_bucket_policy.foo: |-
                    {
                      "bucket": "${aws_s3_bucket.foo.id}",
                      "policy": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"AWSCloudTrailAclCheck\",\n            \"Effect\": \"Allow\",\n            \"Principal\": {\n              \"Service\": \"cloudtrail.amazonaws.com\"\n            },\n            \"Action\": \"s3:GetBucketAcl\",\n            \"Resource\": \"${aws_s3_bucket.foo.arn}\"\n        },\n        {\n            \"Sid\": \"AWSCloudTrailWrite\",\n            \"Effect\": \"Allow\",\n            \"Principal\": {\n              \"Service\": \"cloudtrail.amazonaws.com\"\n            },\n            \"Action\": \"s3:PutObject\",\n            \"Resource\": \"${aws_s3_bucket.foo.arn}/prefix/AWSLogs/${data.aws_caller_identity.current.account_id}/*\",\n            \"Condition\": {\n                \"StringEquals\": {\n                    \"s3:x-amz-acl\": \"bucket-owner-full-control\"\n                }\n            }\n        }\n    ]\n}\n"
                    }
            - name: example
              manifest: |-
                {
                  "event_selector": [
                    {
                      "data_resource": [
                        {
                          "type": "AWS::Lambda::Function",
                          "values": [
                            "arn:aws:lambda"
                          ]
                        }
                      ],
                      "include_management_events": true,
                      "read_write_type": "All"
                    }
                  ]
                }
            - name: example
              manifest: |-
                {
                  "event_selector": [
                    {
                      "data_resource": [
                        {
                          "type": "AWS::S3::Object",
                          "values": [
                            "arn:aws:s3"
                          ]
                        }
                      ],
                      "include_management_events": true,
                      "read_write_type": "All"
                    }
                  ]
                }
            - name: example
              manifest: |-
                {
                  "event_selector": [
                    {
                      "data_resource": [
                        {
                          "type": "AWS::S3::Object",
                          "values": [
                            "${data.aws_s3_bucket.important-bucket.arn}/"
                          ]
                        }
                      ],
                      "include_management_events": true,
                      "read_write_type": "All"
                    }
                  ]
                }
            - name: example
              manifest: |-
                {
                  "advanced_event_selector": [
                    {
                      "field_selector": [
                        {
                          "equals": [
                            "Data"
                          ],
                          "field": "eventCategory"
                        },
                        {
                          "field": "resources.ARN",
                          "not_equals": [
                            "${data.aws_s3_bucket.not-important-bucket-1.arn}/",
                            "${data.aws_s3_bucket.not-important-bucket-2.arn}/"
                          ]
                        },
                        {
                          "equals": [
                            "AWS::S3::Object"
                          ],
                          "field": "resources.type"
                        }
                      ],
                      "name": "Log all S3 objects events except for two S3 buckets"
                    },
                    {
                      "field_selector": [
                        {
                          "equals": [
                            "Management"
                          ],
                          "field": "eventCategory"
                        }
                      ],
                      "name": "Log readOnly and writeOnly management events"
                    }
                  ]
                }
            - name: example
              manifest: |-
                {
                  "advanced_event_selector": [
                    {
                      "field_selector": [
                        {
                          "equals": [
                            "Data"
                          ],
                          "field": "eventCategory"
                        },
                        {
                          "equals": [
                            "PutObject",
                            "DeleteObject"
                          ],
                          "field": "eventName"
                        },
                        {
                          "equals": [
                            "${data.aws_s3_bucket.important-bucket-1.arn}/",
                            "${data.aws_s3_bucket.important-bucket-2.arn}/"
                          ],
                          "field": "resources.ARN"
                        },
                        {
                          "equals": [
                            "false"
                          ],
                          "field": "readOnly"
                        },
                        {
                          "equals": [
                            "AWS::S3::Object"
                          ],
                          "field": "resources.type"
                        }
                      ],
                      "name": "Log PutObject and DeleteObject events for two S3 buckets"
                    },
                    {
                      "field_selector": [
                        {
                          "equals": [
                            "Data"
                          ],
                          "field": "eventCategory"
                        },
                        {
                          "field": "eventName",
                          "starts_with": [
                            "Delete"
                          ]
                        },
                        {
                          "equals": [
                            "${data.aws_s3_bucket.important-bucket-3.arn}/important-prefix"
                          ],
                          "field": "resources.ARN"
                        },
                        {
                          "equals": [
                            "false"
                          ],
                          "field": "readOnly"
                        },
                        {
                          "equals": [
                            "AWS::S3::Object"
                          ],
                          "field": "resources.type"
                        }
                      ],
                      "name": "Log Delete* events for one S3 bucket"
                    }
                  ]
                }
            - name: example
              manifest: |-
                {
                  "cloud_watch_logs_group_arn": "${aws_cloudwatch_log_group.example.arn}:*"
                }
              dependencies:
                aws_cloudwatch_log_group.example: |-
                    {
                      "name": "Example"
                    }
        argumentDocs:
            advanced_event_selector: '- (Optional) Specifies an advanced event selector for enabling data event logging. Fields documented below. Conflicts with event_selector.'
            arn: '- ARN of the trail.'
            cloud_watch_logs_group_arn: '- (Optional) Log group name using an ARN that represents the log group to which CloudTrail logs will be delivered. Note that CloudTrail requires the Log Stream wildcard.'
            cloud_watch_logs_role_arn: '- (Optional) Role for the CloudWatch Logs endpoint to assume to write to a user’s log group.'
            data_resource: '- (Optional) Configuration block for data events. See details below.'
            enable_log_file_validation: '- (Optional) Whether log file integrity validation is enabled. Defaults to false.'
            enable_logging: '- (Optional) Enables logging for the trail. Defaults to true. Setting this to false will pause logging.'
            ends_with: (Optional) - A list of values that includes events that match the last few characters of the event record field specified as the value of field.
            equals: (Optional) - A list of values that includes events that match the exact value of the event record field specified as the value of field. This is the only valid operator that you can use with the readOnly, eventCategory, and resources.type fields.
            event_selector: '- (Optional) Specifies an event selector for enabling data event logging. Fields documented below. Please note the CloudTrail limits when configuring these. Conflicts with advanced_event_selector.'
            exclude_management_event_sources: '(Optional) -  A set of event sources to exclude. Valid values include: kms.amazonaws.com and rdsdata.amazonaws.com. include_management_events must be set totrue to allow this.'
            field: '(Required) - Specifies a field in an event record on which to filter events to be logged. You can specify only the following values: readOnly, eventSource, eventName, eventCategory, resources.type, resources.ARN.'
            field_selector: (Required) - Specifies the selector statements in an advanced event selector. Fields documented below.
            home_region: '- Region in which the trail was created.'
            id: '- Name of the trail.'
            include_global_service_events: '- (Optional) Whether the trail is publishing events from global services such as IAM to the log files. Defaults to true.'
            include_management_events: '- (Optional) Whether to include management events for your trail. Defaults to true.'
            insight_selector: '- (Optional) Configuration block for identifying unusual operational activity. See details below.'
            insight_type: '- (Optional) Type of insights to log on a trail. Valid values are: ApiCallRateInsight and ApiErrorRateInsight.'
            is_multi_region_trail: '- (Optional) Whether the trail is created in the current region or in all regions. Defaults to false.'
            is_organization_trail: '- (Optional) Whether the trail is an AWS Organizations trail. Organization trails log events for the master account and all member accounts. Can only be created in the organization master account. Defaults to false.'
            kms_key_id: '- (Optional) KMS key ARN to use to encrypt the logs delivered by CloudTrail.'
            name: '- (Required) Name of the trail.'
            not_ends_with: (Optional) - A list of values that excludes events that match the last few characters of the event record field specified as the value of field.
            not_equals: (Optional) - A list of values that excludes events that match the exact value of the event record field specified as the value of field.
            not_starts_with: (Optional) - A list of values that excludes events that match the first few characters of the event record field specified as the value of field.
            read_write_type: '- (Optional) Type of events to log. Valid values are ReadOnly, WriteOnly, All. Default value is All.'
            s3_bucket_name: '- (Required) Name of the S3 bucket designated for publishing log files.'
            s3_key_prefix: '- (Optional) S3 key prefix that follows the name of the bucket you have designated for log file delivery.'
            sns_topic_name: '- (Optional) Name of the Amazon SNS topic defined for notification of log file delivery.'
            starts_with: (Optional) - A list of values that includes events that match the first few characters of the event record field specified as the value of field.
            tags: '- (Optional) Map of tags to assign to the trail. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            type: '- (Required) Resource type in which you want to log data events. You can specify only the following value: "AWS::S3::Object", "AWS::Lambda::Function" and "AWS::DynamoDB::Table".'
            values: '- (Required) List of ARN strings or partial ARN strings to specify selectors for data audit events over data resources. ARN list is specific to single-valued type. For example, arn:aws:s3:::<bucket name>/ for all objects in a bucket, arn:aws:s3:::<bucket name>/key for specific objects, arn:aws:lambda for all lambda events within an account, arn:aws:lambda:<region>:<account number>:function:<function name> for a specific Lambda function, arn:aws:dynamodb for all DDB events for all tables within an account, or arn:aws:dynamodb:<region>:<account number>:table/<table name> for a specific DynamoDB table.'
        importStatements: []
    aws_cloudtrail_event_data_store:
        subCategory: CloudTrail
        description: Provides a CloudTrail Event Data Store resource.
        name: aws_cloudtrail_event_data_store
        title: aws_cloudtrail_event_data_store
        examples:
            - name: example
              manifest: |-
                {
                  "name": "example-event-data-store",
                  "retention_period": 7
                }
            - name: example
              manifest: |-
                {
                  "advanced_event_selector": [
                    {
                      "field_selector": [
                        {
                          "equals": [
                            "Data"
                          ],
                          "field": "eventCategory"
                        },
                        {
                          "equals": [
                            "AWS::DynamoDB::Table"
                          ],
                          "field": "resources.type"
                        },
                        {
                          "equals": [
                            "PutItem"
                          ],
                          "field": "eventName"
                        },
                        {
                          "equals": [
                            "${data.aws_dynamodb_table.table.arn}"
                          ],
                          "field": "resources.ARN"
                        }
                      ],
                      "name": "Log all DynamoDB PutEvent actions for a specific DynamoDB table"
                    }
                  ]
                }
        argumentDocs:
            advanced_event_selector: '- (Required) The advanced event selectors to use to select the events for the data store. For more information about how to use advanced event selectors, see Log events by using advanced event selectors in the CloudTrail User Guide.'
            arn: '- ARN of the event data store.'
            ends_with: (Optional) - A list of values that includes events that match the last few characters of the event record field specified as the value of field.
            equals: (Optional) - A list of values that includes events that match the exact value of the event record field specified as the value of field. This is the only valid operator that you can use with the readOnly, eventCategory, and resources.type fields.
            field: '(Required) - Specifies a field in an event record on which to filter events to be logged. You can specify only the following values: readOnly, eventSource, eventName, eventCategory, resources.type, resources.ARN.'
            field_selector: (Required) - Specifies the selector statements in an advanced event selector. Fields documented below.
            id: '- Name of the event data store.'
            multi_region_enabled: '- (Optional) Specifies whether the event data store includes events from all regions, or only from the region in which the event data store is created. Default: true.'
            name: '- (Required) The name of the event data store.'
            not_ends_with: (Optional) - A list of values that excludes events that match the last few characters of the event record field specified as the value of field.
            not_equals: (Optional) - A list of values that excludes events that match the exact value of the event record field specified as the value of field.
            not_starts_with: (Optional) - A list of values that excludes events that match the first few characters of the event record field specified as the value of field.
            organization_enabled: '- (Optional) Specifies whether an event data store collects events logged for an organization in AWS Organizations. Default: false.'
            retention_period: '- (Optional) The retention period of the event data store, in days. You can set a retention period of up to 2555 days, the equivalent of seven years. Default: 2555.'
            starts_with: (Optional) - A list of values that includes events that match the first few characters of the event record field specified as the value of field.
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            termination_protection_enabled: '- (Optional) Specifies whether termination protection is enabled for the event data store. If termination protection is enabled, you cannot delete the event data store until termination protection is disabled. Default: true.'
        importStatements: []
    aws_cloudwatch_composite_alarm:
        subCategory: CloudWatch
        description: Provides a CloudWatch Composite Alarm resource.
        name: aws_cloudwatch_composite_alarm
        title: aws_cloudwatch_composite_alarm
        examples:
            - name: example
              manifest: |-
                {
                  "alarm_actions": "${aws_sns_topic.example.arn}",
                  "alarm_description": "This is a composite alarm!",
                  "alarm_name": "example-composite-alarm",
                  "alarm_rule": "ALARM(${aws_cloudwatch_metric_alarm.alpha.alarm_name}) OR\nALARM(${aws_cloudwatch_metric_alarm.bravo.alarm_name})\n",
                  "ok_actions": "${aws_sns_topic.example.arn}"
                }
              references:
                alarm_actions: aws_sns_topic.example.arn
                ok_actions: aws_sns_topic.example.arn
        argumentDocs:
            actions_enabled: '- (Optional, Forces new resource) Indicates whether actions should be executed during any changes to the alarm state of the composite alarm. Defaults to true.'
            alarm_actions: '- (Optional) The set of actions to execute when this alarm transitions to the ALARM state from any other state. Each action is specified as an ARN. Up to 5 actions are allowed.'
            alarm_description: '- (Optional) The description for the composite alarm.'
            alarm_name: '- (Required) The name for the composite alarm. This name must be unique within the region.'
            alarm_rule: '- (Required) An expression that specifies which other alarms are to be evaluated to determine this composite alarm''s state. For syntax, see Creating a Composite Alarm. The maximum length is 10240 characters.'
            arn: '- The ARN of the composite alarm.'
            id: '- The ID of the composite alarm resource, which is equivalent to its alarm_name.'
            insufficient_data_actions: '- (Optional) The set of actions to execute when this alarm transitions to the INSUFFICIENT_DATA state from any other state. Each action is specified as an ARN. Up to 5 actions are allowed.'
            ok_actions: '- (Optional) The set of actions to execute when this alarm transitions to an OK state from any other state. Each action is specified as an ARN. Up to 5 actions are allowed.'
            tags: '- (Optional) A map of tags to associate with the alarm. Up to 50 tags are allowed. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_cloudwatch_dashboard:
        subCategory: CloudWatch
        description: Provides a CloudWatch Dashboard resource.
        name: aws_cloudwatch_dashboard
        title: aws_cloudwatch_dashboard
        examples:
            - name: main
              manifest: |-
                {
                  "dashboard_body": "{\n  \"widgets\": [\n    {\n      \"type\": \"metric\",\n      \"x\": 0,\n      \"y\": 0,\n      \"width\": 12,\n      \"height\": 6,\n      \"properties\": {\n        \"metrics\": [\n          [\n            \"AWS/EC2\",\n            \"CPUUtilization\",\n            \"InstanceId\",\n            \"i-012345\"\n          ]\n        ],\n        \"period\": 300,\n        \"stat\": \"Average\",\n        \"region\": \"us-east-1\",\n        \"title\": \"EC2 Instance CPU\"\n      }\n    },\n    {\n      \"type\": \"text\",\n      \"x\": 0,\n      \"y\": 7,\n      \"width\": 3,\n      \"height\": 3,\n      \"properties\": {\n        \"markdown\": \"Hello world\"\n      }\n    }\n  ]\n}\n",
                  "dashboard_name": "my-dashboard"
                }
        argumentDocs:
            dashboard_arn: '- The Amazon Resource Name (ARN) of the dashboard.'
            dashboard_body: '- (Required) The detailed information about the dashboard, including what widgets are included and their location on the dashboard. You can read more about the body structure in the documentation.'
            dashboard_name: '- (Required) The name of the dashboard.'
        importStatements: []
    aws_cloudwatch_event_api_destination:
        subCategory: EventBridge
        description: Provides an EventBridge event API Destination resource.
        name: aws_cloudwatch_event_api_destination
        title: aws_cloudwatch_event_api_destination
        examples:
            - name: test
              manifest: |-
                {
                  "connection_arn": "${aws_cloudwatch_event_connection.test.arn}",
                  "description": "An API Destination",
                  "http_method": "POST",
                  "invocation_endpoint": "https://api.destination.com/endpoint",
                  "invocation_rate_limit_per_second": 20,
                  "name": "api-destination"
                }
              references:
                connection_arn: aws_cloudwatch_event_connection.test.arn
        argumentDocs:
            arn: '- The Amazon Resource Name (ARN) of the event API Destination.'
            connection_arn: '- (Required) ARN of the EventBridge Connection to use for the API Destination.'
            description: '- (Optional) The description of the new API Destination. Maximum of 512 characters.'
            http_method: '- (Required) Select the HTTP method used for the invocation endpoint, such as GET, POST, PUT, etc.'
            invocation_endpoint: '- (Required) URL endpoint to invoke as a target. This could be a valid endpoint generated by a partner service. You can include "*" as path parameters wildcards to be set from the Target HttpParameters.'
            invocation_rate_limit_per_second: '- (Optional) Enter the maximum number of invocations per second to allow for this destination. Enter a value greater than 0 (default 300).'
            name: '- (Required) The name of the new API Destination. The name must be unique for your account. Maximum of 64 characters consisting of numbers, lower/upper case letters, .,-,_.'
        importStatements: []
    aws_cloudwatch_event_archive:
        subCategory: EventBridge
        description: Provides an EventBridge event archive resource.
        name: aws_cloudwatch_event_archive
        title: aws_cloudwatch_event_archive
        examples:
            - name: order
              manifest: |-
                {
                  "event_source_arn": "${aws_cloudwatch_event_bus.order.arn}",
                  "name": "order-archive"
                }
              references:
                event_source_arn: aws_cloudwatch_event_bus.order.arn
              dependencies:
                aws_cloudwatch_event_bus.order: |-
                    {
                      "name": "orders"
                    }
            - name: order
              manifest: |-
                {
                  "description": "Archived events from order service",
                  "event_pattern": "{\n  \"source\": [\"company.team.order\"]\n}\n",
                  "event_source_arn": "${aws_cloudwatch_event_bus.order.arn}",
                  "name": "order-archive",
                  "retention_days": 7
                }
              references:
                event_source_arn: aws_cloudwatch_event_bus.order.arn
              dependencies:
                aws_cloudwatch_event_bus.order: |-
                    {
                      "name": "orders"
                    }
        argumentDocs:
            arn: '- The Amazon Resource Name (ARN) of the event archive.'
            description: '- (Optional) The description of the new event archive.'
            event_pattern: '- (Optional) Instructs the new event archive to only capture events matched by this pattern. By default, it attempts to archive every event received in the event_source_arn.'
            event_source_arn: '- (Required) Event bus source ARN from where these events should be archived.'
            name: '- (Required) The name of the new event archive. The archive name cannot exceed 48 characters.'
            retention_days: '- (Optional) The maximum number of days to retain events in the new event archive. By default, it archives indefinitely.'
        importStatements: []
    aws_cloudwatch_event_bus:
        subCategory: EventBridge
        description: Provides an EventBridge event bus resource.
        name: aws_cloudwatch_event_bus
        title: aws_cloudwatch_event_bus
        examples:
            - name: messenger
              manifest: |-
                {
                  "name": "chat-messages"
                }
            - name: examplepartner
              manifest: |-
                {
                  "event_source_name": "${data.aws_cloudwatch_event_source.examplepartner.name}",
                  "name": "${data.aws_cloudwatch_event_source.examplepartner.name}"
                }
              references:
                event_source_name: data.aws_cloudwatch_event_source.examplepartner.name
                name: data.aws_cloudwatch_event_source.examplepartner.name
        argumentDocs:
            arn: '- The Amazon Resource Name (ARN) of the event bus.'
            event_source_name: (Optional) The partner event source that the new event bus will be matched with. Must match name.
            name: '- (Required) The name of the new event bus. The names of custom event buses can''t contain the / character. To create a partner event bus, ensure the name matches the event_source_name.'
            tags: '- (Optional)  A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_cloudwatch_event_bus_policy:
        subCategory: EventBridge
        description: Provides a resource to create an EventBridge policy to support cross-account events.
        name: aws_cloudwatch_event_bus_policy
        title: aws_cloudwatch_event_bus_policy
        examples:
            - name: test
              manifest: |-
                {
                  "event_bus_name": "${aws_cloudwatch_event_bus.test.name}",
                  "policy": "${data.aws_iam_policy_document.test.json}"
                }
              references:
                event_bus_name: aws_cloudwatch_event_bus.test.name
                policy: data.aws_iam_policy_document.test.json
            - name: test
              manifest: |-
                {
                  "event_bus_name": "${aws_cloudwatch_event_bus.test.name}",
                  "policy": "${data.aws_iam_policy_document.test.json}"
                }
              references:
                event_bus_name: aws_cloudwatch_event_bus.test.name
                policy: data.aws_iam_policy_document.test.json
            - name: test
              manifest: |-
                {
                  "event_bus_name": "${aws_cloudwatch_event_bus.test.name}",
                  "policy": "${data.aws_iam_policy_document.test.json}"
                }
              references:
                event_bus_name: aws_cloudwatch_event_bus.test.name
                policy: data.aws_iam_policy_document.test.json
        argumentDocs:
            event_bus_name: '- (Optional) The event bus to set the permissions on. If you omit this, the permissions are set on the default event bus.'
            id: '- The name of the EventBridge event bus.'
            policy: '- (Required) The text of the policy. For more information about building AWS IAM policy documents with Terraform, see the AWS IAM Policy Document Guide.'
        importStatements:
            - $ terraform import aws_cloudwatch_event_bus_policy.DevAccountAccess example-event-bus
    aws_cloudwatch_event_connection:
        subCategory: EventBridge
        description: Provides an EventBridge connection resource.
        name: aws_cloudwatch_event_connection
        title: aws_cloudwatch_event_connection
        examples:
            - name: test
              manifest: |-
                {
                  "auth_parameters": [
                    {
                      "api_key": [
                        {
                          "key": "x-signature",
                          "value": "1234"
                        }
                      ]
                    }
                  ],
                  "authorization_type": "API_KEY",
                  "description": "A connection description",
                  "name": "ngrok-connection"
                }
            - name: test
              manifest: |-
                {
                  "auth_parameters": [
                    {
                      "basic": [
                        {
                          "password": "Pass1234!",
                          "username": "user"
                        }
                      ]
                    }
                  ],
                  "authorization_type": "BASIC",
                  "description": "A connection description",
                  "name": "ngrok-connection"
                }
            - name: test
              manifest: |-
                {
                  "auth_parameters": [
                    {
                      "oauth": [
                        {
                          "authorization_endpoint": "https://auth.url.com/endpoint",
                          "client_parameters": [
                            {
                              "client_id": "1234567890",
                              "client_secret": "Pass1234!"
                            }
                          ],
                          "http_method": "GET",
                          "oauth_http_parameters": [
                            {
                              "body": [
                                {
                                  "is_value_secret": false,
                                  "key": "body-parameter-key",
                                  "value": "body-parameter-value"
                                }
                              ],
                              "header": [
                                {
                                  "is_value_secret": false,
                                  "key": "header-parameter-key",
                                  "value": "header-parameter-value"
                                }
                              ],
                              "query_string": [
                                {
                                  "is_value_secret": false,
                                  "key": "query-string-parameter-key",
                                  "value": "query-string-parameter-value"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "authorization_type": "OAUTH_CLIENT_CREDENTIALS",
                  "description": "A connection description",
                  "name": "ngrok-connection"
                }
            - name: test
              manifest: |-
                {
                  "auth_parameters": [
                    {
                      "basic": [
                        {
                          "password": "Pass1234!",
                          "username": "user"
                        }
                      ],
                      "invocation_http_parameters": [
                        {
                          "body": [
                            {
                              "is_value_secret": false,
                              "key": "body-parameter-key",
                              "value": "body-parameter-value"
                            },
                            {
                              "is_value_secret": true,
                              "key": "body-parameter-key2",
                              "value": "body-parameter-value2"
                            }
                          ],
                          "header": [
                            {
                              "is_value_secret": false,
                              "key": "header-parameter-key",
                              "value": "header-parameter-value"
                            }
                          ],
                          "query_string": [
                            {
                              "is_value_secret": false,
                              "key": "query-string-parameter-key",
                              "value": "query-string-parameter-value"
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "authorization_type": "BASIC",
                  "description": "A connection description",
                  "name": "ngrok-connection"
                }
        argumentDocs:
            api_key: '- (Optional) Parameters used for API_KEY authorization. An API key to include in the header for each authentication request. A maximum of 1 are allowed. Conflicts with basic and oauth. Documented below.'
            arn: '- The Amazon Resource Name (ARN) of the connection.'
            auth_parameters: '- (Required) Parameters used for authorization. A maximum of 1 are allowed. Documented below.'
            authorization_endpoint: '- (Required) The URL to the authorization endpoint.'
            authorization_type: '- (Required) Choose the type of authorization to use for the connection. One of API_KEY,BASIC,OAUTH_CLIENT_CREDENTIALS.'
            basic: '- (Optional) Parameters used for BASIC authorization. A maximum of 1 are allowed. Conflicts with api_key and oauth. Documented below.'
            body: '- (Optional) Contains additional body string parameters for the connection. You can include up to 100 additional body string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB. Each parameter can contain the following:'
            client_id: '- (Required) The client ID for the credentials to use for authorization. Created and stored in AWS Secrets Manager.'
            client_parameters: '- (Required) Contains the client parameters for OAuth authorization. Contains the following two parameters.'
            client_secret: '- (Required) The client secret for the credentials to use for authorization. Created and stored in AWS Secrets Manager.'
            description: '- (Optional) Enter a description for the connection. Maximum of 512 characters.'
            header: '- (Optional) Contains additional header parameters for the connection. You can include up to 100 additional body string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB. Each parameter can contain the following:'
            http_method: '- (Required) A password for the authorization. Created and stored in AWS Secrets Manager.'
            invocation_http_parameters: '- (Optional) Invocation Http Parameters are additional credentials used to sign each Invocation of the ApiDestination created from this Connection. If the ApiDestination Rule Target has additional HttpParameters, the values will be merged together, with the Connection Invocation Http Parameters taking precedence. Secret values are stored and managed by AWS Secrets Manager. A maximum of 1 are allowed. Documented below.'
            is_value_secret: '- (Optional) Specified whether the value is secret.'
            key: '- (Required) Header Name.'
            name: '- (Required) The name of the new connection. Maximum of 64 characters consisting of numbers, lower/upper case letters, .,-,_.'
            oauth: '- (Optional) Parameters used for OAUTH_CLIENT_CREDENTIALS authorization. A maximum of 1 are allowed. Conflicts with basic and api_key. Documented below.'
            oauth_http_parameters: '- (Required) OAuth Http Parameters are additional credentials used to sign the request to the authorization endpoint to exchange the OAuth Client information for an access token. Secret values are stored and managed by AWS Secrets Manager. A maximum of 1 are allowed. Documented below.'
            password: '- (Required) A password for the authorization. Created and stored in AWS Secrets Manager.'
            query_string: '- (Optional) Contains additional query string parameters for the connection. You can include up to 100 additional body string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB. Each parameter can contain the following:'
            secret_arn: '- The Amazon Resource Name (ARN) of the secret created from the authorization parameters specified for the connection.'
            username: '- (Required) A username for the authorization.'
            value: '- (Required) Header Value. Created and stored in AWS Secrets Manager.'
        importStatements: []
    aws_cloudwatch_event_permission:
        subCategory: EventBridge
        description: Provides a resource to create an EventBridge permission to support cross-account events in the current account default event bus.
        name: aws_cloudwatch_event_permission
        title: aws_cloudwatch_event_permission
        examples:
            - name: DevAccountAccess
              manifest: |-
                {
                  "principal": "123456789012",
                  "statement_id": "DevAccountAccess"
                }
            - name: OrganizationAccess
              manifest: |-
                {
                  "condition": [
                    {
                      "key": "aws:PrincipalOrgID",
                      "type": "StringEquals",
                      "value": "${aws_organizations_organization.example.id}"
                    }
                  ],
                  "principal": "*",
                  "statement_id": "OrganizationAccess"
                }
              references:
                condition.value: aws_organizations_organization.example.id
        argumentDocs:
            action: '- (Optional) The action that you are enabling the other account to perform. Defaults to events:PutEvents.'
            condition: '- (Optional) Configuration block to limit the event bus permissions you are granting to only accounts that fulfill the condition. Specified below.'
            condition.key: '- (Required) Key for the condition. Valid values: aws:PrincipalOrgID.'
            condition.type: '- (Required) Type of condition. Value values: StringEquals.'
            condition.value: '- (Required) Value for the key.'
            event_bus_name: '- (Optional) The event bus to set the permissions on. If you omit this, the permissions are set on the default event bus.'
            id: '- The statement ID of the EventBridge permission.'
            principal: '- (Required) The 12-digit AWS account ID that you are permitting to put events to your default event bus. Specify * to permit any account to put events to your default event bus, optionally limited by condition.'
            statement_id: '- (Required) An identifier string for the external account that you are granting permissions to.'
        importStatements:
            - $ terraform import aws_cloudwatch_event_permission.DevAccountAccess example-event-bus/DevAccountAccess
    aws_cloudwatch_event_rule:
        subCategory: EventBridge
        description: Provides an EventBridge Rule resource.
        name: aws_cloudwatch_event_rule
        title: aws_cloudwatch_event_rule
        examples:
            - name: console
              manifest: |-
                {
                  "description": "Capture each AWS Console Sign In",
                  "event_pattern": "{\n  \"detail-type\": [\n    \"AWS Console Sign In via CloudTrail\"\n  ]\n}\n",
                  "name": "capture-aws-sign-in"
                }
              dependencies:
                aws_cloudwatch_event_target.sns: |-
                    {
                      "arn": "${aws_sns_topic.aws_logins.arn}",
                      "rule": "${aws_cloudwatch_event_rule.console.name}",
                      "target_id": "SendToSNS"
                    }
                aws_sns_topic.aws_logins: |-
                    {
                      "name": "aws-console-logins"
                    }
                aws_sns_topic_policy.default: |-
                    {
                      "arn": "${aws_sns_topic.aws_logins.arn}",
                      "policy": "${data.aws_iam_policy_document.sns_topic_policy.json}"
                    }
        argumentDocs:
            arn: '- The Amazon Resource Name (ARN) of the rule.'
            description: '- (Optional) The description of the rule.'
            event_bus_name: '- (Optional) The event bus to associate with this rule. If you omit this, the default event bus is used.'
            event_pattern: '- (Optional) The event pattern described a JSON object. At least one of schedule_expression or event_pattern is required. See full documentation of Events and Event Patterns in EventBridge for details.'
            id: '- The name of the rule.'
            is_enabled: '- (Optional) Whether the rule should be enabled (defaults to true).'
            name: '- (Optional) The name of the rule. If omitted, Terraform will assign a random, unique name. Conflicts with name_prefix.'
            name_prefix: '- (Optional) Creates a unique name beginning with the specified prefix. Conflicts with name.'
            role_arn: '- (Optional) The Amazon Resource Name (ARN) associated with the role that is used for target invocation.'
            schedule_expression: '- (Optional) The scheduling expression. For example, cron(0 20 * * ? *) or rate(5 minutes). At least one of schedule_expression or event_pattern is required. Can only be used on the default event bus. For more information, refer to the AWS documentation Schedule Expressions for Rules.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_cloudwatch_event_target:
        subCategory: EventBridge
        description: Provides an EventBridge Target resource.
        name: aws_cloudwatch_event_target
        title: aws_cloudwatch_event_target
        examples:
            - name: yada
              manifest: |-
                {
                  "arn": "${aws_kinesis_stream.test_stream.arn}",
                  "rule": "${aws_cloudwatch_event_rule.console.name}",
                  "run_command_targets": [
                    {
                      "key": "tag:Name",
                      "values": [
                        "FooBar"
                      ]
                    },
                    {
                      "key": "InstanceIds",
                      "values": [
                        "i-162058cd308bffec2"
                      ]
                    }
                  ],
                  "target_id": "Yada"
                }
              references:
                arn: aws_kinesis_stream.test_stream.arn
                rule: aws_cloudwatch_event_rule.console.name
              dependencies:
                aws_cloudwatch_event_rule.console: |-
                    {
                      "description": "Capture all EC2 scaling events",
                      "event_pattern": "{\n  \"source\": [\n    \"aws.autoscaling\"\n  ],\n  \"detail-type\": [\n    \"EC2 Instance Launch Successful\",\n    \"EC2 Instance Terminate Successful\",\n    \"EC2 Instance Launch Unsuccessful\",\n    \"EC2 Instance Terminate Unsuccessful\"\n  ]\n}\n",
                      "name": "capture-ec2-scaling-events"
                    }
                aws_kinesis_stream.test_stream: |-
                    {
                      "name": "terraform-kinesis-test",
                      "shard_count": 1
                    }
            - name: stop_instances
              manifest: |-
                {
                  "arn": "${aws_ssm_document.stop_instance.arn}",
                  "role_arn": "${aws_iam_role.ssm_lifecycle.arn}",
                  "rule": "${aws_cloudwatch_event_rule.stop_instances.name}",
                  "run_command_targets": [
                    {
                      "key": "tag:Terminate",
                      "values": [
                        "midnight"
                      ]
                    }
                  ],
                  "target_id": "StopInstance"
                }
              references:
                arn: aws_ssm_document.stop_instance.arn
                role_arn: aws_iam_role.ssm_lifecycle.arn
                rule: aws_cloudwatch_event_rule.stop_instances.name
              dependencies:
                aws_cloudwatch_event_rule.stop_instances: |-
                    {
                      "description": "Stop instances nightly",
                      "name": "StopInstance",
                      "schedule_expression": "cron(0 0 * * ? *)"
                    }
                aws_iam_policy.ssm_lifecycle: |-
                    {
                      "name": "SSMLifecycle",
                      "policy": "${data.aws_iam_policy_document.ssm_lifecycle.json}"
                    }
                aws_iam_role.ssm_lifecycle: |-
                    {
                      "assume_role_policy": "${data.aws_iam_policy_document.ssm_lifecycle_trust.json}",
                      "name": "SSMLifecycle"
                    }
                aws_iam_role_policy_attachment.ssm_lifecycle: |-
                    {
                      "policy_arn": "${aws_iam_policy.ssm_lifecycle.arn}",
                      "role": "${aws_iam_role.ssm_lifecycle.name}"
                    }
                aws_ssm_document.stop_instance: |-
                    {
                      "content": "  {\n    \"schemaVersion\": \"1.2\",\n    \"description\": \"Stop an instance\",\n    \"parameters\": {\n\n    },\n    \"runtimeConfig\": {\n      \"aws:runShellScript\": {\n        \"properties\": [\n          {\n            \"id\": \"0.aws:runShellScript\",\n            \"runCommand\": [\"halt\"]\n          }\n        ]\n      }\n    }\n  }\n",
                      "document_type": "Command",
                      "name": "stop_instance"
                    }
            - name: stop_instances
              manifest: |-
                {
                  "arn": "arn:aws:ssm:${var.aws_region}::document/AWS-RunShellScript",
                  "input": "{\"commands\":[\"halt\"]}",
                  "role_arn": "${aws_iam_role.ssm_lifecycle.arn}",
                  "rule": "${aws_cloudwatch_event_rule.stop_instances.name}",
                  "run_command_targets": [
                    {
                      "key": "tag:Terminate",
                      "values": [
                        "midnight"
                      ]
                    }
                  ],
                  "target_id": "StopInstance"
                }
              references:
                role_arn: aws_iam_role.ssm_lifecycle.arn
                rule: aws_cloudwatch_event_rule.stop_instances.name
              dependencies:
                aws_cloudwatch_event_rule.stop_instances: |-
                    {
                      "description": "Stop instances nightly",
                      "name": "StopInstance",
                      "schedule_expression": "cron(0 0 * * ? *)"
                    }
            - name: ecs_scheduled_task
              manifest: |-
                {
                  "arn": "${aws_ecs_cluster.cluster_name.arn}",
                  "ecs_target": [
                    {
                      "task_count": 1,
                      "task_definition_arn": "${aws_ecs_task_definition.task_name.arn}"
                    }
                  ],
                  "input": "{\n  \"containerOverrides\": [\n    {\n      \"name\": \"name-of-container-to-override\",\n      \"command\": [\"bin/console\", \"scheduled-task\"]\n    }\n  ]\n}\n",
                  "role_arn": "${aws_iam_role.ecs_events.arn}",
                  "rule": "${aws_cloudwatch_event_rule.every_hour.name}",
                  "target_id": "run-scheduled-task-every-hour"
                }
              references:
                arn: aws_ecs_cluster.cluster_name.arn
                ecs_target.task_definition_arn: aws_ecs_task_definition.task_name.arn
                role_arn: aws_iam_role.ecs_events.arn
                rule: aws_cloudwatch_event_rule.every_hour.name
              dependencies:
                aws_iam_role.ecs_events: |-
                    {
                      "assume_role_policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Principal\": {\n        \"Service\": \"events.amazonaws.com\"\n      },\n      \"Action\": \"sts:AssumeRole\"\n    }\n  ]\n}\n",
                      "name": "ecs_events"
                    }
                aws_iam_role_policy.ecs_events_run_task_with_any_role: |-
                    {
                      "name": "ecs_events_run_task_with_any_role",
                      "policy": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": \"iam:PassRole\",\n            \"Resource\": \"*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": \"ecs:RunTask\",\n            \"Resource\": \"${replace(aws_ecs_task_definition.task_name.arn, \"/:\\\\d+$/\", \":*\")}\"\n        }\n    ]\n}\n",
                      "role": "${aws_iam_role.ecs_events.id}"
                    }
            - name: example
              manifest: |-
                {
                  "arn": "${aws_api_gateway_stage.example.execution_arn}/GET",
                  "http_target": [
                    {
                      "header_parameters": {
                        "Env": "Test"
                      },
                      "query_string_parameters": {
                        "Body": "$.detail.body"
                      }
                    }
                  ],
                  "rule": "${aws_cloudwatch_event_rule.example.id}"
                }
              references:
                rule: aws_cloudwatch_event_rule.example.id
              dependencies:
                aws_api_gateway_deployment.example: |-
                    {
                      "rest_api_id": "${aws_api_gateway_rest_api.example.id}"
                    }
                aws_api_gateway_stage.example: |-
                    {
                      "deployment_id": "${aws_api_gateway_deployment.example.id}",
                      "rest_api_id": "${aws_api_gateway_rest_api.example.id}"
                    }
                aws_cloudwatch_event_rule.example: '{}'
            - name: stop_instances
              manifest: |-
                {
                  "arn": "arn:aws:events:eu-west-1:1234567890:event-bus/My-Event-Bus",
                  "role_arn": "${aws_iam_role.event_bus_invoke_remote_event_bus.arn}",
                  "rule": "${aws_cloudwatch_event_rule.stop_instances.name}",
                  "target_id": "StopInstance"
                }
              references:
                role_arn: aws_iam_role.event_bus_invoke_remote_event_bus.arn
                rule: aws_cloudwatch_event_rule.stop_instances.name
              dependencies:
                aws_cloudwatch_event_rule.stop_instances: |-
                    {
                      "description": "Stop instances nightly",
                      "name": "StopInstance",
                      "schedule_expression": "cron(0 0 * * ? *)"
                    }
                aws_iam_policy.event_bus_invoke_remote_event_bus: |-
                    {
                      "name": "event_bus_invoke_remote_event_bus",
                      "policy": "${data.aws_iam_policy_document.event_bus_invoke_remote_event_bus.json}"
                    }
                aws_iam_role.event_bus_invoke_remote_event_bus: |-
                    {
                      "assume_role_policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"events.amazonaws.com\"\n      },\n      \"Effect\": \"Allow\"\n    }\n  ]\n}\n",
                      "name": "event-bus-invoke-remote-event-bus"
                    }
                aws_iam_role_policy_attachment.event_bus_invoke_remote_event_bus: |-
                    {
                      "policy_arn": "${aws_iam_policy.event_bus_invoke_remote_event_bus.arn}",
                      "role": "${aws_iam_role.event_bus_invoke_remote_event_bus.name}"
                    }
            - name: example
              manifest: |-
                {
                  "arn": "${aws_lambda_function.example.arn}",
                  "input_transformer": [
                    {
                      "input_paths": {
                        "instance": "$.detail.instance",
                        "status": "$.detail.status"
                      },
                      "input_template": "{\n  \"instance_id\": \u003cinstance\u003e,\n  \"instance_status\": \u003cstatus\u003e\n}\n"
                    }
                  ],
                  "rule": "${aws_cloudwatch_event_rule.example.id}"
                }
              references:
                arn: aws_lambda_function.example.arn
                rule: aws_cloudwatch_event_rule.example.id
              dependencies:
                aws_cloudwatch_event_rule.example: '{}'
            - name: example
              manifest: |-
                {
                  "arn": "${aws_lambda_function.example.arn}",
                  "input_transformer": [
                    {
                      "input_paths": {
                        "instance": "$.detail.instance",
                        "status": "$.detail.status"
                      },
                      "input_template": "\"\u003cinstance\u003e is in state \u003cstatus\u003e\""
                    }
                  ],
                  "rule": "${aws_cloudwatch_event_rule.example.id}"
                }
              references:
                arn: aws_lambda_function.example.arn
                rule: aws_cloudwatch_event_rule.example.id
              dependencies:
                aws_cloudwatch_event_rule.example: '{}'
            - name: example
              manifest: |-
                {
                  "arn": "${aws_cloudwatch_log_group.example.arn}",
                  "rule": "${aws_cloudwatch_event_rule.example.name}"
                }
              references:
                arn: aws_cloudwatch_log_group.example.arn
                rule: aws_cloudwatch_event_rule.example.name
              dependencies:
                aws_cloudwatch_event_rule.example: |-
                    {
                      "description": "GuardDuty Findings",
                      "event_pattern": "${jsonencode(\n    {\n      \"source\" : [\n        \"aws.guardduty\"\n      ]\n    }\n  )}",
                      "name": "guard-duty_event_rule",
                      "tags": {
                        "Environment": "example"
                      }
                    }
                aws_cloudwatch_log_group.example: |-
                    {
                      "name": "/aws/events/guardduty/logs",
                      "retention_in_days": 1
                    }
                aws_cloudwatch_log_resource_policy.example: |-
                    {
                      "policy_document": "${data.aws_iam_policy_document.example_log_policy.json}",
                      "policy_name": "guardduty-log-publishing-policy"
                    }
        argumentDocs:
            arn: '- (Required) The Amazon Resource Name (ARN) of the target.'
            batch_target: '- (Optional) Parameters used when you are using the rule to invoke an Amazon Batch Job. Documented below. A maximum of 1 are allowed.'
            batch_target.array_size: '- (Optional) The size of the array, if this is an array batch job. Valid values are integers between 2 and 10,000.'
            batch_target.job_attempts: '- (Optional) The number of times to attempt to retry, if the job fails. Valid values are 1 to 10.'
            batch_target.job_definition: '- (Required) The ARN or name of the job definition to use if the event target is an AWS Batch job. This job definition must already exist.'
            batch_target.job_name: '- (Required) The name to use for this execution of the job, if the target is an AWS Batch job.'
            dead_letter_config: '- (Optional)  Parameters used when you are providing a dead letter config. Documented below. A maximum of 1 are allowed.'
            dead_letter_config.arn: '- (Optional) - ARN of the SQS queue specified as the target for the dead-letter queue.'
            ecs_target: '- (Optional) Parameters used when you are using the rule to invoke Amazon ECS Task. Documented below. A maximum of 1 are allowed.'
            ecs_target.enable_ecs_managed_tags: '- (Optional) Specifies whether to enable Amazon ECS managed tags for the task.'
            ecs_target.enable_execute_command: '- (Optional) Whether or not to enable the execute command functionality for the containers in this task. If true, this enables execute command functionality on all containers in the task.'
            ecs_target.group: '- (Optional) Specifies an ECS task group for the task. The maximum length is 255 characters.'
            ecs_target.launch_type: '- (Optional) Specifies the launch type on which your task is running. The launch type that you specify here must match one of the launch type (compatibilities) of the target task. Valid values include: EC2, EXTERNAL, or FARGATE.'
            ecs_target.network_configuration: '- (Optional) Use this if the ECS task uses the awsvpc network mode. This specifies the VPC subnets and security groups associated with the task, and whether a public IP address is to be used. Required if launch_type is FARGATE because the awsvpc mode is required for Fargate tasks.'
            ecs_target.network_configuration.assign_public_ip: '- (Optional) Assign a public IP address to the ENI (Fargate launch type only). Valid values are true or false. Default false.'
            ecs_target.network_configuration.security_groups: '- (Optional) The security groups associated with the task or service. If you do not specify a security group, the default security group for the VPC is used.'
            ecs_target.network_configuration.subnets: '- (Required) The subnets associated with the task or service.'
            ecs_target.placement_constraint: '- (Optional) An array of placement constraint objects to use for the task. You can specify up to 10 constraints per task (including constraints in the task definition and those specified at runtime). See Below.'
            ecs_target.placement_constraint.expression: '-  (Optional) Cluster Query Language expression to apply to the constraint. Does not need to be specified for the distinctInstance type. For more information, see Cluster Query Language in the Amazon EC2 Container Service Developer Guide.'
            ecs_target.placement_constraint.type: '- (Required) Type of constraint. The only valid values at this time are memberOf and distinctInstance.'
            ecs_target.platform_version: '- (Optional) Specifies the platform version for the task. Specify only the numeric portion of the platform version, such as 1.1.0. This is used only if LaunchType is FARGATE. For more information about valid platform versions, see AWS Fargate Platform Versions.'
            ecs_target.propagate_tags: '- (Optional) Specifies whether to propagate the tags from the task definition to the task. If no value is specified, the tags are not propagated. Tags can only be propagated to the task during task creation.'
            ecs_target.tags: '- (Optional) A map of tags to assign to ecs resources.'
            ecs_target.task_count: '- (Optional) The number of tasks to create based on the TaskDefinition. The default is 1.'
            ecs_target.task_definition_arn: '- (Required) The ARN of the task definition to use if the event target is an Amazon ECS cluster.'
            event_bus_name: '- (Optional) The event bus to associate with the rule. If you omit this, the default event bus is used.'
            http_target: '- (Optional) Parameters used when you are using the rule to invoke an API Gateway REST endpoint. Documented below. A maximum of 1 is allowed.'
            input: '- (Optional) Valid JSON text passed to the target. Conflicts with input_path and input_transformer.'
            input_path: '- (Optional) The value of the JSONPath that is used for extracting part of the matched event when passing it to the target. Conflicts with input and input_transformer.'
            input_transformer: '- (Optional) Parameters used when you are providing a custom input to a target based on certain event data. Conflicts with input and input_path.'
            input_transformer.input_paths: '- (Optional) Key value pairs specified in the form of JSONPath (for example, time = $.time)'
            input_transformer.input_template: '- (Required) Template to customize data sent to the target. Must be valid JSON. To send a string value, the string value must include double quotes. Values must be escaped for both JSON and Terraform, e.g., "\"Your string goes here.\\nA new line.\""'
            kinesis_target: '- (Optional) Parameters used when you are using the rule to invoke an Amazon Kinesis Stream. Documented below. A maximum of 1 are allowed.'
            kinesis_target.partition_key_path: '- (Optional) The JSON path to be extracted from the event and used as the partition key.'
            redshift_target: '- (Optional) Parameters used when you are using the rule to invoke an Amazon Redshift Statement. Documented below. A maximum of 1 are allowed.'
            redshift_target.database: '- (Required) The name of the database.'
            redshift_target.db_user: '- (Optional) The database user name.'
            redshift_target.secrets_manager_arn: '- (Optional) The name or ARN of the secret that enables access to the database.'
            redshift_target.sql: '- (Optional) The SQL statement text to run.'
            redshift_target.statement_name: '- (Optional) The name of the SQL statement.'
            redshift_target.with_event: '- (Optional) Indicates whether to send an event back to EventBridge after the SQL statement runs.'
            retry_policy: '- (Optional)  Parameters used when you are providing retry policies. Documented below. A maximum of 1 are allowed.'
            retry_policy.maximum_event_age_in_seconds: '- (Optional) The age in seconds to continue to make retry attempts.'
            retry_policy.maximum_retry_attempts: '- (Optional) maximum number of retry attempts to make before the request fails'
            role_arn: '- (Optional) The Amazon Resource Name (ARN) of the IAM role to be used for this target when the rule is triggered. Required if ecs_target is used or target in arn is EC2 instance, Kinesis data stream, Step Functions state machine, or Event Bus in different account or region.'
            rule: '- (Required) The name of the rule you want to add targets to.'
            run_command_targets: '- (Optional) Parameters used when you are using the rule to invoke Amazon EC2 Run Command. Documented below. A maximum of 5 are allowed.'
            run_command_targets.key: '- (Required) Can be either tag:tag-key or InstanceIds.'
            run_command_targets.values: '- (Required) If Key is tag:tag-key, Values is a list of tag values. If Key is InstanceIds, Values is a list of Amazon EC2 instance IDs.'
            sqs_target: '- (Optional) Parameters used when you are using the rule to invoke an Amazon SQS Queue. Documented below. A maximum of 1 are allowed.'
            sqs_target.header_parameters: '- (Optional) Enables you to specify HTTP headers to add to the request.'
            sqs_target.message_group_id: '- (Optional) The FIFO message group ID to use as the target.'
            sqs_target.path_parameter_values: '- (Optional) The list of values that correspond sequentially to any path variables in your endpoint ARN (for example arn:aws:execute-api:us-east-1:123456:myapi/*/POST/pets/*).'
            sqs_target.query_string_parameters: '- (Optional) Represents keys/values of query string parameters that are appended to the invoked endpoint.'
            target_id: '- (Optional) The unique target assignment ID.  If missing, will generate a random, unique id.'
        importStatements: []
    aws_cloudwatch_log_destination:
        subCategory: CloudWatch Logs
        description: Provides a CloudWatch Logs destination.
        name: aws_cloudwatch_log_destination
        title: aws_cloudwatch_log_destination
        examples:
            - name: test_destination
              manifest: |-
                {
                  "name": "test_destination",
                  "role_arn": "${aws_iam_role.iam_for_cloudwatch.arn}",
                  "target_arn": "${aws_kinesis_stream.kinesis_for_cloudwatch.arn}"
                }
              references:
                role_arn: aws_iam_role.iam_for_cloudwatch.arn
                target_arn: aws_kinesis_stream.kinesis_for_cloudwatch.arn
        argumentDocs:
            arn: '- The Amazon Resource Name (ARN) specifying the log destination.'
            name: '- (Required) A name for the log destination'
            role_arn: '- (Required) The ARN of an IAM role that grants Amazon CloudWatch Logs permissions to put data into the target'
            target_arn: '- (Required) The ARN of the target Amazon Kinesis stream resource for the destination'
        importStatements: []
    aws_cloudwatch_log_destination_policy:
        subCategory: CloudWatch Logs
        description: Provides a CloudWatch Logs destination policy.
        name: aws_cloudwatch_log_destination_policy
        title: aws_cloudwatch_log_destination_policy
        examples:
            - name: test_destination_policy
              manifest: |-
                {
                  "access_policy": "${data.aws_iam_policy_document.test_destination_policy.json}",
                  "destination_name": "${aws_cloudwatch_log_destination.test_destination.name}"
                }
              references:
                access_policy: data.aws_iam_policy_document.test_destination_policy.json
                destination_name: aws_cloudwatch_log_destination.test_destination.name
              dependencies:
                aws_cloudwatch_log_destination.test_destination: |-
                    {
                      "name": "test_destination",
                      "role_arn": "${aws_iam_role.iam_for_cloudwatch.arn}",
                      "target_arn": "${aws_kinesis_stream.kinesis_for_cloudwatch.arn}"
                    }
        argumentDocs:
            access_policy: '- (Required) The policy document. This is a JSON formatted string.'
            destination_name: '- (Required) A name for the subscription filter'
            force_update: '- (Optional) Specify true if you are updating an existing destination policy to grant permission to an organization ID instead of granting permission to individual AWS accounts.'
        importStatements: []
    aws_cloudwatch_log_group:
        subCategory: CloudWatch Logs
        description: Provides a CloudWatch Log Group resource.
        name: aws_cloudwatch_log_group
        title: aws_cloudwatch_log_group
        examples:
            - name: yada
              manifest: |-
                {
                  "name": "Yada",
                  "tags": {
                    "Application": "serviceA",
                    "Environment": "production"
                  }
                }
        argumentDocs:
            arn: '- The Amazon Resource Name (ARN) specifying the log group. Any :* suffix added by the API, denoting all CloudWatch Log Streams under the CloudWatch Log Group, is removed for greater compatibility with other AWS services that do not accept the suffix.'
            kms_key_id: |-
                - (Optional) The ARN of the KMS Key to use when encrypting log data. Please note, after the AWS KMS CMK is disassociated from the log group,
                AWS CloudWatch Logs stops encrypting newly ingested data for the log group. All previously ingested data remains encrypted, and AWS CloudWatch Logs requires
                permissions for the CMK whenever the encrypted data is requested.
            name: '- (Optional, Forces new resource) The name of the log group. If omitted, Terraform will assign a random, unique name.'
            name_prefix: '- (Optional, Forces new resource) Creates a unique name beginning with the specified prefix. Conflicts with name.'
            retention_in_days: |-
                - (Optional) Specifies the number of days
                you want to retain log events in the specified log group.  Possible values are: 1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 3653, and 0.
                If you select 0, the events in the log group are always retained and never expire.
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_cloudwatch_log_metric_filter:
        subCategory: CloudWatch Logs
        description: Provides a CloudWatch Log Metric Filter resource.
        name: aws_cloudwatch_log_metric_filter
        title: aws_cloudwatch_log_metric_filter
        examples:
            - name: yada
              manifest: |-
                {
                  "log_group_name": "${aws_cloudwatch_log_group.dada.name}",
                  "metric_transformation": [
                    {
                      "name": "EventCount",
                      "namespace": "YourNamespace",
                      "value": "1"
                    }
                  ],
                  "name": "MyAppAccessCount",
                  "pattern": ""
                }
              references:
                log_group_name: aws_cloudwatch_log_group.dada.name
              dependencies:
                aws_cloudwatch_log_group.dada: |-
                    {
                      "name": "MyApp/access.log"
                    }
        argumentDocs:
            id: '- The name of the metric filter.'
            log_group_name: '- (Required) The name of the log group to associate the metric filter with.'
            metric_transformation: '- (Required) A block defining collection of information needed to define how metric data gets emitted. See below.'
            metric_transformation.default_value: '- (Optional) The value to emit when a filter pattern does not match a log event. Conflicts with dimensions.'
            metric_transformation.dimensions: '- (Optional) Map of fields to use as dimensions for the metric. Up to 3 dimensions are allowed. Conflicts with default_value.'
            metric_transformation.name: '- (Required) The name of the CloudWatch metric to which the monitored log information should be published (e.g., ErrorCount)'
            metric_transformation.namespace: '- (Required) The destination namespace of the CloudWatch metric.'
            metric_transformation.unit: '- (Optional) The unit to assign to the metric. If you omit this, the unit is set as None.'
            metric_transformation.value: '- (Required) What to publish to the metric. For example, if you''re counting the occurrences of a particular term like "Error", the value will be "1" for each occurrence. If you''re counting the bytes transferred the published value will be the value in the log event.'
            name: '- (Required) A name for the metric filter.'
            pattern: |-
                - (Required) A valid CloudWatch Logs filter pattern
                for extracting metric data out of ingested log events.
        importStatements: []
    aws_cloudwatch_log_resource_policy:
        subCategory: CloudWatch Logs
        description: Provides a resource to manage a CloudWatch log resource policy
        name: aws_cloudwatch_log_resource_policy
        title: aws_cloudwatch_log_resource_policy
        examples:
            - name: elasticsearch-log-publishing-policy
              manifest: |-
                {
                  "policy_document": "${data.aws_iam_policy_document.elasticsearch-log-publishing-policy.json}",
                  "policy_name": "elasticsearch-log-publishing-policy"
                }
              references:
                policy_document: data.aws_iam_policy_document.elasticsearch-log-publishing-policy.json
            - name: route53-query-logging-policy
              manifest: |-
                {
                  "policy_document": "${data.aws_iam_policy_document.route53-query-logging-policy.json}",
                  "policy_name": "route53-query-logging-policy"
                }
              references:
                policy_document: data.aws_iam_policy_document.route53-query-logging-policy.json
        argumentDocs:
            id: '- The name of the CloudWatch log resource policy'
            policy_document: '- (Required) Details of the resource policy, including the identity of the principal that is enabled to put logs to this account. This is formatted as a JSON string. Maximum length of 5120 characters.'
            policy_name: '- (Required) Name of the resource policy.'
        importStatements: []
    aws_cloudwatch_log_stream:
        subCategory: CloudWatch Logs
        description: Provides a CloudWatch Log Stream resource.
        name: aws_cloudwatch_log_stream
        title: aws_cloudwatch_log_stream
        examples:
            - name: foo
              manifest: |-
                {
                  "log_group_name": "${aws_cloudwatch_log_group.yada.name}",
                  "name": "SampleLogStream1234"
                }
              references:
                log_group_name: aws_cloudwatch_log_group.yada.name
              dependencies:
                aws_cloudwatch_log_group.yada: |-
                    {
                      "name": "Yada"
                    }
        argumentDocs:
            arn: '- The Amazon Resource Name (ARN) specifying the log stream.'
            log_group_name: '- (Required) The name of the log group under which the log stream is to be created.'
            name: '- (Required) The name of the log stream. Must not be longer than 512 characters and must not contain :'
        importStatements: []
    aws_cloudwatch_log_subscription_filter:
        subCategory: CloudWatch Logs
        description: Provides a CloudWatch Logs subscription filter.
        name: aws_cloudwatch_log_subscription_filter
        title: aws_cloudwatch_log_subscription_filter
        examples:
            - name: test_lambdafunction_logfilter
              manifest: |-
                {
                  "destination_arn": "${aws_kinesis_stream.test_logstream.arn}",
                  "distribution": "Random",
                  "filter_pattern": "logtype test",
                  "log_group_name": "/aws/lambda/example_lambda_name",
                  "name": "test_lambdafunction_logfilter",
                  "role_arn": "${aws_iam_role.iam_for_lambda.arn}"
                }
              references:
                destination_arn: aws_kinesis_stream.test_logstream.arn
                role_arn: aws_iam_role.iam_for_lambda.arn
        argumentDocs:
            destination_arn: '- (Required) The ARN of the destination to deliver matching log events to. Kinesis stream or Lambda function ARN.'
            distribution: '- (Optional) The method used to distribute log data to the destination. By default log data is grouped by log stream, but the grouping can be set to random for a more even distribution. This property is only applicable when the destination is an Amazon Kinesis stream. Valid values are "Random" and "ByLogStream".'
            filter_pattern: '- (Required) A valid CloudWatch Logs filter pattern for subscribing to a filtered stream of log events.'
            log_group_name: '- (Required) The name of the log group to associate the subscription filter with'
            name: '- (Required) A name for the subscription filter'
            role_arn: '- (Optional) The ARN of an IAM role that grants Amazon CloudWatch Logs permissions to deliver ingested log events to the destination. If you use Lambda as a destination, you should skip this argument and use aws_lambda_permission resource for granting access from CloudWatch logs to the destination Lambda function.'
        importStatements: []
    aws_cloudwatch_metric_alarm:
        subCategory: CloudWatch
        description: Provides a CloudWatch Metric Alarm resource.
        name: aws_cloudwatch_metric_alarm
        title: aws_cloudwatch_metric_alarm
        examples:
            - name: foobar
              manifest: |-
                {
                  "alarm_description": "This metric monitors ec2 cpu utilization",
                  "alarm_name": "terraform-test-foobar5",
                  "comparison_operator": "GreaterThanOrEqualToThreshold",
                  "evaluation_periods": "2",
                  "insufficient_data_actions": [],
                  "metric_name": "CPUUtilization",
                  "namespace": "AWS/EC2",
                  "period": "120",
                  "statistic": "Average",
                  "threshold": "80"
                }
            - name: bat
              manifest: |-
                {
                  "alarm_actions": [
                    "${aws_autoscaling_policy.bat.arn}"
                  ],
                  "alarm_description": "This metric monitors ec2 cpu utilization",
                  "alarm_name": "terraform-test-foobar5",
                  "comparison_operator": "GreaterThanOrEqualToThreshold",
                  "dimensions": {
                    "AutoScalingGroupName": "${aws_autoscaling_group.bar.name}"
                  },
                  "evaluation_periods": "2",
                  "metric_name": "CPUUtilization",
                  "namespace": "AWS/EC2",
                  "period": "120",
                  "statistic": "Average",
                  "threshold": "80"
                }
              dependencies:
                aws_autoscaling_policy.bat: |-
                    {
                      "adjustment_type": "ChangeInCapacity",
                      "autoscaling_group_name": "${aws_autoscaling_group.bar.name}",
                      "cooldown": 300,
                      "name": "foobar3-terraform-test",
                      "scaling_adjustment": 4
                    }
            - name: foobar
              manifest: |-
                {
                  "alarm_description": "Request error rate has exceeded 10%",
                  "alarm_name": "terraform-test-foobar",
                  "comparison_operator": "GreaterThanOrEqualToThreshold",
                  "evaluation_periods": "2",
                  "insufficient_data_actions": [],
                  "metric_query": [
                    {
                      "expression": "m2/m1*100",
                      "id": "e1",
                      "label": "Error Rate",
                      "return_data": "true"
                    },
                    {
                      "id": "m1",
                      "metric": [
                        {
                          "dimensions": {
                            "LoadBalancer": "app/web"
                          },
                          "metric_name": "RequestCount",
                          "namespace": "AWS/ApplicationELB",
                          "period": "120",
                          "stat": "Sum",
                          "unit": "Count"
                        }
                      ]
                    },
                    {
                      "id": "m2",
                      "metric": [
                        {
                          "dimensions": {
                            "LoadBalancer": "app/web"
                          },
                          "metric_name": "HTTPCode_ELB_5XX_Count",
                          "namespace": "AWS/ApplicationELB",
                          "period": "120",
                          "stat": "Sum",
                          "unit": "Count"
                        }
                      ]
                    }
                  ],
                  "threshold": "10"
                }
            - name: xx_anomaly_detection
              manifest: |-
                {
                  "alarm_description": "This metric monitors ec2 cpu utilization",
                  "alarm_name": "terraform-test-foobar",
                  "comparison_operator": "GreaterThanUpperThreshold",
                  "evaluation_periods": "2",
                  "insufficient_data_actions": [],
                  "metric_query": [
                    {
                      "expression": "ANOMALY_DETECTION_BAND(m1)",
                      "id": "e1",
                      "label": "CPUUtilization (Expected)",
                      "return_data": "true"
                    },
                    {
                      "id": "m1",
                      "metric": [
                        {
                          "dimensions": {
                            "InstanceId": "i-abc123"
                          },
                          "metric_name": "CPUUtilization",
                          "namespace": "AWS/EC2",
                          "period": "120",
                          "stat": "Average",
                          "unit": "Count"
                        }
                      ],
                      "return_data": "true"
                    }
                  ],
                  "threshold_metric_id": "e1"
                }
            - name: nlb_healthyhosts
              manifest: |-
                {
                  "actions_enabled": "true",
                  "alarm_actions": [
                    "${aws_sns_topic.sns.arn}"
                  ],
                  "alarm_description": "Number of healthy nodes in Target Group",
                  "alarm_name": "alarmname",
                  "comparison_operator": "LessThanThreshold",
                  "dimensions": {
                    "LoadBalancer": "${aws_lb.lb.arn_suffix}",
                    "TargetGroup": "${aws_lb_target_group.lb-tg.arn_suffix}"
                  },
                  "evaluation_periods": "1",
                  "metric_name": "HealthyHostCount",
                  "namespace": "AWS/NetworkELB",
                  "ok_actions": [
                    "${aws_sns_topic.sns.arn}"
                  ],
                  "period": "60",
                  "statistic": "Average",
                  "threshold": "${var.logstash_servers_count}"
                }
              references:
                threshold: var.logstash_servers_count
        argumentDocs:
            actions_enabled: '- (Optional) Indicates whether or not actions should be executed during any changes to the alarm''s state. Defaults to true.'
            alarm_actions: '- (Optional) The list of actions to execute when this alarm transitions into an ALARM state from any other state. Each action is specified as an Amazon Resource Name (ARN).'
            alarm_description: '- (Optional) The description for the alarm.'
            alarm_name: '- (Required) The descriptive name for the alarm. This name must be unique within the user''s AWS account'
            arn: '- The ARN of the CloudWatch Metric Alarm.'
            comparison_operator: '- (Required) The arithmetic operation to use when comparing the specified Statistic and Threshold. The specified Statistic value is used as the first operand. Either of the following is supported: GreaterThanOrEqualToThreshold, GreaterThanThreshold, LessThanThreshold, LessThanOrEqualToThreshold. Additionally, the values  LessThanLowerOrGreaterThanUpperThreshold, LessThanLowerThreshold, and GreaterThanUpperThreshold are used only for alarms based on anomaly detection models.'
            datapoints_to_alarm: '- (Optional) The number of datapoints that must be breaching to trigger the alarm.'
            dimensions: '- (Optional) The dimensions for the alarm''s associated metric.  For the list of available dimensions see the AWS documentation here.'
            evaluate_low_sample_count_percentiles: |-
                - (Optional) Used only for alarms
                based on percentiles. If you specify ignore, the alarm state will not
                change during periods with too few data points to be statistically significant.
                If you specify evaluate or omit this parameter, the alarm will always be
                evaluated and possibly change state no matter how many data points are available.
                The following values are supported: ignore, and evaluate.
            evaluation_periods: '- (Required) The number of periods over which data is compared to the specified threshold.'
            extended_statistic: '- (Optional) The percentile statistic for the metric associated with the alarm. Specify a value between p0.0 and p100.'
            id: '- The ID of the health check.'
            insufficient_data_actions: '- (Optional) The list of actions to execute when this alarm transitions into an INSUFFICIENT_DATA state from any other state. Each action is specified as an Amazon Resource Name (ARN).'
            metric_name: |-
                - (Optional) The name for the alarm's associated metric.
                See docs for supported metrics.
            metric_query: (Optional) Enables you to create an alarm based on a metric math expression. You may specify at most 20.
            metric_query.account_id: '- (Optional) The ID of the account where the metrics are located, if this is a cross-account alarm.'
            metric_query.expression: '- (Optional) The math expression to be performed on the returned data, if this object is performing a math expression. This expression can use the id of the other metrics to refer to those metrics, and can also use the id of other expressions to use the result of those expressions. For more information about metric math expressions, see Metric Math Syntax and Functions in the Amazon CloudWatch User Guide.'
            metric_query.id: '- (Required) A short name used to tie this object to the results in the response. If you are performing math expressions on this set of data, this name represents that data and can serve as a variable in the mathematical expression. The valid characters are letters, numbers, and underscore. The first character must be a lowercase letter.'
            metric_query.label: '- (Optional) A human-readable label for this metric or expression. This is especially useful if this is an expression, so that you know what the value represents.'
            metric_query.metric: (Optional) The metric to be returned, along with statistics, period, and units. Use this parameter only if this object is retrieving a metric and not performing a math expression on returned data.
            metric_query.metric.dimensions: '- (Optional) The dimensions for this metric.  For the list of available dimensions see the AWS documentation here.'
            metric_query.metric.metric_name: |-
                - (Required) The name for this metric.
                See docs for supported metrics.
            metric_query.metric.namespace: |-
                - (Required) The namespace for this metric. See docs for the list of namespaces.
                See docs for supported metrics.
            metric_query.metric.period: '- (Required) The period in seconds over which the specified stat is applied.'
            metric_query.metric.stat: |-
                - (Required) The statistic to apply to this metric.
                See docs for supported statistics.
            metric_query.metric.unit: '- (Optional) The unit for this metric.'
            metric_query.return_data: (Optional) Specify exactly one metric_query to be true to use that metric_query result as the alarm.
            namespace: |-
                - (Optional) The namespace for the alarm's associated metric. See docs for the list of namespaces.
                See docs for supported metrics.
            ok_actions: '- (Optional) The list of actions to execute when this alarm transitions into an OK state from any other state. Each action is specified as an Amazon Resource Name (ARN).'
            period: '- (Optional) The period in seconds over which the specified statistic is applied.'
            statistic: |-
                - (Optional) The statistic to apply to the alarm's associated metric.
                Either of the following is supported: SampleCount, Average, Sum, Minimum, Maximum
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            threshold: '- (Optional) The value against which the specified statistic is compared. This parameter is required for alarms based on static thresholds, but should not be used for alarms based on anomaly detection models.'
            threshold_metric_id: '- (Optional) If this is an alarm based on an anomaly detection model, make this value match the ID of the ANOMALY_DETECTION_BAND function.'
            treat_missing_data: '- (Optional) Sets how this alarm is to handle missing data points. The following values are supported: missing, ignore, breaching and notBreaching. Defaults to missing.'
            unit: '- (Optional) The unit for the alarm''s associated metric.'
        importStatements: []
    aws_cloudwatch_metric_stream:
        subCategory: CloudWatch
        description: Provides a CloudWatch Metric Stream resource.
        name: aws_cloudwatch_metric_stream
        title: aws_cloudwatch_metric_stream
        examples:
            - name: main
              manifest: |-
                {
                  "firehose_arn": "${aws_kinesis_firehose_delivery_stream.s3_stream.arn}",
                  "include_filter": [
                    {
                      "namespace": "AWS/EC2"
                    },
                    {
                      "namespace": "AWS/EBS"
                    }
                  ],
                  "name": "my-metric-stream",
                  "output_format": "json",
                  "role_arn": "${aws_iam_role.metric_stream_to_firehose.arn}"
                }
              references:
                firehose_arn: aws_kinesis_firehose_delivery_stream.s3_stream.arn
                role_arn: aws_iam_role.metric_stream_to_firehose.arn
              dependencies:
                aws_iam_role.firehose_to_s3: |-
                    {
                      "assume_role_policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"firehose.amazonaws.com\"\n      },\n      \"Effect\": \"Allow\",\n      \"Sid\": \"\"\n    }\n  ]\n}\n"
                    }
                aws_iam_role.metric_stream_to_firehose: |-
                    {
                      "assume_role_policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"streams.metrics.cloudwatch.amazonaws.com\"\n      },\n      \"Effect\": \"Allow\",\n      \"Sid\": \"\"\n    }\n  ]\n}\n",
                      "name": "metric_stream_to_firehose_role"
                    }
                aws_iam_role_policy.firehose_to_s3: |-
                    {
                      "name": "default",
                      "policy": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"s3:AbortMultipartUpload\",\n                \"s3:GetBucketLocation\",\n                \"s3:GetObject\",\n                \"s3:ListBucket\",\n                \"s3:ListBucketMultipartUploads\",\n                \"s3:PutObject\"\n            ],\n            \"Resource\": [\n                \"${aws_s3_bucket.bucket.arn}\",\n                \"${aws_s3_bucket.bucket.arn}/*\"\n            ]\n        }\n    ]\n}\n",
                      "role": "${aws_iam_role.firehose_to_s3.id}"
                    }
                aws_iam_role_policy.metric_stream_to_firehose: |-
                    {
                      "name": "default",
                      "policy": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"firehose:PutRecord\",\n                \"firehose:PutRecordBatch\"\n            ],\n            \"Resource\": \"${aws_kinesis_firehose_delivery_stream.s3_stream.arn}\"\n        }\n    ]\n}\n",
                      "role": "${aws_iam_role.metric_stream_to_firehose.id}"
                    }
                aws_kinesis_firehose_delivery_stream.s3_stream: |-
                    {
                      "destination": "s3",
                      "name": "metric-stream-test-stream",
                      "s3_configuration": [
                        {
                          "bucket_arn": "${aws_s3_bucket.bucket.arn}",
                          "role_arn": "${aws_iam_role.firehose_to_s3.arn}"
                        }
                      ]
                    }
                aws_s3_bucket.bucket: |-
                    {
                      "bucket": "metric-stream-test-bucket"
                    }
                aws_s3_bucket_acl.bucket_acl: |-
                    {
                      "acl": "private",
                      "bucket": "${aws_s3_bucket.bucket.id}"
                    }
            - name: main
              manifest: |-
                {
                  "firehose_arn": "${aws_kinesis_firehose_delivery_stream.s3_stream.arn}",
                  "name": "my-metric-stream",
                  "output_format": "json",
                  "role_arn": "${aws_iam_role.metric_stream_to_firehose.arn}",
                  "statistics_configuration": [
                    {
                      "additional_statistics": [
                        "p1",
                        "tm99"
                      ],
                      "include_metric": [
                        {
                          "metric_name": "CPUUtilization",
                          "namespace": "AWS/EC2"
                        }
                      ]
                    },
                    {
                      "additional_statistics": [
                        "TS(50.5:)"
                      ],
                      "include_metric": [
                        {
                          "metric_name": "CPUUtilization",
                          "namespace": "AWS/EC2"
                        }
                      ]
                    }
                  ]
                }
              references:
                firehose_arn: aws_kinesis_firehose_delivery_stream.s3_stream.arn
                role_arn: aws_iam_role.metric_stream_to_firehose.arn
        argumentDocs:
            additional_statistics: '- (Required) The additional statistics to stream for the metrics listed in include_metrics.'
            arn: '- ARN of the metric stream.'
            creation_date: '- Date and time in RFC3339 format that the metric stream was created.'
            exclude_filter: '- (Optional) List of exclusive metric filters. If you specify this parameter, the stream sends metrics from all metric namespaces except for the namespaces that you specify here. Conflicts with include_filter.'
            exclude_filter.namespace: '- (Required) Name of the metric namespace in the filter.'
            firehose_arn: '- (Required) ARN of the Amazon Kinesis Firehose delivery stream to use for this metric stream.'
            include_filter: '- (Optional) List of inclusive metric filters. If you specify this parameter, the stream sends only the metrics from the metric namespaces that you specify here. Conflicts with exclude_filter.'
            include_filter.namespace: '- (Required) Name of the metric namespace in the filter.'
            include_metric: '- (Required) An array that defines the metrics that are to have additional statistics streamed. See details below.'
            last_update_date: '- Date and time in RFC3339 format that the metric stream was last updated.'
            metric_name: '- (Required) The name of the metric.'
            name: '- (Optional, Forces new resource) Friendly name of the metric stream. If omitted, Terraform will assign a random, unique name. Conflicts with name_prefix.'
            name_prefix: '- (Optional, Forces new resource) Creates a unique friendly name beginning with the specified prefix. Conflicts with name.'
            namespace: '- (Required) The namespace of the metric.'
            output_format: '- (Required) Output format for the stream. Possible values are json and opentelemetry0.7. For more information about output formats, see Metric streams output formats.'
            role_arn: '- (Required) ARN of the IAM role that this metric stream will use to access Amazon Kinesis Firehose resources. For more information about role permissions, see Trust between CloudWatch and Kinesis Data Firehose.'
            state: '- State of the metric stream. Possible values are running and stopped.'
            statistics_configuration: '- (Optional) For each entry in this array, you specify one or more metrics and the list of additional statistics to stream for those metrics. The additional statistics that you can stream depend on the stream''s output_format. If the OutputFormat is json, you can stream any additional statistic that is supported by CloudWatch, listed in CloudWatch statistics definitions. If the OutputFormat is opentelemetry0.7, you can stream percentile statistics (p99 etc.). See details below.'
            tags: '- (Optional) Map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_cloudwatch_query_definition:
        subCategory: CloudWatch Logs
        description: Provides a CloudWatch Logs query definition resource.
        name: aws_cloudwatch_query_definition
        title: aws_cloudwatch_query_definition
        examples:
            - name: example
              manifest: |-
                {
                  "log_group_names": [
                    "/aws/logGroup1",
                    "/aws/logGroup2"
                  ],
                  "name": "custom_query",
                  "query_string": "fields @timestamp, @message\n| sort @timestamp desc\n| limit 25\n"
                }
        argumentDocs:
            log_group_names: '- (Optional) Specific log groups to use with the query.'
            name: '- (Required) The name of the query.'
            query_definition_id: '- The query definition ID.'
            query_string: '- (Required) The query to save. You can read more about CloudWatch Logs Query Syntax in the documentation.'
        importStatements: []
    aws_codeartifact_domain:
        subCategory: CodeArtifact
        description: Provides a CodeArtifact Domain resource.
        name: aws_codeartifact_domain
        title: aws_codeartifact_domain
        examples:
            - name: example
              manifest: |-
                {
                  "domain": "example"
                }
        argumentDocs:
            arn: '- The ARN of the Domain.'
            asset_size_bytes: '- The total size of all assets in the domain.'
            created_time: '- A timestamp that represents the date and time the domain was created in RFC3339 format.'
            domain: '- (Required) The name of the domain to create. All domain names in an AWS Region that are in the same AWS account must be unique. The domain name is used as the prefix in DNS hostnames. Do not use sensitive information in a domain name because it is publicly discoverable.'
            encryption_key: '- (Optional) The encryption key for the domain. This is used to encrypt content stored in a domain. The KMS Key Amazon Resource Name (ARN). The default aws/codeartifact AWS KMS master key is used if this element is absent.'
            id: '- The ARN of the Domain.'
            owner: '- The AWS account ID that owns the domain.'
            repository_count: '- The number of repositories in the domain.'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_codeartifact_domain_permissions_policy:
        subCategory: CodeArtifact
        description: Provides a CodeArtifact Domain Permissions Policy resource.
        name: aws_codeartifact_domain_permissions_policy
        title: aws_codeartifact_domain_permissions_policy
        examples:
            - name: test
              manifest: |-
                {
                  "domain": "${aws_codeartifact_domain.example.domain}",
                  "policy_document": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Action\": \"codeartifact:CreateRepository\",\n            \"Effect\": \"Allow\",\n            \"Principal\": \"*\",\n            \"Resource\": \"${aws_codeartifact_domain.example.arn}\"\n        }\n    ]\n}\n"
                }
              references:
                domain: aws_codeartifact_domain.example.domain
              dependencies:
                aws_codeartifact_domain.example: |-
                    {
                      "domain": "example",
                      "encryption_key": "${aws_kms_key.example.arn}"
                    }
                aws_kms_key.example: |-
                    {
                      "description": "domain key"
                    }
        argumentDocs:
            domain: '- (Required) The name of the domain on which to set the resource policy.'
            domain_owner: '- (Optional) The account number of the AWS account that owns the domain.'
            id: '- The Name of Domain.'
            policy_document: '- (Required) A JSON policy string to be set as the access control resource policy on the provided domain.'
            policy_revision: '- (Optional) The current revision of the resource policy to be set. This revision is used for optimistic locking, which prevents others from overwriting your changes to the domain''s resource policy.'
            resource_arn: '- The ARN of the resource associated with the resource policy.'
        importStatements: []
    aws_codeartifact_repository:
        subCategory: CodeArtifact
        description: Provides a CodeArtifact Repository resource.
        name: aws_codeartifact_repository
        title: aws_codeartifact_repository
        examples:
            - name: test
              manifest: |-
                {
                  "domain": "${aws_codeartifact_domain.example.domain}",
                  "repository": "example"
                }
              references:
                domain: aws_codeartifact_domain.example.domain
              dependencies:
                aws_codeartifact_domain.example: |-
                    {
                      "domain": "example",
                      "encryption_key": "${aws_kms_key.example.arn}"
                    }
                aws_kms_key.example: |-
                    {
                      "description": "domain key"
                    }
            - name: upstream
              manifest: |-
                {
                  "domain": "${aws_codeartifact_domain.test.domain}",
                  "repository": "upstream"
                }
              references:
                domain: aws_codeartifact_domain.test.domain
            - name: test
              manifest: |-
                {
                  "domain": "${aws_codeartifact_domain.example.domain}",
                  "repository": "example",
                  "upstream": [
                    {
                      "repository_name": "${aws_codeartifact_repository.upstream.repository}"
                    }
                  ]
                }
              references:
                domain: aws_codeartifact_domain.example.domain
                upstream.repository_name: aws_codeartifact_repository.upstream.repository
            - name: upstream
              manifest: |-
                {
                  "domain": "${aws_codeartifact_domain.test.domain}",
                  "repository": "upstream"
                }
              references:
                domain: aws_codeartifact_domain.test.domain
            - name: test
              manifest: |-
                {
                  "domain": "${aws_codeartifact_domain.example.domain}",
                  "external_connections": [
                    {
                      "external_connection_name": "public:npmjs"
                    }
                  ],
                  "repository": "example"
                }
              references:
                domain: aws_codeartifact_domain.example.domain
        argumentDocs:
            administrator_account: '- The account number of the AWS account that manages the repository.'
            arn: '- The ARN of the repository.'
            description: '- (Optional) The description of the repository.'
            domain: '- (Required) The domain that contains the created repository.'
            domain_owner: '- (Optional) The account number of the AWS account that owns the domain.'
            external_connection_name: '- (Required) The name of the external connection associated with a repository.'
            external_connections: '- An array of external connections associated with the repository. Only one external connection can be set per repository. see External Connections.'
            id: '- The ARN of the repository.'
            repository: '- (Required) The name of the repository to create.'
            repository_name: '- (Required) The name of an upstream repository.'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            upstream: '- (Optional) A list of upstream repositories to associate with the repository. The order of the upstream repositories in the list determines their priority order when AWS CodeArtifact looks for a requested package version. see Upstream'
        importStatements: []
    aws_codeartifact_repository_permissions_policy:
        subCategory: CodeArtifact
        description: Provides a CodeArtifact Repository Permissions Policy resource.
        name: aws_codeartifact_repository_permissions_policy
        title: aws_codeartifact_repository_permissions_policy
        examples:
            - name: example
              manifest: |-
                {
                  "domain": "${aws_codeartifact_domain.example.domain}",
                  "policy_document": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Action\": \"codeartifact:CreateRepository\",\n            \"Effect\": \"Allow\",\n            \"Principal\": \"*\",\n            \"Resource\": \"${aws_codeartifact_domain.example.arn}\"\n        }\n    ]\n}\n",
                  "repository": "${aws_codeartifact_repository.example.repository}"
                }
              references:
                domain: aws_codeartifact_domain.example.domain
                repository: aws_codeartifact_repository.example.repository
              dependencies:
                aws_codeartifact_domain.example: |-
                    {
                      "domain": "example",
                      "encryption_key": "${aws_kms_key.example.arn}"
                    }
                aws_codeartifact_repository.example: |-
                    {
                      "domain": "${aws_codeartifact_domain.example.domain}",
                      "repository": "example"
                    }
                aws_kms_key.example: |-
                    {
                      "description": "domain key"
                    }
        argumentDocs:
            domain: '- (Required) The name of the domain on which to set the resource policy.'
            domain_owner: '- (Optional) The account number of the AWS account that owns the domain.'
            id: '- The ARN of the resource associated with the resource policy.'
            policy_document: '- (Required) A JSON policy string to be set as the access control resource policy on the provided domain.'
            policy_revision: '- (Optional) The current revision of the resource policy to be set. This revision is used for optimistic locking, which prevents others from overwriting your changes to the domain''s resource policy.'
            repository: '- (Required) The name of the repository to set the resource policy on.'
            resource_arn: '- The ARN of the resource associated with the resource policy.'
        importStatements: []
    aws_codebuild_project:
        subCategory: CodeBuild
        description: Provides a CodeBuild Project resource.
        name: aws_codebuild_project
        title: aws_codebuild_project
        examples:
            - name: example
              manifest: |-
                {
                  "artifacts": [
                    {
                      "type": "NO_ARTIFACTS"
                    }
                  ],
                  "build_timeout": "5",
                  "cache": [
                    {
                      "location": "${aws_s3_bucket.example.bucket}",
                      "type": "S3"
                    }
                  ],
                  "description": "test_codebuild_project",
                  "environment": [
                    {
                      "compute_type": "BUILD_GENERAL1_SMALL",
                      "environment_variable": [
                        {
                          "name": "SOME_KEY1",
                          "value": "SOME_VALUE1"
                        },
                        {
                          "name": "SOME_KEY2",
                          "type": "PARAMETER_STORE",
                          "value": "SOME_VALUE2"
                        }
                      ],
                      "image": "aws/codebuild/standard:1.0",
                      "image_pull_credentials_type": "CODEBUILD",
                      "type": "LINUX_CONTAINER"
                    }
                  ],
                  "logs_config": [
                    {
                      "cloudwatch_logs": [
                        {
                          "group_name": "log-group",
                          "stream_name": "log-stream"
                        }
                      ],
                      "s3_logs": [
                        {
                          "location": "${aws_s3_bucket.example.id}/build-log",
                          "status": "ENABLED"
                        }
                      ]
                    }
                  ],
                  "name": "test-project",
                  "service_role": "${aws_iam_role.example.arn}",
                  "source": [
                    {
                      "git_clone_depth": 1,
                      "git_submodules_config": [
                        {
                          "fetch_submodules": true
                        }
                      ],
                      "location": "https://github.com/mitchellh/packer.git",
                      "type": "GITHUB"
                    }
                  ],
                  "source_version": "master",
                  "tags": {
                    "Environment": "Test"
                  },
                  "vpc_config": [
                    {
                      "security_group_ids": [
                        "${aws_security_group.example1.id}",
                        "${aws_security_group.example2.id}"
                      ],
                      "subnets": [
                        "${aws_subnet.example1.id}",
                        "${aws_subnet.example2.id}"
                      ],
                      "vpc_id": "${aws_vpc.example.id}"
                    }
                  ]
                }
              references:
                cache.location: aws_s3_bucket.example.bucket
                service_role: aws_iam_role.example.arn
                vpc_config.vpc_id: aws_vpc.example.id
              dependencies:
                aws_iam_role.example: |-
                    {
                      "assume_role_policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Principal\": {\n        \"Service\": \"codebuild.amazonaws.com\"\n      },\n      \"Action\": \"sts:AssumeRole\"\n    }\n  ]\n}\n",
                      "name": "example"
                    }
                aws_iam_role_policy.example: |-
                    {
                      "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Resource\": [\n        \"*\"\n      ],\n      \"Action\": [\n        \"logs:CreateLogGroup\",\n        \"logs:CreateLogStream\",\n        \"logs:PutLogEvents\"\n      ]\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:CreateNetworkInterface\",\n        \"ec2:DescribeDhcpOptions\",\n        \"ec2:DescribeNetworkInterfaces\",\n        \"ec2:DeleteNetworkInterface\",\n        \"ec2:DescribeSubnets\",\n        \"ec2:DescribeSecurityGroups\",\n        \"ec2:DescribeVpcs\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:CreateNetworkInterfacePermission\"\n      ],\n      \"Resource\": [\n        \"arn:aws:ec2:us-east-1:123456789012:network-interface/*\"\n      ],\n      \"Condition\": {\n        \"StringEquals\": {\n          \"ec2:Subnet\": [\n            \"${aws_subnet.example1.arn}\",\n            \"${aws_subnet.example2.arn}\"\n          ],\n          \"ec2:AuthorizedService\": \"codebuild.amazonaws.com\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"s3:*\"\n      ],\n      \"Resource\": [\n        \"${aws_s3_bucket.example.arn}\",\n        \"${aws_s3_bucket.example.arn}/*\"\n      ]\n    }\n  ]\n}\n",
                      "role": "${aws_iam_role.example.name}"
                    }
                aws_s3_bucket.example: |-
                    {
                      "bucket": "example"
                    }
                aws_s3_bucket_acl.example: |-
                    {
                      "acl": "private",
                      "bucket": "${aws_s3_bucket.example.id}"
                    }
            - name: project-with-cache
              manifest: |-
                {
                  "artifacts": [
                    {
                      "type": "NO_ARTIFACTS"
                    }
                  ],
                  "build_timeout": "5",
                  "cache": [
                    {
                      "modes": [
                        "LOCAL_DOCKER_LAYER_CACHE",
                        "LOCAL_SOURCE_CACHE"
                      ],
                      "type": "LOCAL"
                    }
                  ],
                  "description": "test_codebuild_project_cache",
                  "environment": [
                    {
                      "compute_type": "BUILD_GENERAL1_SMALL",
                      "environment_variable": [
                        {
                          "name": "SOME_KEY1",
                          "value": "SOME_VALUE1"
                        }
                      ],
                      "image": "aws/codebuild/standard:1.0",
                      "image_pull_credentials_type": "CODEBUILD",
                      "type": "LINUX_CONTAINER"
                    }
                  ],
                  "name": "test-project-cache",
                  "queued_timeout": "5",
                  "service_role": "${aws_iam_role.example.arn}",
                  "source": [
                    {
                      "git_clone_depth": 1,
                      "location": "https://github.com/mitchellh/packer.git",
                      "type": "GITHUB"
                    }
                  ],
                  "tags": {
                    "Environment": "Test"
                  }
                }
              references:
                service_role: aws_iam_role.example.arn
              dependencies:
                aws_iam_role.example: |-
                    {
                      "assume_role_policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Principal\": {\n        \"Service\": \"codebuild.amazonaws.com\"\n      },\n      \"Action\": \"sts:AssumeRole\"\n    }\n  ]\n}\n",
                      "name": "example"
                    }
                aws_iam_role_policy.example: |-
                    {
                      "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Resource\": [\n        \"*\"\n      ],\n      \"Action\": [\n        \"logs:CreateLogGroup\",\n        \"logs:CreateLogStream\",\n        \"logs:PutLogEvents\"\n      ]\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:CreateNetworkInterface\",\n        \"ec2:DescribeDhcpOptions\",\n        \"ec2:DescribeNetworkInterfaces\",\n        \"ec2:DeleteNetworkInterface\",\n        \"ec2:DescribeSubnets\",\n        \"ec2:DescribeSecurityGroups\",\n        \"ec2:DescribeVpcs\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:CreateNetworkInterfacePermission\"\n      ],\n      \"Resource\": [\n        \"arn:aws:ec2:us-east-1:123456789012:network-interface/*\"\n      ],\n      \"Condition\": {\n        \"StringEquals\": {\n          \"ec2:Subnet\": [\n            \"${aws_subnet.example1.arn}\",\n            \"${aws_subnet.example2.arn}\"\n          ],\n          \"ec2:AuthorizedService\": \"codebuild.amazonaws.com\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"s3:*\"\n      ],\n      \"Resource\": [\n        \"${aws_s3_bucket.example.arn}\",\n        \"${aws_s3_bucket.example.arn}/*\"\n      ]\n    }\n  ]\n}\n",
                      "role": "${aws_iam_role.example.name}"
                    }
                aws_s3_bucket.example: |-
                    {
                      "bucket": "example"
                    }
                aws_s3_bucket_acl.example: |-
                    {
                      "acl": "private",
                      "bucket": "${aws_s3_bucket.example.id}"
                    }
        argumentDocs:
            arn: '- ARN of the CodeBuild project.'
            artifacts: '- (Required) Configuration block. Detailed below.'
            artifacts.artifact_identifier: '- (Optional) Artifact identifier. Must be the same specified inside the AWS CodeBuild build specification.'
            artifacts.bucket_owner_access: '- (Optional) Specifies the bucket owner''s access for objects that another account uploads to their Amazon S3 bucket. By default, only the account that uploads the objects to the bucket has access to these objects. This property allows you to give the bucket owner access to these objects. Valid values are NONE, READ_ONLY, and FULL. your CodeBuild service role must have the s3:PutBucketAcl permission. This permission allows CodeBuild to modify the access control list for the bucket.'
            artifacts.encryption_disabled: '- (Optional) Whether to disable encrypting output artifacts. If type is set to NO_ARTIFACTS, this value is ignored. Defaults to false.'
            artifacts.location: '- (Optional) Information about the build output artifact location. If type is set to CODEPIPELINE or NO_ARTIFACTS, this value is ignored. If type is set to S3, this is the name of the output bucket.'
            artifacts.name: '- (Optional) Name of the project. If type is set to S3, this is the name of the output artifact object'
            artifacts.namespace_type: '- (Optional) Namespace to use in storing build artifacts. If type is set to S3, then valid values are BUILD_ID, NONE.'
            artifacts.override_artifact_name: (Optional) Whether a name specified in the build specification overrides the artifact name.
            artifacts.packaging: '- (Optional) Type of build output artifact to create. If type is set to S3, valid values are NONE, ZIP'
            artifacts.path: '- (Optional) If type is set to S3, this is the path to the output artifact.'
            artifacts.type: '- (Required) Build output artifact''s type. Valid values: CODEPIPELINE, NO_ARTIFACTS, S3.'
            badge_enabled: '- (Optional) Generates a publicly-accessible URL for the projects build badge. Available as badge_url attribute when enabled.'
            badge_url: '- URL of the build badge when badge_enabled is enabled.'
            bucket_owner_access: '- (Optional) Specifies the bucket owner''s access for objects that another account uploads to their Amazon S3 bucket. By default, only the account that uploads the objects to the bucket has access to these objects. This property allows you to give the bucket owner access to these objects. Valid values are NONE, READ_ONLY, and FULL. your CodeBuild service role must have the s3:PutBucketAcl permission. This permission allows CodeBuild to modify the access control list for the bucket.'
            build_batch_config: '- (Optional) Defines the batch build options for the project.'
            build_batch_config.combine_artifacts: '- (Optional) Specifies if the build artifacts for the batch build should be combined into a single artifact location.'
            build_batch_config.restrictions: '- (Optional) Specifies the restrictions for the batch build.'
            build_batch_config.restrictions.compute_types_allowed: '- (Optional) An array of strings that specify the compute types that are allowed for the batch build. See Build environment compute types in the AWS CodeBuild User Guide for these values.'
            build_batch_config.restrictions.maximum_builds_allowed: '- (Optional) Specifies the maximum number of builds allowed.'
            build_batch_config.service_role: '- (Required) Specifies the service role ARN for the batch build project.'
            build_batch_config.timeout_in_mins: '- (Optional) Specifies the maximum amount of time, in minutes, that the batch build must be completed in.'
            build_timeout: '- (Optional) Number of minutes, from 5 to 480 (8 hours), for AWS CodeBuild to wait until timing out any related build that does not get marked as completed. The default is 60 minutes.'
            cache: '- (Optional) Configuration block. Detailed below.'
            cache.location: '- (Required when cache type is S3) Location where the AWS CodeBuild project stores cached resources. For type S3, the value must be a valid S3 bucket name/prefix.'
            cache.modes: '- (Required when cache type is LOCAL) Specifies settings that AWS CodeBuild uses to store and reuse build dependencies. Valid values:  LOCAL_SOURCE_CACHE, LOCAL_DOCKER_LAYER_CACHE, LOCAL_CUSTOM_CACHE.'
            cache.type: '- (Optional) Type of storage that will be used for the AWS CodeBuild project cache. Valid values: NO_CACHE, LOCAL, S3. Defaults to NO_CACHE.'
            concurrent_build_limit: '- (Optional) Specify a maximum number of concurrent builds for the project. The value specified must be greater than 0 and less than the account concurrent running builds limit.'
            context: '- (Optional) Specifies the context of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.'
            credential: '- (Required) ARN or name of credentials created using AWS Secrets Manager.'
            credential_provider: '- (Required) Service that created the credentials to access a private Docker registry. Valid value: SECRETS_MANAGER (AWS Secrets Manager).'
            description: '- (Optional) Short description of the project.'
            encryption_disabled: '- (Optional) Whether to disable encrypting S3 logs. Defaults to false.'
            encryption_key: '- (Optional) AWS Key Management Service (AWS KMS) customer master key (CMK) to be used for encrypting the build project''s build output artifacts.'
            environment: '- (Required) Configuration block. Detailed below.'
            environment.certificate: '- (Optional) ARN of the S3 bucket, path prefix and object key that contains the PEM-encoded certificate.'
            environment.compute_type: '- (Required) Information about the compute resources the build project will use. Valid values: BUILD_GENERAL1_SMALL, BUILD_GENERAL1_MEDIUM, BUILD_GENERAL1_LARGE, BUILD_GENERAL1_2XLARGE. BUILD_GENERAL1_SMALL is only valid if type is set to LINUX_CONTAINER. When type is set to LINUX_GPU_CONTAINER, compute_type must be BUILD_GENERAL1_LARGE.'
            environment.environment_variable: '- (Optional) Configuration block. Detailed below.'
            environment.image: '- (Required) Docker image to use for this build project. Valid values include Docker images provided by CodeBuild (e.g aws/codebuild/standard:2.0), Docker Hub images (e.g., hashicorp/terraform:latest), and full Docker repository URIs such as those for ECR (e.g., 137112412989.dkr.ecr.us-west-2.amazonaws.com/amazonlinux:latest).'
            environment.image_pull_credentials_type: '- (Optional) Type of credentials AWS CodeBuild uses to pull images in your build. Valid values: CODEBUILD, SERVICE_ROLE. When you use a cross-account or private registry image, you must use SERVICE_ROLE credentials. When you use an AWS CodeBuild curated image, you must use CodeBuild credentials. Defaults to CODEBUILD.'
            environment.privileged_mode: '- (Optional) Whether to enable running the Docker daemon inside a Docker container. Defaults to false.'
            environment.registry_credential: '- (Optional) Configuration block. Detailed below.'
            environment.type: '- (Required) Type of build environment to use for related builds. Valid values: LINUX_CONTAINER, LINUX_GPU_CONTAINER, WINDOWS_CONTAINER (deprecated), WINDOWS_SERVER_2019_CONTAINER, ARM_CONTAINER. For additional information, see the CodeBuild User Guide.'
            file_system_locations: '- (Optional) A set of file system locations to to mount inside the build. File system locations are documented below.'
            group_name: '- (Optional) Group name of the logs in CloudWatch Logs.'
            id: '- Name (if imported via name) or ARN (if created via Terraform or imported via ARN) of the CodeBuild project.'
            location: '- (Optional) Name of the S3 bucket and the path prefix for S3 logs. Must be set if status is ENABLED, otherwise it must be empty.'
            logs_config: '- (Optional) Configuration block. Detailed below.'
            logs_config.cloudwatch_logs: '- (Optional) Configuration block. Detailed below.'
            logs_config.s3_logs: '- (Optional) Configuration block. Detailed below.'
            name: '- (Required) Project''s name.'
            project_visibility: '- (Optional) Specifies the visibility of the project''s builds. Possible values are: PUBLIC_READ and PRIVATE. Default value is PRIVATE.'
            public_project_alias: '- The project identifier used with the public build APIs.'
            queued_timeout: '- (Optional) Number of minutes, from 5 to 480 (8 hours), a build is allowed to be queued before it times out. The default is 8 hours.'
            resource: '- (Optional, Deprecated) Resource value that applies to the specified authorization type. Use the aws_codebuild_source_credential resource instead.'
            resource_access_role: '- The ARN of the IAM role that enables CodeBuild to access the CloudWatch Logs and Amazon S3 artifacts for the project''s builds.'
            secondary_artifacts: '- (Optional) Configuration block. Detailed below.'
            secondary_artifacts.artifact_identifier: '- (Required) Artifact identifier. Must be the same specified inside the AWS CodeBuild build specification.'
            secondary_artifacts.bucket_owner_access: '- (Optional) Specifies the bucket owner''s access for objects that another account uploads to their Amazon S3 bucket. By default, only the account that uploads the objects to the bucket has access to these objects. This property allows you to give the bucket owner access to these objects. Valid values are NONE, READ_ONLY, and FULL. your CodeBuild service role must have the s3:PutBucketAcl permission. This permission allows CodeBuild to modify the access control list for the bucket.'
            secondary_artifacts.encryption_disabled: '- (Optional) Whether to disable encrypting output artifacts. If type is set to NO_ARTIFACTS, this value is ignored. Defaults to false.'
            secondary_artifacts.location: '- (Optional) Information about the build output artifact location. If type is set to CODEPIPELINE or NO_ARTIFACTS, this value is ignored. If type is set to S3, this is the name of the output bucket. If path is not also specified, then location can also specify the path of the output artifact in the output bucket.'
            secondary_artifacts.name: '- (Optional) Name of the project. If type is set to S3, this is the name of the output artifact object'
            secondary_artifacts.namespace_type: '- (Optional) Namespace to use in storing build artifacts. If type is set to S3, then valid values are BUILD_ID or NONE.'
            secondary_artifacts.override_artifact_name: (Optional) Whether a name specified in the build specification overrides the artifact name.
            secondary_artifacts.packaging: '- (Optional) Type of build output artifact to create. If type is set to S3, valid values are NONE, ZIP'
            secondary_artifacts.path: '- (Optional) If type is set to S3, this is the path to the output artifact.'
            secondary_artifacts.type: '- (Required) Build output artifact''s type. The only valid value is S3.'
            secondary_source_version: '- (Optional) Configuration block. Detailed below.'
            secondary_source_version.source_identifier: '- (Required) An identifier for a source in the build project.'
            secondary_source_version.source_version: '- (Required) The source version for the corresponding source identifier. See AWS docs for more details.'
            secondary_sources: '- (Optional) Configuration block. Detailed below.'
            secondary_sources.auth: '- (Optional, Deprecated) Configuration block with the authorization settings for AWS CodeBuild to access the source code to be built. This information is for the AWS CodeBuild console''s use only. Use the aws_codebuild_source_credential resource instead. Auth blocks are documented below.'
            secondary_sources.build_status_config: '- (Optional) Contains information that defines how the build project reports the build status to the source provider. This option is only used when the source provider is GITHUB, GITHUB_ENTERPRISE, or BITBUCKET.'
            secondary_sources.buildspec: '- (Optional) The build spec declaration to use for this build project''s related builds. This must be set when type is NO_SOURCE. It can either be a path to a file residing in the repository to be built or a local file path leveraging the file() built-in.'
            secondary_sources.git_clone_depth: '- (Optional) Truncate git history to this many commits. Use 0 for a Full checkout which you need to run commands like git branch --show-current. See AWS CodePipeline User Guide: Tutorial: Use full clone with a GitHub pipeline source for details.'
            secondary_sources.git_submodules_config: '- (Optional) Configuration block. Detailed below.'
            secondary_sources.insecure_ssl: '- (Optional) Ignore SSL warnings when connecting to source control.'
            secondary_sources.location: '- (Optional) Location of the source code from git or s3.'
            secondary_sources.report_build_status: '- (Optional) Whether to report the status of a build''s start and finish to your source provider. This option is only valid when your source provider is GITHUB, BITBUCKET, or GITHUB_ENTERPRISE.'
            secondary_sources.source_identifier: '- (Required) Source identifier. Source data will be put inside a folder named as this parameter inside AWS CodeBuild source directory'
            secondary_sources.type: '- (Required) Type of repository that contains the source code to be built. Valid values: CODECOMMIT, CODEPIPELINE, GITHUB, GITHUB_ENTERPRISE, BITBUCKET or S3.'
            service_role: '- (Required) Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that enables AWS CodeBuild to interact with dependent AWS services on behalf of the AWS account.'
            source: '- (Required) Configuration block. Detailed below.'
            source.auth: '- (Optional, Deprecated) Configuration block with the authorization settings for AWS CodeBuild to access the source code to be built. This information is for the AWS CodeBuild console''s use only. Use the aws_codebuild_source_credential resource instead. Auth blocks are documented below.'
            source.buildspec: '- (Optional) Build specification to use for this build project''s related builds. This must be set when type is NO_SOURCE.'
            source.git_clone_depth: '- (Optional) Truncate git history to this many commits. Use 0 for a Full checkout which you need to run commands like git branch --show-current. See AWS CodePipeline User Guide: Tutorial: Use full clone with a GitHub pipeline source for details.'
            source.git_submodules_config: '- (Optional) Configuration block. Detailed below.'
            source.identifier: '- (Optional) The name used to access a file system created by Amazon EFS. CodeBuild creates an environment variable by appending the identifier in all capital letters to CODEBUILD_. For example, if you specify my-efs for identifier, a new environment variable is create named CODEBUILD_MY-EFS.'
            source.insecure_ssl: '- (Optional) Ignore SSL warnings when connecting to source control.'
            source.location: '- (Optional) Location of the source code from git or s3.'
            source.mount_options: '- (Optional) The mount options for a file system created by AWS EFS.'
            source.mount_point: '- (Optional) The location in the container where you mount the file system.'
            source.report_build_status: '- (Optional) Whether to report the status of a build''s start and finish to your source provider. This option is only valid when the type is BITBUCKET or GITHUB.'
            source.type: '- (Required) Type of repository that contains the source code to be built. Valid values: CODECOMMIT, CODEPIPELINE, GITHUB, GITHUB_ENTERPRISE, BITBUCKET, S3, NO_SOURCE.'
            source_version: '- (Optional) Version of the build input to be built for this project. If not specified, the latest version is used.'
            status: '- (Optional) Current status of logs in CloudWatch Logs for a build project. Valid values: ENABLED, DISABLED. Defaults to ENABLED.'
            stream_name: '- (Optional) Stream name of the logs in CloudWatch Logs.'
            tags: '- (Optional) Map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            target_url: '- (Optional) Specifies the target url of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.'
            type: '- (Optional) Type of environment variable. Valid values: PARAMETER_STORE, PLAINTEXT, SECRETS_MANAGER.'
            type.fetch_submodules: '- (Required) Whether to fetch Git submodules for the AWS CodeBuild build project.'
            value: '- (Required) Environment variable''s value.'
            vpc_config: '- (Optional) Configuration block. Detailed below.'
            vpc_config.security_group_ids: '- (Required) Security group IDs to assign to running builds.'
            vpc_config.subnets: '- (Required) Subnet IDs within which to run builds.'
            vpc_config.vpc_id: '- (Required) ID of the VPC within which to run builds.'
        importStatements: []
    aws_codebuild_report_group:
        subCategory: CodeBuild
        description: Provides a CodeBuild Report Group resource.
        name: aws_codebuild_report_group
        title: aws_codebuild_report_group
        examples:
            - name: example
              manifest: |-
                {
                  "export_config": [
                    {
                      "s3_destination": [
                        {
                          "bucket": "${aws_s3_bucket.example.id}",
                          "encryption_disabled": false,
                          "encryption_key": "${aws_kms_key.example.arn}",
                          "packaging": "NONE",
                          "path": "/some"
                        }
                      ],
                      "type": "S3"
                    }
                  ],
                  "name": "my test report group",
                  "type": "TEST"
                }
              references:
                export_config.s3_destination.bucket: aws_s3_bucket.example.id
                export_config.s3_destination.encryption_key: aws_kms_key.example.arn
              dependencies:
                aws_kms_key.example: |-
                    {
                      "deletion_window_in_days": 7,
                      "description": "my test kms key",
                      "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Id\": \"kms-tf-1\",\n  \"Statement\": [\n    {\n      \"Sid\": \"Enable IAM User Permissions\",\n      \"Effect\": \"Allow\",\n      \"Principal\": {\n        \"AWS\": \"arn:aws:iam::${data.aws_caller_identity.current.account_id}:root\"\n      },\n      \"Action\": \"kms:*\",\n      \"Resource\": \"*\"\n    }\n  ]\n}\n"
                    }
                aws_s3_bucket.example: |-
                    {
                      "bucket": "my-test"
                    }
        argumentDocs:
            arn: '- The ARN of Report Group.'
            bucket: '- (Required) The name of the S3 bucket where the raw data of a report are exported.'
            created: '- The date and time this Report Group was created.'
            delete_reports: '- (Optional) If true, deletes any reports that belong to a report group before deleting the report group. If false, you must delete any reports in the report group before deleting it. Default value is false.'
            encryption_disabled: |-
                - (Optional) A boolean value that specifies if the results of a report are encrypted.
                Note: the API does not currently allow setting encryption as disabled
            encryption_key: '- (Required) The encryption key for the report''s encrypted raw data. The KMS key ARN.'
            export_config: '- (Required) Information about the destination where the raw data of this Report Group is exported. see Export Config documented below.'
            id: '- The ARN of Report Group.'
            name: '- (Required) The name of a Report Group.'
            packaging: '- (Optional) The type of build output artifact to create. Valid values are: NONE (default) and ZIP.'
            path: '- (Optional) The path to the exported report''s raw data results.'
            s3_destination: '- (Required) contains information about the S3 bucket where the run of a report is exported. see S3 Destination documented below.'
            tags: '- (Optional) Key-value mapping of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            type: '- (Required) The type of the Report Group. Valid value are TEST and CODE_COVERAGE.'
        importStatements: []
    aws_codebuild_resource_policy:
        subCategory: CodeBuild
        description: Provides a CodeBuild Resource Policy resource.
        name: aws_codebuild_resource_policy
        title: aws_codebuild_resource_policy
        examples:
            - name: example
              manifest: |-
                {
                  "policy": "${jsonencode({\n    Version = \"2012-10-17\"\n    Id      = \"default\"\n    Statement = [{\n      Sid    = \"default\"\n      Effect = \"Allow\"\n      Principal = {\n        AWS = \"arn:${data.aws_partition.current.partition}:iam::${data.aws_caller_identity.current.account_id}:root\"\n      }\n      Action = [\n        \"codebuild:BatchGetReportGroups\",\n        \"codebuild:BatchGetReports\",\n        \"codebuild:ListReportsForReportGroup\",\n        \"codebuild:DescribeTestCases\",\n      ]\n      Resource = aws_codebuild_report_group.example.arn\n    }]\n  })}",
                  "resource_arn": "${aws_codebuild_report_group.example.arn}"
                }
              references:
                resource_arn: aws_codebuild_report_group.example.arn
              dependencies:
                aws_codebuild_report_group.example: |-
                    {
                      "export_config": [
                        {
                          "type": "NO_EXPORT"
                        }
                      ],
                      "name": "example",
                      "type": "TEST"
                    }
        argumentDocs:
            id: '- The ARN of Resource.'
            policy: '- (Required) A JSON-formatted resource policy. For more information, see Sharing a Projec and Sharing a Report Group.'
            resource_arn: '- (Required) The ARN of the Project or ReportGroup resource you want to associate with a resource policy.'
        importStatements: []
    aws_codebuild_source_credential:
        subCategory: CodeBuild
        description: Provides a CodeBuild Source Credential resource.
        name: aws_codebuild_source_credential
        title: aws_codebuild_source_credential
        examples:
            - name: example
              manifest: |-
                {
                  "auth_type": "PERSONAL_ACCESS_TOKEN",
                  "server_type": "GITHUB",
                  "token": "example"
                }
            - name: example
              manifest: |-
                {
                  "auth_type": "BASIC_AUTH",
                  "server_type": "BITBUCKET",
                  "token": "example",
                  "user_name": "test-user"
                }
        argumentDocs:
            arn: '- The ARN of Source Credential.'
            auth_type: '- (Required) The type of authentication used to connect to a GitHub, GitHub Enterprise, or Bitbucket repository. An OAUTH connection is not supported by the API.'
            id: '- The ARN of Source Credential.'
            server_type: '- (Required) The source provider used for this project.'
            token: '- (Required) For GitHub or GitHub Enterprise, this is the personal access token. For Bitbucket, this is the app password.'
            user_name: '- (Optional) The Bitbucket username when the authType is BASIC_AUTH. This parameter is not valid for other types of source providers or connections.'
        importStatements: []
    aws_codebuild_webhook:
        subCategory: CodeBuild
        description: Provides a CodeBuild Webhook resource.
        name: aws_codebuild_webhook
        title: aws_codebuild_webhook
        examples:
            - name: example
              manifest: |-
                {
                  "build_type": "BUILD",
                  "filter_group": [
                    {
                      "filter": [
                        {
                          "pattern": "PUSH",
                          "type": "EVENT"
                        },
                        {
                          "pattern": "master",
                          "type": "HEAD_REF"
                        }
                      ]
                    }
                  ],
                  "project_name": "${aws_codebuild_project.example.name}"
                }
              references:
                project_name: aws_codebuild_project.example.name
            - name: example
              manifest: |-
                {
                  "project_name": "${aws_codebuild_project.example.name}"
                }
              references:
                project_name: aws_codebuild_project.example.name
              dependencies:
                github_repository_webhook.example: |-
                    {
                      "active": true,
                      "configuration": [
                        {
                          "content_type": "json",
                          "insecure_ssl": false,
                          "secret": "${aws_codebuild_webhook.example.secret}",
                          "url": "${aws_codebuild_webhook.example.payload_url}"
                        }
                      ],
                      "events": [
                        "push"
                      ],
                      "name": "example",
                      "repository": "${github_repository.example.name}"
                    }
        argumentDocs:
            branch_filter: '- (Optional) A regular expression used to determine which branches get built. Default is all branches are built. It is recommended to use filter_group over branch_filter.'
            build_type: '- (Optional) The type of build this webhook will trigger. Valid values for this parameter are: BUILD, BUILD_BATCH.'
            exclude_matched_pattern: '- (Optional) If set to true, the specified filter does not trigger a build. Defaults to false.'
            filter: '- (Required) A webhook filter for the group. Filter blocks are documented below.'
            filter_group: '- (Optional) Information about the webhook''s trigger. Filter group blocks are documented below.'
            id: '- The name of the build project.'
            pattern: '- (Required) For a filter that uses EVENT type, a comma-separated string that specifies one event: PUSH, PULL_REQUEST_CREATED, PULL_REQUEST_UPDATED, PULL_REQUEST_REOPENED. PULL_REQUEST_MERGED works with GitHub & GitHub Enterprise only. For a filter that uses any of the other filter types, a regular expression.'
            payload_url: '- The CodeBuild endpoint where webhook events are sent.'
            project_name: '- (Required) The name of the build project.'
            secret: '- The secret token of the associated repository. Not returned by the CodeBuild API for all source types.'
            type: '- (Required) The webhook filter group''s type. Valid values for this parameter are: EVENT, BASE_REF, HEAD_REF, ACTOR_ACCOUNT_ID, FILE_PATH, COMMIT_MESSAGE. At least one filter group must specify EVENT as its type.'
            url: '- The URL to the webhook.'
        importStatements: []
    aws_codecommit_approval_rule_template:
        subCategory: CodeCommit
        description: Provides a CodeCommit Approval Rule Template Resource.
        name: aws_codecommit_approval_rule_template
        title: aws_codecommit_approval_rule_template
        examples:
            - name: example
              manifest: |-
                {
                  "content": "{\n    \"Version\": \"2018-11-08\",\n    \"DestinationReferences\": [\"refs/heads/master\"],\n    \"Statements\": [{\n        \"Type\": \"Approvers\",\n        \"NumberOfApprovalsNeeded\": 2,\n        \"ApprovalPoolMembers\": [\"arn:aws:sts::123456789012:assumed-role/CodeCommitReview/*\"]\n    }]\n}\n",
                  "description": "This is an example approval rule template",
                  "name": "MyExampleApprovalRuleTemplate"
                }
        argumentDocs:
            approval_rule_template_id: '- The ID of the approval rule template'
            content: '- (Required) The content of the approval rule template. Maximum of 3000 characters.'
            creation_date: '- The date the approval rule template was created, in RFC3339 format.'
            description: '- (Optional) The description of the approval rule template. Maximum of 1000 characters.'
            last_modified_date: '- The date the approval rule template was most recently changed, in RFC3339 format.'
            last_modified_user: '- The Amazon Resource Name (ARN) of the user who made the most recent changes to the approval rule template.'
            name: '- (Required) The name for the approval rule template. Maximum of 100 characters.'
            rule_content_sha256: '- The SHA-256 hash signature for the content of the approval rule template.'
        importStatements: []
    aws_codecommit_approval_rule_template_association:
        subCategory: CodeCommit
        description: Associates a CodeCommit Approval Rule Template with a Repository.
        name: aws_codecommit_approval_rule_template_association
        title: aws_codecommit_approval_rule_template_association
        examples:
            - name: example
              manifest: |-
                {
                  "approval_rule_template_name": "${aws_codecommit_approval_rule_template.example.name}",
                  "repository_name": "${aws_codecommit_repository.example.repository_name}"
                }
              references:
                approval_rule_template_name: aws_codecommit_approval_rule_template.example.name
                repository_name: aws_codecommit_repository.example.repository_name
        argumentDocs:
            approval_rule_template_name: '- (Required) The name for the approval rule template.'
            id: '- The name of the approval rule template and name of the repository, separated by a comma (,).'
            repository_name: '- (Required) The name of the repository that you want to associate with the template.'
        importStatements: []
    aws_codecommit_repository:
        subCategory: CodeCommit
        description: Provides a CodeCommit Repository Resource.
        name: aws_codecommit_repository
        title: aws_codecommit_repository
        examples:
            - name: test
              manifest: |-
                {
                  "description": "This is the Sample App Repository",
                  "repository_name": "MyTestRepository"
                }
        argumentDocs:
            arn: '- The ARN of the repository'
            clone_url_http: '- The URL to use for cloning the repository over HTTPS.'
            clone_url_ssh: '- The URL to use for cloning the repository over SSH.'
            default_branch: '- (Optional) The default branch of the repository. The branch specified here needs to exist.'
            description: '- (Optional) The description of the repository. This needs to be less than 1000 characters'
            repository_id: '- The ID of the repository'
            repository_name: '- (Required) The name for the repository. This needs to be less than 100 characters.'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_codecommit_trigger:
        subCategory: CodeCommit
        description: Provides a CodeCommit Trigger Resource.
        name: aws_codecommit_trigger
        title: aws_codecommit_trigger
        examples:
            - name: test
              manifest: |-
                {
                  "repository_name": "${aws_codecommit_repository.test.repository_name}",
                  "trigger": [
                    {
                      "destination_arn": "${aws_sns_topic.test.arn}",
                      "events": [
                        "all"
                      ],
                      "name": "all"
                    }
                  ]
                }
              references:
                repository_name: aws_codecommit_repository.test.repository_name
                trigger.destination_arn: aws_sns_topic.test.arn
              dependencies:
                aws_codecommit_repository.test: |-
                    {
                      "repository_name": "test"
                    }
        argumentDocs:
            branches: '- (Optional) The branches that will be included in the trigger configuration. If no branches are specified, the trigger will apply to all branches.'
            configuration_id: '- System-generated unique identifier.'
            custom_data: '- (Optional) Any custom data associated with the trigger that will be included in the information sent to the target of the trigger.'
            destination_arn: '- (Required) The ARN of the resource that is the target for a trigger. For example, the ARN of a topic in Amazon Simple Notification Service (SNS).'
            events: '- (Required) The repository events that will cause the trigger to run actions in another service, such as sending a notification through Amazon Simple Notification Service (SNS). If no events are specified, the trigger will run for all repository events. Event types include: all, updateReference, createReference, deleteReference.'
            name: '- (Required) The name of the trigger.'
            repository_name: '- (Required) The name for the repository. This needs to be less than 100 characters.'
        importStatements: []
    aws_codedeploy_app:
        subCategory: CodeDeploy
        description: Provides a CodeDeploy application.
        name: aws_codedeploy_app
        title: aws_codedeploy_app
        examples:
            - name: example
              manifest: |-
                {
                  "compute_platform": "ECS",
                  "name": "example"
                }
            - name: example
              manifest: |-
                {
                  "compute_platform": "Lambda",
                  "name": "example"
                }
            - name: example
              manifest: |-
                {
                  "compute_platform": "Server",
                  "name": "example"
                }
        argumentDocs:
            application_id: '- The application ID.'
            arn: '- The ARN of the CodeDeploy application.'
            compute_platform: '- (Optional) The compute platform can either be ECS, Lambda, or Server. Default is Server.'
            github_account_name: '- The name for a connection to a GitHub account.'
            id: '- Amazon''s assigned ID for the application.'
            linked_to_github: '- Whether the user has authenticated with GitHub for the specified application.'
            name: '- (Required) The name of the application.'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_codedeploy_deployment_config:
        subCategory: CodeDeploy
        description: Provides a CodeDeploy deployment config.
        name: aws_codedeploy_deployment_config
        title: aws_codedeploy_deployment_config
        examples:
            - name: foo
              manifest: |-
                {
                  "deployment_config_name": "test-deployment-config",
                  "minimum_healthy_hosts": [
                    {
                      "type": "HOST_COUNT",
                      "value": 2
                    }
                  ]
                }
              dependencies:
                aws_codedeploy_deployment_group.foo: |-
                    {
                      "alarm_configuration": [
                        {
                          "alarms": [
                            "my-alarm-name"
                          ],
                          "enabled": true
                        }
                      ],
                      "app_name": "${aws_codedeploy_app.foo_app.name}",
                      "auto_rollback_configuration": [
                        {
                          "enabled": true,
                          "events": [
                            "DEPLOYMENT_FAILURE"
                          ]
                        }
                      ],
                      "deployment_config_name": "${aws_codedeploy_deployment_config.foo.id}",
                      "deployment_group_name": "bar",
                      "ec2_tag_filter": [
                        {
                          "key": "filterkey",
                          "type": "KEY_AND_VALUE",
                          "value": "filtervalue"
                        }
                      ],
                      "service_role_arn": "${aws_iam_role.foo_role.arn}",
                      "trigger_configuration": [
                        {
                          "trigger_events": [
                            "DeploymentFailure"
                          ],
                          "trigger_name": "foo-trigger",
                          "trigger_target_arn": "foo-topic-arn"
                        }
                      ]
                    }
            - name: foo
              manifest: |-
                {
                  "compute_platform": "Lambda",
                  "deployment_config_name": "test-deployment-config",
                  "traffic_routing_config": [
                    {
                      "time_based_linear": [
                        {
                          "interval": 10,
                          "percentage": 10
                        }
                      ],
                      "type": "TimeBasedLinear"
                    }
                  ]
                }
              dependencies:
                aws_codedeploy_deployment_group.foo: |-
                    {
                      "alarm_configuration": [
                        {
                          "alarms": [
                            "my-alarm-name"
                          ],
                          "enabled": true
                        }
                      ],
                      "app_name": "${aws_codedeploy_app.foo_app.name}",
                      "auto_rollback_configuration": [
                        {
                          "enabled": true,
                          "events": [
                            "DEPLOYMENT_STOP_ON_ALARM"
                          ]
                        }
                      ],
                      "deployment_config_name": "${aws_codedeploy_deployment_config.foo.id}",
                      "deployment_group_name": "bar",
                      "service_role_arn": "${aws_iam_role.foo_role.arn}"
                    }
        argumentDocs:
            compute_platform: '- (Optional) The compute platform can be Server, Lambda, or ECS. Default is Server.'
            deployment_config_id: '- The AWS Assigned deployment config id'
            deployment_config_name: '- (Required) The name of the deployment config.'
            id: '- The deployment group''s config name.'
            minimum_healthy_hosts: '- (Optional) A minimum_healthy_hosts block. Required for Server compute platform. Minimum Healthy Hosts are documented below.'
            minimum_healthy_hosts.type: '- (Required) The type can either be FLEET_PERCENT or HOST_COUNT.'
            minimum_healthy_hosts.value: |-
                - (Required) The value when the type is FLEET_PERCENT represents the minimum number of healthy instances as
                a percentage of the total number of instances in the deployment. If you specify FLEET_PERCENT, at the start of the
                deployment, AWS CodeDeploy converts the percentage to the equivalent number of instance and rounds up fractional instances.
                When the type is HOST_COUNT, the value represents the minimum number of healthy instances as an absolute value.
            time_based_linear.interval: '- (Optional) The number of minutes between each incremental traffic shift of a TimeBasedLinear deployment.'
            time_based_linear.percentage: '- (Optional) The percentage of traffic that is shifted at the start of each increment of a TimeBasedLinear deployment.'
            traffic_routing_config: '- (Optional) A traffic_routing_config block. Traffic Routing Config is documented below.'
            traffic_routing_config.time_based_canary: '- (Optional) The time based canary configuration information. If type is TimeBasedLinear, use time_based_linear instead.'
            traffic_routing_config.time_based_canary.interval: '- (Optional) The number of minutes between the first and second traffic shifts of a TimeBasedCanary deployment.'
            traffic_routing_config.time_based_canary.percentage: '- (Optional) The percentage of traffic to shift in the first increment of a TimeBasedCanary deployment.'
            traffic_routing_config.time_based_linear: '- (Optional) The time based linear configuration information. If type is TimeBasedCanary, use time_based_canary instead.'
            traffic_routing_config.type: '- (Optional) Type of traffic routing config. One of TimeBasedCanary, TimeBasedLinear, AllAtOnce.'
        importStatements: []
    aws_codedeploy_deployment_group:
        subCategory: CodeDeploy
        description: Provides a CodeDeploy deployment group.
        name: aws_codedeploy_deployment_group
        title: aws_codedeploy_deployment_group
        examples:
            - name: example
              manifest: |-
                {
                  "alarm_configuration": [
                    {
                      "alarms": [
                        "my-alarm-name"
                      ],
                      "enabled": true
                    }
                  ],
                  "app_name": "${aws_codedeploy_app.example.name}",
                  "auto_rollback_configuration": [
                    {
                      "enabled": true,
                      "events": [
                        "DEPLOYMENT_FAILURE"
                      ]
                    }
                  ],
                  "deployment_group_name": "example-group",
                  "ec2_tag_set": [
                    {
                      "ec2_tag_filter": [
                        {
                          "key": "filterkey1",
                          "type": "KEY_AND_VALUE",
                          "value": "filtervalue"
                        },
                        {
                          "key": "filterkey2",
                          "type": "KEY_AND_VALUE",
                          "value": "filtervalue"
                        }
                      ]
                    }
                  ],
                  "service_role_arn": "${aws_iam_role.example.arn}",
                  "trigger_configuration": [
                    {
                      "trigger_events": [
                        "DeploymentFailure"
                      ],
                      "trigger_name": "example-trigger",
                      "trigger_target_arn": "${aws_sns_topic.example.arn}"
                    }
                  ]
                }
              references:
                app_name: aws_codedeploy_app.example.name
                service_role_arn: aws_iam_role.example.arn
                trigger_configuration.trigger_target_arn: aws_sns_topic.example.arn
              dependencies:
                aws_codedeploy_app.example: |-
                    {
                      "name": "example-app"
                    }
                aws_iam_role.example: |-
                    {
                      "assume_role_policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Principal\": {\n        \"Service\": \"codedeploy.amazonaws.com\"\n      },\n      \"Action\": \"sts:AssumeRole\"\n    }\n  ]\n}\n",
                      "name": "example-role"
                    }
                aws_iam_role_policy_attachment.AWSCodeDeployRole: |-
                    {
                      "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole",
                      "role": "${aws_iam_role.example.name}"
                    }
                aws_sns_topic.example: |-
                    {
                      "name": "example-topic"
                    }
            - name: example
              manifest: |-
                {
                  "app_name": "${aws_codedeploy_app.example.name}",
                  "auto_rollback_configuration": [
                    {
                      "enabled": true,
                      "events": [
                        "DEPLOYMENT_FAILURE"
                      ]
                    }
                  ],
                  "blue_green_deployment_config": [
                    {
                      "deployment_ready_option": [
                        {
                          "action_on_timeout": "CONTINUE_DEPLOYMENT"
                        }
                      ],
                      "terminate_blue_instances_on_deployment_success": [
                        {
                          "action": "TERMINATE",
                          "termination_wait_time_in_minutes": 5
                        }
                      ]
                    }
                  ],
                  "deployment_config_name": "CodeDeployDefault.ECSAllAtOnce",
                  "deployment_group_name": "example",
                  "deployment_style": [
                    {
                      "deployment_option": "WITH_TRAFFIC_CONTROL",
                      "deployment_type": "BLUE_GREEN"
                    }
                  ],
                  "ecs_service": [
                    {
                      "cluster_name": "${aws_ecs_cluster.example.name}",
                      "service_name": "${aws_ecs_service.example.name}"
                    }
                  ],
                  "load_balancer_info": [
                    {
                      "target_group_pair_info": [
                        {
                          "prod_traffic_route": [
                            {
                              "listener_arns": [
                                "${aws_lb_listener.example.arn}"
                              ]
                            }
                          ],
                          "target_group": [
                            {
                              "name": "${aws_lb_target_group.blue.name}"
                            },
                            {
                              "name": "${aws_lb_target_group.green.name}"
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "service_role_arn": "${aws_iam_role.example.arn}"
                }
              references:
                app_name: aws_codedeploy_app.example.name
                ecs_service.cluster_name: aws_ecs_cluster.example.name
                ecs_service.service_name: aws_ecs_service.example.name
                load_balancer_info.target_group_pair_info.target_group.name: aws_lb_target_group.green.name
                service_role_arn: aws_iam_role.example.arn
              dependencies:
                aws_codedeploy_app.example: |-
                    {
                      "compute_platform": "ECS",
                      "name": "example"
                    }
            - name: example
              manifest: |-
                {
                  "app_name": "${aws_codedeploy_app.example.name}",
                  "blue_green_deployment_config": [
                    {
                      "deployment_ready_option": [
                        {
                          "action_on_timeout": "STOP_DEPLOYMENT",
                          "wait_time_in_minutes": 60
                        }
                      ],
                      "green_fleet_provisioning_option": [
                        {
                          "action": "DISCOVER_EXISTING"
                        }
                      ],
                      "terminate_blue_instances_on_deployment_success": [
                        {
                          "action": "KEEP_ALIVE"
                        }
                      ]
                    }
                  ],
                  "deployment_group_name": "example-group",
                  "deployment_style": [
                    {
                      "deployment_option": "WITH_TRAFFIC_CONTROL",
                      "deployment_type": "BLUE_GREEN"
                    }
                  ],
                  "load_balancer_info": [
                    {
                      "elb_info": [
                        {
                          "name": "${aws_elb.example.name}"
                        }
                      ]
                    }
                  ],
                  "service_role_arn": "${aws_iam_role.example.arn}"
                }
              references:
                app_name: aws_codedeploy_app.example.name
                load_balancer_info.elb_info.name: aws_elb.example.name
                service_role_arn: aws_iam_role.example.arn
              dependencies:
                aws_codedeploy_app.example: |-
                    {
                      "name": "example-app"
                    }
        argumentDocs:
            CONTINUE_DEPLOYMENT: ': Register new instances with the load balancer immediately after the new application revision is installed on the instances in the replacement environment.'
            COPY_AUTO_SCALING_GROUP: ': Use settings from a specified Auto Scaling group to define and create instances in a new Auto Scaling group. Exactly one Auto Scaling group must be specified when selecting COPY_AUTO_SCALING_GROUP. Use autoscaling_groups to specify the Auto Scaling group.'
            DISCOVER_EXISTING: ': Use instances that already exist or will be created manually.'
            KEEP_ALIVE: ': Instances are left running after they are deregistered from the load balancer and removed from the deployment group.'
            STOP_DEPLOYMENT: ': Do not register new instances with load balancer unless traffic is rerouted manually. If traffic is not rerouted manually before the end of the specified wait period, the deployment status is changed to Stopped.'
            TERMINATE: ': Instances are terminated after a specified wait time.'
            action: '- (Optional) The method used to add instances to a replacement environment.'
            action_on_timeout: '- (Optional) When to reroute traffic from an original environment to a replacement environment in a blue/green deployment.'
            alarm_configuration: '- (Optional) Configuration block of alarms associated with the deployment group (documented below).'
            alarms: '- (Optional) A list of alarms configured for the deployment group. A maximum of 10 alarms can be added to a deployment group.'
            app_name: '- (Required) The name of the application.'
            arn: '- The ARN of the CodeDeploy deployment group.'
            auto_rollback_configuration: '- (Optional) Configuration block of the automatic rollback configuration associated with the deployment group (documented below).'
            autoscaling_groups: '- (Optional) Autoscaling groups associated with the deployment group.'
            blue_green_deployment_config: '- (Optional) Configuration block of the blue/green deployment options for a deployment group (documented below).'
            compute_platform: '- The destination platform type for the deployment.'
            deployment_config_name: '- (Optional) The name of the group''s deployment config. The default is "CodeDeployDefault.OneAtATime".'
            deployment_group_id: '- The ID of the CodeDeploy deployment group.'
            deployment_group_name: '- (Required) The name of the deployment group.'
            deployment_option: '- (Optional) Indicates whether to route deployment traffic behind a load balancer. Valid Values are WITH_TRAFFIC_CONTROL or WITHOUT_TRAFFIC_CONTROL. Default is WITHOUT_TRAFFIC_CONTROL.'
            deployment_ready_option: '- (Optional) Information about the action to take when newly provisioned instances are ready to receive traffic in a blue/green deployment (documented below).'
            deployment_style: '- (Optional) Configuration block of the type of deployment, either in-place or blue/green, you want to run and whether to route deployment traffic behind a load balancer (documented below).'
            deployment_type: '- (Optional) Indicates whether to run an in-place deployment or a blue/green deployment. Valid Values are IN_PLACE or BLUE_GREEN. Default is IN_PLACE.'
            ec2_tag_filter: '- (Optional) Tag filters associated with the deployment group. See the AWS docs for details.'
            ec2_tag_filter.key: '- (Optional) The key of the tag filter.'
            ec2_tag_filter.type: '- (Optional) The type of the tag filter, either KEY_ONLY, VALUE_ONLY, or KEY_AND_VALUE.'
            ec2_tag_filter.value: '- (Optional) The value of the tag filter.'
            ec2_tag_set: '- (Optional) Configuration block(s) of Tag filters associated with the deployment group, which are also referred to as tag groups (documented below). See the AWS docs for details.'
            ecs_service: '- (Optional) Configuration block(s) of the ECS services for a deployment group (documented below).'
            ecs_service.cluster_name: '- (Required) The name of the ECS cluster.'
            ecs_service.service_name: '- (Required) The name of the ECS service.'
            elb_info: '- (Optional) The Classic Elastic Load Balancer to use in a deployment. Conflicts with target_group_info and target_group_pair_info.'
            elb_info.name: '- (Optional) The name of the load balancer that will be used to route traffic from original instances to replacement instances in a blue/green deployment. For in-place deployments, the name of the load balancer that instances are deregistered from so they are not serving traffic during a deployment, and then re-registered with after the deployment completes.'
            enabled: '- (Optional) Indicates whether the alarm configuration is enabled. This option is useful when you want to temporarily deactivate alarm monitoring for a deployment group without having to add the same alarms again later.'
            events: '- (Optional) The event type or types that trigger a rollback. Supported types are DEPLOYMENT_FAILURE and DEPLOYMENT_STOP_ON_ALARM.'
            "false": ': The deployment will stop if alarm status information can''t be retrieved.'
            green_fleet_provisioning_option: '- (Optional) Information about how instances are provisioned for a replacement environment in a blue/green deployment (documented below).'
            id: '- Application name and deployment group name.'
            ignore_poll_alarm_failure: '- (Optional) Indicates whether a deployment should continue if information about the current state of alarms cannot be retrieved from CloudWatch. The default value is false.'
            load_balancer_info: '- (Optional) Single configuration block of the load balancer to use in a blue/green deployment (documented below).'
            on_premises_instance_tag_filter: '- (Optional) On premise tag filters associated with the group. See the AWS docs for details.'
            on_premises_instance_tag_filter.key: '- (Optional) The key of the tag filter.'
            on_premises_instance_tag_filter.type: '- (Optional) The type of the tag filter, either KEY_ONLY, VALUE_ONLY, or KEY_AND_VALUE.'
            on_premises_instance_tag_filter.value: '- (Optional) The value of the tag filter.'
            service_role_arn: '- (Required) The service role ARN that allows deployments.'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            target_group.name: '- (Required) Name of the target group.'
            target_group_info: '- (Optional) The (Application/Network Load Balancer) target group to use in a deployment. Conflicts with elb_info and target_group_pair_info.'
            target_group_info.name: '- (Optional) The name of the target group that instances in the original environment are deregistered from, and instances in the replacement environment registered with. For in-place deployments, the name of the target group that instances are deregistered from, so they are not serving traffic during a deployment, and then re-registered with after the deployment completes.'
            target_group_pair_info: '- (Optional) The (Application/Network Load Balancer) target group pair to use in a deployment. Conflicts with elb_info and target_group_info.'
            target_group_pair_info.prod_traffic_route: '- (Required) Configuration block for the production traffic route (documented below).'
            target_group_pair_info.prod_traffic_route.listener_arns: '- (Required) List of Amazon Resource Names (ARNs) of the load balancer listeners.'
            target_group_pair_info.target_group: '- (Required) Configuration blocks for a target group within a target group pair (documented below).'
            target_group_pair_info.test_traffic_route: '- (Optional) Configuration block for the test traffic route (documented below).'
            terminate_blue_instances_on_deployment_success: '- (Optional) Information about whether to terminate instances in the original fleet during a blue/green deployment (documented below).'
            termination_wait_time_in_minutes: '- (Optional) The number of minutes to wait after a successful blue/green deployment before terminating instances from the original environment.'
            test_traffic_route.listener_arns: '- (Required) List of Amazon Resource Names (ARNs) of the load balancer listeners.'
            trigger_configuration: '- (Optional) Configuration block(s) of the triggers for the deployment group (documented below).'
            trigger_events: '- (Required) The event type or types for which notifications are triggered. Some values that are supported: DeploymentStart, DeploymentSuccess, DeploymentFailure, DeploymentStop, DeploymentRollback, InstanceStart, InstanceSuccess, InstanceFailure.  See the CodeDeploy documentation for all possible values.'
            trigger_name: '- (Required) The name of the notification trigger.'
            trigger_target_arn: '- (Required) The ARN of the SNS topic through which notifications are sent.'
            "true": ': The deployment will proceed even if alarm status information can''t be retrieved.'
            wait_time_in_minutes: '- (Optional) The number of minutes to wait before the status of a blue/green deployment changed to Stopped if rerouting is not started manually. Applies only to the STOP_DEPLOYMENT option for action_on_timeout.'
        importStatements: []
    aws_codepipeline:
        subCategory: CodePipeline
        description: Provides a CodePipeline
        name: aws_codepipeline
        title: aws_codepipeline
        examples:
            - name: codepipeline
              manifest: |-
                {
                  "artifact_store": [
                    {
                      "encryption_key": [
                        {
                          "id": "${data.aws_kms_alias.s3kmskey.arn}",
                          "type": "KMS"
                        }
                      ],
                      "location": "${aws_s3_bucket.codepipeline_bucket.bucket}",
                      "type": "S3"
                    }
                  ],
                  "name": "tf-test-pipeline",
                  "role_arn": "${aws_iam_role.codepipeline_role.arn}",
                  "stage": [
                    {
                      "action": [
                        {
                          "category": "Source",
                          "configuration": {
                            "BranchName": "main",
                            "ConnectionArn": "${aws_codestarconnections_connection.example.arn}",
                            "FullRepositoryId": "my-organization/example"
                          },
                          "name": "Source",
                          "output_artifacts": [
                            "source_output"
                          ],
                          "owner": "AWS",
                          "provider": "CodeStarSourceConnection",
                          "version": "1"
                        }
                      ],
                      "name": "Source"
                    },
                    {
                      "action": [
                        {
                          "category": "Build",
                          "configuration": {
                            "ProjectName": "test"
                          },
                          "input_artifacts": [
                            "source_output"
                          ],
                          "name": "Build",
                          "output_artifacts": [
                            "build_output"
                          ],
                          "owner": "AWS",
                          "provider": "CodeBuild",
                          "version": "1"
                        }
                      ],
                      "name": "Build"
                    },
                    {
                      "action": [
                        {
                          "category": "Deploy",
                          "configuration": {
                            "ActionMode": "REPLACE_ON_FAILURE",
                            "Capabilities": "CAPABILITY_AUTO_EXPAND,CAPABILITY_IAM",
                            "OutputFileName": "CreateStackOutput.json",
                            "StackName": "MyStack",
                            "TemplatePath": "build_output::sam-templated.yaml"
                          },
                          "input_artifacts": [
                            "build_output"
                          ],
                          "name": "Deploy",
                          "owner": "AWS",
                          "provider": "CloudFormation",
                          "version": "1"
                        }
                      ],
                      "name": "Deploy"
                    }
                  ]
                }
              references:
                artifact_store.encryption_key.id: data.aws_kms_alias.s3kmskey.arn
                artifact_store.location: aws_s3_bucket.codepipeline_bucket.bucket
                role_arn: aws_iam_role.codepipeline_role.arn
              dependencies:
                aws_codestarconnections_connection.example: |-
                    {
                      "name": "example-connection",
                      "provider_type": "GitHub"
                    }
                aws_iam_role.codepipeline_role: |-
                    {
                      "assume_role_policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Principal\": {\n        \"Service\": \"codepipeline.amazonaws.com\"\n      },\n      \"Action\": \"sts:AssumeRole\"\n    }\n  ]\n}\n",
                      "name": "test-role"
                    }
                aws_iam_role_policy.codepipeline_policy: |-
                    {
                      "name": "codepipeline_policy",
                      "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\":\"Allow\",\n      \"Action\": [\n        \"s3:GetObject\",\n        \"s3:GetObjectVersion\",\n        \"s3:GetBucketVersioning\",\n        \"s3:PutObjectAcl\",\n        \"s3:PutObject\"\n      ],\n      \"Resource\": [\n        \"${aws_s3_bucket.codepipeline_bucket.arn}\",\n        \"${aws_s3_bucket.codepipeline_bucket.arn}/*\"\n      ]\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"codestar-connections:UseConnection\"\n      ],\n      \"Resource\": \"${aws_codestarconnections_connection.example.arn}\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"codebuild:BatchGetBuilds\",\n        \"codebuild:StartBuild\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}\n",
                      "role": "${aws_iam_role.codepipeline_role.id}"
                    }
                aws_s3_bucket.codepipeline_bucket: |-
                    {
                      "bucket": "test-bucket"
                    }
                aws_s3_bucket_acl.codepipeline_bucket_acl: |-
                    {
                      "acl": "private",
                      "bucket": "${aws_s3_bucket.codepipeline_bucket.id}"
                    }
        argumentDocs:
            arn: '- The codepipeline ARN.'
            artifact_store: (Required) One or more artifact_store blocks. Artifact stores are documented below.
            artifact_store.encryption_key: '- (Optional) The encryption key block AWS CodePipeline uses to encrypt the data in the artifact store, such as an AWS Key Management Service (AWS KMS) key. If you don''t specify a key, AWS CodePipeline uses the default key for Amazon Simple Storage Service (Amazon S3). An encryption_key block is documented below.'
            artifact_store.encryption_key.id: '- (Required) The KMS key ARN or ID'
            artifact_store.encryption_key.type: '- (Required) The type of key; currently only KMS is supported'
            artifact_store.location: '- (Required) The location where AWS CodePipeline stores artifacts for a pipeline; currently only S3 is supported.'
            artifact_store.region: '- (Optional) The region where the artifact store is located. Required for a cross-region CodePipeline, do not provide for a single-region CodePipeline.'
            artifact_store.type: '- (Required) The type of the artifact store, such as Amazon S3'
            id: '- The codepipeline ID.'
            name: '- (Required) The name of the pipeline.'
            role_arn: '- (Required) A service role Amazon Resource Name (ARN) that grants AWS CodePipeline permission to make calls to AWS services on your behalf.'
            stage: (Minimum of at least two stage blocks is required) A stage block. Stages are documented below.
            stage.action: '- (Required) The action(s) to include in the stage. Defined as an action block below'
            stage.action.category: '- (Required) A category defines what kind of action can be taken in the stage, and constrains the provider type for the action. Possible values are Approval, Build, Deploy, Invoke, Source and Test.'
            stage.action.configuration: '- (Optional) A map of the action declaration''s configuration. Configurations options for action types and providers can be found in the Pipeline Structure Reference and Action Structure Reference documentation.'
            stage.action.input_artifacts: '- (Optional) A list of artifact names to be worked on.'
            stage.action.name: '- (Required) The action declaration''s name.'
            stage.action.namespace: '- (Optional) The namespace all output variables will be accessed from.'
            stage.action.output_artifacts: '- (Optional) A list of artifact names to output. Output artifact names must be unique within a pipeline.'
            stage.action.owner: '- (Required) The creator of the action being called. Possible values are AWS, Custom and ThirdParty.'
            stage.action.provider: '- (Required) The provider of the service being called by the action. Valid providers are determined by the action category. Provider names are listed in the Action Structure Reference documentation.'
            stage.action.region: '- (Optional) The region in which to run the action.'
            stage.action.role_arn: '- (Optional) The ARN of the IAM service role that will perform the declared action. This is assumed through the roleArn for the pipeline.'
            stage.action.run_order: '- (Optional) The order in which actions are run.'
            stage.action.version: '- (Required) A string that identifies the action type.'
            stage.name: '- (Required) The name of the stage.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_codepipeline_webhook:
        subCategory: CodePipeline
        description: Provides a CodePipeline Webhook
        name: aws_codepipeline_webhook
        title: aws_codepipeline_webhook
        examples:
            - name: bar
              manifest: |-
                {
                  "authentication": "GITHUB_HMAC",
                  "authentication_configuration": [
                    {
                      "secret_token": "${local.webhook_secret}"
                    }
                  ],
                  "filter": [
                    {
                      "json_path": "$.ref",
                      "match_equals": "refs/heads/{Branch}"
                    }
                  ],
                  "name": "test-webhook-github-bar",
                  "target_action": "Source",
                  "target_pipeline": "${aws_codepipeline.bar.name}"
                }
              references:
                authentication_configuration.secret_token: local.webhook_secret
                target_pipeline: aws_codepipeline.bar.name
              dependencies:
                aws_codepipeline.bar: |-
                    {
                      "artifact_store": [
                        {
                          "encryption_key": [
                            {
                              "id": "${data.aws_kms_alias.s3kmskey.arn}",
                              "type": "KMS"
                            }
                          ],
                          "location": "${aws_s3_bucket.bar.bucket}",
                          "type": "S3"
                        }
                      ],
                      "name": "tf-test-pipeline",
                      "role_arn": "${aws_iam_role.bar.arn}",
                      "stage": [
                        {
                          "action": [
                            {
                              "category": "Source",
                              "configuration": {
                                "Branch": "master",
                                "Owner": "my-organization",
                                "Repo": "test"
                              },
                              "name": "Source",
                              "output_artifacts": [
                                "test"
                              ],
                              "owner": "ThirdParty",
                              "provider": "GitHub",
                              "version": "1"
                            }
                          ],
                          "name": "Source"
                        },
                        {
                          "action": [
                            {
                              "category": "Build",
                              "configuration": {
                                "ProjectName": "test"
                              },
                              "input_artifacts": [
                                "test"
                              ],
                              "name": "Build",
                              "owner": "AWS",
                              "provider": "CodeBuild",
                              "version": "1"
                            }
                          ],
                          "name": "Build"
                        }
                      ]
                    }
                github_repository_webhook.bar: |-
                    {
                      "configuration": [
                        {
                          "content_type": "json",
                          "insecure_ssl": true,
                          "secret": "${local.webhook_secret}",
                          "url": "${aws_codepipeline_webhook.bar.url}"
                        }
                      ],
                      "events": [
                        "push"
                      ],
                      "name": "web",
                      "repository": "${github_repository.repo.name}"
                    }
        argumentDocs:
            arn: '- The CodePipeline webhook''s ARN.'
            authentication: '- (Required) The type of authentication  to use. One of IP, GITHUB_HMAC, or UNAUTHENTICATED.'
            authentication_configuration: '- (Optional) An auth block. Required for IP and GITHUB_HMAC. Auth blocks are documented below.'
            authentication_configuration.allowed_ip_range: '- (Optional) A valid CIDR block for IP filtering. Required for IP.'
            authentication_configuration.secret_token: '- (Optional) The shared secret for the GitHub repository webhook. Set this as secret in your github_repository_webhook''s configuration block. Required for GITHUB_HMAC.'
            filter: (Required) One or more filter blocks. Filter blocks are documented below.
            filter.json_path: '- (Required) The JSON path to filter on.'
            filter.match_equals: '- (Required) The value to match on (e.g., refs/heads/{Branch}). See AWS docs for details.'
            id: '- The CodePipeline webhook''s ARN.'
            name: '- (Required) The name of the webhook.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            target_action: '- (Required) The name of the action in a pipeline you want to connect to the webhook. The action must be from the source (first) stage of the pipeline.'
            target_pipeline: '- (Required) The name of the pipeline.'
            url: '- The CodePipeline webhook''s URL. POST events to this endpoint to trigger the target.'
        importStatements: []
    aws_codestarconnections_connection:
        subCategory: CodeStar Connections
        description: Provides a CodeStar Connection
        name: aws_codestarconnections_connection
        title: aws_codestarconnections_connection
        examples:
            - name: example
              manifest: |-
                {
                  "name": "example-connection",
                  "provider_type": "Bitbucket"
                }
              dependencies:
                aws_codepipeline.example: |-
                    {
                      "artifact_store": [
                        {}
                      ],
                      "name": "tf-test-pipeline",
                      "role_arn": "${aws_iam_role.codepipeline_role.arn}",
                      "stage": [
                        {
                          "action": [
                            {
                              "category": "Source",
                              "configuration": {
                                "BranchName": "main",
                                "ConnectionArn": "${aws_codestarconnections_connection.example.arn}",
                                "FullRepositoryId": "my-organization/test"
                              },
                              "name": "Source",
                              "output_artifacts": [
                                "source_output"
                              ],
                              "owner": "AWS",
                              "provider": "CodeStarSourceConnection",
                              "version": "1"
                            }
                          ],
                          "name": "Source"
                        },
                        {
                          "action": [
                            {}
                          ],
                          "name": "Build"
                        },
                        {
                          "action": [
                            {}
                          ],
                          "name": "Deploy"
                        }
                      ]
                    }
        argumentDocs:
            arn: '- The codestar connection ARN.'
            connection_status: '- The codestar connection status. Possible values are PENDING, AVAILABLE and ERROR.'
            host_arn: '- (Optional) The Amazon Resource Name (ARN) of the host associated with the connection. Conflicts with provider_type'
            id: '- The codestar connection ARN.'
            name: '- (Required) The name of the connection to be created. The name must be unique in the calling AWS account. Changing name will create a new resource.'
            provider_type: '- (Optional) The name of the external provider where your third-party code repository is configured. Valid values are Bitbucket, GitHub or GitHubEnterpriseServer. Changing provider_type will create a new resource. Conflicts with host_arn'
            tags: '- (Optional) Map of key-value resource tags to associate with the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_codestarconnections_host:
        subCategory: CodeStar Connections
        description: Provides a CodeStar Host
        name: aws_codestarconnections_host
        title: aws_codestarconnections_host
        examples:
            - name: example
              manifest: |-
                {
                  "name": "example-host",
                  "provider_endpoint": "https://example.com",
                  "provider_type": "GitHubEnterpriseServer"
                }
        argumentDocs:
            arn: '- The CodeStar Host ARN.'
            id: '- The CodeStar Host ARN.'
            name: '- (Required) The name of the host to be created. The name must be unique in the calling AWS account.'
            provider_endpoint: '- (Required) The endpoint of the infrastructure to be represented by the host after it is created.'
            provider_type: '- (Required) The name of the external provider where your third-party code repository is configured.'
            status: '- The CodeStar Host status. Possible values are PENDING, AVAILABLE, VPC_CONFIG_DELETING, VPC_CONFIG_INITIALIZING, and VPC_CONFIG_FAILED_INITIALIZATION.'
            vpc_configuration: '- (Optional) The VPC configuration to be provisioned for the host. A VPC must be configured, and the infrastructure to be represented by the host must already be connected to the VPC.'
            vpc_configuration.security_group_ids: '- (Required) he ID of the security group or security groups associated with the Amazon VPC connected to the infrastructure where your provider type is installed.'
            vpc_configuration.subnet_ids: '- (Required) The ID of the subnet or subnets associated with the Amazon VPC connected to the infrastructure where your provider type is installed.'
            vpc_configuration.tls_certificate: '- (Optional) The value of the Transport Layer Security (TLS) certificate associated with the infrastructure where your provider type is installed.'
            vpc_configuration.vpc_id: '- (Required) The ID of the Amazon VPC connected to the infrastructure where your provider type is installed.'
        importStatements: []
    aws_codestarnotifications_notification_rule:
        subCategory: CodeStar Notifications
        description: Provides a CodeStar Notifications Rule
        name: aws_codestarnotifications_notification_rule
        title: aws_codestarnotifications_notification_rule
        examples:
            - name: commits
              manifest: |-
                {
                  "detail_type": "BASIC",
                  "event_type_ids": [
                    "codecommit-repository-comments-on-commits"
                  ],
                  "name": "example-code-repo-commits",
                  "resource": "${aws_codecommit_repository.code.arn}",
                  "target": [
                    {
                      "address": "${aws_sns_topic.notif.arn}"
                    }
                  ]
                }
              references:
                resource: aws_codecommit_repository.code.arn
                target.address: aws_sns_topic.notif.arn
              dependencies:
                aws_codecommit_repository.code: |-
                    {
                      "repository_name": "example-code-repo"
                    }
                aws_sns_topic.notif: |-
                    {
                      "name": "notification"
                    }
                aws_sns_topic_policy.default: |-
                    {
                      "arn": "${aws_sns_topic.notif.arn}",
                      "policy": "${data.aws_iam_policy_document.notif_access.json}"
                    }
        argumentDocs:
            arn: '- The codestar notification rule ARN.'
            detail_type: '- (Required) The level of detail to include in the notifications for this resource. Possible values are BASIC and FULL.'
            event_type_ids: |-
                - (Required) A list of event types associated with this notification rule.
                For list of allowed events see here.
            id: '- The codestar notification rule ARN.'
            name: '- (Required) The name of notification rule.'
            resource: '- (Required) The ARN of the resource to associate with the notification rule.'
            status: '- (Optional) The status of the notification rule. Possible values are ENABLED and DISABLED, default is ENABLED.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            target: '- (Optional) Configuration blocks containing notification target information. Can be specified multiple times. At least one target must be specified on creation.'
            target.address: '- (Required) The ARN of notification rule target. For example, a SNS Topic ARN.'
            target.type: '- (Optional) The type of the notification target. Default value is SNS.'
        importStatements: []
    aws_cognito_identity_pool:
        subCategory: Cognito Identity
        description: Provides an AWS Cognito Identity Pool.
        name: aws_cognito_identity_pool
        title: aws_cognito_identity_pool
        examples:
            - name: main
              manifest: |-
                {
                  "allow_classic_flow": false,
                  "allow_unauthenticated_identities": false,
                  "cognito_identity_providers": [
                    {
                      "client_id": "6lhlkkfbfb4q5kpp90urffae",
                      "provider_name": "cognito-idp.us-east-1.amazonaws.com/us-east-1_Tv0493apJ",
                      "server_side_token_check": false
                    },
                    {
                      "client_id": "7kodkvfqfb4qfkp39eurffae",
                      "provider_name": "cognito-idp.us-east-1.amazonaws.com/eu-west-1_Zr231apJu",
                      "server_side_token_check": false
                    }
                  ],
                  "identity_pool_name": "identity pool",
                  "openid_connect_provider_arns": [
                    "arn:aws:iam::123456789012:oidc-provider/id.example.com"
                  ],
                  "saml_provider_arns": [
                    "${aws_iam_saml_provider.default.arn}"
                  ],
                  "supported_login_providers": {
                    "accounts.google.com": "123456789012.apps.googleusercontent.com",
                    "graph.facebook.com": "7346241598935552"
                  }
                }
              dependencies:
                aws_iam_saml_provider.default: |-
                    {
                      "name": "my-saml-provider",
                      "saml_metadata_document": "${file(\"saml-metadata.xml\")}"
                    }
        argumentDocs:
            allow_classic_flow: (Optional) - Enables or disables the classic / basic authentication flow. Default is false.
            allow_unauthenticated_identities: (Required) - Whether the identity pool supports unauthenticated logins or not.
            arn: '- The ARN of the identity pool.'
            client_id: (Optional) - The client ID for the Amazon Cognito Identity User Pool.
            cognito_identity_providers: (Optional) - An array of Amazon Cognito Identity user pools and their client IDs.
            developer_provider_name: |-
                (Optional) - The "domain" by which Cognito will refer to your users. This name acts as a placeholder that allows your
                backend and the Cognito service to communicate about the developer provider.
            id: '- An identity pool ID, e.g. us-west-2_abc123.'
            identity_pool_name: (Required) - The Cognito Identity Pool name.
            openid_connect_provider_arns: (Optional) - Set of OpendID Connect provider ARNs.
            provider_name: (Optional) - The provider name for an Amazon Cognito Identity User Pool.
            saml_provider_arns: (Optional) - An array of Amazon Resource Names (ARNs) of the SAML provider for your identity.
            server_side_token_check: (Optional) - Whether server-side token validation is enabled for the identity provider’s token or not.
            supported_login_providers: (Optional) - Key-Value pairs mapping provider names to provider app IDs.
            tags: '- (Optional) A map of tags to assign to the Identity Pool. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_cognito_identity_pool_provider_principal_tag:
        subCategory: Cognito Identity
        description: Provides an AWS Cognito Identity Principal Mapping.
        name: aws_cognito_identity_pool_provider_principal_tag
        title: aws_cognito_identity_pool_provider_principal_tag
        examples:
            - name: example
              manifest: |-
                {
                  "identity_pool_id": "${aws_cognito_identity_pool.example.id}",
                  "identity_provider_name": "${aws_cognito_user_pool.example.endpoint}",
                  "principal_tags": {
                    "test": "value"
                  },
                  "use_defaults": false
                }
              references:
                identity_pool_id: aws_cognito_identity_pool.example.id
                identity_provider_name: aws_cognito_user_pool.example.endpoint
              dependencies:
                aws_cognito_identity_pool.example: |-
                    {
                      "allow_unauthenticated_identities": false,
                      "cognito_identity_providers": [
                        {
                          "client_id": "${aws_cognito_user_pool_client.example.id}",
                          "provider_name": "${aws_cognito_user_pool.example.endpoint}",
                          "server_side_token_check": false
                        }
                      ],
                      "identity_pool_name": "identity pool"
                    }
                aws_cognito_user_pool.example: |-
                    {
                      "auto_verified_attributes": [
                        "email"
                      ],
                      "name": "user pool"
                    }
                aws_cognito_user_pool_client.example: |-
                    {
                      "name": "client",
                      "supported_identity_providers": "${compact([\n    \"COGNITO\",\n  ])}",
                      "user_pool_id": "${aws_cognito_user_pool.example.id}"
                    }
        argumentDocs:
            identity_pool_id: (Required) - An identity pool ID.
            identity_provider_name: (Required) - The name of the identity provider.
            principal_tags: ': (Optional: []) - String to string map of variables.'
            use_defaults: ': (Optional: true) use default (username and clientID) attribute mappings.'
        importStatements: []
    aws_cognito_identity_pool_roles_attachment:
        subCategory: Cognito Identity
        description: Provides an AWS Cognito Identity Pool Roles Attachment.
        name: aws_cognito_identity_pool_roles_attachment
        title: aws_cognito_identity_pool_roles_attachment
        examples:
            - name: main
              manifest: |-
                {
                  "identity_pool_id": "${aws_cognito_identity_pool.main.id}",
                  "role_mapping": [
                    {
                      "ambiguous_role_resolution": "AuthenticatedRole",
                      "identity_provider": "graph.facebook.com",
                      "mapping_rule": [
                        {
                          "claim": "isAdmin",
                          "match_type": "Equals",
                          "role_arn": "${aws_iam_role.authenticated.arn}",
                          "value": "paid"
                        }
                      ],
                      "type": "Rules"
                    }
                  ],
                  "roles": {
                    "authenticated": "${aws_iam_role.authenticated.arn}"
                  }
                }
              references:
                identity_pool_id: aws_cognito_identity_pool.main.id
                role_mapping.mapping_rule.role_arn: aws_iam_role.authenticated.arn
              dependencies:
                aws_cognito_identity_pool.main: |-
                    {
                      "allow_unauthenticated_identities": false,
                      "identity_pool_name": "identity pool",
                      "supported_login_providers": {
                        "graph.facebook.com": "7346241598935555"
                      }
                    }
                aws_iam_role.authenticated: |-
                    {
                      "assume_role_policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Principal\": {\n        \"Federated\": \"cognito-identity.amazonaws.com\"\n      },\n      \"Action\": \"sts:AssumeRoleWithWebIdentity\",\n      \"Condition\": {\n        \"StringEquals\": {\n          \"cognito-identity.amazonaws.com:aud\": \"${aws_cognito_identity_pool.main.id}\"\n        },\n        \"ForAnyValue:StringLike\": {\n          \"cognito-identity.amazonaws.com:amr\": \"authenticated\"\n        }\n      }\n    }\n  ]\n}\n",
                      "name": "cognito_authenticated"
                    }
                aws_iam_role_policy.authenticated: |-
                    {
                      "name": "authenticated_policy",
                      "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"mobileanalytics:PutEvents\",\n        \"cognito-sync:*\",\n        \"cognito-identity:*\"\n      ],\n      \"Resource\": [\n        \"*\"\n      ]\n    }\n  ]\n}\n",
                      "role": "${aws_iam_role.authenticated.id}"
                    }
        argumentDocs:
            ambiguous_role_resolution: (Optional) - Specifies the action to be taken if either no rules match the claim value for the Rules type, or there is no cognito:preferred_role claim and there are multiple cognito:roles matches for the Token type. Required if you specify Token or Rules as the Type.
            claim: (Required) - The claim name that must be present in the token, for example, "isAdmin" or "paid".
            id: '- The identity pool ID.'
            identity_pool_id: (Required) - An identity pool ID in the format REGION_GUID.
            identity_provider: (Required) - A string identifying the identity provider, for example, "graph.facebook.com" or "cognito-idp.us-east-1.amazonaws.com/us-east-1_abcdefghi:app_client_id". Depends on cognito_identity_providers set on aws_cognito_identity_pool resource or a aws_cognito_identity_provider resource.
            mapping_rule: (Optional) - The Rules Configuration to be used for mapping users to roles. You can specify up to 25 rules per identity provider. Rules are evaluated in order. The first one to match specifies the role.
            match_type: (Required) - The match condition that specifies how closely the claim value in the IdP token must match Value.
            role_arn: (Required) - The role ARN.
            role_mapping: (Optional) - A List of Role Mapping.
            roles: (Required) - The map of roles associated with this pool. For a given role, the key will be either "authenticated" or "unauthenticated" and the value will be the Role ARN.
            type: (Required) - The role mapping type.
            value: (Required) - A brief string that the claim must match, for example, "paid" or "yes".
        importStatements: []
    aws_cognito_identity_provider:
        subCategory: Cognito IDP (Identity Provider)
        description: Provides a Cognito User Identity Provider resource.
        name: aws_cognito_identity_provider
        title: aws_cognito_identity_provider
        examples:
            - name: example_provider
              manifest: |-
                {
                  "attribute_mapping": {
                    "email": "email",
                    "username": "sub"
                  },
                  "provider_details": {
                    "authorize_scopes": "email",
                    "client_id": "your client_id",
                    "client_secret": "your client_secret"
                  },
                  "provider_name": "Google",
                  "provider_type": "Google",
                  "user_pool_id": "${aws_cognito_user_pool.example.id}"
                }
              references:
                user_pool_id: aws_cognito_user_pool.example.id
              dependencies:
                aws_cognito_user_pool.example: |-
                    {
                      "auto_verified_attributes": [
                        "email"
                      ],
                      "name": "example-pool"
                    }
        argumentDocs:
            attribute_mapping: (Optional) - The map of attribute mapping of user pool attributes. AttributeMapping in AWS API documentation
            idp_identifiers: (Optional) - The list of identity providers.
            provider_details: (Optional) - The map of identity details, such as access token
            provider_name: (Required) - The provider name
            provider_type: (Required) - The provider type.  See AWS API for valid values
            user_pool_id: (Required) - The user pool id
        importStatements: []
    aws_cognito_resource_server:
        subCategory: Cognito IDP (Identity Provider)
        description: Provides a Cognito Resource Server.
        name: aws_cognito_resource_server
        title: aws_cognito_resource_server
        examples:
            - name: resource
              manifest: |-
                {
                  "identifier": "https://example.com",
                  "name": "example",
                  "user_pool_id": "${aws_cognito_user_pool.pool.id}"
                }
              references:
                user_pool_id: aws_cognito_user_pool.pool.id
              dependencies:
                aws_cognito_user_pool.pool: |-
                    {
                      "name": "pool"
                    }
            - name: resource
              manifest: |-
                {
                  "identifier": "https://example.com",
                  "name": "example",
                  "scope": [
                    {
                      "scope_description": "a Sample Scope Description",
                      "scope_name": "sample-scope"
                    }
                  ],
                  "user_pool_id": "${aws_cognito_user_pool.pool.id}"
                }
              references:
                user_pool_id: aws_cognito_user_pool.pool.id
              dependencies:
                aws_cognito_user_pool.pool: |-
                    {
                      "name": "pool"
                    }
        argumentDocs:
            identifier: '- (Required) An identifier for the resource server.'
            name: '- (Required) A name for the resource server.'
            scope: '- (Optional) A list of Authorization Scope.'
            scope_description: '- (Required) The scope description.'
            scope_identifiers: '- A list of all scopes configured for this resource server in the format identifier/scope_name.'
            scope_name: '- (Required) The scope name.'
        importStatements: []
    aws_cognito_risk_configuration:
        subCategory: Cognito IDP (Identity Provider)
        description: Provides a Cognito Risk Configuration resource.
        name: aws_cognito_risk_configuration
        title: aws_cognito_risk_configuration
        examples:
            - name: example
              manifest: |-
                {
                  "risk_exception_configuration": [
                    {
                      "blocked_ip_range_list": [
                        "10.10.10.10/32"
                      ]
                    }
                  ],
                  "user_pool_id": "${aws_cognito_user_pool.example.id}"
                }
              references:
                user_pool_id: aws_cognito_user_pool.example.id
        argumentDocs:
            account_takeover_risk_configuration: '- (Optional) The account takeover risk configuration. See details below.'
            account_takeover_risk_configuration.actions: '- (Required) Account takeover risk configuration actions. See details below.'
            account_takeover_risk_configuration.actions.event_action: '- (Optional) The event action. Valid values are BLOCK or NO_ACTION.'
            account_takeover_risk_configuration.actions.high_action: '- (Optional) Action to take for a high risk. See action block below.'
            account_takeover_risk_configuration.actions.low_action: '- (Optional) Action to take for a low risk. See action block below.'
            account_takeover_risk_configuration.actions.medium_action: '- (Optional) Action to take for a medium risk. See action block below.'
            account_takeover_risk_configuration.notify_configuration: '- (Required) The notify configuration used to construct email notifications. See details below.'
            account_takeover_risk_configuration.notify_configuration.block_email: '- (Optional) Email template used when a detected risk event is blocked. See notify email type below.'
            account_takeover_risk_configuration.notify_configuration.from: '- (Optional) The email address that is sending the email. The address must be either individually verified with Amazon Simple Email Service, or from a domain that has been verified with Amazon SES.'
            account_takeover_risk_configuration.notify_configuration.mfa_email: '- (Optional) The multi-factor authentication (MFA) email template used when MFA is challenged as part of a detected risk. See notify email type below.'
            account_takeover_risk_configuration.notify_configuration.no_action_email: '- (Optional) The email template used when a detected risk event is allowed. See notify email type below.'
            account_takeover_risk_configuration.notify_configuration.reply_to: '- (Optional) The destination to which the receiver of an email should reply to.'
            account_takeover_risk_configuration.notify_configuration.source_arn: '- (Required) The Amazon Resource Name (ARN) of the identity that is associated with the sending authorization policy. This identity permits Amazon Cognito to send for the email address specified in the From parameter.'
            client_id: '- (Optional) The app client ID. When the client ID is not provided, the same risk configuration is applied to all the clients in the User Pool.'
            compromised_credentials_risk_configuration: '- (Optional) The compromised credentials risk configuration. See details below.'
            compromised_credentials_risk_configuration.actions: '- (Required) The compromised credentials risk configuration actions. See details below.'
            compromised_credentials_risk_configuration.event_filter: '- (Optional) Perform the action for these events. The default is to perform all events if no event filter is specified. Valid values are SIGN_IN, PASSWORD_CHANGE, and SIGN_UP.'
            event_action: '- (Required) The action to take in response to the account takeover action. Valid values are BLOCK, MFA_IF_CONFIGURED, MFA_REQUIRED and NO_ACTION.'
            html_body: '- (Required) The email HTML body.'
            id: '- The user pool ID. or The user pool ID and Client Id separated by a : if the configuration is client specific.'
            notify: '- (Required) Whether to send a notification.'
            risk_exception_configuration: '- (Optional) The configuration to override the risk decision. See details below.'
            risk_exception_configuration.blocked_ip_range_list: '- (Optional) Overrides the risk decision to always block the pre-authentication requests. The IP range is in CIDR notation, a compact representation of an IP address and its routing prefix.'
            risk_exception_configuration.skipped_ip_range_list: '- (Optional) Risk detection isn''t performed on the IP addresses in this range list. The IP range is in CIDR notation.'
            subject: '- (Required) The email subject.'
            test_body: '- (Required) The email text body.'
            user_pool_id: '- (Required) The user pool ID.'
        importStatements: []
    aws_cognito_user:
        subCategory: Cognito IDP (Identity Provider)
        description: Provides a Cognito User resource.
        name: aws_cognito_user
        title: aws_cognito_user
        examples:
            - name: example
              manifest: |-
                {
                  "user_pool_id": "${aws_cognito_user_pool.example.id}",
                  "username": "example"
                }
              references:
                user_pool_id: aws_cognito_user_pool.example.id
              dependencies:
                aws_cognito_user_pool.example: |-
                    {
                      "name": "MyExamplePool"
                    }
            - name: example
              manifest: |-
                {
                  "attributes": {
                    "email": "no-reply@hashicorp.com",
                    "email_verified": true,
                    "foo": "bar",
                    "terraform": true
                  },
                  "user_pool_id": "${aws_cognito_user_pool.example.id}",
                  "username": "example"
                }
              references:
                user_pool_id: aws_cognito_user_pool.example.id
              dependencies:
                aws_cognito_user_pool.example: |-
                    {
                      "name": "mypool",
                      "schema": [
                        {
                          "attribute_data_type": "Boolean",
                          "developer_only_attribute": false,
                          "mutable": false,
                          "name": "terraform",
                          "required": false
                        },
                        {
                          "attribute_data_type": "String",
                          "developer_only_attribute": false,
                          "mutable": false,
                          "name": "foo",
                          "required": false,
                          "string_attribute_constraints": [
                            {}
                          ]
                        }
                      ]
                    }
        argumentDocs:
            attributes: '- (Optional) A map that contains user attributes and attribute values to be set for the user.'
            client_metadata: '- (Optional) A map of custom key-value pairs that you can provide as input for any custom workflows that user creation triggers. Amazon Cognito does not store the client_metadata value. This data is available only to Lambda triggers that are assigned to a user pool to support custom workflows. If your user pool configuration does not include triggers, the ClientMetadata parameter serves no purpose. For more information, see Customizing User Pool Workflows with Lambda Triggers.'
            desired_delivery_mediums: '- (Optional) A list of mediums to the welcome message will be sent through. Allowed values are EMAIL and SMS. If it''s provided, make sure you have also specified email attribute for the EMAIL medium and phone_number for the SMS. More than one value can be specified. Amazon Cognito does not store the desired_delivery_mediums value. Defaults to ["SMS"].'
            enabled: '- (Optional) Specifies whether the user should be enabled after creation. The welcome message will be sent regardless of the enabled value. The behavior can be changed with message_action argument. Defaults to true.'
            force_alias_creation: '- (Optional) If this parameter is set to True and the phone_number or email address specified in the attributes parameter already exists as an alias with a different user, Amazon Cognito will migrate the alias from the previous user to the newly created user. The previous user will no longer be able to log in using that alias. Amazon Cognito does not store the force_alias_creation value. Defaults to false.'
            message_action: '- (Optional) Set to RESEND to resend the invitation message to a user that already exists and reset the expiration limit on the user''s account. Set to SUPPRESS to suppress sending the message. Only one value can be specified. Amazon Cognito does not store the message_action value.'
            mfa_preference: '- user''s settings regarding MFA settings and preferences.'
            password: '- (Optional) The user''s permanent password. This password must conform to the password policy specified by user pool the user belongs to. The welcome message always contains only temporary_password value. You can suppress sending the welcome message with the message_action argument. Amazon Cognito does not store the password value. Conflicts with temporary_password.'
            status: '- current user status.'
            sub: '- unique user id that is never reassignable to another user.'
            temporary_password: '- (Optional) The user''s temporary password. Conflicts with password.'
            user_name: '- (Required) The username for the user. Must be unique within the user pool. Must be a UTF-8 string between 1 and 128 characters. After the user is created, the username cannot be changed.'
            user_pool_id: '- (Required) The user pool ID for the user pool where the user will be created.'
            validation_data: '- (Optional) The user''s validation data. This is an array of name-value pairs that contain user attributes and attribute values that you can use for custom validation, such as restricting the types of user accounts that can be registered. Amazon Cognito does not store the validation_data value. For more information, see Customizing User Pool Workflows with Lambda Triggers.'
        importStatements: []
    aws_cognito_user_group:
        subCategory: Cognito IDP (Identity Provider)
        description: Provides a Cognito User Group resource.
        name: aws_cognito_user_group
        title: aws_cognito_user_group
        examples:
            - name: main
              manifest: |-
                {
                  "description": "Managed by Terraform",
                  "name": "user-group",
                  "precedence": 42,
                  "role_arn": "${aws_iam_role.group_role.arn}",
                  "user_pool_id": "${aws_cognito_user_pool.main.id}"
                }
              references:
                role_arn: aws_iam_role.group_role.arn
                user_pool_id: aws_cognito_user_pool.main.id
              dependencies:
                aws_cognito_user_pool.main: |-
                    {
                      "name": "identity pool"
                    }
                aws_iam_role.group_role: |-
                    {
                      "assume_role_policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Principal\": {\n        \"Federated\": \"cognito-identity.amazonaws.com\"\n      },\n      \"Action\": \"sts:AssumeRoleWithWebIdentity\",\n      \"Condition\": {\n        \"StringEquals\": {\n          \"cognito-identity.amazonaws.com:aud\": \"us-east-1:12345678-dead-beef-cafe-123456790ab\"\n        },\n        \"ForAnyValue:StringLike\": {\n          \"cognito-identity.amazonaws.com:amr\": \"authenticated\"\n        }\n      }\n    }\n  ]\n}\n",
                      "name": "user-group-role"
                    }
        argumentDocs:
            description: '- (Optional) The description of the user group.'
            name: '- (Required) The name of the user group.'
            precedence: '- (Optional) The precedence of the user group.'
            role_arn: '- (Optional) The ARN of the IAM role to be associated with the user group.'
            user_pool_id: '- (Required) The user pool ID.'
        importStatements: []
    aws_cognito_user_in_group:
        subCategory: Cognito IDP (Identity Provider)
        description: Adds the specified user to the specified group.
        name: aws_cognito_user_in_group
        title: aws_cognito_user_in_group
        examples:
            - name: example
              manifest: |-
                {
                  "group_name": "${aws_cognito_user_group.example.name}",
                  "user_pool_id": "${aws_cognito_user_pool.example.id}",
                  "username": "${aws_cognito_user.example.username}"
                }
              references:
                group_name: aws_cognito_user_group.example.name
                user_pool_id: aws_cognito_user_pool.example.id
                username: aws_cognito_user.example.username
              dependencies:
                aws_cognito_user.example: |-
                    {
                      "user_pool_id": "${aws_cognito_user_pool.test.id}",
                      "username": "example"
                    }
                aws_cognito_user_group.example: |-
                    {
                      "name": "example",
                      "user_pool_id": "${aws_cognito_user_pool.test.id}"
                    }
                aws_cognito_user_pool.example: |-
                    {
                      "name": "example",
                      "password_policy": [
                        {
                          "minimum_length": 6,
                          "require_numbers": false,
                          "require_symbols": false,
                          "require_uppercase": false,
                          "temporary_password_validity_days": 7
                        }
                      ]
                    }
        argumentDocs:
            group_name: '- (Required) The name of the group to which the user is to be added.'
            user_pool_id: '- (Required) The user pool ID of the user and group.'
            username: '- (Required) The username of the user to be added to the group.'
        importStatements: []
    aws_cognito_user_pool:
        subCategory: Cognito IDP (Identity Provider)
        description: Provides a Cognito User Pool resource.
        name: aws_cognito_user_pool
        title: aws_cognito_user_pool
        examples:
            - name: pool
              manifest: |-
                {
                  "name": "mypool"
                }
            - name: example
              manifest: |-
                {
                  "mfa_configuration": "ON",
                  "sms_authentication_message": "Your code is {####}",
                  "sms_configuration": [
                    {
                      "external_id": "example",
                      "sns_caller_arn": "${aws_iam_role.example.arn}"
                    }
                  ],
                  "software_token_mfa_configuration": [
                    {
                      "enabled": true
                    }
                  ]
                }
              references:
                sms_configuration.sns_caller_arn: aws_iam_role.example.arn
            - name: test
              manifest: |-
                {
                  "account_recovery_setting": [
                    {
                      "recovery_mechanism": [
                        {
                          "name": "verified_email",
                          "priority": 1
                        },
                        {
                          "name": "verified_phone_number",
                          "priority": 2
                        }
                      ]
                    }
                  ],
                  "name": "mypool"
                }
            - name: example
              manifest: |-
                {
                  "schema": [
                    {
                      "attribute_data_type": "\u003cappropriate type\u003e",
                      "developer_only_attribute": false,
                      "mutable": true,
                      "name": "\u003cname\u003e",
                      "required": false,
                      "string_attribute_constraints": [
                        {
                          "max_length": 2048,
                          "min_length": 0
                        }
                      ]
                    }
                  ]
                }
        argumentDocs:
            account_recovery_setting: '- (Optional) Configuration block to define which verified available method a user can use to recover their forgotten password. Detailed below.'
            account_recovery_setting.recovery_mechanism: '- (Required) List of Account Recovery Options of the following structure:'
            admin_create_user_config: '- (Optional) Configuration block for creating a new user profile. Detailed below.'
            admin_create_user_config.allow_admin_create_user_only: '- (Optional) Set to True if only the administrator is allowed to create user profiles. Set to False if users can sign themselves up via an app.'
            admin_create_user_config.invite_message_template: '- (Optional) Invite message template structure. Detailed below.'
            admin_create_user_config.invite_message_template.email_message: '- (Optional) Message template for email messages. Must contain {username} and {####} placeholders, for username and temporary password, respectively.'
            admin_create_user_config.invite_message_template.email_subject: '- (Optional) Subject line for email messages.'
            admin_create_user_config.invite_message_template.sms_message: '- (Optional) Message template for SMS messages. Must contain {username} and {####} placeholders, for username and temporary password, respectively.'
            alias_attributes: '- (Optional) Attributes supported as an alias for this user pool. Valid values: phone_number, email, or preferred_username. Conflicts with username_attributes.'
            arn: '- ARN of the user pool.'
            attribute_data_type.attribute_data_type: '- (Required) Attribute data type. Must be one of Boolean, Number, String, DateTime.'
            attribute_data_type.developer_only_attribute: '- (Optional) Whether the attribute type is developer only.'
            attribute_data_type.mutable: '- (Optional) Whether the attribute can be changed once it has been created.'
            attribute_data_type.name: '- (Required) Name of the attribute.'
            attribute_data_type.number_attribute_constraints: '- (Required when attribute_data_type is Number) Configuration block for the constraints for an attribute of the number type. Detailed below.'
            attribute_data_type.number_attribute_constraints.max_value: '- (Optional) Maximum value of an attribute that is of the number data type.'
            attribute_data_type.number_attribute_constraints.min_value: '- (Optional) Minimum value of an attribute that is of the number data type.'
            attribute_data_type.required: '- (Optional) Whether a user pool attribute is required. If the attribute is required and the user does not provide a value, registration or sign-in will fail.'
            attribute_data_type.string_attribute_constraints: '- (Required when attribute_data_type is String) Constraints for an attribute of the string type. Detailed below.'
            attribute_data_type.string_attribute_constraints.max_length: '- (Optional) Maximum length of an attribute value of the string type.'
            attribute_data_type.string_attribute_constraints.min_length: '- (Optional) Minimum length of an attribute value of the string type.'
            auto_verified_attributes: '- (Optional) Attributes to be auto-verified. Valid values: email, phone_number.'
            creation_date: '- Date the user pool was created.'
            custom_domain: '- A custom domain name that you provide to Amazon Cognito. This parameter applies only if you use a custom domain to host the sign-up and sign-in pages for your application. For example: auth.example.com.'
            device_configuration: '- (Optional) Configuration block for the user pool''s device tracking. Detailed below.'
            device_configuration.challenge_required_on_new_device: '- (Optional) Whether a challenge is required on a new device. Only applicable to a new device.'
            device_configuration.device_only_remembered_on_user_prompt: '- (Optional) Whether a device is only remembered on user prompt. false equates to "Always" remember, true is "User Opt In," and not using a device_configuration block is "No."'
            domain: '- Holds the domain prefix if the user pool has a domain associated with it.'
            email_configuration: '- (Optional) Configuration block for configuring email. Detailed below.'
            email_configuration.configuration_set: '- (Optional) Email configuration set name from SES.'
            email_configuration.email_sending_account: '- (Optional) Email delivery method to use. COGNITO_DEFAULT for the default email functionality built into Cognito or DEVELOPER to use your Amazon SES configuration.'
            email_configuration.from_email_address: '- (Optional) Sender’s email address or sender’s display name with their email address (e.g., john@example.com, John Smith <john@example.com> or \"John Smith Ph.D.\" <john@example.com>). Escaped double quotes are required around display names that contain certain characters as specified in RFC 5322.'
            email_configuration.reply_to_email_address: '- (Optional) REPLY-TO email address.'
            email_configuration.source_arn: '- (Optional) ARN of the SES verified email identity to to use. Required if email_sending_account is set to DEVELOPER.'
            email_verification_message: '- (Optional) String representing the email verification message. Conflicts with verification_message_template configuration block email_message argument.'
            email_verification_subject: '- (Optional) String representing the email verification subject. Conflicts with verification_message_template configuration block email_subject argument.'
            endpoint: '- Endpoint name of the user pool. Example format: cognito-idp.REGION.amazonaws.com/xxxx_yyyyy'
            estimated_number_of_users: '- A number estimating the size of the user pool.'
            id: '- ID of the user pool.'
            lambda_config: '- (Optional) Configuration block for the AWS Lambda triggers associated with the user pool. Detailed below.'
            lambda_config.create_auth_challenge: '- (Optional) ARN of the lambda creating an authentication challenge.'
            lambda_config.custom_email_sender: '- (Optional) A custom email sender AWS Lambda trigger. See custom_email_sender Below.'
            lambda_config.custom_email_sender.lambda_arn: '- (Required) The Lambda Amazon Resource Name of the Lambda function that Amazon Cognito triggers to send email notifications to users.'
            lambda_config.custom_email_sender.lambda_version: '- (Required) The Lambda version represents the signature of the "request" attribute in the "event" information Amazon Cognito passes to your custom email Lambda function. The only supported value is V1_0.'
            lambda_config.custom_message: '- (Optional) Custom Message AWS Lambda trigger.'
            lambda_config.custom_sms_sender: '- (Optional) A custom SMS sender AWS Lambda trigger. See custom_sms_sender Below.'
            lambda_config.custom_sms_sender.lambda_arn: '- (Required) The Lambda Amazon Resource Name of the Lambda function that Amazon Cognito triggers to send SMS notifications to users.'
            lambda_config.custom_sms_sender.lambda_version: '- (Required) The Lambda version represents the signature of the "request" attribute in the "event" information Amazon Cognito passes to your custom SMS Lambda function. The only supported value is V1_0.'
            lambda_config.define_auth_challenge: '- (Optional) Defines the authentication challenge.'
            lambda_config.kms_key_id: '- (Optional) The Amazon Resource Name of Key Management Service Customer master keys. Amazon Cognito uses the key to encrypt codes and temporary passwords sent to CustomEmailSender and CustomSMSSender.'
            lambda_config.post_authentication: '- (Optional) Post-authentication AWS Lambda trigger.'
            lambda_config.post_confirmation: '- (Optional) Post-confirmation AWS Lambda trigger.'
            lambda_config.pre_authentication: '- (Optional) Pre-authentication AWS Lambda trigger.'
            lambda_config.pre_sign_up: '- (Optional) Pre-registration AWS Lambda trigger.'
            lambda_config.pre_token_generation: '- (Optional) Allow to customize identity token claims before token generation.'
            lambda_config.user_migration: '- (Optional) User migration Lambda config type.'
            lambda_config.verify_auth_challenge_response: '- (Optional) Verifies the authentication challenge response.'
            last_modified_date: '- Date the user pool was last modified.'
            mfa_configuration: '- (Optional) Multi-Factor Authentication (MFA) configuration for the User Pool. Defaults of OFF. Valid values are OFF (MFA Tokens are not required), ON (MFA is required for all users to sign in; requires at least one of sms_configuration or software_token_mfa_configuration to be configured), or OPTIONAL (MFA Will be required only for individual users who have MFA Enabled; requires at least one of sms_configuration or software_token_mfa_configuration to be configured).'
            name: '- (Required) Name of the user pool.'
            password_policy: '- (Optional) Configuration blocked for information about the user pool password policy. Detailed below.'
            password_policy.minimum_length: '- (Optional) Minimum length of the password policy that you have set.'
            password_policy.require_lowercase: '- (Optional) Whether you have required users to use at least one lowercase letter in their password.'
            password_policy.require_numbers: '- (Optional) Whether you have required users to use at least one number in their password.'
            password_policy.require_symbols: '- (Optional) Whether you have required users to use at least one symbol in their password.'
            password_policy.require_uppercase: '- (Optional) Whether you have required users to use at least one uppercase letter in their password.'
            password_policy.temporary_password_validity_days: '- (Optional) In the password policy you have set, refers to the number of days a temporary password is valid. If the user does not sign-in during this time, their password will need to be reset by an administrator.'
            priority: '- (Required) Positive integer specifying priority of a method with 1 being the highest priority.'
            schema: '- (Optional) Configuration block for the schema attributes of a user pool. Detailed below. Schema attributes from the standard attribute set only need to be specified if they are different from the default configuration. Attributes can be added, but not modified or removed. Maximum of 50 attributes.'
            sms_authentication_message: '- (Optional) String representing the SMS authentication message. The Message must contain the {####} placeholder, which will be replaced with the code.'
            sms_configuration: '- (Optional) Configuration block for Short Message Service (SMS) settings. Detailed below. These settings apply to SMS user verification and SMS Multi-Factor Authentication (MFA). Due to Cognito API restrictions, the SMS configuration cannot be removed without recreating the Cognito User Pool. For user data safety, this resource will ignore the removal of this configuration by disabling drift detection. To force resource recreation after this configuration has been applied, see the taint command.'
            sms_configuration.external_id: '- (Required) External ID used in IAM role trust relationships. For more information about using external IDs, see How to Use an External ID When Granting Access to Your AWS Resources to a Third Party.'
            sms_configuration.sns_caller_arn: '- (Required) ARN of the Amazon SNS caller. This is usually the IAM role that you''ve given Cognito permission to assume.'
            sms_verification_message: '- (Optional) String representing the SMS verification message. Conflicts with verification_message_template configuration block sms_message argument.'
            software_token_mfa_configuration: '- (Optional) Configuration block for software token Mult-Factor Authentication (MFA) settings. Detailed below.'
            software_token_mfa_configuration.enabled: '- (Required) Boolean whether to enable software token Multi-Factor (MFA) tokens, such as Time-based One-Time Password (TOTP). To disable software token MFA When sms_configuration is not present, the mfa_configuration argument must be set to OFF and the software_token_mfa_configuration configuration block must be fully removed.'
            tags: '- (Optional) Map of tags to assign to the User Pool. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            user_pool_add_ons: '- (Optional) Configuration block for user pool add-ons to enable user pool advanced security mode features. Detailed below.'
            user_pool_add_ons.advanced_security_mode: '- (Required) Mode for advanced security, must be one of OFF, AUDIT or ENFORCED.'
            username_attributes: '- (Optional) Whether email addresses or phone numbers can be specified as usernames when a user signs up. Conflicts with alias_attributes.'
            username_configuration: '- (Optional) Configuration block for username configuration. Detailed below.'
            username_configuration.case_sensitive: '- (Required) Whether username case sensitivity will be applied for all users in the user pool through Cognito APIs.'
            verification_message_template: '- (Optional) Configuration block for verification message templates. Detailed below.'
            verification_message_template.default_email_option: '- (Optional) Default email option. Must be either CONFIRM_WITH_CODE or CONFIRM_WITH_LINK. Defaults to CONFIRM_WITH_CODE.'
            verification_message_template.email_message: '- (Optional) Email message template. Must contain the {####} placeholder. Conflicts with email_verification_message argument.'
            verification_message_template.email_message_by_link: '- (Optional) Email message template for sending a confirmation link to the user, it must contain the {##Click Here##} placeholder.'
            verification_message_template.email_subject: '- (Optional) Subject line for the email message template. Conflicts with email_verification_subject argument.'
            verification_message_template.email_subject_by_link: '- (Optional) Subject line for the email message template for sending a confirmation link to the user.'
            verification_message_template.sms_message: '- (Optional) SMS message template. Must contain the {####} placeholder. Conflicts with sms_verification_message argument.'
        importStatements: []
    aws_cognito_user_pool_client:
        subCategory: Cognito IDP (Identity Provider)
        description: Provides a Cognito User Pool Client resource.
        name: aws_cognito_user_pool_client
        title: aws_cognito_user_pool_client
        examples:
            - name: client
              manifest: |-
                {
                  "name": "client",
                  "user_pool_id": "${aws_cognito_user_pool.pool.id}"
                }
              references:
                user_pool_id: aws_cognito_user_pool.pool.id
              dependencies:
                aws_cognito_user_pool.pool: |-
                    {
                      "name": "pool"
                    }
            - name: client
              manifest: |-
                {
                  "explicit_auth_flows": [
                    "ADMIN_NO_SRP_AUTH"
                  ],
                  "generate_secret": true,
                  "name": "client",
                  "user_pool_id": "${aws_cognito_user_pool.pool.id}"
                }
              references:
                user_pool_id: aws_cognito_user_pool.pool.id
              dependencies:
                aws_cognito_user_pool.pool: |-
                    {
                      "name": "pool"
                    }
            - name: test
              manifest: |-
                {
                  "analytics_configuration": [
                    {
                      "application_id": "${aws_pinpoint_app.test.application_id}",
                      "external_id": "some_id",
                      "role_arn": "${aws_iam_role.test.arn}",
                      "user_data_shared": true
                    }
                  ],
                  "name": "pool_client",
                  "user_pool_id": "${aws_cognito_user_pool.test.id}"
                }
              references:
                analytics_configuration.application_id: aws_pinpoint_app.test.application_id
                analytics_configuration.role_arn: aws_iam_role.test.arn
                user_pool_id: aws_cognito_user_pool.test.id
              dependencies:
                aws_cognito_user_pool.test: |-
                    {
                      "name": "pool"
                    }
                aws_iam_role.test: |-
                    {
                      "assume_role_policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"cognito-idp.amazonaws.com\"\n      },\n      \"Effect\": \"Allow\",\n      \"Sid\": \"\"\n    }\n  ]\n}\n",
                      "name": "role"
                    }
                aws_iam_role_policy.test: |-
                    {
                      "name": "role_policy",
                      "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": [\n        \"mobiletargeting:UpdateEndpoint\",\n        \"mobiletargeting:PutItems\"\n      ],\n      \"Effect\": \"Allow\",\n      \"Resource\": \"arn:aws:mobiletargeting:*:${data.aws_caller_identity.current.account_id}:apps/${aws_pinpoint_app.test.application_id}*\"\n    }\n  ]\n}\n",
                      "role": "${aws_iam_role.test.id}"
                    }
                aws_pinpoint_app.test: |-
                    {
                      "name": "pinpoint"
                    }
            - name: userpool_client
              manifest: |-
                {
                  "allowed_oauth_flows": [
                    "code",
                    "implicit"
                  ],
                  "allowed_oauth_flows_user_pool_client": true,
                  "allowed_oauth_scopes": [
                    "email",
                    "openid"
                  ],
                  "callback_urls": [
                    "https://example.com"
                  ],
                  "name": "client",
                  "supported_identity_providers": [
                    "COGNITO"
                  ],
                  "user_pool_id": "${aws_cognito_user_pool.pool.id}"
                }
              references:
                user_pool_id: aws_cognito_user_pool.pool.id
              dependencies:
                aws_cognito_user_pool.pool: |-
                    {
                      "name": "pool"
                    }
        argumentDocs:
            access_token_validity: '- (Optional) Time limit, between 5 minutes and 1 day, after which the access token is no longer valid and cannot be used. This value will be overridden if you have entered a value in token_validity_units.'
            allowed_oauth_flows: '- (Optional) List of allowed OAuth flows (code, implicit, client_credentials).'
            allowed_oauth_flows_user_pool_client: '- (Optional) Whether the client is allowed to follow the OAuth protocol when interacting with Cognito user pools.'
            allowed_oauth_scopes: '- (Optional) List of allowed OAuth scopes (phone, email, openid, profile, and aws.cognito.signin.user.admin).'
            analytics_configuration: '- (Optional) Configuration block for Amazon Pinpoint analytics for collecting metrics for this user pool. Detailed below.'
            analytics_configuration.application_arn: '- (Optional) Application ARN for an Amazon Pinpoint application. Conflicts with external_id and role_arn.'
            analytics_configuration.application_id: '- (Optional) Application ID for an Amazon Pinpoint application.'
            analytics_configuration.external_id: '- (Optional) ID for the Analytics Configuration. Conflicts with application_arn.'
            analytics_configuration.role_arn: '- (Optional) ARN of an IAM role that authorizes Amazon Cognito to publish events to Amazon Pinpoint analytics. Conflicts with application_arn.'
            analytics_configuration.user_data_shared: (Optional) If set to true, Amazon Cognito will include user data in the events it publishes to Amazon Pinpoint analytics.
            callback_urls: '- (Optional) List of allowed callback URLs for the identity providers.'
            client_secret: '- Client secret of the user pool client.'
            default_redirect_uri: '- (Optional) Default redirect URI. Must be in the list of callback URLs.'
            enable_propagate_additional_user_context_data: '- (Optional) Activates the propagation of additional user context data.'
            enable_token_revocation: '- (Optional) Enables or disables token revocation.'
            explicit_auth_flows: '- (Optional) List of authentication flows (ADMIN_NO_SRP_AUTH, CUSTOM_AUTH_FLOW_ONLY, USER_PASSWORD_AUTH, ALLOW_ADMIN_USER_PASSWORD_AUTH, ALLOW_CUSTOM_AUTH, ALLOW_USER_PASSWORD_AUTH, ALLOW_USER_SRP_AUTH, ALLOW_REFRESH_TOKEN_AUTH).'
            generate_secret: '- (Optional) Should an application secret be generated.'
            id: '- ID of the user pool client.'
            id_token_validity: '- (Optional) Time limit, between 5 minutes and 1 day, after which the ID token is no longer valid and cannot be used. This value will be overridden if you have entered a value in token_validity_units.'
            logout_urls: '- (Optional) List of allowed logout URLs for the identity providers.'
            name: '- (Required) Name of the application client.'
            prevent_user_existence_errors: '- (Optional) Choose which errors and responses are returned by Cognito APIs during authentication, account confirmation, and password recovery when the user does not exist in the user pool. When set to ENABLED and the user does not exist, authentication returns an error indicating either the username or password was incorrect, and account confirmation and password recovery return a response indicating a code was sent to a simulated destination. When set to LEGACY, those APIs will return a UserNotFoundException exception if the user does not exist in the user pool.'
            read_attributes: '- (Optional) List of user pool attributes the application client can read from.'
            refresh_token_validity: '- (Optional) Time limit in days refresh tokens are valid for.'
            supported_identity_providers: '- (Optional) List of provider names for the identity providers that are supported on this client. Uses the provider_name attribute of aws_cognito_identity_provider resource(s), or the equivalent string(s).'
            token_validity_units: '- (Optional) Configuration block for units in which the validity times are represented in. Detailed below.'
            token_validity_units.access_token: '- (Optional) Time unit in for the value in access_token_validity, defaults to hours.'
            token_validity_units.id_token: '- (Optional) Time unit in for the value in id_token_validity, defaults to hours.'
            token_validity_units.refresh_token: '- (Optional) Time unit in for the value in refresh_token_validity, defaults to days.'
            user_pool_id: '- (Required) User pool the client belongs to.'
            write_attributes: '- (Optional) List of user pool attributes the application client can write to.'
        importStatements: []
    aws_cognito_user_pool_domain:
        subCategory: Cognito IDP (Identity Provider)
        description: Provides a Cognito User Pool Domain resource.
        name: aws_cognito_user_pool_domain
        title: aws_cognito_user_pool_domain
        examples:
            - name: main
              manifest: |-
                {
                  "domain": "example-domain",
                  "user_pool_id": "${aws_cognito_user_pool.example.id}"
                }
              references:
                user_pool_id: aws_cognito_user_pool.example.id
              dependencies:
                aws_cognito_user_pool.example: |-
                    {
                      "name": "example-pool"
                    }
            - name: main
              manifest: |-
                {
                  "certificate_arn": "${aws_acm_certificate.cert.arn}",
                  "domain": "example-domain",
                  "user_pool_id": "${aws_cognito_user_pool.example.id}"
                }
              references:
                certificate_arn: aws_acm_certificate.cert.arn
                user_pool_id: aws_cognito_user_pool.example.id
              dependencies:
                aws_cognito_user_pool.example: |-
                    {
                      "name": "example-pool"
                    }
                aws_route53_record.auth-cognito-A: |-
                    {
                      "alias": [
                        {
                          "evaluate_target_health": false,
                          "name": "${aws_cognito_user_pool_domain.main.cloudfront_distribution_arn}",
                          "zone_id": "Z2FDTNDATAQYW2"
                        }
                      ],
                      "name": "${aws_cognito_user_pool_domain.main.domain}",
                      "type": "A",
                      "zone_id": "${data.aws_route53_zone.example.zone_id}"
                    }
        argumentDocs:
            aws_account_id: '- The AWS account ID for the user pool owner.'
            certificate_arn: '- (Optional) The ARN of an ISSUED ACM certificate in us-east-1 for a custom domain.'
            cloudfront_distribution_arn: '- The URL of the CloudFront distribution. This is required to generate the ALIAS aws_route53_record'
            domain: '- (Required) For custom domains, this is the fully-qualified domain name, such as auth.example.com. For Amazon Cognito prefix domains, this is the prefix alone, such as auth.'
            s3_bucket: '- The S3 bucket where the static files for this domain are stored.'
            user_pool_id: '- (Required) The user pool ID.'
            version: '- The app version.'
        importStatements: []
    aws_cognito_user_pool_ui_customization:
        subCategory: Cognito IDP (Identity Provider)
        description: Provides a Cognito User Pool UI Customization resource.
        name: aws_cognito_user_pool_ui_customization
        title: aws_cognito_user_pool_ui_customization
        examples:
            - name: example
              manifest: |-
                {
                  "client_id": "${aws_cognito_user_pool_client.example.id}",
                  "css": ".label-customizable {font-weight: 400;}",
                  "image_file": "${filebase64(\"logo.png\")}",
                  "user_pool_id": "${aws_cognito_user_pool_domain.example.user_pool_id}"
                }
              references:
                client_id: aws_cognito_user_pool_client.example.id
                user_pool_id: aws_cognito_user_pool_domain.example.user_pool_id
              dependencies:
                aws_cognito_user_pool.example: |-
                    {
                      "name": "example"
                    }
                aws_cognito_user_pool_client.example: |-
                    {
                      "name": "example",
                      "user_pool_id": "${aws_cognito_user_pool.example.id}"
                    }
                aws_cognito_user_pool_domain.example: |-
                    {
                      "domain": "example",
                      "user_pool_id": "${aws_cognito_user_pool.example.id}"
                    }
            - name: example
              manifest: |-
                {
                  "css": ".label-customizable {font-weight: 400;}",
                  "image_file": "${filebase64(\"logo.png\")}",
                  "user_pool_id": "${aws_cognito_user_pool_domain.example.user_pool_id}"
                }
              references:
                user_pool_id: aws_cognito_user_pool_domain.example.user_pool_id
              dependencies:
                aws_cognito_user_pool.example: |-
                    {
                      "name": "example"
                    }
                aws_cognito_user_pool_domain.example: |-
                    {
                      "domain": "example",
                      "user_pool_id": "${aws_cognito_user_pool.example.id}"
                    }
        argumentDocs:
            client_id: (Optional) The client ID for the client app. Defaults to ALL. If ALL is specified, the css and/or image_file settings will be used for every client that has no UI customization set previously.
            creation_date: '- The creation date in RFC3339 format for the UI customization.'
            css: (Optional) - The CSS values in the UI customization, provided as a String. At least one of css or image_file is required.
            css_version: '- The CSS version number.'
            image_file: (Optional) - The uploaded logo image for the UI customization, provided as a base64-encoded String. Drift detection is not possible for this argument. At least one of css or image_file is required.
            image_url: '- The logo image URL for the UI customization.'
            last_modified_date: '- The last-modified date in RFC3339 format for the UI customization.'
            user_pool_id: (Required) - The user pool ID for the user pool.
        importStatements: []
    aws_config_aggregate_authorization:
        subCategory: Config
        description: Manages an AWS Config Aggregate Authorization.
        name: aws_config_aggregate_authorization
        title: aws_config_aggregate_authorization
        examples:
            - name: example
              manifest: |-
                {
                  "account_id": "123456789012",
                  "region": "eu-west-2"
                }
        argumentDocs:
            account_id: '- (Required) Account ID'
            arn: '- The ARN of the authorization'
            region: '- (Required) Region'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_config_config_rule:
        subCategory: Config
        description: Provides an AWS Config Rule.
        name: aws_config_config_rule
        title: aws_config_config_rule
        examples:
            - name: r
              manifest: |-
                {
                  "depends_on": [
                    "${aws_config_configuration_recorder.foo}"
                  ],
                  "name": "example",
                  "source": [
                    {
                      "owner": "AWS",
                      "source_identifier": "S3_BUCKET_VERSIONING_ENABLED"
                    }
                  ]
                }
              dependencies:
                aws_config_configuration_recorder.foo: |-
                    {
                      "name": "example",
                      "role_arn": "${aws_iam_role.r.arn}"
                    }
                aws_iam_role.r: |-
                    {
                      "assume_role_policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"config.amazonaws.com\"\n      },\n      \"Effect\": \"Allow\",\n      \"Sid\": \"\"\n    }\n  ]\n}\n",
                      "name": "my-awsconfig-role"
                    }
                aws_iam_role_policy.p: |-
                    {
                      "name": "my-awsconfig-policy",
                      "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n  \t{\n  \t\t\"Action\": \"config:Put*\",\n  \t\t\"Effect\": \"Allow\",\n  \t\t\"Resource\": \"*\"\n\n  \t}\n  ]\n}\n",
                      "role": "${aws_iam_role.r.id}"
                    }
            - name: example
              manifest: |-
                {
                  "depends_on": [
                    "${aws_config_configuration_recorder.example}",
                    "${aws_lambda_permission.example}"
                  ],
                  "source": [
                    {
                      "owner": "CUSTOM_LAMBDA",
                      "source_identifier": "${aws_lambda_function.example.arn}"
                    }
                  ]
                }
              references:
                source.source_identifier: aws_lambda_function.example.arn
              dependencies:
                aws_config_configuration_recorder.example: '{}'
                aws_lambda_function.example: '{}'
                aws_lambda_permission.example: |-
                    {
                      "action": "lambda:InvokeFunction",
                      "function_name": "${aws_lambda_function.example.arn}",
                      "principal": "config.amazonaws.com",
                      "statement_id": "AllowExecutionFromConfig"
                    }
            - name: example
              manifest: |-
                {
                  "name": "example",
                  "source": [
                    {
                      "custom_policy_details": [
                        {
                          "policy_runtime": "guard-2.x.x",
                          "policy_text": "\t  rule tableisactive when\n\t\t  resourceType == \"AWS::DynamoDB::Table\" {\n\t\t  configuration.tableStatus == ['ACTIVE']\n\t  }\n\t  \n\t  rule checkcompliance when\n\t\t  resourceType == \"AWS::DynamoDB::Table\"\n\t\t  tableisactive {\n\t\t\t  supplementaryConfiguration.ContinuousBackupsDescription.pointInTimeRecoveryDescription.pointInTimeRecoveryStatus == \"ENABLED\"\n\t  }\n"
                        }
                      ],
                      "owner": "CUSTOM_POLICY",
                      "source_detail": [
                        {
                          "message_type": "ConfigurationItemChangeNotification"
                        }
                      ]
                    }
                  ]
                }
        argumentDocs:
            ConfigurationItemChangeNotification: '- Triggers an evaluation when AWS Config delivers a configuration item as a result of a resource change.'
            ConfigurationSnapshotDeliveryCompleted: '- Triggers a periodic evaluation when AWS Config delivers a configuration snapshot.'
            OversizedConfigurationItemChangeNotification: '- Triggers an evaluation when AWS Config delivers an oversized configuration item. AWS Config may generate this notification type when a resource changes and the notification exceeds the maximum size allowed by Amazon SNS.'
            ScheduledNotification: '- Triggers a periodic evaluation at the frequency specified for maximum_execution_frequency.'
            arn: '- The ARN of the config rule'
            compliance_resource_id: '- (Optional) The IDs of the only AWS resource that you want to trigger an evaluation for the rule. If you specify a resource ID, you must specify one resource type for compliance_resource_types.'
            compliance_resource_types: '- (Optional) A list of resource types of only those AWS resources that you want to trigger an evaluation for the ruleE.g., AWS::EC2::Instance. You can only specify one type if you also specify a resource ID for compliance_resource_id. See relevant part of AWS Docs for available types.'
            custom_policy_details: '- (Optional) Provides the runtime system, policy definition, and whether debug logging is enabled. Required when owner is set to CUSTOM_POLICY. See Custom Policy Details Below.'
            description: '- (Optional) Description of the rule'
            enable_debug_log_delivery: '- (Optional) The boolean expression for enabling debug logging for your Config Custom Policy rule. The default value is false.'
            event_source: '- (Optional) The source of the event, such as an AWS service, that triggers AWS Config to evaluate your AWSresources. This defaults to aws.config and is the only valid value.'
            input_parameters: '- (Optional) A string in JSON format that is passed to the AWS Config rule Lambda function.'
            maximum_execution_frequency: '- (Optional) The maximum frequency with which AWS Config runs evaluations for a rule.'
            message_type: '- (Optional) The type of notification that triggers AWS Config to run an evaluation for a rule. You canspecify the following notification types:'
            name: '- (Required) The name of the rule'
            owner: '- (Required) Indicates whether AWS or the customer owns and manages the AWS Config rule. Valid values are AWS, CUSTOM_LAMBDA or CUSTOM_POLICY. For more information about managed rules, see the AWS Config Managed Rules documentation. For more information about custom rules, see the AWS Config Custom Rules documentation. Custom Lambda Functions require permissions to allow the AWS Config service to invoke them, e.g., via the aws_lambda_permission resource.'
            policy_runtime: '- (Required) The runtime system for your Config Custom Policy rule. Guard is a policy-as-code language that allows you to write policies that are enforced by Config Custom Policy rules. For more information about Guard, see the Guard GitHub Repository.'
            policy_text: '- (Required) The policy definition containing the logic for your Config Custom Policy rule.'
            rule_id: '- The ID of the config rule'
            scope: '- (Optional) Scope defines which resources can trigger an evaluation for the rule. See Source Below.'
            source: '- (Required) Source specifies the rule owner, the rule identifier, and the notifications that cause the function to evaluate your AWS resources. See Scope Below.'
            source_detail: '- (Optional) Provides the source and type of the event that causes AWS Config to evaluate your AWS resources. Only valid if owner is CUSTOM_LAMBDA or CUSTOM_POLICY. See Source Detail Below.'
            source_identifier: '- (Optional) For AWS Config managed rules, a predefined identifier, e.g IAM_PASSWORD_POLICY. For custom Lambda rules, the identifier is the ARN of the Lambda Function, such as arn:aws:lambda:us-east-1:123456789012:function:custom_rule_name or the arn attribute of the aws_lambda_function resource.'
            tag_key: '- (Optional, Required if tag_value is specified) The tag key that is applied to only those AWS resources that you want you want to trigger an evaluation for the rule.'
            tag_value: '- (Optional) The tag value applied to only those AWS resources that you want to trigger an evaluation for the rule.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_config_configuration_aggregator:
        subCategory: Config
        description: Manages an AWS Config Configuration Aggregator.
        name: aws_config_configuration_aggregator
        title: aws_config_configuration_aggregator
        examples:
            - name: account
              manifest: |-
                {
                  "account_aggregation_source": [
                    {
                      "account_ids": [
                        "123456789012"
                      ],
                      "regions": [
                        "us-west-2"
                      ]
                    }
                  ],
                  "name": "example"
                }
            - name: organization
              manifest: |-
                {
                  "depends_on": [
                    "${aws_iam_role_policy_attachment.organization}"
                  ],
                  "name": "example",
                  "organization_aggregation_source": [
                    {
                      "all_regions": true,
                      "role_arn": "${aws_iam_role.organization.arn}"
                    }
                  ]
                }
              references:
                organization_aggregation_source.role_arn: aws_iam_role.organization.arn
              dependencies:
                aws_iam_role.organization: |-
                    {
                      "assume_role_policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Principal\": {\n        \"Service\": \"config.amazonaws.com\"\n      },\n      \"Action\": \"sts:AssumeRole\"\n    }\n  ]\n}\n",
                      "name": "example"
                    }
                aws_iam_role_policy_attachment.organization: |-
                    {
                      "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSConfigRoleForOrganizations",
                      "role": "${aws_iam_role.organization.name}"
                    }
        argumentDocs:
            account_aggregation_source: '- (Optional) The account(s) to aggregate config data from as documented below.'
            account_aggregation_source.account_ids: '- (Required) List of 12-digit account IDs of the account(s) being aggregated.'
            account_aggregation_source.all_regions: '- (Optional) If true, aggregate existing AWS Config regions and future regions.'
            account_aggregation_source.regions: '- (Optional) List of source regions being aggregated.'
            arn: '- The ARN of the aggregator'
            name: '- (Required) The name of the configuration aggregator.'
            organization_aggregation_source: '- (Optional) The organization to aggregate config data from as documented below.'
            organization_aggregation_source.all_regions: '- (Optional) If true, aggregate existing AWS Config regions and future regions.'
            organization_aggregation_source.regions: '- (Optional) List of source regions being aggregated.'
            organization_aggregation_source.role_arn: '- (Required) ARN of the IAM role used to retrieve AWS Organization details associated with the aggregator account.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_config_configuration_recorder:
        subCategory: Config
        description: Provides an AWS Config Configuration Recorder.
        name: aws_config_configuration_recorder
        title: aws_config_configuration_recorder
        examples:
            - name: foo
              manifest: |-
                {
                  "name": "example",
                  "role_arn": "${aws_iam_role.r.arn}"
                }
              references:
                role_arn: aws_iam_role.r.arn
              dependencies:
                aws_iam_role.r: |-
                    {
                      "assume_role_policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"config.amazonaws.com\"\n      },\n      \"Effect\": \"Allow\",\n      \"Sid\": \"\"\n    }\n  ]\n}\n",
                      "name": "awsconfig-example"
                    }
        argumentDocs:
            id: '- Name of the recorder'
            name: '- (Optional) The name of the recorder. Defaults to default. Changing it recreates the resource.'
            recording_group: '- (Optional) Recording group - see below.'
            recording_group.all_supported: '- (Optional) Specifies whether AWS Config records configuration changes for every supported type of regional resource (which includes any new type that will become supported in the future). Conflicts with resource_types. Defaults to true.'
            recording_group.include_global_resource_types: '- (Optional) Specifies whether AWS Config includes all supported types of global resources with the resources that it records. Requires all_supported = true. Conflicts with resource_types.'
            recording_group.resource_types: '- (Optional) A list that specifies the types of AWS resources for which AWS Config records configuration changes (for example, AWS::EC2::Instance or AWS::CloudTrail::Trail). See relevant part of AWS Docs for available types. In order to use this attribute, all_supported must be set to false.'
            role_arn: '- (Required) Amazon Resource Name (ARN) of the IAM role. Used to make read or write requests to the delivery channel and to describe the AWS resources associated with the account. See AWS Docs for more details.'
        importStatements: []
    aws_config_configuration_recorder_status:
        subCategory: Config
        description: Manages status of an AWS Config Configuration Recorder.
        name: aws_config_configuration_recorder_status
        title: aws_config_configuration_recorder_status
        examples:
            - name: foo
              manifest: |-
                {
                  "depends_on": [
                    "${aws_config_delivery_channel.foo}"
                  ],
                  "is_enabled": true,
                  "name": "${aws_config_configuration_recorder.foo.name}"
                }
              references:
                name: aws_config_configuration_recorder.foo.name
              dependencies:
                aws_config_configuration_recorder.foo: |-
                    {
                      "name": "example",
                      "role_arn": "${aws_iam_role.r.arn}"
                    }
                aws_config_delivery_channel.foo: |-
                    {
                      "name": "example",
                      "s3_bucket_name": "${aws_s3_bucket.b.bucket}"
                    }
                aws_iam_role.r: |-
                    {
                      "assume_role_policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"config.amazonaws.com\"\n      },\n      \"Effect\": \"Allow\",\n      \"Sid\": \"\"\n    }\n  ]\n}\n",
                      "name": "example-awsconfig"
                    }
                aws_iam_role_policy.p: |-
                    {
                      "name": "awsconfig-example",
                      "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": [\n        \"s3:*\"\n      ],\n      \"Effect\": \"Allow\",\n      \"Resource\": [\n        \"${aws_s3_bucket.b.arn}\",\n        \"${aws_s3_bucket.b.arn}/*\"\n      ]\n    }\n  ]\n}\n",
                      "role": "${aws_iam_role.r.id}"
                    }
                aws_iam_role_policy_attachment.a: |-
                    {
                      "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSConfigRole",
                      "role": "${aws_iam_role.r.name}"
                    }
                aws_s3_bucket.b: |-
                    {
                      "bucket": "awsconfig-example"
                    }
        argumentDocs:
            is_enabled: '- (Required) Whether the configuration recorder should be enabled or disabled.'
            name: '- (Required) The name of the recorder'
        importStatements: []
    aws_config_conformance_pack:
        subCategory: Config
        description: Manages a Config Conformance Pack
        name: aws_config_conformance_pack
        title: aws_config_conformance_pack
        examples:
            - name: example
              manifest: |-
                {
                  "depends_on": [
                    "${aws_config_configuration_recorder.example}"
                  ],
                  "input_parameter": [
                    {
                      "parameter_name": "AccessKeysRotatedParameterMaxAccessKeyAge",
                      "parameter_value": "90"
                    }
                  ],
                  "name": "example",
                  "template_body": "Parameters:\n  AccessKeysRotatedParameterMaxAccessKeyAge:\n    Type: String\nResources:\n  IAMPasswordPolicy:\n    Properties:\n      ConfigRuleName: IAMPasswordPolicy\n      Source:\n        Owner: AWS\n        SourceIdentifier: IAM_PASSWORD_POLICY\n    Type: AWS::Config::ConfigRule\n"
                }
            - name: example
              manifest: |-
                {
                  "depends_on": [
                    "${aws_config_configuration_recorder.example}"
                  ],
                  "name": "example",
                  "template_s3_uri": "s3://${aws_s3_bucket.example.bucket}/${aws_s3_object.example.key}"
                }
              dependencies:
                aws_s3_bucket.example: |-
                    {
                      "bucket": "example"
                    }
                aws_s3_object.example: |-
                    {
                      "bucket": "${aws_s3_bucket.example.id}",
                      "content": "Resources:\n  IAMPasswordPolicy:\n    Properties:\n      ConfigRuleName: IAMPasswordPolicy\n      Source:\n        Owner: AWS\n        SourceIdentifier: IAM_PASSWORD_POLICY\n    Type: AWS::Config::ConfigRule\n",
                      "key": "example-key"
                    }
        argumentDocs:
            arn: '- Amazon Resource Name (ARN) of the conformance pack.'
            delivery_s3_bucket: '- (Optional) Amazon S3 bucket where AWS Config stores conformance pack templates. Maximum length of 63.'
            delivery_s3_key_prefix: '- (Optional) The prefix for the Amazon S3 bucket. Maximum length of 1024.'
            input_parameter: '- (Optional) Set of configuration blocks describing input parameters passed to the conformance pack template. Documented below. When configured, the parameters must also be included in the template_body or in the template stored in Amazon S3 if using template_s3_uri.'
            input_parameter.parameter_name: '- (Required) The input key.'
            input_parameter.parameter_value: '- (Required) The input value.'
            name: '- (Required, Forces new resource) The name of the conformance pack. Must begin with a letter and contain from 1 to 256 alphanumeric characters and hyphens.'
            template_body: '- (Optional, required if template_s3_uri is not provided) A string containing full conformance pack template body. Maximum length of 51200. Drift detection is not possible with this argument.'
            template_s3_uri: '- (Optional, required if template_body is not provided) Location of file, e.g., s3://bucketname/prefix, containing the template body. The uri must point to the conformance pack template that is located in an Amazon S3 bucket in the same region as the conformance pack. Maximum length of 1024. Drift detection is not possible with this argument.'
        importStatements: []
    aws_config_delivery_channel:
        subCategory: Config
        description: Provides an AWS Config Delivery Channel.
        name: aws_config_delivery_channel
        title: aws_config_delivery_channel
        examples:
            - name: foo
              manifest: |-
                {
                  "depends_on": [
                    "${aws_config_configuration_recorder.foo}"
                  ],
                  "name": "example",
                  "s3_bucket_name": "${aws_s3_bucket.b.bucket}"
                }
              references:
                s3_bucket_name: aws_s3_bucket.b.bucket
              dependencies:
                aws_config_configuration_recorder.foo: |-
                    {
                      "name": "example",
                      "role_arn": "${aws_iam_role.r.arn}"
                    }
                aws_iam_role.r: |-
                    {
                      "assume_role_policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"config.amazonaws.com\"\n      },\n      \"Effect\": \"Allow\",\n      \"Sid\": \"\"\n    }\n  ]\n}\n",
                      "name": "awsconfig-example"
                    }
                aws_iam_role_policy.p: |-
                    {
                      "name": "awsconfig-example",
                      "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": [\n        \"s3:*\"\n      ],\n      \"Effect\": \"Allow\",\n      \"Resource\": [\n        \"${aws_s3_bucket.b.arn}\",\n        \"${aws_s3_bucket.b.arn}/*\"\n      ]\n    }\n  ]\n}\n",
                      "role": "${aws_iam_role.r.id}"
                    }
                aws_s3_bucket.b: |-
                    {
                      "bucket": "example-awsconfig",
                      "force_destroy": true
                    }
        argumentDocs:
            id: '- The name of the delivery channel.'
            name: '- (Optional) The name of the delivery channel. Defaults to default. Changing it recreates the resource.'
            s3_bucket_name: '- (Required) The name of the S3 bucket used to store the configuration history.'
            s3_key_prefix: '- (Optional) The prefix for the specified S3 bucket.'
            s3_kms_key_arn: '- (Optional) The ARN of the AWS KMS key used to encrypt objects delivered by AWS Config. Must belong to the same Region as the destination S3 bucket.'
            snapshot_delivery_properties: '- (Optional) Options for how AWS Config delivers configuration snapshots. See below'
            snapshot_delivery_properties.delivery_frequency: '- (Optional) - The frequency with which AWS Config recurringly delivers configuration snapshotsE.g., One_Hour or Three_Hours. Valid values are listed here.'
            sns_topic_arn: '- (Optional) The ARN of the SNS topic that AWS Config delivers notifications to.'
        importStatements: []
    aws_config_organization_conformance_pack:
        subCategory: Config
        description: Manages a Config Organization Conformance Pack
        name: aws_config_organization_conformance_pack
        title: aws_config_organization_conformance_pack
        examples:
            - name: example
              manifest: |-
                {
                  "depends_on": [
                    "${aws_config_configuration_recorder.example}",
                    "${aws_organizations_organization.example}"
                  ],
                  "input_parameter": [
                    {
                      "parameter_name": "AccessKeysRotatedParameterMaxAccessKeyAge",
                      "parameter_value": "90"
                    }
                  ],
                  "name": "example",
                  "template_body": "Parameters:\n  AccessKeysRotatedParameterMaxAccessKeyAge:\n    Type: String\nResources:\n  IAMPasswordPolicy:\n    Properties:\n      ConfigRuleName: IAMPasswordPolicy\n      Source:\n        Owner: AWS\n        SourceIdentifier: IAM_PASSWORD_POLICY\n    Type: AWS::Config::ConfigRule\n"
                }
              dependencies:
                aws_organizations_organization.example: |-
                    {
                      "aws_service_access_principals": [
                        "config-multiaccountsetup.amazonaws.com"
                      ],
                      "feature_set": "ALL"
                    }
            - name: example
              manifest: |-
                {
                  "depends_on": [
                    "${aws_config_configuration_recorder.example}",
                    "${aws_organizations_organization.example}"
                  ],
                  "name": "example",
                  "template_s3_uri": "s3://${aws_s3_bucket.example.bucket}/${aws_s3_object.example.key}"
                }
              dependencies:
                aws_organizations_organization.example: |-
                    {
                      "aws_service_access_principals": [
                        "config-multiaccountsetup.amazonaws.com"
                      ],
                      "feature_set": "ALL"
                    }
                aws_s3_bucket.example: |-
                    {
                      "bucket": "example"
                    }
                aws_s3_object.example: |-
                    {
                      "bucket": "${aws_s3_bucket.example.id}",
                      "content": "Resources:\n  IAMPasswordPolicy:\n    Properties:\n      ConfigRuleName: IAMPasswordPolicy\n      Source:\n        Owner: AWS\n        SourceIdentifier: IAM_PASSWORD_POLICY\n    Type: AWS::Config::ConfigRule\n",
                      "key": "example-key"
                    }
        argumentDocs:
            arn: '- Amazon Resource Name (ARN) of the organization conformance pack.'
            create: '- (Default 10 minutes) Used for creating conformance pack'
            delete: '- (Default 20 minutes) Used for destroying conformance pack'
            delivery_s3_bucket: '- (Optional) Amazon S3 bucket where AWS Config stores conformance pack templates. Delivery bucket must begin with awsconfigconforms prefix. Maximum length of 63.'
            delivery_s3_key_prefix: '- (Optional) The prefix for the Amazon S3 bucket. Maximum length of 1024.'
            excluded_accounts: '- (Optional) Set of AWS accounts to be excluded from an organization conformance pack while deploying a conformance pack. Maximum of 1000 accounts.'
            id: '- The name of the organization conformance pack.'
            input_parameter: '- (Optional) Set of configuration blocks describing input parameters passed to the conformance pack template. Documented below. When configured, the parameters must also be included in the template_body or in the template stored in Amazon S3 if using template_s3_uri.'
            input_parameter.parameter_name: '- (Required) The input key.'
            input_parameter.parameter_value: '- (Required) The input value.'
            name: '- (Required, Forces new resource) The name of the organization conformance pack. Must begin with a letter and contain from 1 to 128 alphanumeric characters and hyphens.'
            template_body: '- (Optional, Conflicts with template_s3_uri) A string containing full conformance pack template body. Maximum length of 51200. Drift detection is not possible with this argument.'
            template_s3_uri: '- (Optional, Conflicts with template_body) Location of file, e.g., s3://bucketname/prefix, containing the template body. The uri must point to the conformance pack template that is located in an Amazon S3 bucket in the same region as the conformance pack. Maximum length of 1024. Drift detection is not possible with this argument.'
            update: '- (Default 10 minutes) Used for conformance pack modifications'
        importStatements: []
    aws_config_organization_custom_rule:
        subCategory: Config
        description: Manages a Config Organization Custom Rule
        name: aws_config_organization_custom_rule
        title: aws_config_organization_custom_rule
        examples:
            - name: example
              manifest: |-
                {
                  "depends_on": [
                    "${aws_lambda_permission.example}",
                    "${aws_organizations_organization.example}"
                  ],
                  "lambda_function_arn": "${aws_lambda_function.example.arn}",
                  "name": "example",
                  "trigger_types": [
                    "ConfigurationItemChangeNotification"
                  ]
                }
              references:
                lambda_function_arn: aws_lambda_function.example.arn
              dependencies:
                aws_lambda_permission.example: |-
                    {
                      "action": "lambda:InvokeFunction",
                      "function_name": "${aws_lambda_function.example.arn}",
                      "principal": "config.amazonaws.com",
                      "statement_id": "AllowExecutionFromConfig"
                    }
                aws_organizations_organization.example: |-
                    {
                      "aws_service_access_principals": [
                        "config-multiaccountsetup.amazonaws.com"
                      ],
                      "feature_set": "ALL"
                    }
        argumentDocs:
            arn: '- Amazon Resource Name (ARN) of the rule'
            create: '- (Default 5m) How long to wait for the rule to be created.'
            delete: '- (Default 5m) How long to wait for the rule to be deleted.'
            description: '- (Optional) Description of the rule'
            excluded_accounts: '- (Optional) List of AWS account identifiers to exclude from the rule'
            input_parameters: '- (Optional) A string in JSON format that is passed to the AWS Config Rule Lambda Function'
            lambda_function_arn: '- (Required) Amazon Resource Name (ARN) of the rule Lambda Function'
            maximum_execution_frequency: '- (Optional) The maximum frequency with which AWS Config runs evaluations for a rule, if the rule is triggered at a periodic frequency. Defaults to TwentyFour_Hours for periodic frequency triggered rules. Valid values: One_Hour, Three_Hours, Six_Hours, Twelve_Hours, or TwentyFour_Hours.'
            name: '- (Required) The name of the rule'
            resource_id_scope: '- (Optional) Identifier of the AWS resource to evaluate'
            resource_types_scope: '- (Optional) List of types of AWS resources to evaluate'
            tag_key_scope: '- (Optional, Required if tag_value_scope is configured) Tag key of AWS resources to evaluate'
            tag_value_scope: '- (Optional) Tag value of AWS resources to evaluate'
            trigger_types: '- (Required) List of notification types that trigger AWS Config to run an evaluation for the rule. Valid values: ConfigurationItemChangeNotification, OversizedConfigurationItemChangeNotification, and ScheduledNotification'
            update: '- (Default 5m) How long to wait for the rule to be updated.'
        importStatements: []
    aws_config_organization_managed_rule:
        subCategory: Config
        description: Manages a Config Organization Managed Rule
        name: aws_config_organization_managed_rule
        title: aws_config_organization_managed_rule
        examples:
            - name: example
              manifest: |-
                {
                  "depends_on": [
                    "${aws_organizations_organization.example}"
                  ],
                  "name": "example",
                  "rule_identifier": "IAM_PASSWORD_POLICY"
                }
              dependencies:
                aws_organizations_organization.example: |-
                    {
                      "aws_service_access_principals": [
                        "config-multiaccountsetup.amazonaws.com"
                      ],
                      "feature_set": "ALL"
                    }
        argumentDocs:
            arn: '- Amazon Resource Name (ARN) of the rule'
            create: '- (Default 5m) How long to wait for the rule to be created.'
            delete: '- (Default 5m) How long to wait for the rule to be deleted.'
            description: '- (Optional) Description of the rule'
            excluded_accounts: '- (Optional) List of AWS account identifiers to exclude from the rule'
            input_parameters: '- (Optional) A string in JSON format that is passed to the AWS Config Rule Lambda Function'
            maximum_execution_frequency: '- (Optional) The maximum frequency with which AWS Config runs evaluations for a rule, if the rule is triggered at a periodic frequency. Defaults to TwentyFour_Hours for periodic frequency triggered rules. Valid values: One_Hour, Three_Hours, Six_Hours, Twelve_Hours, or TwentyFour_Hours.'
            name: '- (Required) The name of the rule'
            resource_id_scope: '- (Optional) Identifier of the AWS resource to evaluate'
            resource_types_scope: '- (Optional) List of types of AWS resources to evaluate'
            rule_identifier: '- (Required) Identifier of an available AWS Config Managed Rule to call. For available values, see the List of AWS Config Managed Rules documentation'
            tag_key_scope: '- (Optional, Required if tag_value_scope is configured) Tag key of AWS resources to evaluate'
            tag_value_scope: '- (Optional) Tag value of AWS resources to evaluate'
            update: '- (Default 5m) How long to wait for the rule to be updated.'
        importStatements: []
    aws_config_remediation_configuration:
        subCategory: Config
        description: Provides an AWS Config Remediation Configuration.
        name: aws_config_remediation_configuration
        title: aws_config_remediation_configuration
        examples:
            - name: this
              manifest: |-
                {
                  "automatic": true,
                  "config_rule_name": "${aws_config_config_rule.this.name}",
                  "execution_controls": [
                    {
                      "ssm_controls": [
                        {
                          "concurrent_execution_rate_percentage": 25,
                          "error_percentage": 20
                        }
                      ]
                    }
                  ],
                  "maximum_automatic_attempts": 10,
                  "parameter": [
                    {
                      "name": "AutomationAssumeRole",
                      "static_value": "arn:aws:iam::875924563244:role/security_config"
                    },
                    {
                      "name": "BucketName",
                      "resource_value": "RESOURCE_ID"
                    },
                    {
                      "name": "SSEAlgorithm",
                      "static_value": "AES256"
                    }
                  ],
                  "resource_type": "AWS::S3::Bucket",
                  "retry_attempt_seconds": 600,
                  "target_id": "AWS-EnableS3BucketEncryption",
                  "target_type": "SSM_DOCUMENT",
                  "target_version": "1"
                }
              references:
                config_rule_name: aws_config_config_rule.this.name
              dependencies:
                aws_config_config_rule.this: |-
                    {
                      "name": "example",
                      "source": [
                        {
                          "owner": "AWS",
                          "source_identifier": "S3_BUCKET_VERSIONING_ENABLED"
                        }
                      ]
                    }
        argumentDocs:
            arn: '- ARN of the Config Remediation Configuration.'
            automatic: '- (Optional) Remediation is triggered automatically if true.'
            config_rule_name: '- (Required) Name of the AWS Config rule.'
            execution_controls: '- (Optional) Configuration block for execution controls. See below.'
            execution_controls.ssm_controls: '- (Required) Configuration block for SSM controls. See below.'
            execution_controls.ssm_controls.concurrent_execution_rate_percentage: '- (Optional) Maximum percentage of remediation actions allowed to run in parallel on the non-compliant resources for that specific rule. The default value is 10%.'
            execution_controls.ssm_controls.error_percentage: '- (Optional) Percentage of errors that are allowed before SSM stops running automations on non-compliant resources for that specific rule. The default is 50%.'
            maximum_automatic_attempts: '- (Optional) Maximum number of failed attempts for auto-remediation. If you do not select a number, the default is 5.'
            parameter: '- (Optional) Can be specified multiple times for each parameter. Each parameter block supports arguments below.'
            parameter.name: '- (Required) Name of the attribute.'
            parameter.resource_value: '- (Optional) Value is dynamic and changes at run-time.'
            parameter.static_value: '- (Optional) Value is static and does not change at run-time.'
            parameter.static_values: '- (Optional) List of static values.'
            resource_type: '- (Optional) Type of resource.'
            retry_attempt_seconds: '- (Optional) Maximum time in seconds that AWS Config runs auto-remediation. If you do not select a number, the default is 60 seconds.'
            target_id: '- (Required) Target ID is the name of the public document.'
            target_type: '- (Required) Type of the target. Target executes remediation. For example, SSM document.'
            target_version: '- (Optional) Version of the target. For example, version of the SSM document'
        importStatements: []
    aws_connect_bot_association:
        subCategory: Connect
        description: Associates an Amazon Connect instance to an Amazon Lex (V1) bot
        name: aws_connect_bot_association
        title: aws_connect_bot_association
        examples:
            - name: example
              manifest: |-
                {
                  "instance_id": "${aws_connect_instance.example.id}",
                  "lex_bot": [
                    {
                      "lex_region": "us-west-2",
                      "name": "Test"
                    }
                  ]
                }
              references:
                instance_id: aws_connect_instance.example.id
            - name: example
              manifest: |-
                {
                  "instance_id": "${aws_connect_instance.example.id}",
                  "lex_bot": [
                    {
                      "lex_region": "${data.aws_region.current.name}",
                      "name": "${aws_lex_bot.example.name}"
                    }
                  ]
                }
              references:
                instance_id: aws_connect_instance.example.id
                lex_bot.lex_region: data.aws_region.current.name
                lex_bot.name: aws_lex_bot.example.name
              dependencies:
                aws_lex_bot.example: |-
                    {
                      "abort_statement": [
                        {
                          "message": [
                            {
                              "content": "Sorry, I am not able to assist at this time.",
                              "content_type": "PlainText"
                            }
                          ]
                        }
                      ],
                      "child_directed": false,
                      "clarification_prompt": [
                        {
                          "max_attempts": 2,
                          "message": [
                            {
                              "content": "I didn't understand you, what would you like to do?",
                              "content_type": "PlainText"
                            }
                          ]
                        }
                      ],
                      "intent": [
                        {
                          "intent_name": "${aws_lex_intent.example.name}",
                          "intent_version": "1"
                        }
                      ],
                      "name": "connect_lex_bot",
                      "process_behavior": "BUILD"
                    }
                aws_lex_intent.example: |-
                    {
                      "create_version": true,
                      "fulfillment_activity": [
                        {
                          "type": "ReturnIntent"
                        }
                      ],
                      "name": "connect_lex_intent",
                      "sample_utterances": [
                        "I would like to pick up flowers."
                      ]
                    }
        argumentDocs:
            id: '- The Amazon Connect instance ID, Lex (V1) bot name, and Lex (V1) bot region separated by colons (:).'
            instance_id: '- (Required) The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.'
            lex_bot: '- (Required) Configuration information of an Amazon Lex (V1) bot. Detailed below.'
            lex_bot.lex_region: '- (Optional) The Region that the Amazon Lex (V1) bot was created in. Defaults to current region.'
            lex_bot.name: '- (Required) The name of the Amazon Lex (V1) bot.'
        importStatements: []
    aws_connect_contact_flow:
        subCategory: Connect
        description: Provides details about a specific Amazon Connect Contact Flow.
        name: aws_connect_contact_flow
        title: aws_connect_contact_flow
        examples:
            - name: test
              manifest: |-
                {
                  "content": "\t{\n\t\t\"Version\": \"2019-10-30\",\n\t\t\"StartAction\": \"12345678-1234-1234-1234-123456789012\",\n\t\t\"Actions\": [\n\t\t\t{\n\t\t\t\t\"Identifier\": \"12345678-1234-1234-1234-123456789012\",\n\t\t\t\t\"Type\": \"MessageParticipant\",\n\t\t\t\t\"Transitions\": {\n\t\t\t\t\t\"NextAction\": \"abcdef-abcd-abcd-abcd-abcdefghijkl\",\n\t\t\t\t\t\"Errors\": [],\n\t\t\t\t\t\"Conditions\": []\n\t\t\t\t},\n\t\t\t\t\"Parameters\": {\n\t\t\t\t\t\"Text\": \"Thanks for calling the sample flow!\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"Identifier\": \"abcdef-abcd-abcd-abcd-abcdefghijkl\",\n\t\t\t\t\"Type\": \"DisconnectParticipant\",\n\t\t\t\t\"Transitions\": {},\n\t\t\t\t\"Parameters\": {}\n\t\t\t}\n\t\t]\n\t}\n",
                  "description": "Test Contact Flow Description",
                  "instance_id": "aaaaaaaa-bbbb-cccc-dddd-111111111111",
                  "name": "Test",
                  "tags": {
                    "Application": "Terraform",
                    "Method": "Create",
                    "Name": "Test Contact Flow"
                  },
                  "type": "CONTACT_FLOW"
                }
            - name: test
              manifest: |-
                {
                  "content_hash": "${filebase64sha256(\"contact_flow.json\")}",
                  "description": "Test Contact Flow Description",
                  "filename": "contact_flow.json",
                  "instance_id": "aaaaaaaa-bbbb-cccc-dddd-111111111111",
                  "name": "Test",
                  "tags": {
                    "Application": "Terraform",
                    "Method": "Create",
                    "Name": "Test Contact Flow"
                  },
                  "type": "CONTACT_FLOW"
                }
        argumentDocs:
            arn: '- The Amazon Resource Name (ARN) of the Contact Flow.'
            contact_flow_id: '- The identifier of the Contact Flow.'
            content: '- (Optional) Specifies the content of the Contact Flow, provided as a JSON string, written in Amazon Connect Contact Flow Language. If defined, the filename argument cannot be used.'
            content_hash: '- (Optional) Used to trigger updates. Must be set to a base64-encoded SHA256 hash of the Contact Flow source specified with filename. The usual way to set this is filebase64sha256("mycontact_flow.json") (Terraform 0.11.12 and later) or base64sha256(file("mycontact_flow.json")) (Terraform 0.11.11 and earlier), where "mycontact_flow.json" is the local filename of the Contact Flow source.'
            description: '- (Optional) Specifies the description of the Contact Flow.'
            filename: '- (Optional) The path to the Contact Flow source within the local filesystem. Conflicts with content.'
            id: '- The identifier of the hosting Amazon Connect Instance and identifier of the Contact Flow separated by a colon (:).'
            instance_id: '- (Required) Specifies the identifier of the hosting Amazon Connect Instance.'
            name: '- (Required) Specifies the name of the Contact Flow.'
            tags: '- (Optional) Tags to apply to the Contact Flow. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            type: '- (Optional) Specifies the type of the Contact Flow. Defaults to CONTACT_FLOW. Allowed Values are: CONTACT_FLOW, CUSTOMER_QUEUE, CUSTOMER_HOLD, CUSTOMER_WHISPER, AGENT_HOLD, AGENT_WHISPER, OUTBOUND_WHISPER, AGENT_TRANSFER, QUEUE_TRANSFER.'
        importStatements:
            - $ aws connect describe-contact-flow --instance-id 1b3c5d8-1b3c-1b3c-1b3c-1b3c5d81b3c5 --contact-flow-id c1d4e5f6-1b3c-1b3c-1b3c-c1d4e5f6c1d4e5 --region us-west-2 | jq '.ContactFlow.Content | fromjson' > contact_flow.json
    aws_connect_contact_flow_module:
        subCategory: Connect
        description: Provides details about a specific Amazon Connect Contact Flow Module.
        name: aws_connect_contact_flow_module
        title: aws_connect_contact_flow_module
        examples:
            - name: example
              manifest: |-
                {
                  "content": "    {\n\t\t\"Version\": \"2019-10-30\",\n\t\t\"StartAction\": \"12345678-1234-1234-1234-123456789012\",\n\t\t\"Actions\": [\n\t\t\t{\n\t\t\t\t\"Identifier\": \"12345678-1234-1234-1234-123456789012\",\n\t\t\t\t\"Parameters\": {\n\t\t\t\t\t\"Text\": \"Hello contact flow module\"\n\t\t\t\t},\n\t\t\t\t\"Transitions\": {\n\t\t\t\t\t\"NextAction\": \"abcdef-abcd-abcd-abcd-abcdefghijkl\",\n\t\t\t\t\t\"Errors\": [],\n\t\t\t\t\t\"Conditions\": []\n\t\t\t\t},\n\t\t\t\t\"Type\": \"MessageParticipant\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"Identifier\": \"abcdef-abcd-abcd-abcd-abcdefghijkl\",\n\t\t\t\t\"Type\": \"DisconnectParticipant\",\n\t\t\t\t\"Parameters\": {},\n\t\t\t\t\"Transitions\": {}\n\t\t\t}\n\t\t],\n\t\t\"Settings\": {\n\t\t\t\"InputParameters\": [],\n\t\t\t\"OutputParameters\": [],\n\t\t\t\"Transitions\": [\n\t\t\t\t{\n\t\t\t\t\t\"DisplayName\": \"Success\",\n\t\t\t\t\t\"ReferenceName\": \"Success\",\n\t\t\t\t\t\"Description\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"DisplayName\": \"Error\",\n\t\t\t\t\t\"ReferenceName\": \"Error\",\n\t\t\t\t\t\"Description\": \"\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t}\n",
                  "description": "Example Contact Flow Module Description",
                  "instance_id": "aaaaaaaa-bbbb-cccc-dddd-111111111111",
                  "name": "Example",
                  "tags": {
                    "Application": "Terraform",
                    "Method": "Create",
                    "Name": "Example Contact Flow Module"
                  }
                }
            - name: example
              manifest: |-
                {
                  "content_hash": "${filebase64sha256(\"contact_flow_module.json\")}",
                  "description": "Example Contact Flow Module Description",
                  "filename": "contact_flow_module.json",
                  "instance_id": "aaaaaaaa-bbbb-cccc-dddd-111111111111",
                  "name": "Example",
                  "tags": {
                    "Application": "Terraform",
                    "Method": "Create",
                    "Name": "Example Contact Flow Module"
                  }
                }
        argumentDocs:
            arn: '- The Amazon Resource Name (ARN) of the Contact Flow Module.'
            contact_flow_module_id: '- The identifier of the Contact Flow Module.'
            content: '- (Optional) Specifies the content of the Contact Flow Module, provided as a JSON string, written in Amazon Connect Contact Flow Language. If defined, the filename argument cannot be used.'
            content_hash: '- (Optional) Used to trigger updates. Must be set to a base64-encoded SHA256 hash of the Contact Flow Module source specified with filename. The usual way to set this is filebase64sha256("contact_flow_module.json") (Terraform 0.11.12 and later) or base64sha256(file("contact_flow_module.json")) (Terraform 0.11.11 and earlier), where "contact_flow_module.json" is the local filename of the Contact Flow Module source.'
            description: '- (Optional) Specifies the description of the Contact Flow Module.'
            filename: '- (Optional) The path to the Contact Flow Module source within the local filesystem. Conflicts with content.'
            id: '- The identifier of the hosting Amazon Connect Instance and identifier of the Contact Flow Module separated by a colon (:).'
            instance_id: '- (Required) Specifies the identifier of the hosting Amazon Connect Instance.'
            name: '- (Required) Specifies the name of the Contact Flow Module.'
            tags: '- (Optional) Tags to apply to the Contact Flow Module. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements:
            - $ aws connect describe-contact-flow-module --instance-id 1b3c5d8-1b3c-1b3c-1b3c-1b3c5d81b3c5 --contact-flow-module-id c1d4e5f6-1b3c-1b3c-1b3c-c1d4e5f6c1d4e5 --region us-west-2 | jq '.ContactFlowModule.Content | fromjson' > contact_flow_module.json
    aws_connect_hours_of_operation:
        subCategory: Connect
        description: Provides details about a specific Amazon Connect Hours of Operation.
        name: aws_connect_hours_of_operation
        title: aws_connect_hours_of_operation
        examples:
            - name: test
              manifest: |-
                {
                  "config": [
                    {
                      "day": "MONDAY",
                      "end_time": [
                        {
                          "hours": 23,
                          "minutes": 8
                        }
                      ],
                      "start_time": [
                        {
                          "hours": 8,
                          "minutes": 0
                        }
                      ]
                    },
                    {
                      "day": "TUESDAY",
                      "end_time": [
                        {
                          "hours": 21,
                          "minutes": 0
                        }
                      ],
                      "start_time": [
                        {
                          "hours": 9,
                          "minutes": 0
                        }
                      ]
                    }
                  ],
                  "description": "Monday office hours",
                  "instance_id": "aaaaaaaa-bbbb-cccc-dddd-111111111111",
                  "name": "Office Hours",
                  "tags": {
                    "Name": "Example Hours of Operation"
                  },
                  "time_zone": "EST"
                }
        argumentDocs:
            arn: '- The Amazon Resource Name (ARN) of the Hours of Operation.'
            config: '- (Required) One or more config blocks which define the configuration information for the hours of operation: day, start time, and end time . Config blocks are documented below.'
            config.day: '- (Required) Specifies the day that the hours of operation applies to.'
            config.end_time: '- (Required) A end time block specifies the time that your contact center closes. The end_time is documented below.'
            config.end_time.hours: '- (Required) Specifies the hour of closing.'
            config.end_time.minutes: '- (Required) Specifies the minute of closing.'
            config.start_time: '- (Required) A start time block specifies the time that your contact center opens. The start_time is documented below.'
            description: '- (Optional) Specifies the description of the Hours of Operation.'
            hours_of_operation_arn: '- (Deprecated) The Amazon Resource Name (ARN) of the Hours of Operation.'
            hours_of_operation_id: '- The identifier for the hours of operation.'
            id: '- The identifier of the hosting Amazon Connect Instance and identifier of the Hours of Operation separated by a colon (:).'
            instance_id: '- (Required) Specifies the identifier of the hosting Amazon Connect Instance.'
            name: '- (Required) Specifies the name of the Hours of Operation.'
            start_time.hours: '- (Required) Specifies the hour of opening.'
            start_time.minutes: '- (Required) Specifies the minute of opening.'
            tags: '- (Optional) Tags to apply to the Hours of Operation. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            time_zone: '- (Required) Specifies the time zone of the Hours of Operation.'
        importStatements: []
    aws_connect_instance:
        subCategory: Connect
        description: Provides details about a specific Connect Instance.
        name: aws_connect_instance
        title: aws_connect_instance
        examples:
            - name: test
              manifest: |-
                {
                  "identity_management_type": "CONNECT_MANAGED",
                  "inbound_calls_enabled": true,
                  "instance_alias": "friendly-name-connect",
                  "outbound_calls_enabled": true
                }
            - name: test
              manifest: |-
                {
                  "directory_id": "${aws_directory_service_directory.test.id}",
                  "identity_management_type": "EXISTING_DIRECTORY",
                  "inbound_calls_enabled": true,
                  "instance_alias": "friendly-name-connect",
                  "outbound_calls_enabled": true
                }
              references:
                directory_id: aws_directory_service_directory.test.id
            - name: test
              manifest: |-
                {
                  "identity_management_type": "SAML",
                  "inbound_calls_enabled": true,
                  "instance_alias": "friendly-name-connect",
                  "outbound_calls_enabled": true
                }
        argumentDocs:
            arn: '- Amazon Resource Name (ARN) of the instance.'
            auto_resolve_best_voices_enabled: '- (Optional) Specifies whether auto resolve best voices is enabled. Defaults to true.'
            contact_flow_logs_enabled: '- (Optional) Specifies whether contact flow logs are enabled. Defaults to false.'
            contact_lens_enabled: '- (Optional) Specifies whether contact lens is enabled. Defaults to true.'
            create: '- (Defaults to 5 mins) Used when creating the instance.'
            created_time: '- Specifies when the instance was created.'
            delete: '- (Defaults to 5 mins) Used when deleting the instance.'
            directory_id: '- (Optional) The identifier for the directory if identity_management_type is EXISTING_DIRECTORY.'
            early_media_enabled: '- (Optional) Specifies whether early media for outbound calls is enabled . Defaults to true if outbound calls is enabled.'
            id: '- The identifier of the instance.'
            identity_management_type: '- (Required) Specifies the identity management type attached to the instance. Allowed Values are: SAML, CONNECT_MANAGED, EXISTING_DIRECTORY.'
            inbound_calls_enabled: '- (Required) Specifies whether inbound calls are enabled.'
            instance_alias: '- (Optional) Specifies the name of the instance. Required if directory_id not specified.'
            outbound_calls_enabled: '- (Required) Specifies whether outbound calls are enabled.'
            service_role: '- The service role of the instance.'
            status: '- The state of the instance.'
        importStatements: []
    aws_connect_lambda_function_association:
        subCategory: Connect
        description: Provides details about a specific Connect Lambda Function Association.
        name: aws_connect_lambda_function_association
        title: aws_connect_lambda_function_association
        examples:
            - name: example
              manifest: |-
                {
                  "function_arn": "${aws_lambda_function.example.arn}",
                  "instance_id": "${aws_connect_instance.example.id}"
                }
              references:
                function_arn: aws_lambda_function.example.arn
                instance_id: aws_connect_instance.example.id
        argumentDocs:
            function_arn: '- (Required) Amazon Resource Name (ARN) of the Lambda Function, omitting any version or alias qualifier.'
            id: '- The Amazon Connect instance ID and Lambda Function ARN separated by a comma (,).'
            instance_id: '- (Required) The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.'
        importStatements: []
    aws_connect_queue:
        subCategory: Connect
        description: Provides details about a specific Amazon Connect Queue
        name: aws_connect_queue
        title: aws_connect_queue
        examples:
            - name: test
              manifest: |-
                {
                  "description": "Example Description",
                  "hours_of_operation_id": "12345678-1234-1234-1234-123456789012",
                  "instance_id": "aaaaaaaa-bbbb-cccc-dddd-111111111111",
                  "name": "Example Name",
                  "tags": {
                    "Name": "Example Queue"
                  }
                }
            - name: test
              manifest: |-
                {
                  "description": "Example Description",
                  "hours_of_operation_id": "12345678-1234-1234-1234-123456789012",
                  "instance_id": "aaaaaaaa-bbbb-cccc-dddd-111111111111",
                  "name": "Example Name",
                  "quick_connect_ids": [
                    "12345678-abcd-1234-abcd-123456789012"
                  ],
                  "tags": {
                    "Name": "Example Queue with Quick Connect IDs"
                  }
                }
            - name: test
              manifest: |-
                {
                  "description": "Example Description",
                  "hours_of_operation_id": "12345678-1234-1234-1234-123456789012",
                  "instance_id": "aaaaaaaa-bbbb-cccc-dddd-111111111111",
                  "name": "Example Name",
                  "outbound_caller_config": [
                    {
                      "outbound_caller_id_name": "example",
                      "outbound_caller_id_number_id": "12345678-abcd-1234-abcd-123456789012",
                      "outbound_flow_id": "87654321-defg-1234-defg-987654321234"
                    }
                  ],
                  "tags": {
                    "Name": "Example Queue with Outbound Caller Config"
                  }
                }
        argumentDocs:
            arn: '- The Amazon Resource Name (ARN) of the Queue.'
            description: '- (Optional) Specifies the description of the Queue.'
            hours_of_operation_id: '- (Required) Specifies the identifier of the Hours of Operation.'
            id: '- The identifier of the hosting Amazon Connect Instance and identifier of the Queue separated by a colon (:).'
            instance_id: '- (Required) Specifies the identifier of the hosting Amazon Connect Instance.'
            max_contacts: '- (Optional) Specifies the maximum number of contacts that can be in the queue before it is considered full. Minimum value of 0.'
            name: '- (Required) Specifies the name of the Queue.'
            outbound_caller_config: '- (Required) A block that defines the outbound caller ID name, number, and outbound whisper flow. The Outbound Caller Config block is documented below.'
            outbound_caller_config.outbound_caller_id_name: '- (Optional) Specifies the caller ID name.'
            outbound_caller_config.outbound_caller_id_number_id: '- (Optional) Specifies the caller ID number.'
            outbound_caller_config.outbound_flow_id: '- (Optional) Specifies outbound whisper flow to be used during an outbound call.'
            queue_id: '- The identifier for the Queue.'
            quick_connect_ids: '- (Optional) Specifies a list of quick connects ids that determine the quick connects available to agents who are working the queue.'
            status: '- (Optional) Specifies the description of the Queue. Valid values are ENABLED, DISABLED.'
            tags: '- (Optional) Tags to apply to the Queue. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_connect_quick_connect:
        subCategory: Connect
        description: Provides details about a specific Amazon Quick Connect
        name: aws_connect_quick_connect
        title: aws_connect_quick_connect
        examples:
            - name: test
              manifest: |-
                {
                  "description": "quick connect phone number",
                  "instance_id": "aaaaaaaa-bbbb-cccc-dddd-111111111111",
                  "name": "Example Name",
                  "quick_connect_config": [
                    {
                      "phone_config": [
                        {
                          "phone_number": "+12345678912"
                        }
                      ],
                      "quick_connect_type": "PHONE_NUMBER"
                    }
                  ],
                  "tags": {
                    "Name": "Example Quick Connect"
                  }
                }
        argumentDocs:
            arn: '- The Amazon Resource Name (ARN) of the Quick Connect.'
            description: '- (Optional) Specifies the description of the Quick Connect.'
            id: '- The identifier of the hosting Amazon Connect Instance and identifier of the Quick Connect separated by a colon (:).'
            instance_id: '- (Required) Specifies the identifier of the hosting Amazon Connect Instance.'
            name: '- (Required) Specifies the name of the Quick Connect.'
            queue_config.contact_flow_id: '- (Required) Specifies the identifier of the contact flow.'
            queue_config.queue_id: '- (Required) Specifies the identifier for the queue.'
            quick_connect_config: '- (Required) A block that defines the configuration information for the Quick Connect: quick_connect_type and one of phone_config, queue_config, user_config . The Quick Connect Config block is documented below.'
            quick_connect_config.phone_config: '- (Optional) Specifies the phone configuration of the Quick Connect. This is required only if quick_connect_type is PHONE_NUMBER. The phone_config block is documented below.'
            quick_connect_config.phone_config.phone_number: '- (Required) Specifies the phone number in in E.164 format.'
            quick_connect_config.queue_config: '- (Optional) Specifies the queue configuration of the Quick Connect. This is required only if quick_connect_type is QUEUE. The queue_config block is documented below.'
            quick_connect_config.quick_connect_type: '- (Required) Specifies the configuration type of the quick connect. valid values are PHONE_NUMBER, QUEUE, USER.'
            quick_connect_config.user_config: '- (Optional) Specifies the user configuration of the Quick Connect. This is required only if quick_connect_type is USER. The user_config block is documented below.'
            quick_connect_id: '- The identifier for the Quick Connect.'
            tags: '- (Optional) Tags to apply to the Quick Connect. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            user_config.contact_flow_id: '- (Required) Specifies the identifier of the contact flow.'
            user_config.user_id: '- (Required) Specifies the identifier for the user.'
        importStatements: []
    aws_connect_routing_profile:
        subCategory: Connect
        description: Provides details about a specific Amazon Connect Routing Profile.
        name: aws_connect_routing_profile
        title: aws_connect_routing_profile
        examples:
            - name: example
              manifest: |-
                {
                  "default_outbound_queue_id": "12345678-1234-1234-1234-123456789012",
                  "description": "example description",
                  "instance_id": "aaaaaaaa-bbbb-cccc-dddd-111111111111",
                  "media_concurrencies": [
                    {
                      "channel": "VOICE",
                      "concurrency": 1
                    }
                  ],
                  "name": "example",
                  "queue_configs": [
                    {
                      "channel": "VOICE",
                      "delay": 2,
                      "priority": 1,
                      "queue_id": "12345678-1234-1234-1234-123456789012"
                    }
                  ],
                  "tags": {
                    "Name": "Example Routing Profile"
                  }
                }
        argumentDocs:
            arn: '- The Amazon Resource Name (ARN) of the Routing Profile.'
            default_outbound_queue_id: '- (Required) Specifies the default outbound queue for the Routing Profile.'
            description: '- (Required) Specifies the description of the Routing Profile.'
            id: '- The identifier of the hosting Amazon Connect Instance and identifier of the Routing Profile separated by a colon (:).'
            instance_id: '- (Required) Specifies the identifier of the hosting Amazon Connect Instance.'
            media_concurrencies: '- (Required) One or more media_concurrencies blocks that specify the channels that agents can handle in the Contact Control Panel (CCP) for this Routing Profile. The media_concurrencies block is documented below.'
            media_concurrencies.channel: '- (Required) Specifies the channels that agents can handle in the Contact Control Panel (CCP). Valid values are VOICE, CHAT, TASK.'
            media_concurrencies.concurrency: '- (Required) Specifies the number of contacts an agent can have on a channel simultaneously. Valid Range for VOICE: Minimum value of 1. Maximum value of 1. Valid Range for CHAT: Minimum value of 1. Maximum value of 10. Valid Range for TASK: Minimum value of 1. Maximum value of 10.'
            name: '- (Required) Specifies the name of the Routing Profile.'
            queue_configs: '- (Optional) One or more queue_configs blocks that specify the inbound queues associated with the routing profile. If no queue is added, the agent only can make outbound calls. The queue_configs block is documented below.'
            queue_configs.channel: '- (Required) Specifies the channels agents can handle in the Contact Control Panel (CCP) for this routing profile. Valid values are VOICE, CHAT, TASK.'
            queue_configs.delay: '- (Required) Specifies the delay, in seconds, that a contact should be in the queue before they are routed to an available agent'
            queue_configs.priority: '- (Required) Specifies the order in which contacts are to be handled for the queue.'
            queue_configs.queue_arn: '- Specifies the ARN for the queue.'
            queue_configs.queue_id: '- (Required) Specifies the identifier for the queue.'
            queue_configs.queue_name: '- Specifies the name for the queue.'
            routing_profile_id: '- The identifier for the Routing Profile.'
            tags: |-
                - (Optional) Tags to apply to the Routing Profile. If configured with a provider
                default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_connect_security_profile:
        subCategory: Connect
        description: Provides details about a specific Amazon Connect Security Profile.
        name: aws_connect_security_profile
        title: aws_connect_security_profile
        examples:
            - name: example
              manifest: |-
                {
                  "description": "example description",
                  "instance_id": "aaaaaaaa-bbbb-cccc-dddd-111111111111",
                  "name": "example",
                  "permissions": [
                    "BasicAgentAccess",
                    "OutboundCallAccess"
                  ],
                  "tags": {
                    "Name": "Example Security Profile"
                  }
                }
        argumentDocs:
            arn: '- The Amazon Resource Name (ARN) of the Security Profile.'
            description: '- (Optional) Specifies the description of the Security Profile.'
            id: '- The identifier of the hosting Amazon Connect Instance and identifier of the Security Profile separated by a colon (:).'
            instance_id: '- (Required) Specifies the identifier of the hosting Amazon Connect Instance.'
            name: '- (Required) Specifies the name of the Security Profile.'
            organization_resource_id: '- The organization resource identifier for the security profile.'
            permissions: '- (Optional) Specifies a list of permissions assigned to the security profile.'
            security_profile_id: '- The identifier for the Security Profile.'
            tags: |-
                - (Optional) Tags to apply to the Security Profile. If configured with a provider
                default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_connect_user_hierarchy_group:
        subCategory: Connect
        description: Provides details about a specific Amazon Connect User Hierarchy Group
        name: aws_connect_user_hierarchy_group
        title: aws_connect_user_hierarchy_group
        examples:
            - name: example
              manifest: |-
                {
                  "instance_id": "aaaaaaaa-bbbb-cccc-dddd-111111111111",
                  "name": "example",
                  "tags": {
                    "Name": "Example User Hierarchy Group"
                  }
                }
            - name: parent
              manifest: |-
                {
                  "instance_id": "aaaaaaaa-bbbb-cccc-dddd-111111111111",
                  "name": "parent",
                  "tags": {
                    "Name": "Example User Hierarchy Group Parent"
                  }
                }
            - name: child
              manifest: |-
                {
                  "instance_id": "aaaaaaaa-bbbb-cccc-dddd-111111111111",
                  "name": "child",
                  "parent_group_id": "${aws_connect_user_hierarchy_group.parent.hierarchy_group_id}",
                  "tags": {
                    "Name": "Example User Hierarchy Group Child"
                  }
                }
              references:
                parent_group_id: aws_connect_user_hierarchy_group.parent.hierarchy_group_id
        argumentDocs:
            arn: '- The Amazon Resource Name (ARN) of the hierarchy group.'
            hierarchy_group_id: '- The identifier for the hierarchy group.'
            hierarchy_path: '- A block that contains information about the levels in the hierarchy group. The hierarchy_path block is documented below.'
            hierarchy_path.level_five: '- A block that defines the details of level five. The level block is documented below.'
            hierarchy_path.level_four: '- A block that defines the details of level four. The level block is documented below.'
            hierarchy_path.level_one: '- A block that defines the details of level one. The level block is documented below.'
            hierarchy_path.level_three: '- A block that defines the details of level three. The level block is documented below.'
            hierarchy_path.level_two: '- A block that defines the details of level two. The level block is documented below.'
            id: |-
                - The identifier of the hosting Amazon Connect Instance and identifier of the hierarchy group
                separated by a colon (:).
            instance_id: '- (Required) Specifies the identifier of the hosting Amazon Connect Instance.'
            level_id: '- The identifier of the level in the hierarchy group.'
            name: '- (Required) The name of the user hierarchy group. Must not be more than 100 characters.'
            parent_group_id: '- (Optional) The identifier for the parent hierarchy group. The user hierarchy is created at level one if the parent group ID is null.'
            tags: |-
                - (Optional) Tags to apply to the hierarchy group. If configured with a provider
                default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_connect_user_hierarchy_structure:
        subCategory: Connect
        description: Provides details about a specific Amazon Connect User Hierarchy Structure
        name: aws_connect_user_hierarchy_structure
        title: aws_connect_user_hierarchy_structure
        examples:
            - name: example
              manifest: |-
                {
                  "hierarchy_structure": [
                    {
                      "level_one": [
                        {
                          "name": "levelone"
                        }
                      ]
                    }
                  ],
                  "instance_id": "aaaaaaaa-bbbb-cccc-dddd-111111111111"
                }
            - name: example
              manifest: |-
                {
                  "hierarchy_structure": [
                    {
                      "level_five": [
                        {
                          "name": "levelfive"
                        }
                      ],
                      "level_four": [
                        {
                          "name": "levelfour"
                        }
                      ],
                      "level_one": [
                        {
                          "name": "levelone"
                        }
                      ],
                      "level_three": [
                        {
                          "name": "levelthree"
                        }
                      ],
                      "level_two": [
                        {
                          "name": "leveltwo"
                        }
                      ]
                    }
                  ],
                  "instance_id": "aaaaaaaa-bbbb-cccc-dddd-111111111111"
                }
        argumentDocs:
            arn: '-  The Amazon Resource Name (ARN) of the hierarchy level.'
            hierarchy_structure: '- (Required) A block that defines the hierarchy structure''s levels. The hierarchy_structure block is documented below.'
            hierarchy_structure.level_five: '- (Optional) A block that defines the details of level five. The level block is documented below.'
            hierarchy_structure.level_four: '- (Optional) A block that defines the details of level four. The level block is documented below.'
            hierarchy_structure.level_one: '- (Optional) A block that defines the details of level one. The level block is documented below.'
            hierarchy_structure.level_three: '- (Optional) A block that defines the details of level three. The level block is documented below.'
            hierarchy_structure.level_two: '- (Optional) A block that defines the details of level two. The level block is documented below.'
            id: '- The identifier of the hosting Amazon Connect Instance.'
            instance_id: '- (Required) Specifies the identifier of the hosting Amazon Connect Instance.'
            name: '- (Required) The name of the user hierarchy level. Must not be more than 50 characters.'
        importStatements: []
    aws_cur_report_definition:
        subCategory: Cost and Usage Report
        description: Provides a Cost and Usage Report Definition.
        name: aws_cur_report_definition
        title: aws_cur_report_definition
        examples:
            - name: example_cur_report_definition
              manifest: |-
                {
                  "additional_artifacts": [
                    "REDSHIFT",
                    "QUICKSIGHT"
                  ],
                  "additional_schema_elements": [
                    "RESOURCES"
                  ],
                  "compression": "GZIP",
                  "format": "textORcsv",
                  "report_name": "example-cur-report-definition",
                  "s3_bucket": "example-bucket-name",
                  "s3_region": "us-east-1",
                  "time_unit": "HOURLY"
                }
        argumentDocs:
            additional_artifacts: '- (Required) A list of additional artifacts. Valid values are: REDSHIFT, QUICKSIGHT, ATHENA. When ATHENA exists within additional_artifacts, no other artifact type can be declared and report_versioning must be OVERWRITE_REPORT.'
            additional_schema_elements: '- (Required) A list of schema elements. Valid values are: RESOURCES.'
            arn: '- The Amazon Resource Name (ARN) specifying the cur report.'
            compression: '- (Required) Compression format for report. Valid values are: GZIP, ZIP, Parquet. If Parquet is used, then format must also be Parquet.'
            format: '- (Required) Format for report. Valid values are: textORcsv, Parquet. If Parquet is used, then Compression must also be Parquet.'
            refresh_closed_reports: '- (Optional) Set to true to update your reports after they have been finalized if AWS detects charges related to previous months.'
            report_name: '- (Required) Unique name for the report. Must start with a number/letter and is case sensitive. Limited to 256 characters.'
            report_versioning: '- (Optional) Overwrite the previous version of each report or to deliver the report in addition to the previous versions. Valid values are: CREATE_NEW_REPORT and OVERWRITE_REPORT.'
            s3_bucket: '- (Required) Name of the existing S3 bucket to hold generated reports.'
            s3_prefix: '- (Optional) Report path prefix. Limited to 256 characters.'
            s3_region: '- (Required) Region of the existing S3 bucket to hold generated reports.'
            time_unit: '- (Required) The frequency on which report data are measured and displayed.  Valid values are: HOURLY, DAILY.'
        importStatements: []
    aws_customer_gateway:
        subCategory: VPN (Site-to-Site)
        description: Provides a customer gateway inside a VPC. These objects can be connected to VPN gateways via VPN connections, and allow you to establish tunnels between your network and the VPC.
        name: aws_customer_gateway
        title: aws_customer_gateway
        examples:
            - name: main
              manifest: |-
                {
                  "bgp_asn": 65000,
                  "ip_address": "172.83.124.10",
                  "tags": {
                    "Name": "main-customer-gateway"
                  },
                  "type": "ipsec.1"
                }
        argumentDocs:
            arn: '- The ARN of the customer gateway.'
            bgp_asn: '- (Required) The gateway''s Border Gateway Protocol (BGP) Autonomous System Number (ASN).'
            certificate_arn: '- (Optional) The Amazon Resource Name (ARN) for the customer gateway certificate.'
            device_name: '- (Optional) A name for the customer gateway device.'
            id: '- The amazon-assigned ID of the gateway.'
            ip_address: '- (Required) The IPv4 address for the customer gateway device''s outside interface.'
            tags: '- (Optional) Tags to apply to the gateway. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            type: |-
                - (Required) The type of customer gateway. The only type AWS
                supports at this time is "ipsec.1".
        importStatements: []
    aws_dataexchange_data_set:
        subCategory: Data Exchange
        description: Provides a DataExchange DataSet
        name: aws_dataexchange_data_set
        title: aws_dataexchange_data_set
        examples:
            - name: example
              manifest: |-
                {
                  "asset_type": "S3_SNAPSHOT",
                  "description": "example",
                  "name": "example"
                }
        argumentDocs:
            arn: '- The Amazon Resource Name of this data set.'
            asset_type: '- (Required) The type of asset that is added to a data set. Valid values are: S3_SNAPSHOT, REDSHIFT_DATA_SHARE, and API_GATEWAY_API.'
            description: '- (Required) A description for the data set.'
            id: '- The Id of the data set.'
            name: '- (Required) The name of the data set.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_dataexchange_revision:
        subCategory: Data Exchange
        description: Provides a DataExchange Revision
        name: aws_dataexchange_revision
        title: aws_dataexchange_revision
        examples:
            - name: example
              manifest: |-
                {
                  "data_set_id": "${aws_dataexchange_data_set.example.id}"
                }
              references:
                data_set_id: aws_dataexchange_data_set.example.id
        argumentDocs:
            arn: '- The Amazon Resource Name of this data set.'
            comment: '- (Required) An optional comment about the revision.'
            data_set_id: '- (Required) The dataset id.'
            id: '- The Id of the data set.'
            revision_id: '- The Id of the revision.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_datapipeline_pipeline:
        subCategory: Data Pipeline
        description: Provides a AWS DataPipeline Pipeline.
        name: aws_datapipeline_pipeline
        title: aws_datapipeline_pipeline
        examples:
            - name: default
              manifest: |-
                {
                  "name": "tf-pipeline-default"
                }
        argumentDocs:
            description: '- (Optional) The description of Pipeline.'
            id: '- The identifier of the client certificate.'
            name: '- (Required) The name of Pipeline.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_datapipeline_pipeline_definition:
        subCategory: Data Pipeline
        description: Provides a DataPipeline Definition.
        name: aws_datapipeline_pipeline_definition
        title: aws_datapipeline_pipeline_definition
        examples:
            - name: example
              manifest: |-
                {
                  "pipeline_id": "${aws_datapipeline_pipeline.default.id}",
                  "pipeline_object": [
                    {
                      "field": [
                        {
                          "key": "workerGroup",
                          "string_value": "workerGroup"
                        }
                      ],
                      "id": "Default",
                      "name": "Default"
                    },
                    {
                      "field": [
                        {
                          "key": "startDateTime",
                          "string_value": "2012-12-12T00:00:00"
                        },
                        {
                          "key": "type",
                          "string_value": "Schedule"
                        },
                        {
                          "key": "period",
                          "string_value": "1 hour"
                        },
                        {
                          "key": "endDateTime",
                          "string_value": "2012-12-21T18:00:00"
                        }
                      ],
                      "id": "Schedule",
                      "name": "Schedule"
                    },
                    {
                      "field": [
                        {
                          "key": "type",
                          "string_value": "ShellCommandActivity"
                        },
                        {
                          "key": "command",
                          "string_value": "echo hello"
                        },
                        {
                          "key": "parent",
                          "string_value": "Default"
                        },
                        {
                          "key": "schedule",
                          "string_value": "Schedule"
                        }
                      ],
                      "id": "SayHello",
                      "name": "SayHello"
                    }
                  ]
                }
              references:
                pipeline_id: aws_datapipeline_pipeline.default.id
              dependencies:
                aws_datapipeline_pipeline.default: |-
                    {
                      "name": "tf-pipeline-default"
                    }
        argumentDocs:
            id: '- Unique ID of the datapipeline definition.'
            parameter_object: '- (Optional) Configuration block for the parameter objects used in the pipeline definition. See below'
            parameter_object.attribute: '- (Required) Configuration block for attributes of the parameter object. See below'
            parameter_object.attribute.key: '- (Required) Field identifier.'
            parameter_object.attribute.string_value: '- (Required) Field value, expressed as a String.'
            parameter_object.id: '- (Required) ID of the parameter object.'
            parameter_value: '- (Optional) Configuration block for the parameter values used in the pipeline definition. See below'
            parameter_value.id: '- (Required) ID of the parameter value.'
            parameter_value.string_value: '- (Required) Field value, expressed as a String.'
            pipeline_id: '- (Required) ID of the pipeline.'
            pipeline_object: '- (Required) Configuration block for the objects that define the pipeline. See below'
            pipeline_object.field: '- (Required) Configuration block for Key-value pairs that define the properties of the object. See below'
            pipeline_object.field.key: '- (Required) Field identifier.'
            pipeline_object.field.ref_value: '- (Optional) Field value, expressed as the identifier of another object'
            pipeline_object.field.string_value: '- (Optional) Field value, expressed as a String.'
            pipeline_object.id: '- (Required) ID of the object.'
            pipeline_object.name: '- (Required) ARN of the storage connector.'
        importStatements: []
    aws_datasync_agent:
        subCategory: DataSync
        description: Manages an AWS DataSync Agent in the provider region
        name: aws_datasync_agent
        title: aws_datasync_agent
        examples:
            - name: example
              manifest: |-
                {
                  "ip_address": "1.2.3.4",
                  "name": "example"
                }
            - name: example
              manifest: |-
                {
                  "ip_address": "1.2.3.4",
                  "name": "example",
                  "private_link_endpoint": "${data.aws_network_interface.example.private_ip}",
                  "security_group_arns": [
                    "${aws_security_group.example.arn}"
                  ],
                  "subnet_arns": [
                    "${aws_subnet.example.arn}"
                  ],
                  "vpc_endpoint_id": "${aws_vpc_endpoint.example.id}"
                }
              references:
                private_link_endpoint: data.aws_network_interface.example.private_ip
                vpc_endpoint_id: aws_vpc_endpoint.example.id
              dependencies:
                aws_vpc_endpoint.example: |-
                    {
                      "security_group_ids": [
                        "${aws_security_group.example.id}"
                      ],
                      "service_name": "com.amazonaws.${data.aws_region.current.name}.datasync",
                      "subnet_ids": [
                        "${aws_subnet.example.id}"
                      ],
                      "vpc_endpoint_type": "Interface",
                      "vpc_id": "${aws_vpc.example.id}"
                    }
        argumentDocs:
            activation_key: '- (Optional) DataSync Agent activation key during resource creation. Conflicts with ip_address. If an ip_address is provided instead, Terraform will retrieve the activation_key as part of the resource creation.'
            arn: '- Amazon Resource Name (ARN) of the DataSync Agent.'
            create: '- (Default 10m) How long to wait for agent activation and connection to DataSync.'
            id: '- Amazon Resource Name (ARN) of the DataSync Agent.'
            ip_address: '- (Optional) DataSync Agent IP address to retrieve activation key during resource creation. Conflicts with activation_key. DataSync Agent must be accessible on port 80 from where Terraform is running.'
            name: '- (Required) Name of the DataSync Agent.'
            private_link_endpoint: '- (Optional) The IP address of the VPC endpoint the agent should connect to when retrieving an activation key during resource creation. Conflicts with activation_key.'
            security_group_arns: '- (Optional) The ARNs of the security groups used to protect your data transfer task subnets.'
            subnet_arns: '- (Optional) The Amazon Resource Names (ARNs) of the subnets in which DataSync will create elastic network interfaces for each data transfer task.'
            tags: '- (Optional) Key-value pairs of resource tags to assign to the DataSync Agent. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            vpc_endpoint_id: '- (Optional) The ID of the VPC (virtual private cloud) endpoint that the agent has access to.'
        importStatements: []
    aws_datasync_location_efs:
        subCategory: DataSync
        description: Manages an EFS Location within AWS DataSync.
        name: aws_datasync_location_efs
        title: aws_datasync_location_efs
        examples:
            - name: example
              manifest: |-
                {
                  "ec2_config": [
                    {
                      "security_group_arns": [
                        "${aws_security_group.example.arn}"
                      ],
                      "subnet_arn": "${aws_subnet.example.arn}"
                    }
                  ],
                  "efs_file_system_arn": "${aws_efs_mount_target.example.file_system_arn}"
                }
              references:
                ec2_config.subnet_arn: aws_subnet.example.arn
                efs_file_system_arn: aws_efs_mount_target.example.file_system_arn
        argumentDocs:
            access_point_arn: '- (Optional) Specifies the Amazon Resource Name (ARN) of the access point that DataSync uses to access the Amazon EFS file system.'
            arn: '- Amazon Resource Name (ARN) of the DataSync Location.'
            ec2_config: '- (Required) Configuration block containing EC2 configurations for connecting to the EFS File System.'
            ec2_config.security_group_arns: '- (Required) List of Amazon Resource Names (ARNs) of the EC2 Security Groups that are associated with the EFS Mount Target.'
            ec2_config.subnet_arn: '- (Required) Amazon Resource Name (ARN) of the EC2 Subnet that is associated with the EFS Mount Target.'
            efs_file_system_arn: '- (Required) Amazon Resource Name (ARN) of EFS File System.'
            file_system_access_role_arn: '- (Optional)  Specifies an Identity and Access Management (IAM) role that DataSync assumes when mounting the Amazon EFS file system.'
            id: '- Amazon Resource Name (ARN) of the DataSync Location.'
            in_transit_encryption: '- (Optional) Specifies whether you want DataSync to use TLS encryption when transferring data to or from your Amazon EFS file system. Valid values are NONE and TLS1_2.'
            subdirectory: '- (Optional) Subdirectory to perform actions as source or destination. Default /.'
            tags: '- (Optional) Key-value pairs of resource tags to assign to the DataSync Location. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_datasync_location_fsx_lustre_file_system:
        subCategory: DataSync
        description: Manages an FSx Lustre Location within AWS DataSync.
        name: aws_datasync_location_fsx_lustre_file_system
        title: aws_datasync_location_fsx_lustre_file_system
        examples:
            - name: example
              manifest: |-
                {
                  "fsx_filesystem_arn": "${aws_fsx_lustre_file_system.example.arn}",
                  "security_group_arns": [
                    "${aws_security_group.example.arn}"
                  ]
                }
              references:
                fsx_filesystem_arn: aws_fsx_lustre_file_system.example.arn
        argumentDocs:
            arn: '- Amazon Resource Name (ARN) of the DataSync Location.'
            creation_time: '- The time that the FSx for Lustre location was created.'
            fsx_filesystem_arn: '- (Required) The Amazon Resource Name (ARN) for the FSx for Lustre file system.'
            id: '- Amazon Resource Name (ARN) of the DataSync Location.'
            security_group_arns: '- (Optional) The Amazon Resource Names (ARNs) of the security groups that are to use to configure the FSx for Lustre file system.'
            subdirectory: '- (Optional) Subdirectory to perform actions as source or destination.'
            tags: '- (Optional) Key-value pairs of resource tags to assign to the DataSync Location. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            uri: '- The URL of the FSx for Lustre location that was described.'
        importStatements: []
    aws_datasync_location_fsx_openzfs_file_system:
        subCategory: DataSync
        description: Manages an FSx OpenZfs Location within AWS DataSync.
        name: aws_datasync_location_fsx_openzfs_file_system
        title: aws_datasync_location_fsx_openzfs_file_system
        examples:
            - name: example
              manifest: |-
                {
                  "fsx_filesystem_arn": "${aws_fsx_openzfs_file_system.example.arn}",
                  "protocol": [
                    {
                      "nfs": [
                        {
                          "mount_options": [
                            {
                              "version": "AUTOMATIC"
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "security_group_arns": [
                    "${aws_security_group.example.arn}"
                  ]
                }
              references:
                fsx_filesystem_arn: aws_fsx_openzfs_file_system.example.arn
        argumentDocs:
            arn: '- Amazon Resource Name (ARN) of the DataSync Location.'
            creation_time: '- The time that the FSx for openzfs location was created.'
            fsx_filesystem_arn: '- (Required) The Amazon Resource Name (ARN) for the FSx for OpenZfs file system.'
            id: '- Amazon Resource Name (ARN) of the DataSync Location.'
            protocol: '- (Required) The type of protocol that DataSync uses to access your file system. See below.'
            protocol.nfs: '- (Required) Represents the Network File System (NFS) protocol that DataSync uses to access your FSx for OpenZFS file system. See below.'
            protocol.nfs.mount_options: '- (Required) Represents the mount options that are available for DataSync to access an NFS location. See below.'
            protocol.nfs.mount_options.version: '- (Optional) The specific NFS version that you want DataSync to use for mounting your NFS share. Valid values: AUTOMATIC, NFS3, NFS4_0 and NFS4_1. Default: AUTOMATIC'
            security_group_arns: '- (Optional) The Amazon Resource Names (ARNs) of the security groups that are to use to configure the FSx for openzfs file system.'
            subdirectory: '- (Optional) Subdirectory to perform actions as source or destination. Must start with /fsx.'
            tags: '- (Optional) Key-value pairs of resource tags to assign to the DataSync Location. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            uri: '- The URL of the FSx for openzfs location that was described.'
        importStatements: []
    aws_datasync_location_fsx_windows_file_system:
        subCategory: DataSync
        description: Manages an FSx Windows Location within AWS DataSync.
        name: aws_datasync_location_fsx_windows_file_system
        title: aws_datasync_location_fsx_windows_file_system
        examples:
            - name: example
              manifest: |-
                {
                  "fsx_filesystem_arn": "${aws_fsx_windows_file_system.example.arn}",
                  "password": "SuperSecretPassw0rd",
                  "security_group_arns": [
                    "${aws_security_group.example.arn}"
                  ],
                  "user": "SomeUser"
                }
              references:
                fsx_filesystem_arn: aws_fsx_windows_file_system.example.arn
        argumentDocs:
            arn: '- Amazon Resource Name (ARN) of the DataSync Location.'
            creation_time: '- The time that the FSx for Windows location was created.'
            domain: '- (Optional) The name of the Windows domain that the FSx for Windows server belongs to.'
            fsx_filesystem_arn: '- (Required) The Amazon Resource Name (ARN) for the FSx for Windows file system.'
            id: '- Amazon Resource Name (ARN) of the DataSync Location.'
            password: '- (Required) The password of the user who has the permissions to access files and folders in the FSx for Windows file system.'
            security_group_arns: '- (Optional) The Amazon Resource Names (ARNs) of the security groups that are to use to configure the FSx for Windows file system.'
            subdirectory: '- (Optional) Subdirectory to perform actions as source or destination.'
            tags: '- (Optional) Key-value pairs of resource tags to assign to the DataSync Location. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            uri: '- The URL of the FSx for Windows location that was described.'
            user: '- (Required) The user who has the permissions to access files and folders in the FSx for Windows file system.'
        importStatements: []
    aws_datasync_location_hdfs:
        subCategory: DataSync
        description: Manages an AWS DataSync HDFS Location
        name: aws_datasync_location_hdfs
        title: aws_datasync_location_hdfs
        examples:
            - name: example
              manifest: |-
                {
                  "agent_arns": [
                    "${aws_datasync_agent.example.arn}"
                  ],
                  "authentication_type": "SIMPLE",
                  "name_node": [
                    {
                      "hostname": "${aws_instance.example.private_dns}",
                      "port": 80
                    }
                  ],
                  "simple_user": "example"
                }
              references:
                name_node.hostname: aws_instance.example.private_dns
        argumentDocs:
            agent_arns: '- (Required) A list of DataSync Agent ARNs with which this location will be associated.'
            arn: '- Amazon Resource Name (ARN) of the DataSync Location.'
            authentication_type: '- (Required) The type of authentication used to determine the identity of the user. Valid values are SIMPLE and KERBEROS.'
            block_size: '- (Optional) The size of data blocks to write into the HDFS cluster. The block size must be a multiple of 512 bytes. The default block size is 128 mebibytes (MiB).'
            data_transfer_protection: '- (Optional) The data transfer protection setting configured on the HDFS cluster. This setting corresponds to your dfs.data.transfer.protection setting in the hdfs-site.xml file on your Hadoop cluster. Valid values are DISABLED, AUTHENTICATION, INTEGRITY and PRIVACY.'
            hostname: '- (Required) The hostname of the NameNode in the HDFS cluster. This value is the IP address or Domain Name Service (DNS) name of the NameNode. An agent that''s installed on-premises uses this hostname to communicate with the NameNode in the network.'
            kerberos_keytab: '- (Optional) The Kerberos key table (keytab) that contains mappings between the defined Kerberos principal and the encrypted keys. If KERBEROS is specified for authentication_type, this parameter is required.'
            kerberos_krb5_conf: '- (Optional) The krb5.conf file that contains the Kerberos configuration information. If KERBEROS is specified for authentication_type, this parameter is required.'
            kerberos_principal: '- (Optional) The Kerberos principal with access to the files and folders on the HDFS cluster. If KERBEROS is specified for authentication_type, this parameter is required.'
            kms_key_provider_uri: '- (Optional) The URI of the HDFS cluster''s Key Management Server (KMS).'
            name_node: '- (Required)  The NameNode that manages the HDFS namespace. The NameNode performs operations such as opening, closing, and renaming files and directories. The NameNode contains the information to map blocks of data to the DataNodes. You can use only one NameNode. See configuration below.'
            port: '- (Required) The port that the NameNode uses to listen to client requests.'
            qop_configuration: '- (Optional) The Quality of Protection (QOP) configuration specifies the Remote Procedure Call (RPC) and data transfer protection settings configured on the Hadoop Distributed File System (HDFS) cluster. If qop_configuration isn''t specified, rpc_protection and data_transfer_protection default to PRIVACY. If you set RpcProtection or DataTransferProtection, the other parameter assumes the same value.  See configuration below.'
            replication_factor: '- (Optional) The number of DataNodes to replicate the data to when writing to the HDFS cluster. By default, data is replicated to three DataNodes.'
            rpc_protection: '- (Optional)The RPC protection setting configured on the HDFS cluster. This setting corresponds to your hadoop.rpc.protection setting in your core-site.xml file on your Hadoop cluster. Valid values are DISABLED, AUTHENTICATION, INTEGRITY and PRIVACY.'
            simple_user: '- (Optional) The user name used to identify the client on the host operating system. If SIMPLE is specified for authentication_type, this parameter is required.'
            subdirectory: '- (Optional) A subdirectory in the HDFS cluster. This subdirectory is used to read data from or write data to the HDFS cluster. If the subdirectory isn''t specified, it will default to /.'
            tags: '- (Optional) Key-value pairs of resource tags to assign to the DataSync Location. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_datasync_location_nfs:
        subCategory: DataSync
        description: Manages an AWS DataSync NFS Location
        name: aws_datasync_location_nfs
        title: aws_datasync_location_nfs
        examples:
            - name: example
              manifest: |-
                {
                  "on_prem_config": [
                    {
                      "agent_arns": [
                        "${aws_datasync_agent.example.arn}"
                      ]
                    }
                  ],
                  "server_hostname": "nfs.example.com",
                  "subdirectory": "/exported/path"
                }
        argumentDocs:
            arn: '- Amazon Resource Name (ARN) of the DataSync Location.'
            id: '- Amazon Resource Name (ARN) of the DataSync Location.'
            mount_options: '- (Optional) Configuration block containing mount options used by DataSync to access the NFS Server.'
            mount_options.version: '- (Optional) The specific NFS version that you want DataSync to use for mounting your NFS share. Valid values: AUTOMATIC, NFS3, NFS4_0 and NFS4_1. Default: AUTOMATIC'
            on_prem_config: '- (Required) Configuration block containing information for connecting to the NFS File System.'
            on_prem_config.agent_arns: '- (Required) List of Amazon Resource Names (ARNs) of the DataSync Agents used to connect to the NFS server.'
            server_hostname: '- (Required) Specifies the IP address or DNS name of the NFS server. The DataSync Agent(s) use this to mount the NFS server.'
            subdirectory: '- (Required) Subdirectory to perform actions as source or destination. Should be exported by the NFS server.'
            tags: '- (Optional) Key-value pairs of resource tags to assign to the DataSync Location. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_datasync_location_s3:
        subCategory: DataSync
        description: Manages an AWS DataSync S3 Location
        name: aws_datasync_location_s3
        title: aws_datasync_location_s3
        examples:
            - name: example
              manifest: |-
                {
                  "s3_bucket_arn": "${aws_s3_bucket.example.arn}",
                  "s3_config": [
                    {
                      "bucket_access_role_arn": "${aws_iam_role.example.arn}"
                    }
                  ],
                  "subdirectory": "/example/prefix"
                }
              references:
                s3_bucket_arn: aws_s3_bucket.example.arn
                s3_config.bucket_access_role_arn: aws_iam_role.example.arn
        argumentDocs:
            agent_arns: '- (Optional) A list of DataSync Agent ARNs with which this location will be associated.'
            arn: '- Amazon Resource Name (ARN) of the DataSync Location.'
            id: '- Amazon Resource Name (ARN) of the DataSync Location.'
            s3_bucket_arn: '- (Required) Amazon Resource Name (ARN) of the S3 Bucket.'
            s3_config: '- (Required) Configuration block containing information for connecting to S3.'
            s3_config.bucket_access_role_arn: '- (Required) Amazon Resource Names (ARN) of the IAM Role used to connect to the S3 Bucket.'
            s3_storage_class: '- (Optional) The Amazon S3 storage class that you want to store your files in when this location is used as a task destination. Valid values'
            subdirectory: '- (Required) Prefix to perform actions as source or destination.'
            tags: '- (Optional) Key-value pairs of resource tags to assign to the DataSync Location. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_datasync_location_smb:
        subCategory: DataSync
        description: Manages an AWS DataSync SMB Location
        name: aws_datasync_location_smb
        title: aws_datasync_location_smb
        examples:
            - name: example
              manifest: |-
                {
                  "agent_arns": [
                    "${aws_datasync_agent.example.arn}"
                  ],
                  "password": "ANotGreatPassword",
                  "server_hostname": "smb.example.com",
                  "subdirectory": "/exported/path",
                  "user": "Guest"
                }
        argumentDocs:
            agent_arns: '- (Required) A list of DataSync Agent ARNs with which this location will be associated.'
            arn: '- Amazon Resource Name (ARN) of the DataSync Location.'
            domain: '- (Optional) The name of the Windows domain the SMB server belongs to.'
            mount_options: '- (Optional) Configuration block containing mount options used by DataSync to access the SMB Server. Can be AUTOMATIC, SMB2, or SMB3.'
            mount_options.version: '- (Optional) The specific SMB version that you want DataSync to use for mounting your SMB share. Valid values: AUTOMATIC, SMB2, and SMB3. Default: AUTOMATIC'
            password: '- (Required) The password of the user who can mount the share and has file permissions in the SMB.'
            server_hostname: '- (Required) Specifies the IP address or DNS name of the SMB server. The DataSync Agent(s) use this to mount the SMB share.'
            subdirectory: '- (Required) Subdirectory to perform actions as source or destination. Should be exported by the NFS server.'
            tags: '- (Optional) Key-value pairs of resource tags to assign to the DataSync Location. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            user: '- (Required) The user who can mount the share and has file and folder permissions in the SMB share.'
        importStatements: []
    aws_datasync_task:
        subCategory: DataSync
        description: Manages an AWS DataSync Task
        name: aws_datasync_task
        title: aws_datasync_task
        examples:
            - name: example
              manifest: |-
                {
                  "destination_location_arn": "${aws_datasync_location_s3.destination.arn}",
                  "name": "example",
                  "options": [
                    {
                      "bytes_per_second": -1
                    }
                  ],
                  "source_location_arn": "${aws_datasync_location_nfs.source.arn}"
                }
              references:
                destination_location_arn: aws_datasync_location_s3.destination.arn
                source_location_arn: aws_datasync_location_nfs.source.arn
            - name: example
              manifest: |-
                {
                  "destination_location_arn": "${aws_datasync_location_s3.destination.arn}",
                  "name": "example",
                  "schedule": [
                    {
                      "schedule_expression": "cron(0 12 ? * SUN,WED *)"
                    }
                  ],
                  "source_location_arn": "${aws_datasync_location_nfs.source.arn}"
                }
              references:
                destination_location_arn: aws_datasync_location_s3.destination.arn
                source_location_arn: aws_datasync_location_nfs.source.arn
            - name: example
              manifest: |-
                {
                  "destination_location_arn": "${aws_datasync_location_s3.destination.arn}",
                  "excludes": [
                    {
                      "filter_type": "SIMPLE_PATTERN",
                      "value": "/folder1|/folder2"
                    }
                  ],
                  "name": "example",
                  "source_location_arn": "${aws_datasync_location_nfs.source.arn}"
                }
              references:
                destination_location_arn: aws_datasync_location_s3.destination.arn
                source_location_arn: aws_datasync_location_nfs.source.arn
        argumentDocs:
            arn: '- Amazon Resource Name (ARN) of the DataSync Task.'
            cloudwatch_log_group_arn: '- (Optional) Amazon Resource Name (ARN) of the CloudWatch Log Group that is used to monitor and log events in the sync task.'
            create: '- (Default 5m) How long to wait for DataSync Task availability.'
            destination_location_arn: '- (Required) Amazon Resource Name (ARN) of destination DataSync Location.'
            excludes: '- (Optional) Filter rules that determines which files to exclude from a task.'
            filter_type: '- (Optional) The type of filter rule to apply. Valid values: SIMPLE_PATTERN.'
            id: '- Amazon Resource Name (ARN) of the DataSync Task.'
            name: '- (Optional) Name of the DataSync Task.'
            options: '- (Optional) Configuration block containing option that controls the default behavior when you start an execution of this DataSync Task. For each individual task execution, you can override these options by specifying an overriding configuration in those executions.'
            options.atime: '- (Optional) A file metadata that shows the last time a file was accessed (that is when the file was read or written to). If set to BEST_EFFORT, the DataSync Task attempts to preserve the original (that is, the version before sync PREPARING phase) atime attribute on all source files. Valid values: BEST_EFFORT, NONE. Default: BEST_EFFORT.'
            options.bytes_per_second: '- (Optional) Limits the bandwidth utilized. For example, to set a maximum of 1 MB, set this value to 1048576. Value values: -1 or greater. Default: -1 (unlimited).'
            options.gid: '- (Optional) Group identifier of the file''s owners. Valid values: BOTH, INT_VALUE, NAME, NONE. Default: INT_VALUE (preserve integer value of the ID).'
            options.log_level: '- (Optional) Determines the type of logs that DataSync publishes to a log stream in the Amazon CloudWatch log group that you provide. Valid values: OFF, BASIC, TRANSFER. Default: OFF.'
            options.mtime: '- (Optional) A file metadata that indicates the last time a file was modified (written to) before the sync PREPARING phase. Value values: NONE, PRESERVE. Default: PRESERVE.'
            options.overwrite_mode: '- (Optional) Determines whether files at the destination should be overwritten or preserved when copying files. Valid values: ALWAYS, NEVER. Default: ALWAYS.'
            options.posix_permissions: '- (Optional) Determines which users or groups can access a file for a specific purpose such as reading, writing, or execution of the file. Valid values: NONE, PRESERVE. Default: PRESERVE.'
            options.preserve_deleted_files: '- (Optional) Whether files deleted in the source should be removed or preserved in the destination file system. Valid values: PRESERVE, REMOVE. Default: PRESERVE.'
            options.preserve_devices: '- (Optional) Whether the DataSync Task should preserve the metadata of block and character devices in the source files system, and recreate the files with that device name and metadata on the destination. The DataSync Task can’t sync the actual contents of such devices, because many of the devices are non-terminal and don’t return an end of file (EOF) marker. Valid values: NONE, PRESERVE. Default: NONE (ignore special devices).'
            options.task_queueing: '- (Optional) Determines whether tasks should be queued before executing the tasks. Valid values: ENABLED, DISABLED. Default ENABLED.'
            options.transfer_mode: '- (Optional) Determines whether DataSync transfers only the data and metadata that differ between the source and the destination location, or whether DataSync transfers all the content from the source, without comparing to the destination location. Valid values: CHANGED, ALL. Default: CHANGED'
            options.uid: '- (Optional) User identifier of the file''s owners. Valid values: BOTH, INT_VALUE, NAME, NONE. Default: INT_VALUE (preserve integer value of the ID).'
            options.verify_mode: '- (Optional) Whether a data integrity verification should be performed at the end of a task execution after all data and metadata have been transferred. Valid values: NONE, POINT_IN_TIME_CONSISTENT, ONLY_FILES_TRANSFERRED. Default: POINT_IN_TIME_CONSISTENT.'
            schedule: '- (Optional) Specifies a schedule used to periodically transfer files from a source to a destination location.'
            schedule_expression: '- (Required) Specifies the schedule you want your task to use for repeated executions. For more information, see Schedule Expressions for Rules.'
            source_location_arn: '- (Required) Amazon Resource Name (ARN) of source DataSync Location.'
            tags: '- (Optional) Key-value pairs of resource tags to assign to the DataSync Task. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            value: '- (Optional) A single filter string that consists of the patterns to include or exclude. The patterns are delimited by "|" (that is, a pipe), for example: /folder1|/folder2'
        importStatements: []
    aws_dax_cluster:
        subCategory: DynamoDB Accelerator (DAX)
        description: Provides an DAX Cluster resource.
        name: aws_dax_cluster
        title: aws_dax_cluster
        examples:
            - name: bar
              manifest: |-
                {
                  "cluster_name": "cluster-example",
                  "iam_role_arn": "${data.aws_iam_role.example.arn}",
                  "node_type": "dax.r4.large",
                  "replication_factor": 1
                }
              references:
                iam_role_arn: data.aws_iam_role.example.arn
        argumentDocs:
            arn: '- The ARN of the DAX cluster'
            availability_zones: |-
                - (Optional) List of Availability Zones in which the
                nodes will be created
            cluster_address: '- The DNS name of the DAX cluster without the port appended'
            cluster_endpoint_encryption_type: |-
                – (Optional) The type of encryption the
                cluster's endpoint should support. Valid values are: NONE and TLS.
                Default value is NONE.
            cluster_name: |-
                – (Required) Group identifier. DAX converts this name to
                lowercase
            configuration_endpoint: |-
                - The configuration endpoint for this DAX cluster,
                consisting of a DNS name and a port number
            create: '- (Default 45 minutes) Used for creating a DAX cluster'
            delete: '- (Default 90 minutes) Used for destroying a DAX cluster'
            description: – (Optional) Description for the cluster
            enabled: '- (Optional) Whether to enable encryption at rest. Defaults to false.'
            iam_role_arn: |-
                - (Required) A valid Amazon Resource Name (ARN) that identifies
                an IAM role. At runtime, DAX will assume this role and use the role's
                permissions to access DynamoDB on your behalf
            maintenance_window: |-
                – (Optional) Specifies the weekly time range for when
                maintenance on the cluster is performed. The format is ddd:hh24:mi-ddd:hh24:mi
                (24H Clock UTC). The minimum maintenance window is a 60 minute period. Example:
                sun:05:00-sun:09:00
            node_type: |-
                – (Required) The compute and memory capacity of the nodes. See
                Nodes for supported node types
            nodes: |-
                - List of node objects including id, address, port and
                availability_zone. Referenceable e.g., as
                ${aws_dax_cluster.test.nodes.0.address}
            notification_topic_arn: |-
                – (Optional) An Amazon Resource Name (ARN) of an
                SNS topic to send DAX notifications to. Example:
                arn:aws:sns:us-east-1:012345678999:my_sns_topic
            parameter_group_name: |-
                – (Optional) Name of the parameter group to associate
                with this DAX cluster
            port: '- The port used by the configuration endpoint'
            replication_factor: |-
                – (Required) The number of nodes in the DAX cluster. A
                replication factor of 1 will create a single-node cluster, without any read
                replicas
            security_group_ids: |-
                – (Optional) One or more VPC security groups associated
                with the cluster
            server_side_encryption: '- (Optional) Encrypt at rest options'
            subnet_group_name: |-
                – (Optional) Name of the subnet group to be used for the
                cluster
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            update: '- (Default 45 minutes) Used for cluster modifications'
        importStatements: []
    aws_dax_parameter_group:
        subCategory: DynamoDB Accelerator (DAX)
        description: Provides an DAX Parameter Group resource.
        name: aws_dax_parameter_group
        title: aws_dax_parameter_group
        examples:
            - name: example
              manifest: |-
                {
                  "name": "example",
                  "parameters": [
                    {
                      "name": "query-ttl-millis",
                      "value": "100000"
                    },
                    {
                      "name": "record-ttl-millis",
                      "value": "100000"
                    }
                  ]
                }
        argumentDocs:
            description: '- (Optional, ForceNew) A description of the parameter group.'
            id: '- The name of the parameter group.'
            name: – (Required) The name of the parameter group.
            parameters: – (Optional) The parameters of the parameter group.
            parameters.name: '- (Required) The name of the parameter.'
            parameters.value: '- (Required) The value for the parameter.'
        importStatements: []
    aws_dax_subnet_group:
        subCategory: DynamoDB Accelerator (DAX)
        description: Provides an DAX Subnet Group resource.
        name: aws_dax_subnet_group
        title: aws_dax_subnet_group
        examples:
            - name: example
              manifest: |-
                {
                  "name": "example",
                  "subnet_ids": [
                    "${aws_subnet.example1.id}",
                    "${aws_subnet.example2.id}"
                  ]
                }
        argumentDocs:
            description: '- (Optional) A description of the subnet group.'
            id: '- The name of the subnet group.'
            name: – (Required) The name of the subnet group.
            subnet_ids: – (Required) A list of VPC subnet IDs for the subnet group.
            vpc_id: – VPC ID of the subnet group.
        importStatements: []
    aws_db_cluster_snapshot:
        subCategory: RDS (Relational Database)
        description: Manages an RDS database cluster snapshot.
        name: aws_db_cluster_snapshot
        title: aws_db_cluster_snapshot
        examples:
            - name: example
              manifest: |-
                {
                  "db_cluster_identifier": "${aws_rds_cluster.example.id}",
                  "db_cluster_snapshot_identifier": "resourcetestsnapshot1234"
                }
              references:
                db_cluster_identifier: aws_rds_cluster.example.id
        argumentDocs:
            allocated_storage: '- Specifies the allocated storage size in gigabytes (GB).'
            availability_zones: '- List of EC2 Availability Zones that instances in the DB cluster snapshot can be restored in.'
            create: '- (Default 20m) How long to wait for the snapshot to be available.'
            db_cluster_identifier: '- (Required) The DB Cluster Identifier from which to take the snapshot.'
            db_cluster_snapshot_arn: '- The Amazon Resource Name (ARN) for the DB Cluster Snapshot.'
            db_cluster_snapshot_identifier: '- (Required) The Identifier for the snapshot.'
            engine: '- Specifies the name of the database engine.'
            engine_version: '- Version of the database engine for this DB cluster snapshot.'
            kms_key_id: '- If storage_encrypted is true, the AWS KMS key identifier for the encrypted DB cluster snapshot.'
            license_model: '- License model information for the restored DB cluster.'
            port: '- Port that the DB cluster was listening on at the time of the snapshot.'
            source_db_cluster_snapshot_identifier: '- The DB Cluster Snapshot Arn that the DB Cluster Snapshot was copied from. It only has value in case of cross customer or cross region copy.'
            status: '- The status of this DB Cluster Snapshot.'
            storage_encrypted: '- Specifies whether the DB cluster snapshot is encrypted.'
            tags: '- (Optional) A map of tags to assign to the DB cluster. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            vpc_id: '- The VPC ID associated with the DB cluster snapshot.'
        importStatements: []
    aws_db_event_subscription:
        subCategory: RDS (Relational Database)
        description: Provides a DB event subscription resource.
        name: aws_db_event_subscription
        title: aws_db_event_subscription
        examples:
            - name: default
              manifest: |-
                {
                  "event_categories": [
                    "availability",
                    "deletion",
                    "failover",
                    "failure",
                    "low storage",
                    "maintenance",
                    "notification",
                    "read replica",
                    "recovery",
                    "restoration"
                  ],
                  "name": "rds-event-sub",
                  "sns_topic": "${aws_sns_topic.default.arn}",
                  "source_ids": [
                    "${aws_db_instance.default.id}"
                  ],
                  "source_type": "db-instance"
                }
              references:
                sns_topic: aws_sns_topic.default.arn
              dependencies:
                aws_db_instance.default: |-
                    {
                      "allocated_storage": 10,
                      "db_subnet_group_name": "my_database_subnet_group",
                      "engine": "mysql",
                      "engine_version": "5.6.17",
                      "instance_class": "db.t2.micro",
                      "name": "mydb",
                      "parameter_group_name": "default.mysql5.6",
                      "password": "bar",
                      "username": "foo"
                    }
                aws_sns_topic.default: |-
                    {
                      "name": "rds-events"
                    }
        argumentDocs:
            arn: '- The Amazon Resource Name of the RDS event notification subscription'
            create: '- (Default 40m) How long to wait for an RDS event notification subscription to be ready.'
            customer_aws_id: '- The AWS customer account associated with the RDS event notification subscription'
            delete: '- (Default 40m) How long to wait for an RDS event notification subscription to be deleted.'
            enabled: '- (Optional) A boolean flag to enable/disable the subscription. Defaults to true.'
            event_categories: '- (Optional) A list of event categories for a SourceType that you want to subscribe to. See http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Events.html or run aws rds describe-event-categories.'
            id: '- The name of the RDS event notification subscription'
            name: '- (Optional) The name of the DB event subscription. By default generated by Terraform.'
            name_prefix: '- (Optional) The name of the DB event subscription. Conflicts with name.'
            sns_topic: '- (Required) The SNS topic to send events to.'
            source_ids: '- (Optional) A list of identifiers of the event sources for which events will be returned. If not specified, then all sources are included in the response. If specified, a source_type must also be specified.'
            source_type: '- (Optional) The type of source that will be generating the events. Valid options are db-instance, db-security-group, db-parameter-group, db-snapshot, db-cluster or db-cluster-snapshot. If not set, all sources will be subscribed to.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            update: '- (Default 40m) How long to wait for an RDS event notification subscription to be updated.'
        importStatements: []
    aws_db_instance:
        subCategory: RDS (Relational Database)
        description: Provides an RDS instance resource.
        name: aws_db_instance
        title: aws_db_instance
        examples:
            - name: default
              manifest: |-
                {
                  "allocated_storage": 10,
                  "engine": "mysql",
                  "engine_version": "5.7",
                  "instance_class": "db.t3.micro",
                  "name": "mydb",
                  "parameter_group_name": "default.mysql5.7",
                  "password": "foobarbaz",
                  "skip_final_snapshot": true,
                  "username": "foo"
                }
            - name: example
              manifest: |-
                {
                  "allocated_storage": 50,
                  "max_allocated_storage": 100
                }
            - name: db
              manifest: |-
                {
                  "s3_import": [
                    {
                      "bucket_name": "mybucket",
                      "bucket_prefix": "backups",
                      "ingestion_role": "arn:aws:iam::1234567890:role/role-xtrabackup-rds-restore",
                      "source_engine": "mysql",
                      "source_engine_version": "5.6"
                    }
                  ]
                }
        argumentDocs:
            address: '- The hostname of the RDS instance. See also endpoint and port.'
            allocated_storage: '- (Required unless a snapshot_identifier or replicate_source_db is provided) The allocated storage in gibibytes. If max_allocated_storage is configured, this argument represents the initial storage allocation and differences from the configuration will be ignored automatically when Storage Autoscaling occurs. If replicate_source_db is set, the value is ignored during the creation of the instance.'
            allow_major_version_upgrade: |-
                - (Optional) Indicates that major version
                upgrades are allowed. Changing this parameter does not result in an outage and
                the change is asynchronously applied as soon as possible.
            apply_immediately: |-
                - (Optional) Specifies whether any database modifications
                are applied immediately, or during the next maintenance window. Default is
                false. See Amazon RDS Documentation for more
                information.
            arn: '- The ARN of the RDS instance.'
            auto_minor_version_upgrade: |-
                - (Optional) Indicates that minor engine upgrades
                will be applied automatically to the DB instance during the maintenance window.
                Defaults to true.
            availability_zone: '- (Optional) The AZ for the RDS instance.'
            backup_retention_period: |-
                - (Optional) The days to retain backups for. Must be
                between 0 and 35. Must be greater than 0 if the database is used as a source for a Read Replica. See Read Replica.
            backup_window: |-
                - (Optional) The daily time range (in UTC) during which
                automated backups are created if they are enabled. Example: "09:46-10:16". Must
                not overlap with maintenance_window.
            bucket_name: '- (Required) The bucket name where your backup is stored'
            bucket_prefix: '- (Optional) Can be blank, but is the path to your backup'
            ca_cert_identifier: '- (Optional) The identifier of the CA certificate for the DB instance.'
            character_set_name: |-
                - (Optional) The character set name to use for DB
                encoding in Oracle and Microsoft SQL instances (collation). This can't be changed. See Oracle Character Sets
                Supported in Amazon RDS
                or Server-Level Collation for Microsoft SQL Server for more information.
            copy_tags_to_snapshot: – (Optional, boolean) Copy all Instance tags to snapshots. Default is false.
            create: |-
                - (Default 40 minutes) Used for Creating Instances, Replicas, and
                restoring from Snapshots.
            customer_owned_ip_enabled: '- (Optional) Indicates whether to enable a customer-owned IP address (CoIP) for an RDS on Outposts DB instance. See CoIP for RDS on Outposts for more information.'
            db_name: '- (Optional) The name of the database to create when the DB instance is created. If this parameter is not specified, no database is created in the DB instance. Note that this does not apply for Oracle or SQL Server engines. See the AWS documentation for more details on what applies for those engines. If you are providing an Oracle db name, it needs to be in all upper case. Cannot be specified for a replica.'
            db_subnet_group_name: |-
                - (Optional) Name of DB subnet group. DB instance will
                be created in the VPC associated with the DB subnet group. If unspecified, will
                be created in the default VPC, or in EC2 Classic, if available. When working
                with read replicas, it should be specified only if the source database
                specifies an instance in another AWS Region. See DBSubnetGroupName in API
                action CreateDBInstanceReadReplica
                for additional read replica contraints.
            delete: |-
                - (Default 60 minutes) Used for destroying databases. This includes
                the time required to take snapshots.
            delete_automated_backups: '- (Optional) Specifies whether to remove automated backups immediately after the DB instance is deleted. Default is true.'
            deletion_protection: '- (Optional) If the DB instance should have deletion protection enabled. The database can''t be deleted when this value is set to true. The default is false.'
            domain: '- (Optional) The ID of the Directory Service Active Directory domain to create the instance in.'
            domain_iam_role_name: '- (Optional, but required if domain is provided) The name of the IAM role to be used when making API calls to the Directory Service.'
            enabled_cloudwatch_logs_exports: '- (Optional) Set of log types to enable for exporting to CloudWatch logs. If omitted, no logs will be exported. Valid values (depending on engine). MySQL and MariaDB: audit, error, general, slowquery. PostgreSQL: postgresql, upgrade. MSSQL: agent , error. Oracle: alert, audit, listener, trace.'
            endpoint: '- The connection endpoint in address:port format.'
            engine: |-
                - (Required unless a snapshot_identifier or replicate_source_db
                is provided) The database engine to use.  For supported values, see the Engine parameter in API action CreateDBInstance. Cannot be specified for a replica.
                Note that for Amazon Aurora instances the engine must match the DB cluster's engine'.
                For information on the difference between the available Aurora MySQL engines
                see Comparison between Aurora MySQL 1 and Aurora MySQL 2
                in the Amazon RDS User Guide.
            engine_version: |-
                - (Optional) The engine version to use. If auto_minor_version_upgrade
                is enabled, you can provide a prefix of the version such as 5.7 (for 5.7.10).
                The actual engine version used is returned in the attribute engine_version_actual, see Attributes Reference below.
                For supported values, see the EngineVersion parameter in API action CreateDBInstance.
                Note that for Amazon Aurora instances the engine version must match the DB cluster's engine version'. Cannot be specified for a replica.
            engine_version_actual: '- The running version of the database.'
            final_snapshot_identifier: |-
                - (Optional) The name of your final DB snapshot
                when this DB instance is deleted. Must be provided if skip_final_snapshot is
                set to false. The value must begin with a letter, only contain alphanumeric characters and hyphens, and not end with a hyphen or contain two consecutive hyphens. Must not be provided when deleting a read replica.
            hosted_zone_id: |-
                - The canonical hosted zone ID of the DB instance (to be used
                in a Route 53 Alias record).
            iam_database_authentication_enabled: |-
                - (Optional) Specifies whether or
                mappings of AWS Identity and Access Management (IAM) accounts to database
                accounts is enabled.
            id: '- The RDS instance ID.'
            identifier: |-
                - (Optional, Forces new resource) The name of the RDS instance,
                if omitted, Terraform will assign a random, unique identifier. Required if restore_to_point_in_time is specified.
            identifier_prefix: |-
                - (Optional, Forces new resource) Creates a unique
                identifier beginning with the specified prefix. Conflicts with identifier.
            ingestion_role: '- (Required) Role applied to load the data.'
            instance_class: '- (Required) The instance type of the RDS instance.'
            iops: |-
                - (Optional) The amount of provisioned IOPS. Setting this implies a
                storage_type of "io1".
            kms_key_id: |-
                - (Optional) The ARN for the KMS encryption key. If creating an
                encrypted replica, set this to the destination KMS ARN.
            latest_restorable_time: '- The latest time, in UTC RFC3339 format, to which a database can be restored with point-in-time restore.'
            license_model: |-
                - (Optional, but required for some DB engines, i.e., Oracle
                SE1) License model information for this DB instance.
            maintenance_window: |-
                - (Optional) The window to perform maintenance in.
                Syntax: "ddd:hh24:mi-ddd:hh24:mi". Eg: "Mon:00:00-Mon:03:00". See RDS
                Maintenance Window
                docs
                for more information.
            max_allocated_storage: '- (Optional) When configured, the upper limit to which Amazon RDS can automatically scale the storage of the DB instance. Configuring this will automatically ignore differences to allocated_storage. Must be greater than or equal to allocated_storage or 0 to disable Storage Autoscaling.'
            monitoring_interval: |-
                - (Optional) The interval, in seconds, between points
                when Enhanced Monitoring metrics are collected for the DB instance. To disable
                collecting Enhanced Monitoring metrics, specify 0. The default is 0. Valid
                Values: 0, 1, 5, 10, 15, 30, 60.
            monitoring_role_arn: |-
                - (Optional) The ARN for the IAM role that permits RDS
                to send enhanced monitoring metrics to CloudWatch Logs. You can find more
                information on the AWS
                Documentation
                what IAM permissions are needed to allow Enhanced Monitoring for RDS Instances.
            multi_az: '- (Optional) Specifies if the RDS instance is multi-AZ'
            name: '- (Optional, Deprecated use db_name instead) The name of the database to create when the DB instance is created. If this parameter is not specified, no database is created in the DB instance. Note that this does not apply for Oracle or SQL Server engines. See the AWS documentation for more details on what applies for those engines. If you are providing an Oracle db name, it needs to be in all upper case. Cannot be specified for a replica.'
            nchar_character_set_name: |-
                - (Optional, Forces new resource) The national character set is used in the NCHAR, NVARCHAR2, and NCLOB data types for Oracle instances. This can't be changed. See Oracle Character Sets
                Supported in Amazon RDS.
            option_group_name: '- (Optional) Name of the DB option group to associate.'
            parameter_group_name: |-
                - (Optional) Name of the DB parameter group to
                associate.
            password: |-
                - (Required unless a snapshot_identifier or replicate_source_db
                is provided) Password for the master DB user. Note that this may show up in
                logs, and it will be stored in the state file.
            performance_insights_enabled: '- (Optional) Specifies whether Performance Insights are enabled. Defaults to false.'
            performance_insights_kms_key_id: '- (Optional) The ARN for the KMS key to encrypt Performance Insights data. When specifying performance_insights_kms_key_id, performance_insights_enabled needs to be set to true. Once KMS key is set, it can never be changed.'
            performance_insights_retention_period: '- (Optional) The amount of time in days to retain Performance Insights data. Either 7 (7 days) or 731 (2 years). When specifying performance_insights_retention_period, performance_insights_enabled needs to be set to true. Defaults to ''7''.'
            port: '- (Optional) The port on which the DB accepts connections.'
            publicly_accessible: |-
                - (Optional) Bool to control if instance is publicly
                accessible. Default is false.
            replica_mode: |-
                - (Optional) Specifies whether the replica is in either mounted or open-read-only mode. This attribute
                is only supported by Oracle instances. Oracle replicas operate in open-read-only mode unless otherwise specified. See Working with Oracle Read Replicas for more information.
            replicate_source_db: |-
                - (Optional) Specifies that this resource is a Replicate
                database, and to use this value as the source database. This correlates to the
                identifier of another Amazon RDS Database to replicate (if replicating within
                a single region) or ARN of the Amazon RDS Database to replicate (if replicating
                cross-region). Note that if you are
                creating a cross-region replica of an encrypted database you will also need to
                specify a kms_key_id. See DB Instance Replication and Working with
                PostgreSQL and MySQL Read Replicas
                for more information on using Replication.
            resource_id: '- The RDS Resource ID of this instance.'
            restore_to_point_in_time: '- (Optional, Forces new resource) A configuration block for restoring a DB instance to an arbitrary point in time. Requires the identifier argument to be set with the name of the new DB instance to be created. See Restore To Point In Time below for details.'
            restore_to_point_in_time.restore_time: '- (Optional) The date and time to restore from. Value must be a time in Universal Coordinated Time (UTC) format and must be before the latest restorable time for the DB instance. Cannot be specified with use_latest_restorable_time.'
            restore_to_point_in_time.source_db_instance_automated_backups_arn: '- (Optional) The ARN of the automated backup from which to restore. Required if source_db_instance_identifier or source_dbi_resource_id is not specified.'
            restore_to_point_in_time.source_db_instance_identifier: '- (Optional) The identifier of the source DB instance from which to restore. Must match the identifier of an existing DB instance. Required if source_db_instance_automated_backups_arn or source_dbi_resource_id is not specified.'
            restore_to_point_in_time.source_dbi_resource_id: '- (Optional) The resource ID of the source DB instance from which to restore. Required if source_db_instance_identifier or source_db_instance_automated_backups_arn is not specified.'
            restore_to_point_in_time.use_latest_restorable_time: '- (Optional) A boolean value that indicates whether the DB instance is restored from the latest backup time. Defaults to false. Cannot be specified with restore_time.'
            s3_import: '- (Optional) Restore from a Percona Xtrabackup in S3.  See Importing Data into an Amazon RDS MySQL DB Instance'
            security_group_names: |-
                - (Optional/Deprecated) List of DB Security Groups to
                associate. Only used for DB Instances on the .
            skip_final_snapshot: |-
                - (Optional) Determines whether a final DB snapshot is
                created before the DB instance is deleted. If true is specified, no DBSnapshot
                is created. If false is specified, a DB snapshot is created before the DB
                instance is deleted, using the value from final_snapshot_identifier. Default
                is false.
            snapshot_identifier: |-
                - (Optional) Specifies whether or not to create this
                database from a snapshot. This correlates to the snapshot ID you'd find in the
                RDS console, e.g: rds:production-2015-06-26-06-05.
            source_engine: '- (Required, as of Feb 2018 only ''mysql'' supported) Source engine for the backup'
            source_engine_version: '- (Required, as of Feb 2018 only ''5.6'' supported) Version of the source engine used to make the backup'
            status: '- The RDS instance status.'
            storage_encrypted: |-
                - (Optional) Specifies whether the DB instance is
                encrypted. Note that if you are creating a cross-region read replica this field
                is ignored and you should instead declare kms_key_id with a valid ARN. The
                default is false if not specified.
            storage_type: |-
                - (Optional) One of "standard" (magnetic), "gp2" (general
                purpose SSD), or "io1" (provisioned IOPS SSD). The default is "io1" if iops is
                specified, "gp2" if not.
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            timezone: |-
                - (Optional) Time zone of the DB instance. timezone is currently
                only supported by Microsoft SQL Server. The timezone can only be set on
                creation. See MSSQL User
                Guide
                for more information.
            update: '- (Default 80 minutes) Used for Database modifications.'
            username: |-
                - (Required unless a snapshot_identifier or replicate_source_db
                is provided) Username for the master DB user. Cannot be specified for a replica.
            vpc_security_group_ids: |-
                - (Optional) List of VPC security groups to
                associate.
        importStatements: []
    aws_db_instance_automated_backups_replication:
        subCategory: RDS (Relational Database)
        description: Enables replication of automated backups to a different AWS Region.
        name: aws_db_instance_automated_backups_replication
        title: aws_db_instance_automated_backups_replication
        examples:
            - name: default
              manifest: |-
                {
                  "retention_period": 14,
                  "source_db_instance_arn": "arn:aws:rds:us-west-2:123456789012:db:mydatabase"
                }
            - name: default
              manifest: |-
                {
                  "kms_key_id": "arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012",
                  "source_db_instance_arn": "arn:aws:rds:us-west-2:123456789012:db:mydatabase"
                }
            - name: default
              manifest: |-
                {
                  "kms_key_id": "${aws_kms_key.default.arn}",
                  "provider": "aws.replica",
                  "source_db_instance_arn": "${aws_db_instance.default.arn}"
                }
              references:
                kms_key_id: aws_kms_key.default.arn
                source_db_instance_arn: aws_db_instance.default.arn
              dependencies:
                aws_db_instance.default: |-
                    {
                      "allocated_storage": 10,
                      "backup_retention_period": 7,
                      "engine": "postgres",
                      "engine_version": "13.4",
                      "identifier": "mydb",
                      "instance_class": "db.t3.micro",
                      "name": "mydb",
                      "password": "mustbeeightcharacters",
                      "skip_final_snapshot": true,
                      "storage_encrypted": true,
                      "username": "masterusername"
                    }
                aws_kms_key.default: |-
                    {
                      "description": "Encryption key for automated backups",
                      "provider": "aws.replica"
                    }
        argumentDocs:
            id: '- The Amazon Resource Name (ARN) of the replicated automated backups.'
            kms_key_id: '- (Optional, Forces new resource) The AWS KMS key identifier for encryption of the replicated automated backups. The KMS key ID is the Amazon Resource Name (ARN) for the KMS encryption key in the destination AWS Region, for example, arn:aws:kms:us-east-1:123456789012:key/AKIAIOSFODNN7EXAMPLE.'
            pre_signed_url: '- (Optional, Forces new resource) A URL that contains a Signature Version 4 signed request for the StartDBInstanceAutomatedBackupsReplication action to be called in the AWS Region of the source DB instance.'
            retention_period: '- (Optional, Forces new resource) The retention period for the replicated automated backups, defaults to 7.'
            source_db_instance_arn: '- (Required, Forces new resource) The Amazon Resource Name (ARN) of the source DB instance for the replicated automated backups, for example, arn:aws:rds:us-west-2:123456789012:db:mydatabase.'
        importStatements: []
    aws_db_instance_role_association:
        subCategory: RDS (Relational Database)
        description: Manages an RDS DB Instance association with an IAM Role.
        name: aws_db_instance_role_association
        title: aws_db_instance_role_association
        examples:
            - name: example
              manifest: |-
                {
                  "db_instance_identifier": "${aws_db_instance.example.id}",
                  "feature_name": "S3_INTEGRATION",
                  "role_arn": "${aws_iam_role.example.arn}"
                }
              references:
                db_instance_identifier: aws_db_instance.example.id
                role_arn: aws_iam_role.example.arn
        argumentDocs:
            db_instance_identifier: '- (Required) DB Instance Identifier to associate with the IAM Role.'
            feature_name: '- (Required) Name of the feature for association. This can be found in the AWS documentation relevant to the integration or a full list is available in the SupportedFeatureNames list returned by AWS CLI rds describe-db-engine-versions.'
            id: '- DB Instance Identifier and IAM Role ARN separated by a comma (,)'
            role_arn: '- (Required) Amazon Resource Name (ARN) of the IAM Role to associate with the DB Instance.'
        importStatements: []
    aws_db_option_group:
        subCategory: RDS (Relational Database)
        description: Provides an RDS DB option group resource.
        name: aws_db_option_group
        title: aws_db_option_group
        examples:
            - name: example
              manifest: |-
                {
                  "engine_name": "sqlserver-ee",
                  "major_engine_version": "11.00",
                  "name": "option-group-test-terraform",
                  "option": [
                    {
                      "option_name": "Timezone",
                      "option_settings": [
                        {
                          "name": "TIME_ZONE",
                          "value": "UTC"
                        }
                      ]
                    },
                    {
                      "option_name": "SQLSERVER_BACKUP_RESTORE",
                      "option_settings": [
                        {
                          "name": "IAM_ROLE_ARN",
                          "value": "${aws_iam_role.example.arn}"
                        }
                      ]
                    },
                    {
                      "option_name": "TDE"
                    }
                  ],
                  "option_group_description": "Terraform Option Group"
                }
              references:
                option.option_settings.value: aws_iam_role.example.arn
        argumentDocs:
            arn: '- The ARN of the db option group.'
            db_security_group_memberships: '- (Optional) A list of DB Security Groups for which the option is enabled.'
            delete: '- (Default 15 minutes)'
            engine_name: '- (Required) Specifies the name of the engine that this option group should be associated with.'
            id: '- The db option group name.'
            major_engine_version: '- (Required) Specifies the major version of the engine that this option group should be associated with.'
            name: '- (Optional, Forces new resource) The name of the option group. If omitted, Terraform will assign a random, unique name. Must be lowercase, to match as it is stored in AWS.'
            name_prefix: '- (Optional, Forces new resource) Creates a unique name beginning with the specified prefix. Conflicts with name. Must be lowercase, to match as it is stored in AWS.'
            option: '- (Optional) A list of Options to apply.'
            option_group_description: '- (Optional) The description of the option group. Defaults to "Managed by Terraform".'
            option_name: '- (Required) The Name of the Option (e.g., MEMCACHED).'
            option_settings: '- (Optional) A list of option settings to apply.'
            port: '- (Optional) The Port number when connecting to the Option (e.g., 11211).'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            value: '- (Optional) The Value of the setting.'
            version: '- (Optional) The version of the option (e.g., 13.1.0.0).'
            vpc_security_group_memberships: '- (Optional) A list of VPC Security Groups for which the option is enabled.'
        importStatements: []
    aws_db_parameter_group:
        subCategory: RDS (Relational Database)
        description: Provides an RDS DB parameter group resource.
        name: aws_db_parameter_group
        title: aws_db_parameter_group
        examples:
            - name: default
              manifest: |-
                {
                  "family": "mysql5.6",
                  "name": "rds-pg",
                  "parameter": [
                    {
                      "name": "character_set_server",
                      "value": "utf8"
                    },
                    {
                      "name": "character_set_client",
                      "value": "utf8"
                    }
                  ]
                }
        argumentDocs:
            apply_method: |-
                - (Optional) "immediate" (default), or "pending-reboot". Some
                engines can't apply some parameters without a reboot, and you will need to
                specify "pending-reboot" here.
            arn: '- The ARN of the db parameter group.'
            description: '- (Optional, Forces new resource) The description of the DB parameter group. Defaults to "Managed by Terraform".'
            family: '- (Required, Forces new resource) The family of the DB parameter group.'
            id: '- The db parameter group name.'
            name: '- (Optional, Forces new resource) The name of the DB parameter group. If omitted, Terraform will assign a random, unique name.'
            name_prefix: '- (Optional, Forces new resource) Creates a unique name beginning with the specified prefix. Conflicts with name.'
            parameter: '- (Optional) A list of DB parameters to apply. Note that parameters may differ from a family to an other. Full list of all parameters can be discovered via aws rds describe-db-parameters after initial creation of the group.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            value: '- (Required) The value of the DB parameter.'
        importStatements: []
    aws_db_proxy:
        subCategory: RDS (Relational Database)
        description: Provides an RDS DB proxy resource.
        name: aws_db_proxy
        title: aws_db_proxy
        examples:
            - name: example
              manifest: |-
                {
                  "auth": [
                    {
                      "auth_scheme": "SECRETS",
                      "description": "example",
                      "iam_auth": "DISABLED",
                      "secret_arn": "${aws_secretsmanager_secret.example.arn}"
                    }
                  ],
                  "debug_logging": false,
                  "engine_family": "MYSQL",
                  "idle_client_timeout": 1800,
                  "name": "example",
                  "require_tls": true,
                  "role_arn": "${aws_iam_role.example.arn}",
                  "tags": {
                    "Key": "value",
                    "Name": "example"
                  },
                  "vpc_security_group_ids": [
                    "${aws_security_group.example.id}"
                  ],
                  "vpc_subnet_ids": [
                    "${aws_subnet.example.id}"
                  ]
                }
              references:
                auth.secret_arn: aws_secretsmanager_secret.example.arn
                role_arn: aws_iam_role.example.arn
        argumentDocs:
            arn: '- The Amazon Resource Name (ARN) for the proxy.'
            auth: '- (Required) Configuration block(s) with authorization mechanisms to connect to the associated instances or clusters. Described below.'
            auth.auth_scheme: '- (Optional) The type of authentication that the proxy uses for connections from the proxy to the underlying database. One of SECRETS.'
            auth.description: '- (Optional) A user-specified description about the authentication used by a proxy to log in as a specific database user.'
            auth.iam_auth: '- (Optional) Whether to require or disallow AWS Identity and Access Management (IAM) authentication for connections to the proxy. One of DISABLED, REQUIRED.'
            auth.secret_arn: '- (Optional) The Amazon Resource Name (ARN) representing the secret that the proxy uses to authenticate to the RDS DB instance or Aurora DB cluster. These secrets are stored within Amazon Secrets Manager.'
            auth.username: '- (Optional) The name of the database user to which the proxy connects.'
            create: '- (Default 30 minutes) Used for creating DB proxies.'
            debug_logging: '- (Optional) Whether the proxy includes detailed information about SQL statements in its logs. This information helps you to debug issues involving SQL behavior or the performance and scalability of the proxy connections. The debug information includes the text of SQL statements that you submit through the proxy. Thus, only enable this setting when needed for debugging, and only when you have security measures in place to safeguard any sensitive information that appears in the logs.'
            delete: '- (Default 60 minutes) Used for destroying DB proxies.'
            endpoint: '- The endpoint that you can use to connect to the proxy. You include the endpoint value in the connection string for a database client application.'
            engine_family: '- (Required, Forces new resource) The kinds of databases that the proxy can connect to. This value determines which database network protocol the proxy recognizes when it interprets network traffic to and from the database. The engine family applies to MySQL and PostgreSQL for both RDS and Aurora. Valid values are MYSQL and POSTGRESQL.'
            id: '- The Amazon Resource Name (ARN) for the proxy.'
            idle_client_timeout: '- (Optional) The number of seconds that a connection to the proxy can be inactive before the proxy disconnects it. You can set this value higher or lower than the connection timeout limit for the associated database.'
            name: '- (Required) The identifier for the proxy. This name must be unique for all proxies owned by your AWS account in the specified AWS Region. An identifier must begin with a letter and must contain only ASCII letters, digits, and hyphens; it can''t end with a hyphen or contain two consecutive hyphens.'
            require_tls: '- (Optional) A Boolean parameter that specifies whether Transport Layer Security (TLS) encryption is required for connections to the proxy. By enabling this setting, you can enforce encrypted TLS connections to the proxy.'
            role_arn: '- (Required) The Amazon Resource Name (ARN) of the IAM role that the proxy uses to access secrets in AWS Secrets Manager.'
            tags: '- (Optional) A mapping of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            update: '- (Default 30 minutes) Used for modifying DB proxies.'
            vpc_security_group_ids: '- (Optional) One or more VPC security group IDs to associate with the new proxy.'
            vpc_subnet_ids: '- (Required) One or more VPC subnet IDs to associate with the new proxy.'
        importStatements: []
    aws_db_proxy_default_target_group:
        subCategory: RDS (Relational Database)
        description: Manage an RDS DB proxy default target group resource.
        name: aws_db_proxy_default_target_group
        title: aws_db_proxy_default_target_group
        examples:
            - name: example
              manifest: |-
                {
                  "connection_pool_config": [
                    {
                      "connection_borrow_timeout": 120,
                      "init_query": "SET x=1, y=2",
                      "max_connections_percent": 100,
                      "max_idle_connections_percent": 50,
                      "session_pinning_filters": [
                        "EXCLUDE_VARIABLE_SETS"
                      ]
                    }
                  ],
                  "db_proxy_name": "${aws_db_proxy.example.name}"
                }
              references:
                db_proxy_name: aws_db_proxy.example.name
              dependencies:
                aws_db_proxy.example: |-
                    {
                      "auth": [
                        {
                          "auth_scheme": "SECRETS",
                          "description": "example",
                          "iam_auth": "DISABLED",
                          "secret_arn": "${aws_secretsmanager_secret.example.arn}"
                        }
                      ],
                      "debug_logging": false,
                      "engine_family": "MYSQL",
                      "idle_client_timeout": 1800,
                      "name": "example",
                      "require_tls": true,
                      "role_arn": "${aws_iam_role.example.arn}",
                      "tags": {
                        "Key": "value",
                        "Name": "example"
                      },
                      "vpc_security_group_ids": [
                        "${aws_security_group.example.id}"
                      ],
                      "vpc_subnet_ids": [
                        "${aws_subnet.example.id}"
                      ]
                    }
        argumentDocs:
            arn: '- The Amazon Resource Name (ARN) representing the target group.'
            connection_pool_config: '- (Optional) The settings that determine the size and behavior of the connection pool for the target group.'
            connection_pool_config.connection_borrow_timeout: '- (Optional) The number of seconds for a proxy to wait for a connection to become available in the connection pool. Only applies when the proxy has opened its maximum number of connections and all connections are busy with client sessions.'
            connection_pool_config.init_query: '- (Optional) One or more SQL statements for the proxy to run when opening each new database connection. Typically used with SET statements to make sure that each connection has identical settings such as time zone and character set. This setting is empty by default. For multiple statements, use semicolons as the separator. You can also include multiple variables in a single SET statement, such as SET x=1, y=2.'
            connection_pool_config.max_connections_percent: '- (Optional) The maximum size of the connection pool for each target in a target group. For Aurora MySQL, it is expressed as a percentage of the max_connections setting for the RDS DB instance or Aurora DB cluster used by the target group.'
            connection_pool_config.max_idle_connections_percent: '- (Optional) Controls how actively the proxy closes idle database connections in the connection pool. A high value enables the proxy to leave a high percentage of idle connections open. A low value causes the proxy to close idle client connections and return the underlying database connections to the connection pool. For Aurora MySQL, it is expressed as a percentage of the max_connections setting for the RDS DB instance or Aurora DB cluster used by the target group.'
            connection_pool_config.session_pinning_filters: '- (Optional) Each item in the list represents a class of SQL operations that normally cause all later statements in a session using a proxy to be pinned to the same underlying database connection. Including an item in the list exempts that class of SQL operations from the pinning behavior. Currently, the only allowed value is EXCLUDE_VARIABLE_SETS.'
            create: '- (Default 30 minutes) Timeout for modifying DB proxy target group on creation.'
            db_proxy_name: '- (Required) Name of the RDS DB Proxy.'
            id: '- Name of the RDS DB Proxy.'
            name: '- The name of the default target group.'
            update: '- (Default 30 minutes) Timeout for modifying DB proxy target group on update.'
        importStatements: []
    aws_db_proxy_endpoint:
        subCategory: RDS (Relational Database)
        description: Provides an RDS DB proxy endpoint resource.
        name: aws_db_proxy_endpoint
        title: aws_db_proxy_endpoint
        examples:
            - name: example
              manifest: |-
                {
                  "db_proxy_endpoint_name": "example",
                  "db_proxy_name": "${aws_db_proxy.test.name}",
                  "target_role": "READ_ONLY",
                  "vpc_subnet_ids": "${aws_subnet.test.*.id}"
                }
              references:
                db_proxy_name: aws_db_proxy.test.name
        argumentDocs:
            arn: '- The Amazon Resource Name (ARN) for the proxy endpoint.'
            create: '- (Default 30 minutes) Used for creating DB proxy endpoint.'
            db_proxy_endpoint_name: '- (Required) The identifier for the proxy endpoint. An identifier must begin with a letter and must contain only ASCII letters, digits, and hyphens; it can''t end with a hyphen or contain two consecutive hyphens.'
            db_proxy_name: '- (Required) The name of the DB proxy associated with the DB proxy endpoint that you create.'
            delete: '- (Default 60 minutes) Used for destroying DB proxy endpoint.'
            endpoint: '- The endpoint that you can use to connect to the proxy. You include the endpoint value in the connection string for a database client application.'
            id: '- The name of the proxy and proxy endpoint separated by /, DB-PROXY-NAME/DB-PROXY-ENDPOINT-NAME.'
            is_default: '- Indicates whether this endpoint is the default endpoint for the associated DB proxy.'
            tags: '- (Optional) A mapping of tags to assign to the resource.'
            target_role: '- (Optional) Indicates whether the DB proxy endpoint can be used for read/write or read-only operations. The default is READ_WRITE. Valid values are READ_WRITE and READ_ONLY.'
            update: '- (Default 30 minutes) Used for modifying DB proxy endpoint.'
            vpc_id: '- The VPC ID of the DB proxy endpoint.'
            vpc_security_group_ids: '- (Optional) One or more VPC security group IDs to associate with the new proxy.'
            vpc_subnet_ids: '- (Required) One or more VPC subnet IDs to associate with the new proxy.'
        importStatements: []
    aws_db_proxy_target:
        subCategory: RDS (Relational Database)
        description: Provides an RDS DB proxy target resource.
        name: aws_db_proxy_target
        title: aws_db_proxy_target
        examples:
            - name: example
              manifest: |-
                {
                  "db_instance_identifier": "${aws_db_instance.example.id}",
                  "db_proxy_name": "${aws_db_proxy.example.name}",
                  "target_group_name": "${aws_db_proxy_default_target_group.example.name}"
                }
              references:
                db_instance_identifier: aws_db_instance.example.id
                db_proxy_name: aws_db_proxy.example.name
                target_group_name: aws_db_proxy_default_target_group.example.name
              dependencies:
                aws_db_proxy.example: |-
                    {
                      "auth": [
                        {
                          "auth_scheme": "SECRETS",
                          "description": "example",
                          "iam_auth": "DISABLED",
                          "secret_arn": "${aws_secretsmanager_secret.example.arn}"
                        }
                      ],
                      "debug_logging": false,
                      "engine_family": "MYSQL",
                      "idle_client_timeout": 1800,
                      "name": "example",
                      "require_tls": true,
                      "role_arn": "${aws_iam_role.example.arn}",
                      "tags": {
                        "Key": "value",
                        "Name": "example"
                      },
                      "vpc_security_group_ids": [
                        "${aws_security_group.example.id}"
                      ],
                      "vpc_subnet_ids": [
                        "${aws_subnet.example.id}"
                      ]
                    }
                aws_db_proxy_default_target_group.example: |-
                    {
                      "connection_pool_config": [
                        {
                          "connection_borrow_timeout": 120,
                          "init_query": "SET x=1, y=2",
                          "max_connections_percent": 100,
                          "max_idle_connections_percent": 50,
                          "session_pinning_filters": [
                            "EXCLUDE_VARIABLE_SETS"
                          ]
                        }
                      ],
                      "db_proxy_name": "${aws_db_proxy.example.name}"
                    }
        argumentDocs:
            db_cluster_identifier: '- (Optional, Forces new resource) DB cluster identifier.'
            db_instance_identifier: '- (Optional, Forces new resource) DB instance identifier.'
            db_proxy_name: '- (Required, Forces new resource) The name of the DB proxy.'
            endpoint: '- Hostname for the target RDS DB Instance. Only returned for RDS_INSTANCE type.'
            id: '- Identifier of  db_proxy_name, target_group_name, target type (e.g., RDS_INSTANCE or TRACKED_CLUSTER), and resource identifier separated by forward slashes (/).'
            port: '- Port for the target RDS DB Instance or Aurora DB Cluster.'
            rds_resource_id: '- Identifier representing the DB Instance or DB Cluster target.'
            target_arn: '- Amazon Resource Name (ARN) for the DB instance or DB cluster. Currently not returned by the RDS API.'
            target_group_name: '- (Required, Forces new resource) The name of the target group.'
            tracked_cluster_id: '- DB Cluster identifier for the DB Instance target. Not returned unless manually importing an RDS_INSTANCE target that is part of a DB Cluster.'
            type: '- Type of targetE.g., RDS_INSTANCE or TRACKED_CLUSTER'
        importStatements: []
    aws_db_security_group:
        subCategory: RDS (Relational Database)
        description: Provides an RDS security group resource.
        name: aws_db_security_group
        title: aws_db_security_group
        examples:
            - name: default
              manifest: |-
                {
                  "ingress": [
                    {
                      "cidr": "10.0.0.0/24"
                    }
                  ],
                  "name": "rds_sg"
                }
        argumentDocs:
            arn: '- The arn of the DB security group.'
            cidr: '- The CIDR block to accept'
            description: '- (Optional) The description of the DB security group. Defaults to "Managed by Terraform".'
            id: '- The db security group ID.'
            ingress: '- (Required) A list of ingress rules.'
            name: '- (Required) The name of the DB security group.'
            security_group_id: '- The ID of the security group to authorize'
            security_group_name: '- The name of the security group to authorize'
            security_group_owner_id: |-
                - The owner Id of the security group provided
                by security_group_name.
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_db_snapshot:
        subCategory: RDS (Relational Database)
        description: Manages an RDS database instance snapshot.
        name: aws_db_snapshot
        title: aws_db_snapshot
        examples:
            - name: test
              manifest: |-
                {
                  "db_instance_identifier": "${aws_db_instance.bar.id}",
                  "db_snapshot_identifier": "testsnapshot1234"
                }
              references:
                db_instance_identifier: aws_db_instance.bar.id
              dependencies:
                aws_db_instance.bar: |-
                    {
                      "allocated_storage": 10,
                      "backup_retention_period": 0,
                      "engine": "mysql",
                      "engine_version": "5.6.21",
                      "instance_class": "db.t2.micro",
                      "maintenance_window": "Fri:09:00-Fri:09:30",
                      "name": "baz",
                      "parameter_group_name": "default.mysql5.6",
                      "password": "barbarbarbar",
                      "username": "foo"
                    }
        argumentDocs:
            allocated_storage: '- Specifies the allocated storage size in gigabytes (GB).'
            availability_zone: '- Specifies the name of the Availability Zone the DB instance was located in at the time of the DB snapshot.'
            db_instance_identifier: '- (Required) The DB Instance Identifier from which to take the snapshot.'
            db_snapshot_arn: '- The Amazon Resource Name (ARN) for the DB snapshot.'
            db_snapshot_identifier: '- (Required) The Identifier for the snapshot.'
            encrypted: '- Specifies whether the DB snapshot is encrypted.'
            engine: '- Specifies the name of the database engine.'
            engine_version: '- Specifies the version of the database engine.'
            iops: '- Specifies the Provisioned IOPS (I/O operations per second) value of the DB instance at the time of the snapshot.'
            kms_key_id: '- The ARN for the KMS encryption key.'
            license_model: '- License model information for the restored DB instance.'
            option_group_name: '- Provides the option group name for the DB snapshot.'
            read: '- (Default 20 minutes)  Length of time to wait for the snapshot to become available'
            source_db_snapshot_identifier: '- The DB snapshot Arn that the DB snapshot was copied from. It only has value in case of cross customer or cross region copy.'
            source_region: '- The region that the DB snapshot was created in or copied from.'
            status: '- Specifies the status of this DB snapshot.'
            storage_type: '- Specifies the storage type associated with DB snapshot.'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            vpc_id: '- Provides the VPC ID associated with the DB snapshot.'
        importStatements: []
    aws_db_snapshot_copy:
        subCategory: RDS (Relational Database)
        description: Manages an RDS database instance snapshot copy.
        name: aws_db_snapshot_copy
        title: aws_db_snapshot_copy
        examples:
            - name: example
              manifest: |-
                {
                  "source_db_snapshot_identifier": "${aws_db_snapshot.example.db_snapshot_arn}",
                  "target_db_snapshot_identifier": "testsnapshot1234-copy"
                }
              references:
                source_db_snapshot_identifier: aws_db_snapshot.example.db_snapshot_arn
              dependencies:
                aws_db_instance.example: |-
                    {
                      "allocated_storage": 10,
                      "backup_retention_period": 0,
                      "engine": "mysql",
                      "engine_version": "5.6.21",
                      "instance_class": "db.t2.micro",
                      "maintenance_window": "Fri:09:00-Fri:09:30",
                      "name": "baz",
                      "parameter_group_name": "default.mysql5.6",
                      "password": "barbarbarbar",
                      "username": "foo"
                    }
                aws_db_snapshot.example: |-
                    {
                      "db_instance_identifier": "${aws_db_instance.example.id}",
                      "db_snapshot_identifier": "testsnapshot1234"
                    }
        argumentDocs:
            allocated_storage: '- Specifies the allocated storage size in gigabytes (GB).'
            availability_zone: '- Specifies the name of the Availability Zone the DB instance was located in at the time of the DB snapshot.'
            copy_tags: '- (Optional) Whether to copy existing tags. Defaults to false.'
            create: '- (Default 20 minutes)  Length of time to wait for the snapshot to become available'
            db_snapshot_arn: '- The Amazon Resource Name (ARN) for the DB snapshot.'
            destination_region: '- (Optional) The Destination region to place snapshot copy.'
            encrypted: '- Specifies whether the DB snapshot is encrypted.'
            engine: '- Specifies the name of the database engine.'
            engine_version: '- Specifies the version of the database engine.'
            id: '- Snapshot Identifier.'
            iops: '- Specifies the Provisioned IOPS (I/O operations per second) value of the DB instance at the time of the snapshot.'
            kms_key_id: '- (Optional) KMS key ID.'
            license_model: '- License model information for the restored DB instance.'
            option_group_name: '- (Optional) The name of an option group to associate with the copy of the snapshot.'
            presigned_url: '- (Optional) he URL that contains a Signature Version 4 signed request.'
            source_db_snapshot_identifier: '- (Required) Snapshot identifier of the source snapshot.'
            source_region: '- The region that the DB snapshot was created in or copied from.'
            storage_type: '- Specifies the storage type associated with DB snapshot.'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            target_custom_availability_zone: '- (Optional) The external custom Availability Zone.'
            target_db_snapshot_identifier: '- (Required) The Identifier for the snapshot.'
            vpc_id: '- Provides the VPC ID associated with the DB snapshot.'
        importStatements: []
    aws_db_subnet_group:
        subCategory: RDS (Relational Database)
        description: Provides an RDS DB subnet group resource.
        name: aws_db_subnet_group
        title: aws_db_subnet_group
        examples:
            - name: default
              manifest: |-
                {
                  "name": "main",
                  "subnet_ids": [
                    "${aws_subnet.frontend.id}",
                    "${aws_subnet.backend.id}"
                  ],
                  "tags": {
                    "Name": "My DB subnet group"
                  }
                }
        argumentDocs:
            arn: '- The ARN of the db subnet group.'
            description: '- (Optional) The description of the DB subnet group. Defaults to "Managed by Terraform".'
            id: '- The db subnet group name.'
            name: '- (Optional, Forces new resource) The name of the DB subnet group. If omitted, Terraform will assign a random, unique name.'
            name_prefix: '- (Optional, Forces new resource) Creates a unique name beginning with the specified prefix. Conflicts with name.'
            subnet_ids: '- (Required) A list of VPC subnet IDs.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_default_network_acl:
        subCategory: VPC (Virtual Private Cloud)
        description: Manage a default network ACL.
        name: aws_default_network_acl
        title: aws_default_network_acl
        examples:
            - name: default
              manifest: |-
                {
                  "default_network_acl_id": "${aws_vpc.mainvpc.default_network_acl_id}",
                  "egress": [
                    {
                      "action": "allow",
                      "cidr_block": "0.0.0.0/0",
                      "from_port": 0,
                      "protocol": -1,
                      "rule_no": 100,
                      "to_port": 0
                    }
                  ],
                  "ingress": [
                    {
                      "action": "allow",
                      "cidr_block": "0.0.0.0/0",
                      "from_port": 0,
                      "protocol": -1,
                      "rule_no": 100,
                      "to_port": 0
                    }
                  ]
                }
              references:
                default_network_acl_id: aws_vpc.mainvpc.default_network_acl_id
              dependencies:
                aws_vpc.mainvpc: |-
                    {
                      "cidr_block": "10.1.0.0/16"
                    }
            - name: default
              manifest: |-
                {
                  "default_network_acl_id": "${aws_vpc.mainvpc.default_network_acl_id}",
                  "ingress": [
                    {
                      "action": "allow",
                      "cidr_block": "${aws_default_vpc.mainvpc.cidr_block}",
                      "from_port": 0,
                      "protocol": -1,
                      "rule_no": 100,
                      "to_port": 0
                    }
                  ]
                }
              references:
                default_network_acl_id: aws_vpc.mainvpc.default_network_acl_id
                ingress.cidr_block: aws_default_vpc.mainvpc.cidr_block
              dependencies:
                aws_vpc.mainvpc: |-
                    {
                      "cidr_block": "10.1.0.0/16"
                    }
            - name: default
              manifest: |-
                {
                  "default_network_acl_id": "${aws_vpc.mainvpc.default_network_acl_id}"
                }
              references:
                default_network_acl_id: aws_vpc.mainvpc.default_network_acl_id
              dependencies:
                aws_vpc.mainvpc: |-
                    {
                      "cidr_block": "10.1.0.0/16"
                    }
            - name: default
              manifest: |-
                {
                  "lifecycle": [
                    {
                      "ignore_changes": [
                        "${subnet_ids}"
                      ]
                    }
                  ]
                }
        argumentDocs:
            arn: '- ARN of the Default Network ACL'
            default_network_acl_id: '- (Required) Network ACL ID to manage. This attribute is exported from aws_vpc, or manually found via the AWS Console.'
            egress: '- (Optional) Configuration block for an egress rule. Detailed below.'
            egress.action: '- (Required) The action to take.'
            egress.cidr_block: '- (Optional) The CIDR block to match. This must be a valid network mask.'
            egress.from_port: '- (Required) The from port to match.'
            egress.icmp_code: '- (Optional) The ICMP type code to be used. Default 0.'
            egress.icmp_type: '- (Optional) The ICMP type to be used. Default 0.'
            egress.ipv6_cidr_block: '- (Optional) The IPv6 CIDR block.'
            egress.protocol: '- (Required) The protocol to match. If using the -1 ''all'' protocol, you must specify a from and to port of 0.'
            egress.rule_no: '- (Required) The rule number. Used for ordering.'
            egress.to_port: '- (Required) The to port to match.'
            id: '- ID of the Default Network ACL'
            ingress: '- (Optional) Configuration block for an ingress rule. Detailed below.'
            owner_id: '- ID of the AWS account that owns the Default Network ACL'
            subnet_ids: '- (Optional) List of Subnet IDs to apply the ACL to. See the notes below on managing Subnets in the Default Network ACL'
            tags: '- (Optional) Map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            vpc_id: '-  ID of the associated VPC'
        importStatements: []
    aws_default_route_table:
        subCategory: VPC (Virtual Private Cloud)
        description: Provides a resource to manage a default route table of a VPC.
        name: aws_default_route_table
        title: aws_default_route_table
        examples:
            - name: example
              manifest: |-
                {
                  "default_route_table_id": "${aws_vpc.example.default_route_table_id}",
                  "route": [
                    {
                      "cidr_block": "10.0.1.0/24",
                      "gateway_id": "${aws_internet_gateway.example.id}"
                    },
                    {
                      "egress_only_gateway_id": "${aws_egress_only_internet_gateway.example.id}",
                      "ipv6_cidr_block": "::/0"
                    }
                  ],
                  "tags": {
                    "Name": "example"
                  }
                }
              references:
                default_route_table_id: aws_vpc.example.default_route_table_id
                route.egress_only_gateway_id: aws_egress_only_internet_gateway.example.id
                route.gateway_id: aws_internet_gateway.example.id
            - name: example
              manifest: |-
                {
                  "default_route_table_id": "${aws_vpc.example.default_route_table_id}",
                  "route": [],
                  "tags": {
                    "Name": "example"
                  }
                }
              references:
                default_route_table_id: aws_vpc.example.default_route_table_id
        argumentDocs:
            arn: '- The ARN of the route table.'
            cidr_block: '- (Required) The CIDR block of the route.'
            core_network_arn: '- (Optional) The Amazon Resource Name (ARN) of a core network.'
            create: '- (Default 2 minutes) Used for route creation'
            default_route_table_id: '- (Required) ID of the default route table.'
            destination_prefix_list_id: '- (Optional) The ID of a managed prefix list destination of the route.'
            egress_only_gateway_id: '- (Optional) Identifier of a VPC Egress Only Internet Gateway.'
            gateway_id: '- (Optional) Identifier of a VPC internet gateway or a virtual private gateway.'
            id: '- ID of the route table.'
            instance_id: '- (Optional) Identifier of an EC2 instance.'
            ipv6_cidr_block: '- (Optional) The Ipv6 CIDR block of the route'
            nat_gateway_id: '- (Optional) Identifier of a VPC NAT gateway.'
            network_interface_id: '- (Optional) Identifier of an EC2 network interface.'
            owner_id: '- ID of the AWS account that owns the route table.'
            propagating_vgws: '- (Optional) List of virtual gateways for propagation.'
            route: '- (Optional) Configuration block of routes. Detailed below. This argument is processed in attribute-as-blocks mode. This means that omitting this argument is interpreted as ignoring any existing routes. To remove all managed routes an empty list should be specified. See the example above.'
            tags: '- (Optional) Map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            transit_gateway_id: '- (Optional) Identifier of an EC2 Transit Gateway.'
            update: '- (Default 2 minutes) Used for route creation'
            vpc_endpoint_id: '- (Optional) Identifier of a VPC Endpoint. This route must be removed prior to VPC Endpoint deletion.'
            vpc_id: '- ID of the VPC.'
            vpc_peering_connection_id: '- (Optional) Identifier of a VPC peering connection.'
        importStatements: []
    aws_default_security_group:
        subCategory: VPC (Virtual Private Cloud)
        description: Manage a default security group resource.
        name: aws_default_security_group
        title: aws_default_security_group
        examples:
            - name: default
              manifest: |-
                {
                  "egress": [
                    {
                      "cidr_blocks": [
                        "0.0.0.0/0"
                      ],
                      "from_port": 0,
                      "protocol": "-1",
                      "to_port": 0
                    }
                  ],
                  "ingress": [
                    {
                      "from_port": 0,
                      "protocol": -1,
                      "self": true,
                      "to_port": 0
                    }
                  ],
                  "vpc_id": "${aws_vpc.mainvpc.id}"
                }
              references:
                vpc_id: aws_vpc.mainvpc.id
              dependencies:
                aws_vpc.mainvpc: |-
                    {
                      "cidr_block": "10.1.0.0/16"
                    }
            - name: default
              manifest: |-
                {
                  "ingress": [
                    {
                      "from_port": 0,
                      "protocol": -1,
                      "self": true,
                      "to_port": 0
                    }
                  ],
                  "vpc_id": "${aws_vpc.mainvpc.id}"
                }
              references:
                vpc_id: aws_vpc.mainvpc.id
              dependencies:
                aws_vpc.mainvpc: |-
                    {
                      "cidr_block": "10.1.0.0/16"
                    }
        argumentDocs:
            arn: '- ARN of the security group.'
            cidr_blocks: '- (Optional) List of CIDR blocks.'
            description: '- (Optional) Description of this rule.'
            egress: '- (Optional, VPC only) Configuration block. Detailed below.'
            from_port: '- (Required) Start port (or ICMP type number if protocol is icmp)'
            id: '- ID of the security group.'
            ingress: '- (Optional) Configuration block. Detailed below.'
            ipv6_cidr_blocks: '- (Optional) List of IPv6 CIDR blocks.'
            name: '- Name of the security group.'
            owner_id: '- Owner ID.'
            prefix_list_ids: '- (Optional) List of prefix list IDs (for allowing access to VPC endpoints)'
            protocol: '- (Required) Protocol. If you select a protocol of "-1" (semantically equivalent to all, which is not a valid value here), you must specify a from_port and to_port equal to 0. If not icmp, tcp, udp, or -1 use the protocol number.'
            security_groups: '- (Optional) List of security group Group Names if using EC2-Classic, or Group IDs if using a VPC.'
            self: '- (Optional) Whether the security group itself will be added as a source to this egress rule.'
            tags: '- (Optional) Map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            to_port: '- (Required) End range port (or ICMP code if protocol is icmp).'
            vpc_id: '- (Optional, Forces new resource) VPC ID. Note that changing the  It will be left in its current state.'
        importStatements: []
    aws_default_subnet:
        subCategory: VPC (Virtual Private Cloud)
        description: Manage a default subnet resource.
        name: aws_default_subnet
        title: aws_default_subnet
        examples:
            - name: default_az1
              manifest: |-
                {
                  "availability_zone": "us-west-2a",
                  "tags": {
                    "Name": "Default subnet for us-west-2a"
                  }
                }
        argumentDocs:
            availability_zone: is required
            availability_zone_id: ', cidr_block and vpc_id arguments become computed attributes'
            cidr_block: '- The IPv4 CIDR block assigned to the subnet'
            force_destroy: '- (Optional) Whether destroying the resource deletes the default subnet. Default: false'
            map_public_ip_on_launch: is true
            vpc_id: '- The ID of the VPC the subnet is in'
        importStatements: []
    aws_default_vpc:
        subCategory: VPC (Virtual Private Cloud)
        description: Manage a default VPC resource.
        name: aws_default_vpc
        title: aws_default_vpc
        examples:
            - name: default
              manifest: |-
                {
                  "tags": {
                    "Name": "Default VPC"
                  }
                }
        argumentDocs:
            cidr_block: and instance_tenancy arguments become computed attributes
            enable_dns_hostnames: is true
            force_destroy: '- (Optional) Whether destroying the resource deletes the default VPC. Default: false'
            instance_tenancy: '- The allowed tenancy of instances launched into the VPC'
        importStatements: []
    aws_default_vpc_dhcp_options:
        subCategory: VPC (Virtual Private Cloud)
        description: Manage the default VPC DHCP Options resource.
        name: aws_default_vpc_dhcp_options
        title: aws_default_vpc_dhcp_options
        examples:
            - name: default
              manifest: |-
                {
                  "tags": {
                    "Name": "Default DHCP Option Set"
                  }
                }
        argumentDocs:
            arn: '- The ARN of the DHCP Options Set.'
            id: '- The ID of the DHCP Options Set.'
            netbios_name_servers: '- (Optional) List of NETBIOS name servers.'
            netbios_node_type: '- (Optional) The NetBIOS node type (1, 2, 4, or 8). AWS recommends to specify 2 since broadcast and multicast are not supported in their network. For more information about these node types, see RFC 2132.'
            owner_id: '- The ID of the AWS account that owns the DHCP options set.'
            tags: '- (Optional) A map of tags to assign to the resource.'
        importStatements: []
    aws_detective_graph:
        subCategory: Detective
        description: Provides a resource to manage an Amazon Detective graph.
        name: aws_detective_graph
        title: aws_detective_graph
        examples:
            - name: example
              manifest: |-
                {
                  "tags": {
                    "Name": "example-detective-graph"
                  }
                }
        argumentDocs:
            created_time: '- Date and time, in UTC and extended RFC 3339 format, when the Amazon Detective Graph was created.'
            graph_arn: '- ARN of the Detective Graph.'
            id: '- ARN of the Detective Graph.'
            tags: '-  (Optional) A map of tags to assign to the instance. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
        importStatements: []
    aws_detective_invitation_accepter:
        subCategory: Detective
        description: Provides a resource to manage an Amazon Detective member invitation accepter.
        name: aws_detective_invitation_accepter
        title: aws_detective_invitation_accepter
        examples:
            - name: member
              manifest: |-
                {
                  "depends_on": [
                    "${aws_detective_member.primary}"
                  ],
                  "graph_arn": "${aws_detective_graph.primary.graph_arn}",
                  "provider": "awsalternate"
                }
              references:
                graph_arn: aws_detective_graph.primary.graph_arn
              dependencies:
                aws_detective_graph.primary: '{}'
                aws_detective_member.primary: |-
                    {
                      "account_id": "ACCOUNT ID",
                      "email_address": "EMAIL",
                      "graph_arn": "${aws_detective_graph.primary.id}",
                      "message": "Message of the invite"
                    }
        argumentDocs:
            graph_arn: '- (Required) ARN of the behavior graph that the member account is accepting the invitation for.'
            id: '- Unique identifier (ID) of the Detective invitation accepter.'
        importStatements: []
    aws_detective_member:
        subCategory: Detective
        description: Provides a resource to manage an Amazon Detective member.
        name: aws_detective_member
        title: aws_detective_member
        examples:
            - name: example
              manifest: |-
                {
                  "account_id": "AWS ACCOUNT ID",
                  "disable_email_notification": true,
                  "email_address": "EMAIL",
                  "graph_arn": "${aws_detective_graph.example.id}",
                  "message": "Message of the invitation"
                }
              references:
                graph_arn: aws_detective_graph.example.id
              dependencies:
                aws_detective_graph.example: '{}'
        argumentDocs:
            account_id: '- (Required) AWS account ID for the account.'
            administrator_id: '- AWS account ID for the administrator account.'
            disable_email_notification: '- (Optional) If set to true, then the root user of the invited account will not receive an email notification. This notification is in addition to an alert that the root user receives in AWS Personal Health Dashboard. By default, this is set to false.'
            email_address: '- (Required) Email address for the account.'
            graph_arn: '- (Required) ARN of the behavior graph to invite the member accounts to contribute their data to.'
            id: '- Unique identifier (ID) of the Detective.'
            invited_time: '- Date and time, in UTC and extended RFC 3339 format, when an Amazon Detective membership invitation was last sent to the account.'
            message: '- (Optional) A custom message to include in the invitation. Amazon Detective adds this message to the standard content that it sends for an invitation.'
            status: '- Current membership status of the member account.'
            updated_time: '- Date and time, in UTC and extended RFC 3339 format, of the most recent change to the member account''s status.'
            volume_usage_in_bytes: '- Data volume in bytes per day for the member account.'
        importStatements: []
    aws_devicefarm_device_pool:
        subCategory: Device Farm
        description: Provides a Devicefarm device_pool
        name: aws_devicefarm_device_pool
        title: aws_devicefarm_device_pool
        examples:
            - name: example
              manifest: |-
                {
                  "name": "example",
                  "project_arn": "${aws_devicefarm_project.example.arn}",
                  "rule": [
                    {
                      "attribute": "OS_VERSION",
                      "operator": "EQUALS",
                      "value": "\"AVAILABLE\""
                    }
                  ]
                }
              references:
                project_arn: aws_devicefarm_project.example.arn
        argumentDocs:
            arn: '- The Amazon Resource Name of this Device Pool'
            attribute: '- (Optional) The rule''s stringified attribute. Valid values are: APPIUM_VERSION, ARN, AVAILABILITY, FLEET_TYPE, FORM_FACTOR, INSTANCE_ARN, INSTANCE_LABELS, MANUFACTURER, MODEL, OS_VERSION, PLATFORM, REMOTE_ACCESS_ENABLED, REMOTE_DEBUG_ENABLED.'
            description: '- (Optional) The device pool''s description.'
            max_devices: '- (Optional) The number of devices that Device Farm can add to your device pool.'
            name: '- (Required) The name of the Device Pool'
            operator: '- (Optional) Specifies how Device Farm compares the rule''s attribute to the value. For the operators that are supported by each attribute. Valid values are: EQUALS, NOT_IN, IN, GREATER_THAN, GREATER_THAN_OR_EQUALS, LESS_THAN, LESS_THAN_OR_EQUALS, CONTAINS.'
            project_arn: '- (Required) The ARN of the project for the device pool.'
            rule: '- (Required) The device pool''s rules. See Rule.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            value: '- (Optional) The rule''s value.'
        importStatements: []
    aws_devicefarm_instance_profile:
        subCategory: Device Farm
        description: Provides a Devicefarm instance profile
        name: aws_devicefarm_instance_profile
        title: aws_devicefarm_instance_profile
        examples:
            - name: example
              manifest: |-
                {
                  "name": "example"
                }
        argumentDocs:
            arn: '- The Amazon Resource Name of this instance profile.'
            description: '- (Optional) The description of the instance profile.'
            exclude_app_packages_from_cleanup: '- (Optional) An array of strings that specifies the list of app packages that should not be cleaned up from the device after a test run.'
            name: '- (Required) The name for the instance profile.'
            package_cleanup: '- (Optional) When set to true, Device Farm removes app packages after a test run. The default value is false for private devices.'
            reboot_after_use: '- (Optional) When set to true, Device Farm reboots the instance after a test run. The default value is true.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_devicefarm_network_profile:
        subCategory: Device Farm
        description: Provides a Devicefarm network profile
        name: aws_devicefarm_network_profile
        title: aws_devicefarm_network_profile
        examples:
            - name: example
              manifest: |-
                {
                  "name": "example",
                  "project_arn": "${aws_devicefarm_project.example.arn}"
                }
              references:
                project_arn: aws_devicefarm_project.example.arn
              dependencies:
                aws_devicefarm_project.example: |-
                    {
                      "name": "example"
                    }
        argumentDocs:
            arn: '- The Amazon Resource Name of this network profile.'
            description: '- (Optional) The description of the network profile.'
            downlink_bandwidth_bits: '- (Optional) The data throughput rate in bits per second, as an integer from 0 to 104857600. Default value is 104857600.'
            downlink_delay_ms: '- (Optional) Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.'
            downlink_jitter_ms: '- (Optional) Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.'
            downlink_loss_percent: '- (Optional) Proportion of received packets that fail to arrive from 0 to 100 percent.'
            name: '- (Required) The name for the network profile.'
            project_arn: '- (Required) The ARN of the project for the network profile.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            type: '- (Optional) The type of network profile to create. Valid values are listed are PRIVATE and CURATED.'
            uplink_bandwidth_bits: '- (Optional) The data throughput rate in bits per second, as an integer from 0 to 104857600. Default value is 104857600.'
            uplink_delay_ms: '- (Optional) Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.'
            uplink_jitter_ms: '- (Optional) Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.'
            uplink_loss_percent: '- (Optional) Proportion of received packets that fail to arrive from 0 to 100 percent.'
        importStatements: []
    aws_devicefarm_project:
        subCategory: Device Farm
        description: Provides a Devicefarm project
        name: aws_devicefarm_project
        title: aws_devicefarm_project
        examples:
            - name: awesome_devices
              manifest: |-
                {
                  "name": "my-device-farm"
                }
        argumentDocs:
            arn: '- The Amazon Resource Name of this project'
            default_job_timeout_minutes: '- (Optional) Sets the execution timeout value (in minutes) for a project. All test runs in this project use the specified execution timeout value unless overridden when scheduling a run.'
            name: '- (Required) The name of the project'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_devicefarm_test_grid_project:
        subCategory: Device Farm
        description: Provides a Devicefarm test_grid_project
        name: aws_devicefarm_test_grid_project
        title: aws_devicefarm_test_grid_project
        examples:
            - name: example
              manifest: |-
                {
                  "name": "example",
                  "vpc_config": [
                    {
                      "security_group_ids": "${aws_security_group.example.*.id}",
                      "subnet_ids": "${aws_subnet.example.*.id}",
                      "vpc_id": "${aws_vpc.example.id}"
                    }
                  ]
                }
              references:
                vpc_config.vpc_id: aws_vpc.example.id
        argumentDocs:
            arn: '- The Amazon Resource Name of this Test Grid Project.'
            description: '- (Optional) Human-readable description of the project.'
            name: '- (Required) The name of the Selenium testing project.'
            security_group_ids: '- (Required) A list of VPC security group IDs in your Amazon VPC.'
            subnet_ids: '- (Required) A list of VPC subnet IDs in your Amazon VPC.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            vpc_config: '- (Required) The VPC security groups and subnets that are attached to a project. See VPC Config below.'
            vpc_id: '- (Required) The ID of the Amazon VPC.'
        importStatements: []
    aws_devicefarm_upload:
        subCategory: Device Farm
        description: Provides a Devicefarm upload
        name: aws_devicefarm_upload
        title: aws_devicefarm_upload
        examples:
            - name: example
              manifest: |-
                {
                  "name": "example",
                  "project_arn": "${aws_devicefarm_project.example.arn}",
                  "type": "APPIUM_JAVA_TESTNG_TEST_SPEC"
                }
              references:
                project_arn: aws_devicefarm_project.example.arn
              dependencies:
                aws_devicefarm_project.example: |-
                    {
                      "name": "example"
                    }
        argumentDocs:
            arn: '- The Amazon Resource Name of this upload.'
            category: '- The upload''s category.'
            content_type: '- (Optional) The upload''s content type (for example, application/octet-stream).'
            metadata: '- The upload''s metadata. For example, for Android, this contains information that is parsed from the manifest and is displayed in the AWS Device Farm console after the associated app is uploaded.'
            name: '- (Required) The upload''s file name. The name should not contain any forward slashes (/). If you are uploading an iOS app, the file name must end with the .ipa extension. If you are uploading an Android app, the file name must end with the .apk extension. For all others, the file name must end with the .zip file extension.'
            project_arn: '- (Required) The ARN of the project for the upload.'
            type: '- (Required) The upload''s upload type. See AWS Docs for valid list of values.'
            url: '- The presigned Amazon S3 URL that was used to store a file using a PUT request.'
        importStatements: []
    aws_directory_service_conditional_forwarder:
        subCategory: DS (Directory Service)
        description: Provides a conditional forwarder for managed Microsoft AD in AWS Directory Service.
        name: aws_directory_service_conditional_forwarder
        title: aws_directory_service_conditional_forwarder
        examples:
            - name: example
              manifest: |-
                {
                  "directory_id": "${aws_directory_service_directory.ad.id}",
                  "dns_ips": [
                    "8.8.8.8",
                    "8.8.4.4"
                  ],
                  "remote_domain_name": "example.com"
                }
              references:
                directory_id: aws_directory_service_directory.ad.id
        argumentDocs:
            directory_id: '- (Required) The id of directory.'
            dns_ips: '- (Required) A list of forwarder IP addresses.'
            remote_domain_name: '- (Required) The fully qualified domain name of the remote domain for which forwarders will be used.'
        importStatements: []
    aws_directory_service_directory:
        subCategory: DS (Directory Service)
        description: Provides a directory in AWS Directory Service.
        name: aws_directory_service_directory
        title: aws_directory_service_directory
        examples:
            - name: bar
              manifest: |-
                {
                  "name": "corp.notexample.com",
                  "password": "SuperSecretPassw0rd",
                  "size": "Small",
                  "tags": {
                    "Project": "foo"
                  },
                  "vpc_settings": [
                    {
                      "subnet_ids": [
                        "${aws_subnet.foo.id}",
                        "${aws_subnet.bar.id}"
                      ],
                      "vpc_id": "${aws_vpc.main.id}"
                    }
                  ]
                }
              references:
                vpc_settings.vpc_id: aws_vpc.main.id
              dependencies:
                aws_subnet.bar: |-
                    {
                      "availability_zone": "us-west-2b",
                      "cidr_block": "10.0.2.0/24",
                      "vpc_id": "${aws_vpc.main.id}"
                    }
                aws_subnet.foo: |-
                    {
                      "availability_zone": "us-west-2a",
                      "cidr_block": "10.0.1.0/24",
                      "vpc_id": "${aws_vpc.main.id}"
                    }
                aws_vpc.main: |-
                    {
                      "cidr_block": "10.0.0.0/16"
                    }
            - name: bar
              manifest: |-
                {
                  "edition": "Standard",
                  "name": "corp.notexample.com",
                  "password": "SuperSecretPassw0rd",
                  "tags": {
                    "Project": "foo"
                  },
                  "type": "MicrosoftAD",
                  "vpc_settings": [
                    {
                      "subnet_ids": [
                        "${aws_subnet.foo.id}",
                        "${aws_subnet.bar.id}"
                      ],
                      "vpc_id": "${aws_vpc.main.id}"
                    }
                  ]
                }
              references:
                vpc_settings.vpc_id: aws_vpc.main.id
              dependencies:
                aws_subnet.bar: |-
                    {
                      "availability_zone": "us-west-2b",
                      "cidr_block": "10.0.2.0/24",
                      "vpc_id": "${aws_vpc.main.id}"
                    }
                aws_subnet.foo: |-
                    {
                      "availability_zone": "us-west-2a",
                      "cidr_block": "10.0.1.0/24",
                      "vpc_id": "${aws_vpc.main.id}"
                    }
                aws_vpc.main: |-
                    {
                      "cidr_block": "10.0.0.0/16"
                    }
            - name: connector
              manifest: |-
                {
                  "connect_settings": [
                    {
                      "customer_dns_ips": [
                        "A.B.C.D"
                      ],
                      "customer_username": "Admin",
                      "subnet_ids": [
                        "${aws_subnet.foo.id}",
                        "${aws_subnet.bar.id}"
                      ],
                      "vpc_id": "${aws_vpc.main.id}"
                    }
                  ],
                  "name": "corp.notexample.com",
                  "password": "SuperSecretPassw0rd",
                  "size": "Small",
                  "type": "ADConnector"
                }
              references:
                connect_settings.vpc_id: aws_vpc.main.id
              dependencies:
                aws_subnet.bar: |-
                    {
                      "availability_zone": "us-west-2b",
                      "cidr_block": "10.0.2.0/24",
                      "vpc_id": "${aws_vpc.main.id}"
                    }
                aws_subnet.foo: |-
                    {
                      "availability_zone": "us-west-2a",
                      "cidr_block": "10.0.1.0/24",
                      "vpc_id": "${aws_vpc.main.id}"
                    }
                aws_vpc.main: |-
                    {
                      "cidr_block": "10.0.0.0/16"
                    }
        argumentDocs:
            access_url: '- The access URL for the directory, such as http://alias.awsapps.com.'
            alias: '- (Optional) The alias for the directory (must be unique amongst all aliases in AWS). Required for enable_sso.'
            connect_ips: '- The IP addresses of the AD Connector servers.'
            connect_settings: '- (Required for ADConnector) Connector related information about the directory. Fields documented below.'
            customer_dns_ips: '- (Required) The DNS IP addresses of the domain to connect to.'
            customer_username: '- (Required) The username corresponding to the password provided.'
            description: '- (Optional) A textual description for the directory.'
            dns_ip_addresses: '- A list of IP addresses of the DNS servers for the directory or connector.'
            edition: '- (Optional) The MicrosoftAD edition (Standard or Enterprise). Defaults to Enterprise (applies to MicrosoftAD type only).'
            enable_sso: '- (Optional) Whether to enable single-sign on for the directory. Requires alias. Defaults to false.'
            id: '- The directory identifier.'
            name: '- (Required) The fully qualified name for the directory, such as corp.example.com'
            password: '- (Required) The password for the directory administrator or connector user.'
            security_group_id: '- The ID of the security group created by the directory.'
            short_name: '- (Optional) The short name of the directory, such as CORP.'
            size: '- (Required for SimpleAD and ADConnector) The size of the directory (Small or Large are accepted values).'
            subnet_ids: '- (Required) The identifiers of the subnets for the directory servers (2 subnets in 2 different AZs).'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            type: (Optional) - The directory type (SimpleAD, ADConnector or MicrosoftAD are accepted values). Defaults to SimpleAD.
            vpc_id: '- (Required) The identifier of the VPC that the directory is in.'
            vpc_settings: '- (Required for SimpleAD and MicrosoftAD) VPC related information about the directory. Fields documented below.'
        importStatements: []
    aws_directory_service_log_subscription:
        subCategory: DS (Directory Service)
        description: Provides a Log subscription for AWS Directory Service that pushes logs to cloudwatch.
        name: aws_directory_service_log_subscription
        title: aws_directory_service_log_subscription
        examples:
            - name: example
              manifest: |-
                {
                  "directory_id": "${aws_directory_service_directory.example.id}",
                  "log_group_name": "${aws_cloudwatch_log_group.example.name}"
                }
              references:
                directory_id: aws_directory_service_directory.example.id
                log_group_name: aws_cloudwatch_log_group.example.name
              dependencies:
                aws_cloudwatch_log_group.example: |-
                    {
                      "name": "/aws/directoryservice/${aws_directory_service_directory.example.id}",
                      "retention_in_days": 14
                    }
                aws_cloudwatch_log_resource_policy.ad-log-policy: |-
                    {
                      "policy_document": "${data.aws_iam_policy_document.ad-log-policy.json}",
                      "policy_name": "ad-log-policy"
                    }
        argumentDocs:
            directory_id: '- (Required) The id of directory.'
            log_group_name: '- (Required) Name of the cloudwatch log group to which the logs should be published. The log group should be already created and the directory service principal should be provided with required permission to create stream and publish logs. Changing this value would delete the current subscription and create a new one. A directory can only have one log subscription at a time.'
        importStatements: []
    aws_directory_service_shared_directory:
        subCategory: DS (Directory Service)
        description: Manages a directory in your account (directory owner) shared with another account (directory consumer).
        name: aws_directory_service_shared_directory
        title: aws_directory_service_shared_directory
        examples:
            - name: example
              manifest: |-
                {
                  "directory_id": "${aws_directory_service_directory.example.id}",
                  "notes": "You wanna have a catch?",
                  "target": [
                    {
                      "id": "${data.aws_caller_identity.receiver.account_id}"
                    }
                  ]
                }
              references:
                directory_id: aws_directory_service_directory.example.id
                target.id: data.aws_caller_identity.receiver.account_id
              dependencies:
                aws_directory_service_directory.example: |-
                    {
                      "edition": "Standard",
                      "name": "tf-example",
                      "password": "SuperSecretPassw0rd",
                      "type": "MicrosoftAD",
                      "vpc_settings": [
                        {
                          "subnet_ids": "${aws_subnet.example[*].id}",
                          "vpc_id": "${aws_vpc.example.id}"
                        }
                      ]
                    }
        argumentDocs:
            directory_id: '- (Required) Identifier of the Managed Microsoft AD directory that you want to share with other accounts.'
            id: '- Identifier of the shared directory.'
            method: '- (Optional) Method used when sharing a directory. Valid values are ORGANIZATIONS and HANDSHAKE. Default is HANDSHAKE.'
            notes: '- (Optional, Sensitive) Message sent by the directory owner to the directory consumer to help the directory consumer administrator determine whether to approve or reject the share invitation.'
            shared_directory_id: '- Identifier of the directory that is stored in the directory consumer account that corresponds to the shared directory in the owner account.'
            target: '- (Required) Identifier for the directory consumer account with whom the directory is to be shared. See below.'
            target.id: '- (Required) Identifier of the directory consumer account.'
            target.type: '- (Optional) Type of identifier to be used in the id field. Valid value is ACCOUNT. Default is ACCOUNT.'
        importStatements: []
    aws_directory_service_shared_directory_accepter:
        subCategory: DS (Directory Service)
        description: Accepts a shared directory in a consumer account.
        name: aws_directory_service_shared_directory_accepter
        title: aws_directory_service_shared_directory_accepter
        examples:
            - name: example
              manifest: |-
                {
                  "provider": "awsalternate",
                  "shared_directory_id": "${aws_directory_service_shared_directory.example.shared_directory_id}"
                }
              references:
                shared_directory_id: aws_directory_service_shared_directory.example.shared_directory_id
              dependencies:
                aws_directory_service_shared_directory.example: |-
                    {
                      "directory_id": "${aws_directory_service_directory.example.id}",
                      "notes": "example",
                      "target": [
                        {
                          "id": "${data.aws_caller_identity.receiver.account_id}"
                        }
                      ]
                    }
        argumentDocs:
            id: '- Identifier of the shared directory.'
            method: '- Method used when sharing a directory (i.e., ORGANIZATIONS or HANDSHAKE).'
            notes: '- Message sent by the directory owner to the directory consumer to help the directory consumer administrator determine whether to approve or reject the share invitation.'
            owner_account_id: '- Account identifier of the directory owner.'
            owner_directory_id: '- Identifier of the Managed Microsoft AD directory from the perspective of the directory owner.'
            shared_directory_id: '- (Required) Identifier of the directory that is stored in the directory consumer account that corresponds to the shared directory in the owner account.'
        importStatements: []
    aws_dlm_lifecycle_policy:
        subCategory: DLM (Data Lifecycle Manager)
        description: Provides a Data Lifecycle Manager (DLM) lifecycle policy for managing snapshots.
        name: aws_dlm_lifecycle_policy
        title: aws_dlm_lifecycle_policy
        examples:
            - name: example
              manifest: |-
                {
                  "description": "example DLM lifecycle policy",
                  "execution_role_arn": "${aws_iam_role.dlm_lifecycle_role.arn}",
                  "policy_details": [
                    {
                      "resource_types": [
                        "VOLUME"
                      ],
                      "schedule": [
                        {
                          "copy_tags": false,
                          "create_rule": [
                            {
                              "interval": 24,
                              "interval_unit": "HOURS",
                              "times": [
                                "23:45"
                              ]
                            }
                          ],
                          "name": "2 weeks of daily snapshots",
                          "retain_rule": [
                            {
                              "count": 14
                            }
                          ],
                          "tags_to_add": {
                            "SnapshotCreator": "DLM"
                          }
                        }
                      ],
                      "target_tags": {
                        "Snapshot": "true"
                      }
                    }
                  ],
                  "state": "ENABLED"
                }
              references:
                execution_role_arn: aws_iam_role.dlm_lifecycle_role.arn
              dependencies:
                aws_iam_role.dlm_lifecycle_role: |-
                    {
                      "assume_role_policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"dlm.amazonaws.com\"\n      },\n      \"Effect\": \"Allow\",\n      \"Sid\": \"\"\n    }\n  ]\n}\n",
                      "name": "dlm-lifecycle-role"
                    }
                aws_iam_role_policy.dlm_lifecycle: |-
                    {
                      "name": "dlm-lifecycle-policy",
                      "policy": "{\n   \"Version\": \"2012-10-17\",\n   \"Statement\": [\n      {\n         \"Effect\": \"Allow\",\n         \"Action\": [\n            \"ec2:CreateSnapshot\",\n            \"ec2:CreateSnapshots\",\n            \"ec2:DeleteSnapshot\",\n            \"ec2:DescribeInstances\",\n            \"ec2:DescribeVolumes\",\n            \"ec2:DescribeSnapshots\"\n         ],\n         \"Resource\": \"*\"\n      },\n      {\n         \"Effect\": \"Allow\",\n         \"Action\": [\n            \"ec2:CreateTags\"\n         ],\n         \"Resource\": \"arn:aws:ec2:*::snapshot/*\"\n      }\n   ]\n}\n",
                      "role": "${aws_iam_role.dlm_lifecycle_role.id}"
                    }
            - name: example
              manifest: |-
                {
                  "description": "example DLM lifecycle policy",
                  "execution_role_arn": "${aws_iam_role.dlm_lifecycle_role.arn}",
                  "policy_details": [
                    {
                      "resource_types": [
                        "VOLUME"
                      ],
                      "schedule": [
                        {
                          "copy_tags": false,
                          "create_rule": [
                            {
                              "interval": 24,
                              "interval_unit": "HOURS",
                              "times": [
                                "23:45"
                              ]
                            }
                          ],
                          "cross_region_copy_rule": [
                            {
                              "cmk_arn": "${aws_kms_key.dlm_cross_region_copy_cmk.arn}",
                              "copy_tags": true,
                              "encrypted": true,
                              "retain_rule": [
                                {
                                  "interval": 30,
                                  "interval_unit": "DAYS"
                                }
                              ],
                              "target": "us-west-2"
                            }
                          ],
                          "name": "2 weeks of daily snapshots",
                          "retain_rule": [
                            {
                              "count": 14
                            }
                          ],
                          "tags_to_add": {
                            "SnapshotCreator": "DLM"
                          }
                        }
                      ],
                      "target_tags": {
                        "Snapshot": "true"
                      }
                    }
                  ],
                  "state": "ENABLED"
                }
              references:
                execution_role_arn: aws_iam_role.dlm_lifecycle_role.arn
                policy_details.schedule.cross_region_copy_rule.cmk_arn: aws_kms_key.dlm_cross_region_copy_cmk.arn
              dependencies:
                aws_kms_key.dlm_cross_region_copy_cmk: |-
                    {
                      "description": "Example Alternate Region KMS Key",
                      "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Id\": \"dlm-cross-region-copy-cmk\",\n  \"Statement\": [\n    {\n      \"Sid\": \"Enable IAM User Permissions\",\n      \"Effect\": \"Allow\",\n      \"Principal\": {\n        \"AWS\": \"arn:aws:iam::${data.aws_caller_identity.current.account_id}:root\"\n      },\n      \"Action\": \"kms:*\",\n      \"Resource\": \"*\"\n    }\n  ]\n}\n",
                      "provider": "${aws.alternate}"
                    }
        argumentDocs:
            action: '- (Optional) The actions to be performed when the event-based policy is triggered. You can specify only one action per policy. This parameter is required for event-based policies only. If you are creating a snapshot or AMI policy, omit this parameter. See the action configuration block.'
            arn: '- Amazon Resource Name (ARN) of the DLM Lifecycle Policy.'
            availability_zones: '- (Required) The Availability Zones in which to enable fast snapshot restore.'
            cmk_arn: '- (Optional) The Amazon Resource Name (ARN) of the AWS KMS key to use for EBS encryption. If this parameter is not specified, the default KMS key for the account is used.'
            copy_tags: '- (Optional) Copy all user-defined tags on a source volume to snapshots of the volume created by this policy.'
            count: '- (Optional) Specifies the number of oldest AMIs to deprecate. Must be an integer between 1 and 1000.'
            create_rule: '- (Required) See the create_rule block. Max of 1 per schedule.'
            cron_expression: '- (Optional) The schedule, as a Cron expression. The schedule interval must be between 1 hour and 1 year.'
            cross_region_copy: '- (Optional) The rule for copying shared snapshots across Regions. See the cross_region_copy configuration block.'
            cross_region_copy_rule: (Optional) - See the cross_region_copy_rule block. Max of 3 per schedule.
            deprecate_rule: '- (Required) See the deprecate_rule block. Max of 1 per schedule.'
            description: '- (Required) A description for the DLM lifecycle policy.'
            description_regex: '- (Required) The snapshot description that can trigger the policy. The description pattern is specified using a regular expression. The policy runs only if a snapshot with a description that matches the specified pattern is shared with your account.'
            encrypted: '- (Required) To encrypt a copy of an unencrypted snapshot when encryption by default is not enabled, enable encryption using this parameter. Copies of encrypted snapshots are encrypted, even if this parameter is false or when encryption by default is not enabled.'
            encryption_configuration: '- (Required) The encryption settings for the copied snapshot. See the encryption_configuration block. Max of 1 per action.'
            event_source: '- (Optional) The event that triggers the event-based policy. This parameter is required for event-based policies only. If you are creating a snapshot or AMI policy, omit this parameter. See the event_source configuration block.'
            event_type: '- (Required) The type of event. Currently, only shareSnapshot events are supported.'
            exclude_boot_volume: '- (Optional) Indicates whether to exclude the root volume from snapshots created using CreateSnapshots. The default is false.'
            execution_role_arn: '- (Required) The ARN of an IAM role that is able to be assumed by the DLM service.'
            fast_restore_rule: '- (Required) See the fast_restore_rule block. Max of 1 per schedule.'
            id: '- Identifier of the DLM Lifecycle Policy.'
            interval: '- (Optional) How often this lifecycle policy should be evaluated. 1, 2,3,4,6,8,12 or 24 are valid values.'
            interval_unit: '- (Optional) The unit for how often the lifecycle policy should be evaluated. HOURS is currently the only allowed value and also the default value.'
            location: '- (Optional) Specifies the destination for snapshots created by the policy. To create snapshots in the same Region as the source resource, specify CLOUD. To create snapshots on the same Outpost as the source resource, specify OUTPOST_LOCAL. If you omit this parameter, CLOUD is used by default. If the policy targets resources in an AWS Region, then you must create snapshots in the same Region as the source resource. If the policy targets resources on an Outpost, then you can create snapshots on the same Outpost as the source resource, or in the Region of that Outpost. Valid values are CLOUD and OUTPOST_LOCAL.'
            name: '- (Optional) A descriptive name for the action.'
            no_reboot: '- (Optional) Applies to AMI lifecycle policies only. Indicates whether targeted instances are rebooted when the lifecycle policy runs. true indicates that targeted instances are not rebooted when the policy runs. false indicates that target instances are rebooted when the policy runs. The default is true (instances are not rebooted).'
            parameters: '- (Optional) A set of optional parameters for snapshot and AMI lifecycle policies. See the parameters configuration block.'
            policy_details: '- (Required) See the policy_details configuration block. Max of 1.'
            policy_type: '- (Optional) The valid target resource types and actions a policy can manage. Specify EBS_SNAPSHOT_MANAGEMENT to create a lifecycle policy that manages the lifecycle of Amazon EBS snapshots. Specify IMAGE_MANAGEMENT to create a lifecycle policy that manages the lifecycle of EBS-backed AMIs. Specify EVENT_BASED_POLICY to create an event-based policy that performs specific actions when a defined event occurs in your AWS account. Default value is EBS_SNAPSHOT_MANAGEMENT.'
            resource_locations: '- (Optional) The location of the resources to backup. If the source resources are located in an AWS Region, specify CLOUD. If the source resources are located on an Outpost in your account, specify OUTPOST. If you specify OUTPOST, Amazon Data Lifecycle Manager backs up all resources of the specified type with matching target tags across all of the Outposts in your account. Valid values are CLOUD and OUTPOST.'
            resource_types: '- (Optional) A list of resource types that should be targeted by the lifecycle policy. Valid values are VOLUME and INSTANCE.'
            retain_rule: '- (Required) Specifies the retention rule for cross-Region snapshot copies. See the retain_rule block. Max of 1 per action.'
            schedule: '- (Optional) See the schedule configuration block.'
            share_rule: '- (Required) See the share_rule block. Max of 1 per schedule.'
            snapshot_owner: '- (Required) The IDs of the AWS accounts that can trigger policy by sharing snapshots with your account. The policy only runs if one of the specified AWS accounts shares a snapshot with your account.'
            state: '- (Optional) Whether the lifecycle policy should be enabled or disabled. ENABLED or DISABLED are valid values. Defaults to ENABLED.'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            tags_to_add: '- (Optional) A map of tag keys and their values. DLM lifecycle policies will already tag the snapshot with the tags on the volume. This configuration adds extra tags on top of these.'
            target: '- (Required) The target Region or the Amazon Resource Name (ARN) of the target Outpost for the snapshot copies.'
            target_accounts: '- (Required) The IDs of the AWS accounts with which to share the snapshots.'
            target_tags: (Optional) A map of tag keys and their values. Any resources that match the resource_types and are tagged with any of these tags will be targeted.
            times: '- (Optional) A list of times in 24 hour clock format that sets when the lifecycle policy should be evaluated. Max of 1.'
            type: '- (Required) The source of the event. Currently only managed CloudWatch Events rules are supported. Valid values are MANAGED_CWE.'
            variable_tags: '- (Optional) A map of tag keys and variable values, where the values are determined when the policy is executed. Only $(instance-id) or $(timestamp) are valid values. Can only be used when resource_types is INSTANCE.'
        importStatements: []
    aws_dms_certificate:
        subCategory: DMS (Database Migration)
        description: Provides a DMS (Data Migration Service) certificate resource.
        name: aws_dms_certificate
        title: aws_dms_certificate
        examples:
            - name: test
              manifest: |-
                {
                  "certificate_id": "test-dms-certificate-tf",
                  "certificate_pem": "...",
                  "tags": {
                    "Name": "test"
                  }
                }
        argumentDocs:
            certificate_arn: '- The Amazon Resource Name (ARN) for the certificate.'
            certificate_id: '- (Required) The certificate identifier.'
            certificate_pem: '- (Optional) The contents of the .pem X.509 certificate file for the certificate. Either certificate_pem or certificate_wallet must be set.'
            certificate_wallet: '- (Optional) The contents of the Oracle Wallet certificate for use with SSL, provided as a base64-encoded String. Either certificate_pem or certificate_wallet must be set.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_dms_endpoint:
        subCategory: DMS (Database Migration)
        description: Provides a DMS (Data Migration Service) endpoint resource.
        name: aws_dms_endpoint
        title: aws_dms_endpoint
        examples:
            - name: test
              manifest: |-
                {
                  "certificate_arn": "arn:aws:acm:us-east-1:123456789012:certificate/12345678-1234-1234-1234-123456789012",
                  "database_name": "test",
                  "endpoint_id": "test-dms-endpoint-tf",
                  "endpoint_type": "source",
                  "engine_name": "aurora",
                  "extra_connection_attributes": "",
                  "kms_key_arn": "arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012",
                  "password": "test",
                  "port": 3306,
                  "server_name": "test",
                  "ssl_mode": "none",
                  "tags": {
                    "Name": "test"
                  },
                  "username": "test"
                }
        argumentDocs:
            certificate_arn: '- (Optional, Default: empty string) ARN for the certificate.'
            database_name: '- (Optional) Name of the endpoint database.'
            elasticsearch_settings: '- (Optional) Configuration block for OpenSearch settings. See below.'
            elasticsearch_settings.endpoint_uri: '- (Required) Endpoint for the OpenSearch cluster.'
            elasticsearch_settings.error_retry_duration: '- (Optional) Maximum number of seconds for which DMS retries failed API requests to the OpenSearch cluster. Default is 300.'
            elasticsearch_settings.full_load_error_percentage: '- (Optional) Maximum percentage of records that can fail to be written before a full load operation stops. Default is 10.'
            elasticsearch_settings.service_access_role_arn: '- (Required) ARN of the IAM Role with permissions to write to the OpenSearch cluster.'
            endpoint_arn: '- ARN for the endpoint.'
            endpoint_id: '- (Required) Database endpoint identifier. Identifiers must contain from 1 to 255 alphanumeric characters or hyphens, begin with a letter, contain only ASCII letters, digits, and hyphens, not end with a hyphen, and not contain two consecutive hyphens.'
            endpoint_type: '- (Required) Type of endpoint. Valid values are source, target.'
            engine_name: '- (Required) Type of engine for the endpoint. Valid values are aurora, aurora-postgresql, azuredb, db2, docdb, dynamodb, elasticsearch, kafka, kinesis, mariadb, mongodb, mysql, opensearch, oracle, postgres, redshift, s3, sqlserver, sybase. Please note that some of engine names are available only for target endpoint type (e.g. redshift).'
            extra_connection_attributes: '- (Optional) Additional attributes associated with the connection. For available attributes see Using Extra Connection Attributes with AWS Database Migration Service.'
            kafka_settings: '- (Optional) Configuration block for Kafka settings. See below.'
            kafka_settings.broker: '- (Required) Kafka broker location. Specify in the form broker-hostname-or-ip:port.'
            kafka_settings.include_control_details: '- (Optional) Shows detailed control information for table definition, column definition, and table and column changes in the Kafka message output. Default is false.'
            kafka_settings.include_null_and_empty: '- (Optional) Include NULL and empty columns for records migrated to the endpoint. Default is false.'
            kafka_settings.include_partition_value: '- (Optional) Shows the partition value within the Kafka message output unless the partition type is schema-table-type. Default is false.'
            kafka_settings.include_table_alter_operations: '- (Optional) Includes any data definition language (DDL) operations that change the table in the control data, such as rename-table, drop-table, add-column, drop-column, and rename-column. Default is false.'
            kafka_settings.include_transaction_details: '- (Optional) Provides detailed transaction information from the source database. This information includes a commit timestamp, a log position, and values for transaction_id, previous transaction_id, and transaction_record_id (the record offset within a transaction). Default is false.'
            kafka_settings.message_format: '- (Optional) Output format for the records created on the endpoint. Message format is JSON (default) or JSON_UNFORMATTED (a single line with no tab).'
            kafka_settings.message_max_bytes: '- (Optional) Maximum size in bytes for records created on the endpoint Default is 1,000,000.'
            kafka_settings.no_hex_prefix: '- (Optional) Set this optional parameter to true to avoid adding a ''0x'' prefix to raw data in hexadecimal format. For example, by default, AWS DMS adds a ''0x'' prefix to the LOB column type in hexadecimal format moving from an Oracle source to a Kafka target. Use the no_hex_prefix endpoint setting to enable migration of RAW data type columns without adding the ''0x'' prefix.'
            kafka_settings.partition_include_schema_table: '- (Optional) Prefixes schema and table names to partition values, when the partition type is primary-key-type. Doing this increases data distribution among Kafka partitions. For example, suppose that a SysBench schema has thousands of tables and each table has only limited range for a primary key. In this case, the same primary key is sent from thousands of tables to the same partition, which causes throttling. Default is false.'
            kafka_settings.sasl_password: '- (Optional) Secure password you created when you first set up your MSK cluster to validate a client identity and make an encrypted connection between server and client using SASL-SSL authentication.'
            kafka_settings.sasl_username: '- (Optional) Secure user name you created when you first set up your MSK cluster to validate a client identity and make an encrypted connection between server and client using SASL-SSL authentication.'
            kafka_settings.security_protocol: '- (Optional) Set secure connection to a Kafka target endpoint using Transport Layer Security (TLS). Options include ssl-encryption, ssl-authentication, and sasl-ssl. sasl-ssl requires sasl_username and sasl_password.'
            kafka_settings.ssl_ca_certificate_arn: '- (Optional) ARN for the private certificate authority (CA) cert that AWS DMS uses to securely connect to your Kafka target endpoint.'
            kafka_settings.ssl_client_certificate_arn: '- (Optional) ARN of the client certificate used to securely connect to a Kafka target endpoint.'
            kafka_settings.ssl_client_key_arn: '- (Optional) ARN for the client private key used to securely connect to a Kafka target endpoint.'
            kafka_settings.ssl_client_key_password: '- (Optional) Password for the client private key used to securely connect to a Kafka target endpoint.'
            kafka_settings.topic: '- (Optional) Kafka topic for migration. Default is kafka-default-topic.'
            kinesis_settings: '- (Optional) Configuration block for Kinesis settings. See below.'
            kinesis_settings.include_control_details: '- (Optional) Shows detailed control information for table definition, column definition, and table and column changes in the Kinesis message output. Default is false.'
            kinesis_settings.include_null_and_empty: '- (Optional) Include NULL and empty columns in the target. Default is false.'
            kinesis_settings.include_partition_value: '- (Optional) Shows the partition value within the Kinesis message output, unless the partition type is schema-table-type. Default is false.'
            kinesis_settings.include_table_alter_operations: '- (Optional) Includes any data definition language (DDL) operations that change the table in the control data. Default is false.'
            kinesis_settings.include_transaction_details: '- (Optional) Provides detailed transaction information from the source database. Default is false.'
            kinesis_settings.message_format: '- (Optional) Output format for the records created. Default is json. Valid values are json and json-unformatted (a single line with no tab).'
            kinesis_settings.partition_include_schema_table: '- (Optional) Prefixes schema and table names to partition values, when the partition type is primary-key-type. Default is false.'
            kinesis_settings.service_access_role_arn: '- (Optional) ARN of the IAM Role with permissions to write to the Kinesis data stream.'
            kinesis_settings.stream_arn: '- (Optional) ARN of the Kinesis data stream.'
            kms_key_arn: '- (Required when engine_name is mongodb, optional otherwise) ARN for the KMS key that will be used to encrypt the connection parameters. If you do not specify a value for kms_key_arn, then AWS DMS will use your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS region.'
            mongodb_settings: '- (Optional) Configuration block for MongoDB settings. See below.'
            mongodb_settings.auth_mechanism: '- (Optional) Authentication mechanism to access the MongoDB source endpoint. Default is default.'
            mongodb_settings.auth_source: '- (Optional) Authentication database name. Not used when auth_type is no. Default is admin.'
            mongodb_settings.auth_type: '- (Optional) Authentication type to access the MongoDB source endpoint. Default is password.'
            mongodb_settings.docs_to_investigate: '- (Optional) Number of documents to preview to determine the document organization. Use this setting when nesting_level is set to one. Default is 1000.'
            mongodb_settings.extract_doc_id: '- (Optional) Document ID. Use this setting when nesting_level is set to none. Default is false.'
            mongodb_settings.nesting_level: '- (Optional) Specifies either document or table mode. Default is none. Valid values are one (table mode) and none (document mode).'
            password: '- (Optional) Password to be used to login to the endpoint database.'
            port: '- (Optional) Port used by the endpoint database.'
            redshift_settings: '- (Optional) Configuration block for Redshift settings. See below.'
            redshift_settings.bucket_folder: '- (Optional) Custom S3 Bucket Object prefix for intermediate storage.'
            redshift_settings.bucket_name: '- (Optional) Custom S3 Bucket name for intermediate storage.'
            redshift_settings.encryption_mode: '- (Optional) The server-side encryption mode that you want to encrypt your intermediate .csv object files copied to S3. Defaults to SSE_S3. Valid values are SSE_S3 and SSE_KMS.'
            redshift_settings.server_side_encryption_kms_key_id: '- (Optional) If you set encryptionMode to SSE_KMS, set this parameter to the Amazon Resource Name (ARN) for the AWS KMS key.'
            redshift_settings.service_access_role_arn: '- (Optional) Amazon Resource Name (ARN) of the IAM Role with permissions to read from or write to the S3 Bucket for intermediate storage.'
            s3_settings: '- (Optional) Configuration block for S3 settings. See below.'
            s3_settings.add_column_name: '- (Optional) Whether to add column name information to the .csv output file. Default is false.'
            s3_settings.bucket_folder: '- (Optional) S3 object prefix.'
            s3_settings.bucket_name: '- (Optional) S3 bucket name.'
            s3_settings.canned_acl_for_objects: '- (Optional) Predefined (canned) access control list for objects created in an S3 bucket. Valid values include NONE, PRIVATE, PUBLIC_READ, PUBLIC_READ_WRITE, AUTHENTICATED_READ, AWS_EXEC_READ, BUCKET_OWNER_READ, and BUCKET_OWNER_FULL_CONTROL. Default is NONE.'
            s3_settings.cdc_inserts_and_updates: '- (Optional) Whether to write insert and update operations to .csv or .parquet output files. Default is false.'
            s3_settings.cdc_inserts_only: '- (Optional) Whether to write insert operations to .csv or .parquet output files. Default is false.'
            s3_settings.cdc_max_batch_interval: '- (Optional) Maximum length of the interval, defined in seconds, after which to output a file to Amazon S3. Default is 60.'
            s3_settings.cdc_min_file_size: '- (Optional) Minimum file size, defined in megabytes, to reach for a file output. Default is 32.'
            s3_settings.cdc_path: '- (Optional) Folder path of CDC files. For an S3 source, this setting is required if a task captures change data; otherwise, it''s optional. If cdc_path is set, AWS DMS reads CDC files from this path and replicates the data changes to the target endpoint. Supported in AWS DMS versions 3.4.2 and later.'
            s3_settings.compression_type: '- (Optional) Set to compress target files. Default is NONE. Valid values are GZIP and NONE.'
            s3_settings.csv_delimiter: '- (Optional) Delimiter used to separate columns in the source files. Default is ,.'
            s3_settings.csv_no_sup_value: '- (Optional) String to use for all columns not included in the supplemental log.'
            s3_settings.csv_null_value: '- (Optional) String to as null when writing to the target.'
            s3_settings.csv_row_delimiter: '- (Optional) Delimiter used to separate rows in the source files. Default is \n.'
            s3_settings.data_format: '- (Optional) Output format for the files that AWS DMS uses to create S3 objects. Valid values are csv and parquet. Default is csv.'
            s3_settings.data_page_size: '- (Optional) Size of one data page in bytes. Default is 1048576 (1 MiB).'
            s3_settings.date_partition_delimiter: '- (Optional) Date separating delimiter to use during folder partitioning. Valid values are SLASH, UNDERSCORE, DASH, and NONE. Default is SLASH.'
            s3_settings.date_partition_enabled: '- (Optional) Partition S3 bucket folders based on transaction commit dates. Default is false.'
            s3_settings.date_partition_sequence: '- (Optional) Date format to use during folder partitioning. Use this parameter when date_partition_enabled is set to true. Valid values are YYYYMMDD, YYYYMMDDHH, YYYYMM, MMYYYYDD, and DDMMYYYY. Default is YYYYMMDD.'
            s3_settings.dict_page_size_limit: '- (Optional) Maximum size in bytes of an encoded dictionary page of a column. Default is 1048576 (1 MiB).'
            s3_settings.enable_statistics: '- (Optional) Whether to enable statistics for Parquet pages and row groups. Default is true.'
            s3_settings.encoding_type: '- (Optional) Type of encoding to use. Value values are rle_dictionary, plain, and plain_dictionary. Default is rle_dictionary.'
            s3_settings.encryption_mode: '- (Optional) Server-side encryption mode that you want to encrypt your .csv or .parquet object files copied to S3. Valid values are SSE_S3 and SSE_KMS. Default is SSE_S3.'
            s3_settings.external_table_definition: '- (Optional) JSON document that describes how AWS DMS should interpret the data.'
            s3_settings.ignore_headers_row: '- (Optional) When this value is set to 1, DMS ignores the first row header in a .csv file. Default is 0.'
            s3_settings.include_op_for_full_load: '- (Optional) Whether to enable a full load to write INSERT operations to the .csv output files only to indicate how the rows were added to the source database. Default is false.'
            s3_settings.max_file_size: '- (Optional) Maximum size (in KB) of any .csv file to be created while migrating to an S3 target during full load. Valid values are from 1 to 1048576. Default is 1048576 (1 GB).'
            s3_settings.parquet_timestamp_in_millisecond: '- (Optional) - Specifies the precision of any TIMESTAMP column values written to an S3 object file in .parquet format. Default is false.'
            s3_settings.parquet_version: '- (Optional) Version of the .parquet file format. Default is parquet-1-0. Valid values are parquet-1-0 and parquet-2-0.'
            s3_settings.preserve_transactions: '- (Optional) Whether DMS saves the transaction order for a CDC load on the S3 target specified by cdc_path. Default is false.'
            s3_settings.rfc_4180: '- (Optional) For an S3 source, whether each leading double quotation mark has to be followed by an ending double quotation mark. Default is true.'
            s3_settings.row_group_length: '- (Optional) Number of rows in a row group. Default is 10000.'
            s3_settings.server_side_encryption_kms_key_id: '- (Optional) If you set encryptionMode to SSE_KMS, set this parameter to the ARN for the AWS KMS key.'
            s3_settings.service_access_role_arn: '- (Optional) ARN of the IAM Role with permissions to read from or write to the S3 Bucket.'
            s3_settings.timestamp_column_name: '- (Optional) Column to add with timestamp information to the endpoint data for an Amazon S3 target.'
            s3_settings.use_csv_no_sup_value: '- (Optional) Whether to use csv_no_sup_value for columns not included in the supplemental log.'
            secrets_manager_access_role_arn: '- (Optional) ARN of the IAM role that specifies AWS DMS as the trusted entity and has the required permissions to access the value in SecretsManagerSecret.'
            secrets_manager_arn: '- (Optional) Full ARN, partial ARN, or friendly name of the SecretsManagerSecret that contains the endpoint connection details. Supported only for engine_name as aurora, aurora-postgresql, mariadb, mongodb, mysql, oracle, postgres, redshift or sqlserver.'
            server_name: '- (Optional) Host name of the server.'
            service_access_role: '- (Optional) ARN used by the service access IAM role for dynamodb endpoints.'
            ssl_mode: '- (Optional, Default: none) SSL mode to use for the connection. Valid values are none, require, verify-ca, verify-full'
            tags: '- (Optional) Map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            username: '- (Optional) User name to be used to login to the endpoint database.'
        importStatements: []
    aws_dms_event_subscription:
        subCategory: DMS (Database Migration)
        description: Provides a DMS (Data Migration Service) event subscription resource.
        name: aws_dms_event_subscription
        title: aws_dms_event_subscription
        examples:
            - name: example
              manifest: |-
                {
                  "enabled": true,
                  "event_categories": [
                    "creation",
                    "failure"
                  ],
                  "name": "my-favorite-event-subscription",
                  "sns_topic_arn": "${aws_sns_topic.example.arn}",
                  "source_ids": [
                    "${aws_dms_replication_task.example.replication_task_id}"
                  ],
                  "source_type": "replication-task",
                  "tags": {
                    "Name": "example"
                  }
                }
              references:
                sns_topic_arn: aws_sns_topic.example.arn
        argumentDocs:
            arn: '- Amazon Resource Name (ARN) of the DMS Event Subscription.'
            create: '- (Default 10m) Used for creating event subscriptions.'
            delete: '- (Default 10m) Used for destroying event descriptions.'
            enabled: '- (Optional, Default: true) Whether the event subscription should be enabled.'
            event_categories: '- (Optional) List of event categories to listen for, see DescribeEventCategories for a canonical list.'
            name: '- (Required) Name of event subscription.'
            sns_topic_arn: '- (Required) SNS topic arn to send events on.'
            source_ids: '- (Required) Ids of sources to listen to.'
            source_type: '- (Optional, Default: all events) Type of source for events. Valid values: replication-instance or replication-task'
            tags: '- (Optional) Map of resource tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            update: '- (Default 10m) Used for event subscription modifications.'
        importStatements: []
    aws_dms_replication_instance:
        subCategory: DMS (Database Migration)
        description: Provides a DMS (Data Migration Service) replication instance resource.
        name: aws_dms_replication_instance
        title: aws_dms_replication_instance
        examples:
            - name: test
              manifest: |-
                {
                  "allocated_storage": 20,
                  "apply_immediately": true,
                  "auto_minor_version_upgrade": true,
                  "availability_zone": "us-west-2c",
                  "depends_on": [
                    "${aws_iam_role_policy_attachment.dms-access-for-endpoint-AmazonDMSRedshiftS3Role}",
                    "${aws_iam_role_policy_attachment.dms-cloudwatch-logs-role-AmazonDMSCloudWatchLogsRole}",
                    "${aws_iam_role_policy_attachment.dms-vpc-role-AmazonDMSVPCManagementRole}"
                  ],
                  "engine_version": "3.1.4",
                  "kms_key_arn": "arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012",
                  "multi_az": false,
                  "preferred_maintenance_window": "sun:10:30-sun:14:30",
                  "publicly_accessible": true,
                  "replication_instance_class": "dms.t2.micro",
                  "replication_instance_id": "test-dms-replication-instance-tf",
                  "replication_subnet_group_id": "${aws_dms_replication_subnet_group.test-dms-replication-subnet-group-tf.id}",
                  "tags": {
                    "Name": "test"
                  },
                  "vpc_security_group_ids": [
                    "sg-12345678"
                  ]
                }
              references:
                replication_subnet_group_id: aws_dms_replication_subnet_group.test-dms-replication-subnet-group-tf.id
              dependencies:
                aws_iam_role.dms-access-for-endpoint: |-
                    {
                      "assume_role_policy": "${data.aws_iam_policy_document.dms_assume_role.json}",
                      "name": "dms-access-for-endpoint"
                    }
                aws_iam_role.dms-cloudwatch-logs-role: |-
                    {
                      "assume_role_policy": "${data.aws_iam_policy_document.dms_assume_role.json}",
                      "name": "dms-cloudwatch-logs-role"
                    }
                aws_iam_role.dms-vpc-role: |-
                    {
                      "assume_role_policy": "${data.aws_iam_policy_document.dms_assume_role.json}",
                      "name": "dms-vpc-role"
                    }
                aws_iam_role_policy_attachment.dms-access-for-endpoint-AmazonDMSRedshiftS3Role: |-
                    {
                      "policy_arn": "arn:aws:iam::aws:policy/service-role/AmazonDMSRedshiftS3Role",
                      "role": "${aws_iam_role.dms-access-for-endpoint.name}"
                    }
                aws_iam_role_policy_attachment.dms-cloudwatch-logs-role-AmazonDMSCloudWatchLogsRole: |-
                    {
                      "policy_arn": "arn:aws:iam::aws:policy/service-role/AmazonDMSCloudWatchLogsRole",
                      "role": "${aws_iam_role.dms-cloudwatch-logs-role.name}"
                    }
                aws_iam_role_policy_attachment.dms-vpc-role-AmazonDMSVPCManagementRole: |-
                    {
                      "policy_arn": "arn:aws:iam::aws:policy/service-role/AmazonDMSVPCManagementRole",
                      "role": "${aws_iam_role.dms-vpc-role.name}"
                    }
        argumentDocs:
            allocated_storage: '- (Optional, Default: 50, Min: 5, Max: 6144) The amount of storage (in gigabytes) to be initially allocated for the replication instance.'
            allow_major_version_upgrade: '- (Optional, Default: false) Indicates that major version upgrades are allowed.'
            apply_immediately: '- (Optional, Default: false) Indicates whether the changes should be applied immediately or during the next maintenance window. Only used when updating an existing resource.'
            auto_minor_version_upgrade: '- (Optional, Default: false) Indicates that minor engine upgrades will be applied automatically to the replication instance during the maintenance window.'
            availability_zone: '- (Optional) The EC2 Availability Zone that the replication instance will be created in.'
            create: '- (Default 30 minutes) Used for Creating Instances'
            delete: '- (Default 30 minutes) Used for destroying databases.'
            engine_version: '- (Optional) The engine version number of the replication instance.'
            kms_key_arn: '- (Optional) The Amazon Resource Name (ARN) for the KMS key that will be used to encrypt the connection parameters. If you do not specify a value for kms_key_arn, then AWS DMS will use your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS region.'
            multi_az: '- (Optional) Specifies if the replication instance is a multi-az deployment. You cannot set the availability_zone parameter if the multi_az parameter is set to true.'
            preferred_maintenance_window: '- (Optional) The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).'
            publicly_accessible: '- (Optional, Default: false) Specifies the accessibility options for the replication instance. A value of true represents an instance with a public IP address. A value of false represents an instance with a private IP address.'
            replication_instance_arn: '- The Amazon Resource Name (ARN) of the replication instance.'
            replication_instance_class: '- (Required) The compute and memory capacity of the replication instance as specified by the replication instance class. See AWS DMS User Guide for available instance sizes and advice on which one to choose.'
            replication_instance_id: '- (Required) The replication instance identifier. This parameter is stored as a lowercase string.'
            replication_instance_private_ips: '-  A list of the private IP addresses of the replication instance.'
            replication_instance_public_ips: '- A list of the public IP addresses of the replication instance.'
            replication_subnet_group_id: '- (Optional) A subnet group to associate with the replication instance.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            update: '- (Default 30 minutes) Used for Database modifications'
            vpc_security_group_ids: '- (Optional) A list of VPC security group IDs to be used with the replication instance. The VPC security groups must work with the VPC containing the replication instance.'
        importStatements: []
    aws_dms_replication_subnet_group:
        subCategory: DMS (Database Migration)
        description: Provides a DMS (Data Migration Service) subnet group resource.
        name: aws_dms_replication_subnet_group
        title: aws_dms_replication_subnet_group
        examples:
            - name: test
              manifest: |-
                {
                  "replication_subnet_group_description": "Test replication subnet group",
                  "replication_subnet_group_id": "test-dms-replication-subnet-group-tf",
                  "subnet_ids": [
                    "subnet-12345678"
                  ],
                  "tags": {
                    "Name": "test"
                  }
                }
        argumentDocs:
            replication_subnet_group_description: '- (Required) The description for the subnet group.'
            replication_subnet_group_id: '- (Required) The name for the replication subnet group. This value is stored as a lowercase string.'
            subnet_ids: '- (Required) A list of the EC2 subnet IDs for the subnet group.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            vpc_id: '- The ID of the VPC the subnet group is in.'
        importStatements: []
    aws_dms_replication_task:
        subCategory: DMS (Database Migration)
        description: Provides a DMS (Data Migration Service) replication task resource.
        name: aws_dms_replication_task
        title: aws_dms_replication_task
        examples:
            - name: test
              manifest: |-
                {
                  "cdc_start_time": 1484346880,
                  "migration_type": "full-load",
                  "replication_instance_arn": "${aws_dms_replication_instance.test-dms-replication-instance-tf.replication_instance_arn}",
                  "replication_task_id": "test-dms-replication-task-tf",
                  "replication_task_settings": "...",
                  "source_endpoint_arn": "${aws_dms_endpoint.test-dms-source-endpoint-tf.endpoint_arn}",
                  "table_mappings": "{\"rules\":[{\"rule-type\":\"selection\",\"rule-id\":\"1\",\"rule-name\":\"1\",\"object-locator\":{\"schema-name\":\"%\",\"table-name\":\"%\"},\"rule-action\":\"include\"}]}",
                  "tags": {
                    "Name": "test"
                  },
                  "target_endpoint_arn": "${aws_dms_endpoint.test-dms-target-endpoint-tf.endpoint_arn}"
                }
              references:
                replication_instance_arn: aws_dms_replication_instance.test-dms-replication-instance-tf.replication_instance_arn
                source_endpoint_arn: aws_dms_endpoint.test-dms-source-endpoint-tf.endpoint_arn
                target_endpoint_arn: aws_dms_endpoint.test-dms-target-endpoint-tf.endpoint_arn
        argumentDocs:
            cdc_start_position: '- (Optional, Conflicts with cdc_start_time) Indicates when you want a change data capture (CDC) operation to start. The value can be in date, checkpoint, or LSN/SCN format depending on the source engine. For more information, see Determining a CDC native start point.'
            cdc_start_time: '- (Optional, Conflicts with cdc_start_position) The Unix timestamp integer for the start of the Change Data Capture (CDC) operation.'
            migration_type: '- (Required) The migration type. Can be one of full-load | cdc | full-load-and-cdc.'
            replication_instance_arn: '- (Required) The Amazon Resource Name (ARN) of the replication instance.'
            replication_task_arn: '- The Amazon Resource Name (ARN) for the replication task.'
            replication_task_id: '- (Required) The replication task identifier.'
            replication_task_settings: '- (Optional) An escaped JSON string that contains the task settings. For a complete list of task settings, see Task Settings for AWS Database Migration Service Tasks.'
            source_endpoint_arn: '- (Required) The Amazon Resource Name (ARN) string that uniquely identifies the source endpoint.'
            start_replication_task: '- (Optional) Whether to run or stop the replication task.'
            status: '- Replication Task status.'
            table_mappings: '- (Required) An escaped JSON string that contains the table mappings. For information on table mapping see Using Table Mapping with an AWS Database Migration Service Task to Select and Filter Data'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            target_endpoint_arn: '- (Required) The Amazon Resource Name (ARN) string that uniquely identifies the target endpoint.'
        importStatements: []
    aws_docdb_cluster:
        subCategory: DocDB (DocumentDB)
        description: Manages a DocDB Aurora Cluster
        name: aws_docdb_cluster
        title: aws_docdb
        examples:
            - name: docdb
              manifest: |-
                {
                  "backup_retention_period": 5,
                  "cluster_identifier": "my-docdb-cluster",
                  "engine": "docdb",
                  "master_password": "mustbeeightchars",
                  "master_username": "foo",
                  "preferred_backup_window": "07:00-09:00",
                  "skip_final_snapshot": true
                }
        argumentDocs:
            apply_immediately: |-
                - (Optional) Specifies whether any cluster modifications
                are applied immediately, or during the next maintenance window. Default is
                false.
            arn: '- Amazon Resource Name (ARN) of cluster'
            availability_zones: |-
                - (Optional) A list of EC2 Availability Zones that
                instances in the DB cluster can be created in.
            backup_retention_period: '- (Optional) The days to retain backups for. Default 1'
            cluster_identifier: '- (Optional, Forces new resources) The cluster identifier. If omitted, Terraform will assign a random, unique identifier.'
            cluster_identifier_prefix: '- (Optional, Forces new resource) Creates a unique cluster identifier beginning with the specified prefix. Conflicts with cluster_identifier.'
            cluster_members: – List of DocDB Instances that are a part of this cluster
            cluster_resource_id: '- The DocDB Cluster Resource ID'
            create: '- (Default 120 minutes) Used for Cluster creation'
            db_cluster_parameter_group_name: '- (Optional) A cluster parameter group to associate with the cluster.'
            db_subnet_group_name: '- (Optional) A DB subnet group to associate with this DB instance.'
            delete: |-
                - (Default 120 minutes) Used for destroying cluster. This includes
                any cleanup task during the destroying process.
            deletion_protection: '- (Optional) A value that indicates whether the DB cluster has deletion protection enabled. The database can''t be deleted when deletion protection is enabled. By default, deletion protection is disabled.'
            enabled_cloudwatch_logs_exports: |-
                - (Optional) List of log types to export to cloudwatch. If omitted, no logs will be exported.
                The following log types are supported: audit, profiler.
            endpoint: '- The DNS address of the DocDB instance'
            engine: '- (Optional) The name of the database engine to be used for this DB cluster. Defaults to docdb. Valid Values: docdb'
            engine_version: '- (Optional) The database engine version. Updating this argument results in an outage.'
            final_snapshot_identifier: |-
                - (Optional) The name of your final DB snapshot
                when this DB cluster is deleted. If omitted, no final snapshot will be
                made.
            global_cluster_identifier: '- (Optional) The global cluster identifier specified on aws_docdb_global_cluster.'
            hosted_zone_id: '- The Route53 Hosted Zone ID of the endpoint'
            id: '- The DocDB Cluster Identifier'
            kms_key_id: '- (Optional) The ARN for the KMS encryption key. When specifying kms_key_id, storage_encrypted needs to be set to true.'
            master_password: |-
                - (Required unless a snapshot_identifier or unless a global_cluster_identifier is provided when the cluster is the "secondary" cluster of a global database) Password for the master DB user. Note that this may
                show up in logs, and it will be stored in the state file. Please refer to the DocDB Naming Constraints.
            master_username: '- (Required unless a snapshot_identifier or unless a global_cluster_identifier is provided when the cluster is the "secondary" cluster of a global database) Username for the master DB user.'
            port: '- (Optional) The port on which the DB accepts connections'
            preferred_backup_window: |-
                - (Optional) The daily time range during which automated backups are created if automated backups are enabled using the BackupRetentionPeriod parameter.Time in UTC
                Default: A 30-minute window selected at random from an 8-hour block of time per regionE.g., 04:00-09:00
            preferred_maintenance_window: '- (Optional) The weekly time range during which system maintenance can occur, in (UTC) e.g., wed:04:00-wed:04:30'
            reader_endpoint: '- A read-only endpoint for the DocDB cluster, automatically load-balanced across replicas'
            skip_final_snapshot: '- (Optional) Determines whether a final DB snapshot is created before the DB cluster is deleted. If true is specified, no DB snapshot is created. If false is specified, a DB snapshot is created before the DB cluster is deleted, using the value from final_snapshot_identifier. Default is false.'
            snapshot_identifier: '- (Optional) Specifies whether or not to create this cluster from a snapshot. You can use either the name or ARN when specifying a DB cluster snapshot, or the ARN when specifying a DB snapshot.'
            storage_encrypted: '- (Optional) Specifies whether the DB cluster is encrypted. The default is false.'
            tags: '- (Optional) A map of tags to assign to the DB cluster. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            update: '- (Default 120 minutes) Used for Cluster modifications'
            vpc_security_group_ids: |-
                - (Optional) List of VPC security groups to associate
                with the Cluster
        importStatements: []
    aws_docdb_cluster_instance:
        subCategory: DocDB (DocumentDB)
        description: Provides an DocDB Cluster Resource Instance
        name: aws_docdb_cluster_instance
        title: aws_docdb_cluster_instance
        examples:
            - name: cluster_instances
              manifest: |-
                {
                  "cluster_identifier": "${aws_docdb_cluster.default.id}",
                  "count": 2,
                  "identifier": "docdb-cluster-demo-${count.index}",
                  "instance_class": "db.r5.large"
                }
              references:
                cluster_identifier: aws_docdb_cluster.default.id
              dependencies:
                aws_docdb_cluster.default: |-
                    {
                      "availability_zones": [
                        "us-west-2a",
                        "us-west-2b",
                        "us-west-2c"
                      ],
                      "cluster_identifier": "docdb-cluster-demo",
                      "master_password": "barbut8chars",
                      "master_username": "foo"
                    }
        argumentDocs:
            apply_immediately: |-
                - (Optional) Specifies whether any database modifications
                are applied immediately, or during the next maintenance window. Default isfalse.
            arn: '- Amazon Resource Name (ARN) of cluster instance'
            auto_minor_version_upgrade: '- (Optional) Indicates that minor engine upgrades will be applied automatically to the DB instance during the maintenance window. Default true.'
            availability_zone: '- (Optional, Computed) The EC2 Availability Zone that the DB instance is created in. See docs about the details.'
            ca_cert_identifier: '- (Optional) The identifier of the CA certificate for the DB instance.'
            cluster_identifier: '- (Required) The identifier of the aws_docdb_cluster in which to launch this instance.'
            create: |-
                - (Default 90 minutes) Used for Creating Instances, Replicas, and
                restoring from Snapshots
            db_subnet_group_name: '- The DB subnet group to associate with this DB instance.'
            dbi_resource_id: '- The region-unique, immutable identifier for the DB instance.'
            delete: |-
                - (Default 90 minutes) Used for destroying databases. This includes
                the time required to take snapshots
            endpoint: '- The DNS address for this instance. May not be writable'
            engine: '- (Optional) The name of the database engine to be used for the DocDB instance. Defaults to docdb. Valid Values: docdb.'
            engine_version: '- The database engine version'
            identifier: '- (Optional, Forces new resource) The identifier for the DocDB instance, if omitted, Terraform will assign a random, unique identifier.'
            identifier_prefix: '- (Optional, Forces new resource) Creates a unique identifier beginning with the specified prefix. Conflicts with identifier.'
            instance_class: |-
                - (Required) The instance class to use. For details on CPU and memory, see Scaling for DocDB Instances. DocDB currently
                supports the below instance classes. Please see AWS Documentation for complete details.
            kms_key_id: '- The ARN for the KMS encryption key if one is set to the cluster.'
            port: '- The database port'
            preferred_backup_window: '- The daily time range during which automated backups are created if automated backups are enabled.'
            preferred_maintenance_window: |-
                - (Optional) The window to perform maintenance in.
                Syntax: "ddd:hh24:mi-ddd:hh24:mi". Eg: "Mon:00:00-Mon:03:00".
            promotion_tier: '- (Optional) Default 0. Failover Priority setting on instance level. The reader who has lower tier has higher priority to get promoter to writer.'
            storage_encrypted: '- Specifies whether the DB cluster is encrypted.'
            tags: '- (Optional) A map of tags to assign to the instance. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            update: '- (Default 90 minutes) Used for Database modifications'
            writer: – Boolean indicating if this instance is writable. False indicates this instance is a read replica.
        importStatements: []
    aws_docdb_cluster_parameter_group:
        subCategory: DocDB (DocumentDB)
        description: Manages a DocumentDB Cluster Parameter Group
        name: aws_docdb_cluster_parameter_group
        title: aws_docdb_cluster_parameter_group
        examples:
            - name: example
              manifest: |-
                {
                  "description": "docdb cluster parameter group",
                  "family": "docdb3.6",
                  "name": "example",
                  "parameter": [
                    {
                      "name": "tls",
                      "value": "enabled"
                    }
                  ]
                }
        argumentDocs:
            apply_method: '- (Optional) Valid values are immediate and pending-reboot. Defaults to pending-reboot.'
            arn: '- The ARN of the documentDB cluster parameter group.'
            description: '- (Optional, Forces new resource) The description of the documentDB cluster parameter group. Defaults to "Managed by Terraform".'
            family: '- (Required, Forces new resource) The family of the documentDB cluster parameter group.'
            id: '- The documentDB cluster parameter group name.'
            name: '- (Optional, Forces new resource) The name of the documentDB cluster parameter group. If omitted, Terraform will assign a random, unique name.'
            name_prefix: '- (Optional, Forces new resource) Creates a unique name beginning with the specified prefix. Conflicts with name.'
            parameter: '- (Optional) A list of documentDB parameters to apply. Setting parameters to system default values may show a difference on imported resources.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            value: '- (Required) The value of the documentDB parameter.'
        importStatements: []
    aws_docdb_cluster_snapshot:
        subCategory: DocDB (DocumentDB)
        description: Manages a DocDB database cluster snapshot.
        name: aws_docdb_cluster_snapshot
        title: aws_docdb_cluster_snapshot
        examples:
            - name: example
              manifest: |-
                {
                  "db_cluster_identifier": "${aws_docdb_cluster.example.id}",
                  "db_cluster_snapshot_identifier": "resourcetestsnapshot1234"
                }
              references:
                db_cluster_identifier: aws_docdb_cluster.example.id
        argumentDocs:
            availability_zones: '- List of EC2 Availability Zones that instances in the DocDB cluster snapshot can be restored in.'
            create: '- (Default 20m) How long to wait for the snapshot to be available.'
            db_cluster_identifier: '- (Required) The DocDB Cluster Identifier from which to take the snapshot.'
            db_cluster_snapshot_arn: '- The Amazon Resource Name (ARN) for the DocDB Cluster Snapshot.'
            db_cluster_snapshot_identifier: '- (Required) The Identifier for the snapshot.'
            engine: '- Specifies the name of the database engine.'
            engine_version: '- Version of the database engine for this DocDB cluster snapshot.'
            kms_key_id: '- If storage_encrypted is true, the AWS KMS key identifier for the encrypted DocDB cluster snapshot.'
            port: '- Port that the DocDB cluster was listening on at the time of the snapshot.'
            source_db_cluster_snapshot_identifier: '- The DocDB Cluster Snapshot Arn that the DocDB Cluster Snapshot was copied from. It only has value in case of cross customer or cross region copy.'
            status: '- The status of this DocDB Cluster Snapshot.'
            storage_encrypted: '- Specifies whether the DocDB cluster snapshot is encrypted.'
            vpc_id: '- The VPC ID associated with the DocDB cluster snapshot.'
        importStatements: []
    aws_docdb_event_subscription:
        subCategory: DocDB (DocumentDB)
        description: Provides a DocumentDB event subscription resource.
        name: aws_docdb_event_subscription
        title: aws_docdb_event_subscription
        examples:
            - name: example
              manifest: |-
                {
                  "enabled": true,
                  "event_categories": [
                    "creation",
                    "failure"
                  ],
                  "name": "example",
                  "sns_topic_arn": "${aws_sns_topic.example.arn}",
                  "source_ids": [
                    "${aws_docdb_cluster.example.id}"
                  ],
                  "source_type": "db-cluster"
                }
              references:
                sns_topic_arn: aws_sns_topic.example.arn
              dependencies:
                aws_docdb_cluster.example: |-
                    {
                      "availability_zones": [
                        "${data.aws_availability_zones.available.names[0]}",
                        "${data.aws_availability_zones.available.names[1]}",
                        "${data.aws_availability_zones.available.names[2]}"
                      ],
                      "cluster_identifier": "example",
                      "master_password": "mustbeeightcharaters",
                      "master_username": "foo",
                      "skip_final_snapshot": true
                    }
                aws_sns_topic.example: |-
                    {
                      "name": "example-events"
                    }
        argumentDocs:
            arn: '- The Amazon Resource Name of the DocDB event notification subscription'
            create: '- (Default 40m) How long to wait for an DocDB event notification subscription to be ready.'
            customer_aws_id: '- The AWS customer account associated with the DocDB event notification subscription'
            delete: '- (Default 40m) How long to wait for an DocDB event notification subscription to be deleted.'
            enabled: '- (Optional) A boolean flag to enable/disable the subscription. Defaults to true.'
            event_categories: '- (Optional) A list of event categories for a SourceType that you want to subscribe to. See https://docs.aws.amazon.com/documentdb/latest/developerguide/API_Event.html or run aws docdb describe-event-categories.'
            id: '- The name of the DocDB event notification subscription'
            name: '- (Optional) The name of the DocDB event subscription. By default generated by Terraform.'
            name_prefix: '- (Optional) The name of the DocDB event subscription. Conflicts with name.'
            sns_topic: '- (Required) The SNS topic to send events to.'
            source_ids: '- (Optional) A list of identifiers of the event sources for which events will be returned. If not specified, then all sources are included in the response. If specified, a source_type must also be specified.'
            source_type: '- (Optional) The type of source that will be generating the events. Valid options are db-instance, db-cluster, db-parameter-group, db-security-group, db-cluster-snapshot. If not set, all sources will be subscribed to.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            update: '- (Default 40m) How long to wait for an DocDB event notification subscription to be updated.'
        importStatements: []
    aws_docdb_global_cluster:
        subCategory: DocDB (DocumentDB)
        description: Manages a DocDB Global Cluster
        name: aws_docdb_global_cluster
        title: aws_docdb
        examples:
            - name: example
              manifest: |-
                {
                  "engine": "docdb",
                  "engine_version": "4.0.0",
                  "global_cluster_identifier": "global-test"
                }
              dependencies:
                aws_docdb_cluster.primary: |-
                    {
                      "cluster_identifier": "test-primary-cluster",
                      "db_subnet_group_name": "default",
                      "engine": "${aws_docdb_global_cluster.example.engine}",
                      "engine_version": "${aws_docdb_global_cluster.example.engine_version}",
                      "global_cluster_identifier": "${aws_docdb_global_cluster.example.id}",
                      "master_password": "somepass123",
                      "master_username": "username",
                      "provider": "${aws.primary}"
                    }
                aws_docdb_cluster.secondary: |-
                    {
                      "cluster_identifier": "test-secondary-cluster",
                      "db_subnet_group_name": "default",
                      "engine": "${aws_docdb_global_cluster.example.engine}",
                      "engine_version": "${aws_docdb_global_cluster.example.engine_version}",
                      "global_cluster_identifier": "${aws_docdb_global_cluster.example.id}",
                      "provider": "${aws.secondary}"
                    }
                aws_docdb_cluster_instance.primary: |-
                    {
                      "cluster_identifier": "${aws_docdb_cluster.primary.id}",
                      "db_subnet_group_name": "default",
                      "engine": "${aws_docdb_global_cluster.example.engine}",
                      "engine_version": "${aws_docdb_global_cluster.example.engine_version}",
                      "identifier": "test-primary-cluster-instance",
                      "instance_class": "db.r5.large",
                      "provider": "${aws.primary}"
                    }
                aws_docdb_cluster_instance.secondary: |-
                    {
                      "cluster_identifier": "${aws_docdb_cluster.secondary.id}",
                      "db_subnet_group_name": "default",
                      "depends_on": [
                        "${aws_docdb_cluster_instance.primary}"
                      ],
                      "engine": "${aws_docdb_global_cluster.example.engine}",
                      "engine_version": "${aws_docdb_global_cluster.example.engine_version}",
                      "identifier": "test-secondary-cluster-instance",
                      "instance_class": "db.r5.large",
                      "provider": "${aws.secondary}"
                    }
            - name: example
              manifest: |-
                {
                  "global_cluster_identifier": "example",
                  "source_db_cluster_identifier": "${aws_docdb_cluster.example.arn}"
                }
              references:
                source_db_cluster_identifier: aws_docdb_cluster.example.arn
              dependencies:
                aws_docdb_cluster.example: |-
                    {
                      "lifecycle": [
                        {
                          "ignore_changes": [
                            "${global_cluster_identifier}"
                          ]
                        }
                      ]
                    }
            - name: example
              manifest: |-
                {
                  "lifecycle": [
                    {
                      "ignore_changes": [
                        "${source_db_cluster_identifier}"
                      ]
                    }
                  ]
                }
        argumentDocs:
            arn: '- Global Cluster Amazon Resource Name (ARN)'
            database_name: '- (Optional, Forces new resources) Name for an automatically created database on cluster creation.'
            db_cluster_arn: '- Amazon Resource Name (ARN) of member DB Cluster.'
            deletion_protection: '- (Optional) If the Global Cluster should have deletion protection enabled. The database can''t be deleted when this value is set to true. The default is false.'
            engine: '- (Optional, Forces new resources) Name of the database engine to be used for this DB cluster. Terraform will only perform drift detection if a configuration value is provided. Current Valid values: docdb. Defaults to docdb. Conflicts with source_db_cluster_identifier.'
            engine_version: '- (Optional) Engine version of the global database. Upgrading the engine version will result in all cluster members being immediately updated and will.'
            global_cluster_identifier: '- (Required, Forces new resources) The global cluster identifier.'
            global_cluster_members: '- Set of objects containing Global Cluster members.'
            global_cluster_resource_id: '- AWS Region-unique, immutable identifier for the global database cluster. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB cluster is accessed.'
            id: '- DocDB Global Cluster.'
            is_writer: '- Whether the member is the primary DB Cluster.'
            source_db_cluster_identifier: '- (Optional) Amazon Resource Name (ARN) to use as the primary DB Cluster of the Global Cluster on creation. Terraform cannot perform drift detection of this value.'
            storage_encrypted: '- (Optional, Forces new resources) Specifies whether the DB cluster is encrypted. The default is false unless source_db_cluster_identifier is specified and encrypted. Terraform will only perform drift detection if a configuration value is provided.'
            timeouts.create: '- (Defaults to 5 mins) Used when creating the Global Cluster'
            timeouts.delete: '- (Defaults to 5 mins) Used when deleting the Global Cluster members (time is per member)'
            timeouts.update: '- (Defaults to 5 mins) Used when updating the Global Cluster members (time is per member)'
        importStatements: []
    aws_docdb_subnet_group:
        subCategory: DocDB (DocumentDB)
        description: Provides an DocumentDB subnet group resource.
        name: aws_docdb_subnet_group
        title: aws_docdb_subnet_group
        examples:
            - name: default
              manifest: |-
                {
                  "name": "main",
                  "subnet_ids": [
                    "${aws_subnet.frontend.id}",
                    "${aws_subnet.backend.id}"
                  ],
                  "tags": {
                    "Name": "My docdb subnet group"
                  }
                }
        argumentDocs:
            arn: '- The ARN of the docDB subnet group.'
            description: '- (Optional) The description of the docDB subnet group. Defaults to "Managed by Terraform".'
            id: '- The docDB subnet group name.'
            name: '- (Optional, Forces new resource) The name of the docDB subnet group. If omitted, Terraform will assign a random, unique name.'
            name_prefix: '- (Optional, Forces new resource) Creates a unique name beginning with the specified prefix. Conflicts with name.'
            subnet_ids: '- (Required) A list of VPC subnet IDs.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_dx_bgp_peer:
        subCategory: Direct Connect
        description: Provides a Direct Connect BGP peer resource.
        name: aws_dx_bgp_peer
        title: aws_dx_bgp_peer
        examples:
            - name: peer
              manifest: |-
                {
                  "address_family": "ipv6",
                  "bgp_asn": 65351,
                  "virtual_interface_id": "${aws_dx_private_virtual_interface.foo.id}"
                }
              references:
                virtual_interface_id: aws_dx_private_virtual_interface.foo.id
        argumentDocs:
            address_family: '- (Required) The address family for the BGP peer. ipv4  or ipv6.'
            amazon_address: |-
                - (Optional) The IPv4 CIDR address to use to send traffic to Amazon.
                Required for IPv4 BGP peers on public virtual interfaces.
            aws_device: '- The Direct Connect endpoint on which the BGP peer terminates.'
            bgp_asn: '- (Required) The autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.'
            bgp_auth_key: '- (Optional) The authentication key for BGP configuration.'
            bgp_peer_id: '- The ID of the BGP peer.'
            bgp_status: '- The Up/Down state of the BGP peer.'
            create: '- (Default 10 minutes) Used for creating BGP peer'
            customer_address: |-
                - (Optional) The IPv4 CIDR destination address to which Amazon should send traffic.
                Required for IPv4 BGP peers on public virtual interfaces.
            delete: '- (Default 10 minutes) Used for destroying BGP peer'
            id: '- The ID of the BGP peer resource.'
            virtual_interface_id: '- (Required) The ID of the Direct Connect virtual interface on which to create the BGP peer.'
        importStatements: []
    aws_dx_connection:
        subCategory: Direct Connect
        description: Provides a Connection of Direct Connect.
        name: aws_dx_connection
        title: aws_dx_connection
        examples:
            - name: hoge
              manifest: |-
                {
                  "bandwidth": "1Gbps",
                  "location": "EqDC2",
                  "name": "tf-dx-connection"
                }
        argumentDocs:
            arn: '- The ARN of the connection.'
            aws_device: '- The Direct Connect endpoint on which the physical connection terminates.'
            bandwidth: '- (Required) The bandwidth of the connection. Valid values for dedicated connections: 1Gbps, 10Gbps. Valid values for hosted connections: 50Mbps, 100Mbps, 200Mbps, 300Mbps, 400Mbps, 500Mbps, 1Gbps, 2Gbps, 5Gbps, 10Gbps and 100Gbps. Case sensitive.'
            has_logical_redundancy: '- Indicates whether the connection supports a secondary BGP peer in the same address family (IPv4/IPv6).'
            id: '- The ID of the connection.'
            jumbo_frame_capable: '- Boolean value representing if jumbo frames have been enabled for this connection.'
            location: '- (Required) The AWS Direct Connect location where the connection is located. See DescribeLocations for the list of AWS Direct Connect locations. Use locationCode.'
            name: '- (Required) The name of the connection.'
            owner_account_id: '- The ID of the AWS account that owns the connection.'
            provider_name: '- (Optional) The name of the service provider associated with the connection.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_dx_connection_association:
        subCategory: Direct Connect
        description: Associates a Direct Connect Connection with a LAG.
        name: aws_dx_connection_association
        title: aws_dx_connection_association
        examples:
            - name: example
              manifest: |-
                {
                  "connection_id": "${aws_dx_connection.example.id}",
                  "lag_id": "${aws_dx_lag.example.id}"
                }
              references:
                connection_id: aws_dx_connection.example.id
                lag_id: aws_dx_lag.example.id
              dependencies:
                aws_dx_connection.example: |-
                    {
                      "bandwidth": "1Gbps",
                      "location": "EqSe2-EQ",
                      "name": "example"
                    }
                aws_dx_lag.example: |-
                    {
                      "connections_bandwidth": "1Gbps",
                      "location": "EqSe2-EQ",
                      "name": "example"
                    }
        argumentDocs:
            connection_id: '- (Required) The ID of the connection.'
            lag_id: '- (Required) The ID of the LAG with which to associate the connection.'
        importStatements: []
    aws_dx_connection_confirmation:
        subCategory: Direct Connect
        description: Provides a confirmation of the creation of the specified hosted connection on an interconnect.
        name: aws_dx_connection_confirmation
        title: aws_dx_connection_confirmation
        examples:
            - name: confirmation
              manifest: |-
                {
                  "connection_id": "dxcon-ffabc123"
                }
        argumentDocs:
            connection_id: '- (Required) The ID of the hosted connection.'
            id: '- The ID of the connection.'
        importStatements: []
    aws_dx_gateway:
        subCategory: Direct Connect
        description: Provides a Direct Connect Gateway.
        name: aws_dx_gateway
        title: aws_dx_gateway
        examples:
            - name: example
              manifest: |-
                {
                  "amazon_side_asn": "64512",
                  "name": "tf-dxg-example"
                }
        argumentDocs:
            amazon_side_asn: '- (Required) The ASN to be configured on the Amazon side of the connection. The ASN must be in the private range of 64,512 to 65,534 or 4,200,000,000 to 4,294,967,294.'
            create: '- (Default 10 minutes) Used for creating the gateway'
            delete: '- (Default 10 minutes) Used for destroying the gateway'
            id: '- The ID of the gateway.'
            name: '- (Required) The name of the connection.'
            owner_account_id: '- AWS Account ID of the gateway.'
        importStatements: []
    aws_dx_gateway_association:
        subCategory: Direct Connect
        description: Associates a Direct Connect Gateway with a VGW or transit gateway.
        name: aws_dx_gateway_association
        title: aws_dx_gateway_association
        examples:
            - name: example
              manifest: |-
                {
                  "associated_gateway_id": "${aws_vpn_gateway.example.id}",
                  "dx_gateway_id": "${aws_dx_gateway.example.id}"
                }
              references:
                associated_gateway_id: aws_vpn_gateway.example.id
                dx_gateway_id: aws_dx_gateway.example.id
              dependencies:
                aws_dx_gateway.example: |-
                    {
                      "amazon_side_asn": "64512",
                      "name": "example"
                    }
                aws_vpc.example: |-
                    {
                      "cidr_block": "10.255.255.0/28"
                    }
                aws_vpn_gateway.example: |-
                    {
                      "vpc_id": "${aws_vpc.example.id}"
                    }
            - name: example
              manifest: |-
                {
                  "allowed_prefixes": [
                    "10.255.255.0/30",
                    "10.255.255.8/30"
                  ],
                  "associated_gateway_id": "${aws_ec2_transit_gateway.example.id}",
                  "dx_gateway_id": "${aws_dx_gateway.example.id}"
                }
              references:
                associated_gateway_id: aws_ec2_transit_gateway.example.id
                dx_gateway_id: aws_dx_gateway.example.id
              dependencies:
                aws_dx_gateway.example: |-
                    {
                      "amazon_side_asn": "64512",
                      "name": "example"
                    }
                aws_ec2_transit_gateway.example: '{}'
            - name: example
              manifest: |-
                {
                  "allowed_prefixes": [
                    "210.52.109.0/24",
                    "175.45.176.0/22"
                  ],
                  "associated_gateway_id": "${aws_vpn_gateway.example.id}",
                  "dx_gateway_id": "${aws_dx_gateway.example.id}"
                }
              references:
                associated_gateway_id: aws_vpn_gateway.example.id
                dx_gateway_id: aws_dx_gateway.example.id
              dependencies:
                aws_dx_gateway.example: |-
                    {
                      "amazon_side_asn": "64512",
                      "name": "example"
                    }
                aws_vpc.example: |-
                    {
                      "cidr_block": "10.255.255.0/28"
                    }
                aws_vpn_gateway.example: |-
                    {
                      "vpc_id": "${aws_vpc.example.id}"
                    }
        argumentDocs:
            allowed_prefixes: '- (Optional) VPC prefixes (CIDRs) to advertise to the Direct Connect gateway. Defaults to the CIDR block of the VPC associated with the Virtual Gateway. To enable drift detection, must be configured.'
            associated_gateway_id: |-
                - (Optional) The ID of the VGW or transit gateway with which to associate the Direct Connect gateway.
                Used for single account Direct Connect gateway associations.
            associated_gateway_owner_account_id: |-
                - (Optional) The ID of the AWS account that owns the VGW or transit gateway with which to associate the Direct Connect gateway.
                Used for cross-account Direct Connect gateway associations.
            associated_gateway_type: '- The type of the associated gateway, transitGateway or virtualPrivateGateway.'
            create: '- (Default 30 minutes) Used for creating the association'
            delete: '- (Default 30 minutes) Used for destroying the association'
            dx_gateway_association_id: '- The ID of the Direct Connect gateway association.'
            dx_gateway_id: '- (Required) The ID of the Direct Connect gateway.'
            dx_gateway_owner_account_id: '- The ID of the AWS account that owns the Direct Connect gateway.'
            id: '- The ID of the Direct Connect gateway association resource.'
            proposal_id: |-
                - (Optional) The ID of the Direct Connect gateway association proposal.
                Used for cross-account Direct Connect gateway associations.
            update: '- (Default 30 minutes) Used for updating the association'
        importStatements: []
    aws_dx_gateway_association_proposal:
        subCategory: Direct Connect
        description: Manages a Direct Connect Gateway Association Proposal.
        name: aws_dx_gateway_association_proposal
        title: aws_dx_gateway_association_proposal
        examples:
            - name: example
              manifest: |-
                {
                  "associated_gateway_id": "${aws_vpn_gateway.example.id}",
                  "dx_gateway_id": "${aws_dx_gateway.example.id}",
                  "dx_gateway_owner_account_id": "${aws_dx_gateway.example.owner_account_id}"
                }
              references:
                associated_gateway_id: aws_vpn_gateway.example.id
                dx_gateway_id: aws_dx_gateway.example.id
                dx_gateway_owner_account_id: aws_dx_gateway.example.owner_account_id
        argumentDocs:
            allowed_prefixes: '- (Optional) VPC prefixes (CIDRs) to advertise to the Direct Connect gateway. Defaults to the CIDR block of the VPC associated with the Virtual Gateway. To enable drift detection, must be configured.'
            associated_gateway_id: '- (Required) The ID of the VGW or transit gateway with which to associate the Direct Connect gateway.'
            associated_gateway_owner_account_id: '- The ID of the AWS account that owns the VGW or transit gateway with which to associate the Direct Connect gateway.'
            associated_gateway_type: '- The type of the associated gateway, transitGateway or virtualPrivateGateway.'
            dx_gateway_id: '- (Required) Direct Connect Gateway identifier.'
            dx_gateway_owner_account_id: '- (Required) AWS Account identifier of the Direct Connect Gateway''s owner.'
            id: '- Direct Connect Gateway Association Proposal identifier.'
        importStatements: []
    aws_dx_hosted_connection:
        subCategory: Direct Connect
        description: Provides a hosted connection on the specified interconnect or a link aggregation group (LAG) of interconnects. Intended for use by AWS Direct Connect Partners only.
        name: aws_dx_hosted_connection
        title: aws_dx_hosted_connection
        examples:
            - name: hosted
              manifest: |-
                {
                  "bandwidth": "100Mbps",
                  "connection_id": "dxcon-ffabc123",
                  "name": "tf-dx-hosted-connection",
                  "owner_account_id": "123456789012",
                  "vlan": 1
                }
        argumentDocs:
            aws_device: '- The Direct Connect endpoint on which the physical connection terminates.'
            bandwidth: '- (Required) The bandwidth of the connection. Valid values for dedicated connections: 1Gbps, 10Gbps. Valid values for hosted connections: 50Mbps, 100Mbps, 200Mbps, 300Mbps, 400Mbps, 500Mbps, 1Gbps, 2Gbps, 5Gbps and 10Gbps. Case sensitive.'
            connection_id: '- (Required) The ID of the interconnect or LAG.'
            has_logical_redundancy: '- Indicates whether the connection supports a secondary BGP peer in the same address family (IPv4/IPv6).'
            id: '- The ID of the connection.'
            jumbo_frame_capable: '- Boolean value representing if jumbo frames have been enabled for this connection.'
            lag_id: '- The ID of the LAG.'
            loa_issue_time: '- The time of the most recent call to DescribeLoa for this connection.'
            location: '- The location of the connection.'
            name: '- (Required) The name of the connection.'
            owner_account_id: '- (Required) The ID of the AWS account of the customer for the connection.'
            partner_name: '- The name of the AWS Direct Connect service provider associated with the connection.'
            provider_name: '- The name of the service provider associated with the connection.'
            region: '- The AWS Region where the connection is located.'
            state: '- The state of the connection. Possible values include: ordering, requested, pending, available, down, deleting, deleted, rejected, unknown. See AllocateHostedConnection for a description of each connection state.'
            vlan: '- (Required) The dedicated VLAN provisioned to the hosted connection.'
        importStatements: []
    aws_dx_hosted_private_virtual_interface:
        subCategory: Direct Connect
        description: Provides a Direct Connect hosted private virtual interface resource.
        name: aws_dx_hosted_private_virtual_interface
        title: aws_dx_hosted_private_virtual_interface
        examples:
            - name: foo
              manifest: |-
                {
                  "address_family": "ipv4",
                  "bgp_asn": 65352,
                  "connection_id": "dxcon-zzzzzzzz",
                  "name": "vif-foo",
                  "vlan": 4094
                }
        argumentDocs:
            address_family: '- (Required) The address family for the BGP peer. ipv4  or ipv6.'
            amazon_address: '- (Optional) The IPv4 CIDR address to use to send traffic to Amazon. Required for IPv4 BGP peers.'
            arn: '- The ARN of the virtual interface.'
            aws_device: '- The Direct Connect endpoint on which the virtual interface terminates.'
            bgp_asn: '- (Required) The autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.'
            bgp_auth_key: '- (Optional) The authentication key for BGP configuration.'
            connection_id: '- (Required) The ID of the Direct Connect connection (or LAG) on which to create the virtual interface.'
            create: '- (Default 10 minutes) Used for creating virtual interface'
            customer_address: '- (Optional) The IPv4 CIDR destination address to which Amazon should send traffic. Required for IPv4 BGP peers.'
            delete: '- (Default 10 minutes) Used for destroying virtual interface'
            id: '- The ID of the virtual interface.'
            jumbo_frame_capable: '- Indicates whether jumbo frames (9001 MTU) are supported.'
            mtu: '- (Optional) The maximum transmission unit (MTU) is the size, in bytes, of the largest permissible packet that can be passed over the connection. The MTU of a virtual private interface can be either 1500 or 9001 (jumbo frames). Default is 1500.'
            name: '- (Required) The name for the virtual interface.'
            owner_account_id: '- (Required) The AWS account that will own the new virtual interface.'
            update: '- (Default 10 minutes) Used for virtual interface modifications'
            vlan: '- (Required) The VLAN ID.'
        importStatements: []
    aws_dx_hosted_private_virtual_interface_accepter:
        subCategory: Direct Connect
        description: Provides a resource to manage the accepter's side of a Direct Connect hosted private virtual interface.
        name: aws_dx_hosted_private_virtual_interface_accepter
        title: aws_dx_hosted_private_virtual_interface_accepter
        examples:
            - name: accepter
              manifest: |-
                {
                  "provider": "${aws.accepter}",
                  "tags": {
                    "Side": "Accepter"
                  },
                  "virtual_interface_id": "${aws_dx_hosted_private_virtual_interface.creator.id}",
                  "vpn_gateway_id": "${aws_vpn_gateway.vpn_gw.id}"
                }
              references:
                provider: aws.accepter
                virtual_interface_id: aws_dx_hosted_private_virtual_interface.creator.id
                vpn_gateway_id: aws_vpn_gateway.vpn_gw.id
              dependencies:
                aws_dx_hosted_private_virtual_interface.creator: |-
                    {
                      "address_family": "ipv4",
                      "bgp_asn": 65352,
                      "connection_id": "dxcon-zzzzzzzz",
                      "depends_on": [
                        "${aws_vpn_gateway.vpn_gw}"
                      ],
                      "name": "vif-foo",
                      "owner_account_id": "${data.aws_caller_identity.accepter.account_id}",
                      "vlan": 4094
                    }
                aws_vpn_gateway.vpn_gw: |-
                    {
                      "provider": "${aws.accepter}"
                    }
        argumentDocs:
            arn: '- The ARN of the virtual interface.'
            create: '- (Default 10 minutes) Used for creating virtual interface'
            delete: '- (Default 10 minutes) Used for destroying virtual interface'
            dx_gateway_id: '- (Optional) The ID of the Direct Connect gateway to which to connect the virtual interface.'
            id: '- The ID of the virtual interface.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            virtual_interface_id: '- (Required) The ID of the Direct Connect virtual interface to accept.'
            vpn_gateway_id: '- (Optional) The ID of the virtual private gateway to which to connect the virtual interface.'
        importStatements: []
    aws_dx_hosted_public_virtual_interface:
        subCategory: Direct Connect
        description: Provides a Direct Connect hosted public virtual interface resource.
        name: aws_dx_hosted_public_virtual_interface
        title: aws_dx_hosted_public_virtual_interface
        examples:
            - name: foo
              manifest: |-
                {
                  "address_family": "ipv4",
                  "amazon_address": "175.45.176.2/30",
                  "bgp_asn": 65352,
                  "connection_id": "dxcon-zzzzzzzz",
                  "customer_address": "175.45.176.1/30",
                  "name": "vif-foo",
                  "route_filter_prefixes": [
                    "210.52.109.0/24",
                    "175.45.176.0/22"
                  ],
                  "vlan": 4094
                }
        argumentDocs:
            address_family: '- (Required) The address family for the BGP peer. ipv4  or ipv6.'
            amazon_address: '- (Optional) The IPv4 CIDR address to use to send traffic to Amazon. Required for IPv4 BGP peers.'
            arn: '- The ARN of the virtual interface.'
            aws_device: '- The Direct Connect endpoint on which the virtual interface terminates.'
            bgp_asn: '- (Required) The autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.'
            bgp_auth_key: '- (Optional) The authentication key for BGP configuration.'
            connection_id: '- (Required) The ID of the Direct Connect connection (or LAG) on which to create the virtual interface.'
            create: '- (Default 10 minutes) Used for creating virtual interface'
            customer_address: '- (Optional) The IPv4 CIDR destination address to which Amazon should send traffic. Required for IPv4 BGP peers.'
            delete: '- (Default 10 minutes) Used for destroying virtual interface'
            id: '- The ID of the virtual interface.'
            name: '- (Required) The name for the virtual interface.'
            owner_account_id: '- (Required) The AWS account that will own the new virtual interface.'
            route_filter_prefixes: '- (Required) A list of routes to be advertised to the AWS network in this region.'
            vlan: '- (Required) The VLAN ID.'
        importStatements: []
    aws_dx_hosted_public_virtual_interface_accepter:
        subCategory: Direct Connect
        description: Provides a resource to manage the accepter's side of a Direct Connect hosted public virtual interface.
        name: aws_dx_hosted_public_virtual_interface_accepter
        title: aws_dx_hosted_public_virtual_interface_accepter
        examples:
            - name: accepter
              manifest: |-
                {
                  "provider": "${aws.accepter}",
                  "tags": {
                    "Side": "Accepter"
                  },
                  "virtual_interface_id": "${aws_dx_hosted_public_virtual_interface.creator.id}"
                }
              references:
                provider: aws.accepter
                virtual_interface_id: aws_dx_hosted_public_virtual_interface.creator.id
              dependencies:
                aws_dx_hosted_public_virtual_interface.creator: |-
                    {
                      "address_family": "ipv4",
                      "amazon_address": "175.45.176.2/30",
                      "bgp_asn": 65352,
                      "connection_id": "dxcon-zzzzzzzz",
                      "customer_address": "175.45.176.1/30",
                      "name": "vif-foo",
                      "owner_account_id": "${data.aws_caller_identity.accepter.account_id}",
                      "route_filter_prefixes": [
                        "210.52.109.0/24",
                        "175.45.176.0/22"
                      ],
                      "vlan": 4094
                    }
        argumentDocs:
            arn: '- The ARN of the virtual interface.'
            create: '- (Default 10 minutes) Used for creating virtual interface'
            delete: '- (Default 10 minutes) Used for destroying virtual interface'
            id: '- The ID of the virtual interface.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            virtual_interface_id: '- (Required) The ID of the Direct Connect virtual interface to accept.'
        importStatements: []
    aws_dx_hosted_transit_virtual_interface:
        subCategory: Direct Connect
        description: Provides a Direct Connect hosted transit virtual interface resource.
        name: aws_dx_hosted_transit_virtual_interface
        title: aws_dx_hosted_transit_virtual_interface
        examples:
            - name: example
              manifest: |-
                {
                  "address_family": "ipv4",
                  "bgp_asn": 65352,
                  "connection_id": "${aws_dx_connection.example.id}",
                  "name": "tf-transit-vif-example",
                  "vlan": 4094
                }
              references:
                connection_id: aws_dx_connection.example.id
        argumentDocs:
            address_family: '- (Required) The address family for the BGP peer. ipv4  or ipv6.'
            amazon_address: '- (Optional) The IPv4 CIDR address to use to send traffic to Amazon. Required for IPv4 BGP peers.'
            arn: '- The ARN of the virtual interface.'
            aws_device: '- The Direct Connect endpoint on which the virtual interface terminates.'
            bgp_asn: '- (Required) The autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.'
            bgp_auth_key: '- (Optional) The authentication key for BGP configuration.'
            connection_id: '- (Required) The ID of the Direct Connect connection (or LAG) on which to create the virtual interface.'
            create: '- (Default 10 minutes) Used for creating virtual interface'
            customer_address: '- (Optional) The IPv4 CIDR destination address to which Amazon should send traffic. Required for IPv4 BGP peers.'
            delete: '- (Default 10 minutes) Used for destroying virtual interface'
            id: '- The ID of the virtual interface.'
            jumbo_frame_capable: '- Indicates whether jumbo frames (8500 MTU) are supported.'
            mtu: '- (Optional) The maximum transmission unit (MTU) is the size, in bytes, of the largest permissible packet that can be passed over the connection. The MTU of a virtual transit interface can be either 1500 or 8500 (jumbo frames). Default is 1500.'
            name: '- (Required) The name for the virtual interface.'
            owner_account_id: '- (Required) The AWS account that will own the new virtual interface.'
            update: '- (Default 10 minutes) Used for virtual interface modifications'
            vlan: '- (Required) The VLAN ID.'
        importStatements: []
    aws_dx_hosted_transit_virtual_interface_accepter:
        subCategory: Direct Connect
        description: Provides a resource to manage the accepter's side of a Direct Connect hosted transit virtual interface.
        name: aws_dx_hosted_transit_virtual_interface_accepter
        title: aws_dx_hosted_transit_virtual_interface_accepter
        examples:
            - name: accepter
              manifest: |-
                {
                  "dx_gateway_id": "${aws_dx_gateway.example.id}",
                  "provider": "${aws.accepter}",
                  "tags": {
                    "Side": "Accepter"
                  },
                  "virtual_interface_id": "${aws_dx_hosted_transit_virtual_interface.creator.id}"
                }
              references:
                dx_gateway_id: aws_dx_gateway.example.id
                provider: aws.accepter
                virtual_interface_id: aws_dx_hosted_transit_virtual_interface.creator.id
              dependencies:
                aws_dx_gateway.example: |-
                    {
                      "amazon_side_asn": 64512,
                      "name": "tf-dxg-example",
                      "provider": "${aws.accepter}"
                    }
                aws_dx_hosted_transit_virtual_interface.creator: |-
                    {
                      "address_family": "ipv4",
                      "bgp_asn": 65352,
                      "connection_id": "dxcon-zzzzzzzz",
                      "depends_on": [
                        "${aws_dx_gateway.example}"
                      ],
                      "name": "tf-transit-vif-example",
                      "owner_account_id": "${data.aws_caller_identity.accepter.account_id}",
                      "vlan": 4094
                    }
        argumentDocs:
            arn: '- The ARN of the virtual interface.'
            create: '- (Default 10 minutes) Used for creating virtual interface'
            delete: '- (Default 10 minutes) Used for destroying virtual interface'
            dx_gateway_id: '- (Required) The ID of the Direct Connect gateway to which to connect the virtual interface.'
            id: '- The ID of the virtual interface.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            virtual_interface_id: '- (Required) The ID of the Direct Connect virtual interface to accept.'
        importStatements: []
    aws_dx_lag:
        subCategory: Direct Connect
        description: Provides a Direct Connect LAG.
        name: aws_dx_lag
        title: aws_dx_lag
        examples:
            - name: hoge
              manifest: |-
                {
                  "connections_bandwidth": "1Gbps",
                  "force_destroy": true,
                  "location": "EqDC2",
                  "name": "tf-dx-lag"
                }
        argumentDocs:
            arn: '- The ARN of the LAG.'
            connection_id: '- (Optional) The ID of an existing dedicated connection to migrate to the LAG.'
            connections_bandwidth: '- (Required) The bandwidth of the individual physical connections bundled by the LAG. Valid values: 50Mbps, 100Mbps, 200Mbps, 300Mbps, 400Mbps, 500Mbps, 1Gbps, 2Gbps, 5Gbps, 10Gbps and 100Gbps. Case sensitive.'
            force_destroy: '- (Optional, Default:false) A boolean that indicates all connections associated with the LAG should be deleted so that the LAG can be destroyed without error. These objects are not recoverable.'
            has_logical_redundancy: '- Indicates whether the LAG supports a secondary BGP peer in the same address family (IPv4/IPv6).'
            id: '- The ID of the LAG.'
            jumbo_frame_capable: -Indicates whether jumbo frames (9001 MTU) are supported.
            location: '- (Required) The AWS Direct Connect location in which the LAG should be allocated. See DescribeLocations for the list of AWS Direct Connect locations. Use locationCode.'
            name: '- (Required) The name of the LAG.'
            owner_account_id: '- The ID of the AWS account that owns the LAG.'
            provider_name: '- (Optional) The name of the service provider associated with the LAG.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_dx_private_virtual_interface:
        subCategory: Direct Connect
        description: Provides a Direct Connect private virtual interface resource.
        name: aws_dx_private_virtual_interface
        title: aws_dx_private_virtual_interface
        examples:
            - name: foo
              manifest: |-
                {
                  "address_family": "ipv4",
                  "bgp_asn": 65352,
                  "connection_id": "dxcon-zzzzzzzz",
                  "name": "vif-foo",
                  "vlan": 4094
                }
        argumentDocs:
            address_family: '- (Required) The address family for the BGP peer. ipv4  or ipv6.'
            amazon_address: '- (Optional) The IPv4 CIDR address to use to send traffic to Amazon. Required for IPv4 BGP peers.'
            arn: '- The ARN of the virtual interface.'
            aws_device: '- The Direct Connect endpoint on which the virtual interface terminates.'
            bgp_asn: '- (Required) The autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.'
            bgp_auth_key: '- (Optional) The authentication key for BGP configuration.'
            connection_id: '- (Required) The ID of the Direct Connect connection (or LAG) on which to create the virtual interface.'
            create: '- (Default 10 minutes) Used for creating virtual interface'
            customer_address: '- (Optional) The IPv4 CIDR destination address to which Amazon should send traffic. Required for IPv4 BGP peers.'
            delete: '- (Default 10 minutes) Used for destroying virtual interface'
            dx_gateway_id: '- (Optional) The ID of the Direct Connect gateway to which to connect the virtual interface.'
            id: '- The ID of the virtual interface.'
            jumbo_frame_capable: '- Indicates whether jumbo frames (9001 MTU) are supported.'
            mtu: |-
                - (Optional) The maximum transmission unit (MTU) is the size, in bytes, of the largest permissible packet that can be passed over the connection.
                The MTU of a virtual private interface can be either 1500 or 9001 (jumbo frames). Default is 1500.
            name: '- (Required) The name for the virtual interface.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            update: '- (Default 10 minutes) Used for virtual interface modifications'
            vlan: '- (Required) The VLAN ID.'
            vpn_gateway_id: '- (Optional) The ID of the virtual private gateway to which to connect the virtual interface.'
        importStatements: []
    aws_dx_public_virtual_interface:
        subCategory: Direct Connect
        description: Provides a Direct Connect public virtual interface resource.
        name: aws_dx_public_virtual_interface
        title: aws_dx_public_virtual_interface
        examples:
            - name: foo
              manifest: |-
                {
                  "address_family": "ipv4",
                  "amazon_address": "175.45.176.2/30",
                  "bgp_asn": 65352,
                  "connection_id": "dxcon-zzzzzzzz",
                  "customer_address": "175.45.176.1/30",
                  "name": "vif-foo",
                  "route_filter_prefixes": [
                    "210.52.109.0/24",
                    "175.45.176.0/22"
                  ],
                  "vlan": 4094
                }
        argumentDocs:
            address_family: '- (Required) The address family for the BGP peer. ipv4  or ipv6.'
            amazon_address: '- (Optional) The IPv4 CIDR address to use to send traffic to Amazon. Required for IPv4 BGP peers.'
            arn: '- The ARN of the virtual interface.'
            aws_device: '- The Direct Connect endpoint on which the virtual interface terminates.'
            bgp_asn: '- (Required) The autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.'
            bgp_auth_key: '- (Optional) The authentication key for BGP configuration.'
            connection_id: '- (Required) The ID of the Direct Connect connection (or LAG) on which to create the virtual interface.'
            create: '- (Default 10 minutes) Used for creating virtual interface'
            customer_address: '- (Optional) The IPv4 CIDR destination address to which Amazon should send traffic. Required for IPv4 BGP peers.'
            delete: '- (Default 10 minutes) Used for destroying virtual interface'
            id: '- The ID of the virtual interface.'
            name: '- (Required) The name for the virtual interface.'
            route_filter_prefixes: '- (Required) A list of routes to be advertised to the AWS network in this region.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            vlan: '- (Required) The VLAN ID.'
        importStatements: []
    aws_dx_transit_virtual_interface:
        subCategory: Direct Connect
        description: Provides a Direct Connect transit virtual interface resource.
        name: aws_dx_transit_virtual_interface
        title: aws_dx_transit_virtual_interface
        examples:
            - name: example
              manifest: |-
                {
                  "address_family": "ipv4",
                  "bgp_asn": 65352,
                  "connection_id": "${aws_dx_connection.example.id}",
                  "dx_gateway_id": "${aws_dx_gateway.example.id}",
                  "name": "tf-transit-vif-example",
                  "vlan": 4094
                }
              references:
                connection_id: aws_dx_connection.example.id
                dx_gateway_id: aws_dx_gateway.example.id
              dependencies:
                aws_dx_gateway.example: |-
                    {
                      "amazon_side_asn": 64512,
                      "name": "tf-dxg-example"
                    }
        argumentDocs:
            address_family: '- (Required) The address family for the BGP peer. ipv4  or ipv6.'
            amazon_address: '- (Optional) The IPv4 CIDR address to use to send traffic to Amazon. Required for IPv4 BGP peers.'
            arn: '- The ARN of the virtual interface.'
            aws_device: '- The Direct Connect endpoint on which the virtual interface terminates.'
            bgp_asn: '- (Required) The autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.'
            bgp_auth_key: '- (Optional) The authentication key for BGP configuration.'
            connection_id: '- (Required) The ID of the Direct Connect connection (or LAG) on which to create the virtual interface.'
            create: '- (Default 10 minutes) Used for creating virtual interface'
            customer_address: '- (Optional) The IPv4 CIDR destination address to which Amazon should send traffic. Required for IPv4 BGP peers.'
            delete: '- (Default 10 minutes) Used for destroying virtual interface'
            dx_gateway_id: '- (Required) The ID of the Direct Connect gateway to which to connect the virtual interface.'
            id: '- The ID of the virtual interface.'
            jumbo_frame_capable: '- Indicates whether jumbo frames (8500 MTU) are supported.'
            mtu: |-
                - (Optional) The maximum transmission unit (MTU) is the size, in bytes, of the largest permissible packet that can be passed over the connection.
                The MTU of a virtual transit interface can be either 1500 or 8500 (jumbo frames). Default is 1500.
            name: '- (Required) The name for the virtual interface.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            update: '- (Default 10 minutes) Used for virtual interface modifications'
            vlan: '- (Required) The VLAN ID.'
        importStatements: []
    aws_dynamodb_contributor_insights:
        subCategory: DynamoDB
        description: Provides a DynamoDB contributor insights resource
        name: aws_dynamodb_contributor_insights
        title: aws_dynamodb_contributor_insights
        examples:
            - name: test
              manifest: |-
                {
                  "table_name": "ExampleTableName"
                }
        argumentDocs:
            index_name: '- (Optional) The global secondary index name'
            table_name: '- (Required) The name of the table to enable contributor insights'
        importStatements: []
    aws_dynamodb_global_table:
        subCategory: DynamoDB
        description: Manages DynamoDB Global Tables V1 (version 2017.11.29)
        name: aws_dynamodb_global_table
        title: aws_dynamodb_global_table
        examples:
            - name: myTable
              manifest: |-
                {
                  "depends_on": [
                    "${aws_dynamodb_table.us-east-1}",
                    "${aws_dynamodb_table.us-west-2}"
                  ],
                  "name": "myTable",
                  "provider": "${aws.us-east-1}",
                  "replica": [
                    {
                      "region_name": "us-east-1"
                    },
                    {
                      "region_name": "us-west-2"
                    }
                  ]
                }
              references:
                provider: aws.us-east-1
              dependencies:
                aws_dynamodb_table.us-east-1: |-
                    {
                      "attribute": [
                        {
                          "name": "myAttribute",
                          "type": "S"
                        }
                      ],
                      "hash_key": "myAttribute",
                      "name": "myTable",
                      "provider": "${aws.us-east-1}",
                      "read_capacity": 1,
                      "stream_enabled": true,
                      "stream_view_type": "NEW_AND_OLD_IMAGES",
                      "write_capacity": 1
                    }
                aws_dynamodb_table.us-west-2: |-
                    {
                      "attribute": [
                        {
                          "name": "myAttribute",
                          "type": "S"
                        }
                      ],
                      "hash_key": "myAttribute",
                      "name": "myTable",
                      "provider": "${aws.us-west-2}",
                      "read_capacity": 1,
                      "stream_enabled": true,
                      "stream_view_type": "NEW_AND_OLD_IMAGES",
                      "write_capacity": 1
                    }
        argumentDocs:
            arn: '- The ARN of the DynamoDB Global Table'
            id: '- The name of the DynamoDB Global Table'
            name: '- (Required) The name of the global table. Must match underlying DynamoDB Table names in all regions.'
            replica: '- (Required) Underlying DynamoDB Table. At least 1 replica must be defined. See below.'
            replica.region_name: '- (Required) AWS region name of replica DynamoDB TableE.g., us-east-1'
        importStatements: []
    aws_dynamodb_kinesis_streaming_destination:
        subCategory: DynamoDB
        description: Enables a Kinesis streaming destination for a DynamoDB table
        name: aws_dynamodb_kinesis_streaming_destination
        title: aws_dynamodb_kinesis_streaming_destination
        examples:
            - name: example
              manifest: |-
                {
                  "stream_arn": "${aws_kinesis_stream.example.arn}",
                  "table_name": "${aws_dynamodb_table.example.name}"
                }
              references:
                stream_arn: aws_kinesis_stream.example.arn
                table_name: aws_dynamodb_table.example.name
              dependencies:
                aws_dynamodb_table.example: |-
                    {
                      "attribute": [
                        {
                          "name": "id",
                          "type": "S"
                        }
                      ],
                      "hash_key": "id",
                      "name": "orders"
                    }
                aws_kinesis_stream.example: |-
                    {
                      "name": "order_item_changes",
                      "shard_count": 1
                    }
        argumentDocs:
            id: '- The table_name and stream_arn separated by a comma (,).'
            stream_arn: '- (Required) The ARN for a Kinesis data stream. This must exist in the same account and region as the DynamoDB table.'
            table_name: |-
                - (Required) The name of the DynamoDB table. There
                can only be one Kinesis streaming destination for a given DynamoDB table.
        importStatements: []
    aws_dynamodb_table:
        subCategory: DynamoDB
        description: Provides a DynamoDB table resource
        name: aws_dynamodb_table
        title: aws_dynamodb_table
        examples:
            - name: basic-dynamodb-table
              manifest: |-
                {
                  "attribute": [
                    {
                      "name": "UserId",
                      "type": "S"
                    },
                    {
                      "name": "GameTitle",
                      "type": "S"
                    },
                    {
                      "name": "TopScore",
                      "type": "N"
                    }
                  ],
                  "billing_mode": "PROVISIONED",
                  "global_secondary_index": [
                    {
                      "hash_key": "GameTitle",
                      "name": "GameTitleIndex",
                      "non_key_attributes": [
                        "UserId"
                      ],
                      "projection_type": "INCLUDE",
                      "range_key": "TopScore",
                      "read_capacity": 10,
                      "write_capacity": 10
                    }
                  ],
                  "hash_key": "UserId",
                  "name": "GameScores",
                  "range_key": "GameTitle",
                  "read_capacity": 20,
                  "tags": {
                    "Environment": "production",
                    "Name": "dynamodb-table-1"
                  },
                  "ttl": [
                    {
                      "attribute_name": "TimeToExist",
                      "enabled": false
                    }
                  ],
                  "write_capacity": 20
                }
            - name: example
              manifest: |-
                {
                  "attribute": [
                    {
                      "name": "TestTableHashKey",
                      "type": "S"
                    }
                  ],
                  "billing_mode": "PAY_PER_REQUEST",
                  "hash_key": "TestTableHashKey",
                  "name": "example",
                  "replica": [
                    {
                      "region_name": "us-east-2"
                    },
                    {
                      "region_name": "us-west-2"
                    }
                  ],
                  "stream_enabled": true,
                  "stream_view_type": "NEW_AND_OLD_IMAGES"
                }
        argumentDocs:
            arn: '- ARN of the table'
            attribute: '- (Required) Set of nested attribute definitions. Only required for hash_key and range_key attributes. See below.'
            attribute.name: '- (Required) Name of the attribute'
            attribute.type: '- (Required) Attribute type. Valid values are S (string), N (number), B (binary).'
            billing_mode: '- (Optional) Controls how you are charged for read and write throughput and how you manage capacity. The valid values are PROVISIONED and PAY_PER_REQUEST. Defaults to PROVISIONED.'
            global_secondary_index: '- (Optional) Describe a GSI for the table; subject to the normal limits on the number of GSIs, projected attributes, etc. See below.'
            global_secondary_index.hash_key: '- (Required) Name of the hash key in the index; must be defined as an attribute in the resource.'
            global_secondary_index.name: '- (Required) Name of the index.'
            global_secondary_index.non_key_attributes: '- (Optional) Only required with INCLUDE as a projection type; a list of attributes to project into the index. These do not need to be defined as attributes on the table.'
            global_secondary_index.projection_type: '- (Required) One of ALL, INCLUDE or KEYS_ONLY where ALL projects every attribute into the index, KEYS_ONLY projects just the hash and range key into the index, and INCLUDE projects only the keys specified in the non_key_attributes parameter.'
            global_secondary_index.range_key: '- (Optional) Name of the range key; must be defined'
            global_secondary_index.read_capacity: '- (Optional) Number of read units for this index. Must be set if billing_mode is set to PROVISIONED.'
            global_secondary_index.write_capacity: '- (Optional) Number of write units for this index. Must be set if billing_mode is set to PROVISIONED.'
            hash_key: '- (Required, Forces new resource) Attribute to use as the hash (partition) key. Must also be defined as an attribute. See below.'
            id: '- Name of the table'
            local_secondary_index: '- (Optional, Forces new resource) Describe an LSI on the table; these can only be allocated at creation so you cannot change this definition after you have created the resource. See below.'
            local_secondary_index.name: '- (Required) Name of the index'
            local_secondary_index.non_key_attributes: '- (Optional) Only required with INCLUDE as a projection type; a list of attributes to project into the index. These do not need to be defined as attributes on the table.'
            local_secondary_index.projection_type: '- (Required) One of ALL, INCLUDE or KEYS_ONLY where ALL projects every attribute into the index, KEYS_ONLY projects just the hash and range key into the index, and INCLUDE projects only the keys specified in the non_key_attributes parameter.'
            local_secondary_index.range_key: '- (Required) Name of the range key.'
            name: '- (Required) Unique within a region name of the table.'
            point_in_time_recovery: '- (Optional) Enable point-in-time recovery options. See below.'
            point_in_time_recovery.enabled: '- (Required) Whether to enable point-in-time recovery. It can take 10 minutes to enable for new tables. If the point_in_time_recovery block is not provided, this defaults to false.'
            range_key: '- (Optional, Forces new resource) Attribute to use as the range (sort) key. Must also be defined as an attribute, see below.'
            read_capacity: '- (Optional) Number of read units for this table. If the billing_mode is PROVISIONED, this field is required.'
            replica: '- (Optional) Configuration block(s) with DynamoDB Global Tables V2 (version 2019.11.21) replication configurations. See below.'
            replica.kms_key_arn: '- (Optional) ARN of the CMK that should be used for the AWS KMS encryption.'
            replica.point_in_time_recovery: '- (Optional) Whether to enable Point In Time Recovery for the replica.'
            replica.region_name: '- (Required) Region name of the replica.'
            restore_date_time: '- (Optional) Time of the point-in-time recovery point to restore.'
            restore_source_name: '- (Optional) Name of the table to restore. Must match the name of an existing table.'
            restore_to_latest_time: '- (Optional) If set, restores table to the most recent point-in-time recovery point.'
            server_side_encryption: '- (Optional) Encryption at rest options. AWS DynamoDB tables are automatically encrypted at rest with an AWS-owned Customer Master Key if this argument isn''t specified. See below.'
            server_side_encryption.enabled: '- (Required) Whether or not to enable encryption at rest using an AWS managed KMS customer master key (CMK). If enabled is false then server-side encryption is set to AWS owned CMK (shown as DEFAULT in the AWS console). If enabled is true and no kms_key_arn is specified then server-side encryption is set to AWS managed CMK (shown as KMS in the AWS console). The AWS KMS documentation explains the difference between AWS owned and AWS managed CMKs.'
            server_side_encryption.kms_key_arn: '- (Optional) ARN of the CMK that should be used for the AWS KMS encryption. This attribute should only be specified if the key is different from the default DynamoDB CMK, alias/aws/dynamodb.'
            stream_arn: '- ARN of the Table Stream. Only available when stream_enabled = true'
            stream_enabled: '- (Optional) Whether Streams are enabled.'
            stream_label: '- Timestamp, in ISO 8601 format, for this stream. Note that this timestamp is not a unique identifier for the stream on its own. However, the combination of AWS customer ID, table name and this field is guaranteed to be unique. It can be used for creating CloudWatch Alarms. Only available when stream_enabled = true'
            stream_view_type: '- (Optional) When an item in the table is modified, StreamViewType determines what information is written to the table''s stream. Valid values are KEYS_ONLY, NEW_IMAGE, OLD_IMAGE, NEW_AND_OLD_IMAGES.'
            table_class: '- (Optional) Storage class of the table. Valid values are STANDARD and STANDARD_INFREQUENT_ACCESS.'
            tags: '- (Optional) A map of tags to populate on the created table. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            timeouts.create: '- (Defaults to 30 mins) Used when creating the table'
            timeouts.delete: '- (Defaults to 10 mins) Used when deleting the table'
            timeouts.update: '- (Defaults to 60 mins) Used when updating the table configuration and reset for each individual Global Secondary Index and Replica update'
            ttl: '- (Optional) Configuration block for TTL. See below.'
            ttl.attribute_name: '- (Required) Name of the table attribute to store the TTL timestamp in.'
            ttl.enabled: '- (Required) Whether TTL is enabled.'
            write_capacity: '- (Optional) Number of write units for this table. If the billing_mode is PROVISIONED, this field is required.'
        importStatements: []
    aws_dynamodb_table_item:
        subCategory: DynamoDB
        description: Provides a DynamoDB table item resource
        name: aws_dynamodb_table_item
        title: aws_dynamodb_table_item
        examples:
            - name: example
              manifest: |-
                {
                  "hash_key": "${aws_dynamodb_table.example.hash_key}",
                  "item": "{\n  \"exampleHashKey\": {\"S\": \"something\"},\n  \"one\": {\"N\": \"11111\"},\n  \"two\": {\"N\": \"22222\"},\n  \"three\": {\"N\": \"33333\"},\n  \"four\": {\"N\": \"44444\"}\n}\n",
                  "table_name": "${aws_dynamodb_table.example.name}"
                }
              references:
                hash_key: aws_dynamodb_table.example.hash_key
                table_name: aws_dynamodb_table.example.name
              dependencies:
                aws_dynamodb_table.example: |-
                    {
                      "attribute": [
                        {
                          "name": "exampleHashKey",
                          "type": "S"
                        }
                      ],
                      "hash_key": "exampleHashKey",
                      "name": "example-name",
                      "read_capacity": 10,
                      "write_capacity": 10
                    }
        argumentDocs:
            hash_key: '- (Required) Hash key to use for lookups and identification of the item'
            item: '- (Required) JSON representation of a map of attribute name/value pairs, one for each attribute. Only the primary key attributes are required; you can optionally provide other attribute name-value pairs for the item.'
            range_key: '- (Optional) Range key to use for lookups and identification of the item. Required if there is range key defined in the table.'
            table_name: '- (Required) Name of the table to contain the item.'
        importStatements: []
    aws_dynamodb_tag:
        subCategory: DynamoDB
        description: Manages an individual DynamoDB resource tag
        name: aws_dynamodb_tag
        title: aws_dynamodb_tag
        examples:
            - name: test
              manifest: |-
                {
                  "key": "testkey",
                  "provider": "aws.replica",
                  "resource_arn": "${replace(aws_dynamodb_table.test.arn, data.aws_region.current.name, data.aws_region.replica.name)}",
                  "value": "testvalue"
                }
              dependencies:
                aws_dynamodb_table.example: |-
                    {
                      "replica": [
                        {
                          "region_name": "${data.aws_region.replica.name}"
                        }
                      ]
                    }
        argumentDocs:
            id: '- DynamoDB resource identifier and key, separated by a comma (,)'
            key: '- (Required) Tag name.'
            resource_arn: '- (Required) Amazon Resource Name (ARN) of the DynamoDB resource to tag.'
            value: '- (Required) Tag value.'
        importStatements: []
    aws_ebs_default_kms_key:
        subCategory: EBS (EC2)
        description: Manages the default customer master key (CMK) that your AWS account uses to encrypt EBS volumes.
        name: aws_ebs_default_kms_key
        title: aws_ebs_default_kms_key
        examples:
            - name: example
              manifest: |-
                {
                  "key_arn": "${aws_kms_key.example.arn}"
                }
              references:
                key_arn: aws_kms_key.example.arn
        argumentDocs:
            key_arn: '- (Required, ForceNew) The ARN of the AWS Key Management Service (AWS KMS) customer master key (CMK) to use to encrypt the EBS volume.'
        importStatements: []
    aws_ebs_encryption_by_default:
        subCategory: EBS (EC2)
        description: Manages whether default EBS encryption is enabled for your AWS account in the current AWS region.
        name: aws_ebs_encryption_by_default
        title: aws_ebs_encryption_by_default
        examples:
            - name: example
              manifest: |-
                {
                  "enabled": true
                }
        argumentDocs:
            enabled: '- (Optional) Whether or not default EBS encryption is enabled. Valid values are true or false. Defaults to true.'
        importStatements: []
    aws_ebs_snapshot:
        subCategory: EBS (EC2)
        description: Provides an elastic block storage snapshot resource.
        name: aws_ebs_snapshot
        title: aws_ebs_snapshot
        examples:
            - name: example_snapshot
              manifest: |-
                {
                  "tags": {
                    "Name": "HelloWorld_snap"
                  },
                  "volume_id": "${aws_ebs_volume.example.id}"
                }
              references:
                volume_id: aws_ebs_volume.example.id
              dependencies:
                aws_ebs_volume.example: |-
                    {
                      "availability_zone": "us-west-2a",
                      "size": 40,
                      "tags": {
                        "Name": "HelloWorld"
                      }
                    }
        argumentDocs:
            arn: '- Amazon Resource Name (ARN) of the EBS Snapshot.'
            create: '- (Default 10 minutes) Used for creating the ebs snapshot'
            data_encryption_key_id: '- The data encryption key identifier for the snapshot.'
            delete: '- (Default 10 minutes) Used for deleting the ebs snapshot'
            description: '- (Optional) A description of what the snapshot is.'
            encrypted: '- Whether the snapshot is encrypted.'
            id: '- The snapshot ID (e.g., snap-59fcb34e).'
            kms_key_id: '- The ARN for the KMS encryption key.'
            outpost_arn: '- (Optional) The Amazon Resource Name (ARN) of the Outpost on which to create a local snapshot.'
            owner_alias: '- Value from an Amazon-maintained list (amazon, aws-marketplace, microsoft) of snapshot owners.'
            owner_id: '- The AWS account ID of the EBS snapshot owner.'
            permanent_restore: '- (Optional) Indicates whether to permanently restore an archived snapshot.'
            storage_tier: '- (Optional) The name of the storage tier. Valid values are archive and standard. Default value is standard.'
            tags: '- (Optional) A map of tags to assign to the snapshot. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            temporary_restore_days: '- (Optional) Specifies the number of days for which to temporarily restore an archived snapshot. Required for temporary restores only. The snapshot will be automatically re-archived after this period.'
            volume_id: '- (Required) The Volume ID of which to make a snapshot.'
            volume_size: '- The size of the drive in GiBs.'
        importStatements: []
    aws_ebs_snapshot_copy:
        subCategory: EBS (EC2)
        description: Duplicates an existing Amazon snapshot
        name: aws_ebs_snapshot_copy
        title: aws_ebs_snapshot_copy
        examples:
            - name: example_copy
              manifest: |-
                {
                  "source_region": "us-west-2",
                  "source_snapshot_id": "${aws_ebs_snapshot.example_snapshot.id}",
                  "tags": {
                    "Name": "HelloWorld_copy_snap"
                  }
                }
              references:
                source_snapshot_id: aws_ebs_snapshot.example_snapshot.id
              dependencies:
                aws_ebs_snapshot.example_snapshot: |-
                    {
                      "tags": {
                        "Name": "HelloWorld_snap"
                      },
                      "volume_id": "${aws_ebs_volume.example.id}"
                    }
                aws_ebs_volume.example: |-
                    {
                      "availability_zone": "us-west-2a",
                      "size": 40,
                      "tags": {
                        "Name": "HelloWorld"
                      }
                    }
        argumentDocs:
            arn: '- Amazon Resource Name (ARN) of the EBS Snapshot.'
            create: '- (Default 10 minutes) Used for creating the ebs snapshot copy'
            data_encryption_key_id: '- The data encryption key identifier for the snapshot.'
            delete: '- (Default 10 minutes) Used for deleting the ebs snapshot copy'
            description: '- (Optional) A description of what the snapshot is.'
            encrypted: '- Whether the snapshot is encrypted.'
            id: '- The snapshot ID (e.g., snap-59fcb34e).'
            kms_key_id: '- The ARN for the KMS encryption key.'
            owner_alias: '- Value from an Amazon-maintained list (amazon, aws-marketplace, microsoft) of snapshot owners.'
            owner_id: '- The AWS account ID of the snapshot owner.'
            permanent_restore: '- (Optional) Indicates whether to permanently restore an archived snapshot.'
            source_region: The region of the source snapshot.
            source_snapshot_id: The ARN for the snapshot to be copied.
            storage_tier: '- (Optional) The name of the storage tier. Valid values are archive and standard. Default value is standard.'
            tags: '- A map of tags for the snapshot. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            temporary_restore_days: '- (Optional) Specifies the number of days for which to temporarily restore an archived snapshot. Required for temporary restores only. The snapshot will be automatically re-archived after this period.'
            volume_size: '- The size of the drive in GiBs.'
        importStatements: []
    aws_ebs_snapshot_import:
        subCategory: EBS (EC2)
        description: Provides an elastic block storage snapshot import resource.
        name: aws_ebs_snapshot_import
        title: aws_ebs_snapshot_import
        examples:
            - name: example
              manifest: |-
                {
                  "disk_container": [
                    {
                      "format": "VHD",
                      "user_bucket": [
                        {
                          "s3_bucket": "disk-images",
                          "s3_key": "source.vhd"
                        }
                      ]
                    }
                  ],
                  "role_name": "disk-image-import",
                  "tags": {
                    "Name": "HelloWorld"
                  }
                }
        argumentDocs:
            arn: '- Amazon Resource Name (ARN) of the EBS Snapshot.'
            client_data: '- (Optional) The client-specific data. Detailed below.'
            client_data.comment: '- (Optional) A user-defined comment about the disk upload.'
            client_data.upload_end: '- (Optional) The time that the disk upload ends.'
            client_data.upload_size: '- (Optional) The size of the uploaded disk image, in GiB.'
            client_data.upload_start: '- (Optional) The time that the disk upload starts.'
            create: '- (Default 60 minutes) Used for importing the EBS snapshot'
            data_encryption_key_id: '- The data encryption key identifier for the snapshot.'
            delete: '- (Default 10 minutes) Used for deleting the EBS snapshot'
            description: '- (Optional) The description string for the import snapshot task.'
            disk_container: '- (Required) Information about the disk container. Detailed below.'
            disk_container.description: '- (Optional) The description of the disk image being imported.'
            disk_container.format: '- (Required) The format of the disk image being imported. One of VHD or VMDK.'
            disk_container.url: '- (Optional) The URL to the Amazon S3-based disk image being imported. It can either be a https URL (https://..) or an Amazon S3 URL (s3://..). One of url or user_bucket must be set.'
            disk_container.user_bucket: '- (Optional) The Amazon S3 bucket for the disk image. One of url or user_bucket must be set. Detailed below.'
            encrypted: '- (Optional) Specifies whether the destination snapshot of the imported image should be encrypted. The default KMS key for EBS is used unless you specify a non-default KMS key using KmsKeyId.'
            id: '- The snapshot ID (e.g., snap-59fcb34e).'
            kms_key_id: '- (Optional) An identifier for the symmetric KMS key to use when creating the encrypted snapshot. This parameter is only required if you want to use a non-default KMS key; if this parameter is not specified, the default KMS key for EBS is used. If a KmsKeyId is specified, the Encrypted flag must also be set.'
            owner_alias: '- Value from an Amazon-maintained list (amazon, aws-marketplace, microsoft) of snapshot owners.'
            owner_id: '- The AWS account ID of the EBS snapshot owner.'
            permanent_restore: '- (Optional) Indicates whether to permanently restore an archived snapshot.'
            role_name: '- (Optional) The name of the IAM Role the VM Import/Export service will assume. This role needs certain permissions. See https://docs.aws.amazon.com/vm-import/latest/userguide/vmie_prereqs.html#vmimport-role. Default: vmimport'
            s3_bucket: '- The name of the Amazon S3 bucket where the disk image is located.'
            s3_key: '- The file name of the disk image.'
            storage_tier: '- (Optional) The name of the storage tier. Valid values are archive and standard. Default value is standard.'
            tags: '- (Optional) A map of tags to assign to the snapshot.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            temporary_restore_days: '- (Optional) Specifies the number of days for which to temporarily restore an archived snapshot. Required for temporary restores only. The snapshot will be automatically re-archived after this period.'
            volume_size: '- The size of the drive in GiBs.'
        importStatements: []
    aws_ebs_volume:
        subCategory: EBS (EC2)
        description: Provides an elastic block storage resource.
        name: aws_ebs_volume
        title: aws_ebs_volume
        examples:
            - name: example
              manifest: |-
                {
                  "availability_zone": "us-west-2a",
                  "size": 40,
                  "tags": {
                    "Name": "HelloWorld"
                  }
                }
        argumentDocs:
            arn: '- The volume ARN (e.g., arn:aws:ec2:us-east-1:0123456789012:volume/vol-59fcb34e).'
            availability_zone: '- (Required) The AZ where the EBS volume will exist.'
            create: '- (Default 5 minutes) Used for creating volumes. This includes the time required for the volume to become available'
            delete: '- (Default 5 minutes) Used for destroying volumes'
            encrypted: '- (Optional) If true, the disk will be encrypted.'
            final_snapshot: '- (Optional) If true, snapshot will be created before volume deletion. Any tags on the volume will be migrated to the snapshot. By default set to false'
            id: '- The volume ID (e.g., vol-59fcb34e).'
            iops: '- (Optional) The amount of IOPS to provision for the disk. Only valid for type of io1, io2 or gp3.'
            kms_key_id: '- (Optional) The ARN for the KMS encryption key. When specifying kms_key_id, encrypted needs to be set to true. Note: Terraform must be running with credentials which have the GenerateDataKeyWithoutPlaintext permission on the specified KMS key as required by the EBS KMS CMK volume provisioning process to prevent a volume from being created and almost immediately deleted.'
            multi_attach_enabled: '- (Optional) Specifies whether to enable Amazon EBS Multi-Attach. Multi-Attach is supported on io1 and io2 volumes.'
            outpost_arn: '- (Optional) The Amazon Resource Name (ARN) of the Outpost.'
            size: '- (Optional) The size of the drive in GiBs.'
            snapshot_id: (Optional) A snapshot to base the EBS volume off of.
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            throughput: '- (Optional) The throughput that the volume supports, in MiB/s. Only valid for type of gp3.'
            type: '- (Optional) The type of EBS volume. Can be standard, gp2, gp3, io1, io2, sc1 or st1 (Default: gp2).'
            update: '- (Default 5 minutes) Used for size, type, or iops volume changes'
        importStatements: []
    aws_ec2_availability_zone_group:
        subCategory: EC2 (Elastic Compute Cloud)
        description: Manages an EC2 Availability Zone Group.
        name: aws_ec2_availability_zone_group
        title: aws_ec2_availability_zone_group
        examples:
            - name: example
              manifest: |-
                {
                  "group_name": "us-west-2-lax-1",
                  "opt_in_status": "opted-in"
                }
        argumentDocs:
            group_name: '- (Required) Name of the Availability Zone Group.'
            id: '- Name of the Availability Zone Group.'
            opt_in_status: '- (Required) Indicates whether to enable or disable Availability Zone Group. Valid values: opted-in or not-opted-in.'
        importStatements: []
    aws_ec2_capacity_reservation:
        subCategory: EC2 (Elastic Compute Cloud)
        description: Provides an EC2 Capacity Reservation. This allows you to reserve capacity for your Amazon EC2 instances in a specific Availability Zone for any duration.
        name: aws_ec2_capacity_reservation
        title: aws_ec2_capacity_reservation
        examples:
            - name: default
              manifest: |-
                {
                  "availability_zone": "eu-west-1a",
                  "instance_count": 1,
                  "instance_platform": "Linux/UNIX",
                  "instance_type": "t2.micro"
                }
        argumentDocs:
            arn: '- The ARN of the Capacity Reservation.'
            availability_zone: '- (Required) The Availability Zone in which to create the Capacity Reservation.'
            ebs_optimized: '- (Optional) Indicates whether the Capacity Reservation supports EBS-optimized instances.'
            end_date: '- (Optional) The date and time at which the Capacity Reservation expires. When a Capacity Reservation expires, the reserved capacity is released and you can no longer launch instances into it. Valid values: RFC3339 time string (YYYY-MM-DDTHH:MM:SSZ)'
            end_date_type: '- (Optional) Indicates the way in which the Capacity Reservation ends. Specify either unlimited or limited.'
            ephemeral_storage: '- (Optional) Indicates whether the Capacity Reservation supports instances with temporary, block-level storage.'
            id: '- The Capacity Reservation ID.'
            instance_count: '- (Required) The number of instances for which to reserve capacity.'
            instance_match_criteria: '- (Optional) Indicates the type of instance launches that the Capacity Reservation accepts. Specify either open or targeted.'
            instance_platform: '- (Required) The type of operating system for which to reserve capacity. Valid options are Linux/UNIX, Red Hat Enterprise Linux, SUSE Linux, Windows, Windows with SQL Server, Windows with SQL Server Enterprise, Windows with SQL Server Standard or Windows with SQL Server Web.'
            instance_type: '- (Required) The instance type for which to reserve capacity.'
            outpost_arn: '- (Optional) The Amazon Resource Name (ARN) of the Outpost on which to create the Capacity Reservation.'
            owner_id: '- The ID of the AWS account that owns the Capacity Reservation.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block'
            tenancy: '- (Optional) Indicates the tenancy of the Capacity Reservation. Specify either default or dedicated.'
        importStatements: []
    aws_ec2_carrier_gateway:
        subCategory: Wavelength
        description: Manages an EC2 Carrier Gateway.
        name: aws_ec2_carrier_gateway
        title: aws_ec2_carrier_gateway
        examples:
            - name: example
              manifest: |-
                {
                  "tags": {
                    "Name": "example-carrier-gateway"
                  },
                  "vpc_id": "${aws_vpc.example.id}"
                }
              references:
                vpc_id: aws_vpc.example.id
        argumentDocs:
            arn: '- The ARN of the carrier gateway.'
            id: '- The ID of the carrier gateway.'
            owner_id: '- The AWS account ID of the owner of the carrier gateway.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            vpc_id: '- (Required) The ID of the VPC to associate with the carrier gateway.'
        importStatements: []
    aws_ec2_client_vpn_authorization_rule:
        subCategory: VPN (Client)
        description: Provides authorization rules for AWS Client VPN endpoints.
        name: aws_ec2_client_vpn_authorization_rule
        title: aws_ec2_client_vpn_authorization_rule
        examples:
            - name: example
              manifest: |-
                {
                  "authorize_all_groups": true,
                  "client_vpn_endpoint_id": "${aws_ec2_client_vpn_endpoint.example.id}",
                  "target_network_cidr": "${aws_subnet.example.cidr_block}"
                }
              references:
                client_vpn_endpoint_id: aws_ec2_client_vpn_endpoint.example.id
                target_network_cidr: aws_subnet.example.cidr_block
        argumentDocs:
            access_group_id: '- (Optional) The ID of the group to which the authorization rule grants access. One of access_group_id or authorize_all_groups must be set.'
            authorize_all_groups: '- (Optional) Indicates whether the authorization rule grants access to all clients. One of access_group_id or authorize_all_groups must be set.'
            client_vpn_endpoint_id: '- (Required) The ID of the Client VPN endpoint.'
            create: '- (Default 10 minutes) Used for rule authorization'
            delete: '- (Default 10 minutes) Used for rule revocation'
            description: '- (Optional) A brief description of the authorization rule.'
            target_network_cidr: '- (Required) The IPv4 address range, in CIDR notation, of the network to which the authorization rule applies.'
        importStatements: []
    aws_ec2_client_vpn_endpoint:
        subCategory: VPN (Client)
        description: Provides an AWS Client VPN endpoint for OpenVPN clients.
        name: aws_ec2_client_vpn_endpoint
        title: aws_ec2_client_vpn_endpoint
        examples:
            - name: example
              manifest: |-
                {
                  "authentication_options": [
                    {
                      "root_certificate_chain_arn": "${aws_acm_certificate.root_cert.arn}",
                      "type": "certificate-authentication"
                    }
                  ],
                  "client_cidr_block": "10.0.0.0/16",
                  "connection_log_options": [
                    {
                      "cloudwatch_log_group": "${aws_cloudwatch_log_group.lg.name}",
                      "cloudwatch_log_stream": "${aws_cloudwatch_log_stream.ls.name}",
                      "enabled": true
                    }
                  ],
                  "description": "terraform-clientvpn-example",
                  "server_certificate_arn": "${aws_acm_certificate.cert.arn}"
                }
              references:
                authentication_options.root_certificate_chain_arn: aws_acm_certificate.root_cert.arn
                connection_log_options.cloudwatch_log_group: aws_cloudwatch_log_group.lg.name
                connection_log_options.cloudwatch_log_stream: aws_cloudwatch_log_stream.ls.name
                server_certificate_arn: aws_acm_certificate.cert.arn
        argumentDocs:
            active_directory_id: '- (Optional) The ID of the Active Directory to be used for authentication if type is directory-service-authentication.'
            arn: '- The ARN of the Client VPN endpoint.'
            authentication_options: '- (Required) Information about the authentication method to be used to authenticate clients.'
            banner_text: '- (Optional) Customizable text that will be displayed in a banner on AWS provided clients when a VPN session is established. UTF-8 encoded characters only. Maximum of 1400 characters.'
            client_cidr_block: '- (Required) The IPv4 address range, in CIDR notation, from which to assign client IP addresses. The address range cannot overlap with the local CIDR of the VPC in which the associated subnet is located, or the routes that you add manually. The address range cannot be changed after the Client VPN endpoint has been created. The CIDR block should be /22 or greater.'
            client_connect_options: '- (Optional) The options for managing connection authorization for new client connections.'
            client_login_banner_options: '- (Optional) Options for enabling a customizable text banner that will be displayed on AWS provided clients when a VPN session is established.'
            cloudwatch_log_group: '- (Optional) The name of the CloudWatch Logs log group.'
            cloudwatch_log_stream: '- (Optional) The name of the CloudWatch Logs log stream to which the connection data is published.'
            connection_log_options: '- (Required) Information about the client connection logging options.'
            description: '- (Optional) A brief description of the Client VPN endpoint.'
            dns_name: '- The DNS name to be used by clients when establishing their VPN session.'
            dns_servers: '- (Optional) Information about the DNS servers to be used for DNS resolution. A Client VPN endpoint can have up to two DNS servers. If no DNS server is specified, the DNS address of the connecting device is used.'
            enabled: '- (Optional) Indicates whether client connect options are enabled. The default is false (not enabled).'
            id: '- The ID of the Client VPN endpoint.'
            lambda_function_arn: '- (Optional) The Amazon Resource Name (ARN) of the Lambda function used for connection authorization.'
            root_certificate_chain_arn: '- (Optional) The ARN of the client certificate. The certificate must be signed by a certificate authority (CA) and it must be provisioned in AWS Certificate Manager (ACM). Only necessary when type is set to certificate-authentication.'
            saml_provider_arn: '- (Optional) The ARN of the IAM SAML identity provider if type is federated-authentication.'
            security_group_ids: '- (Optional) The IDs of one or more security groups to apply to the target network. You must also specify the ID of the VPC that contains the security groups.'
            self_service_portal: '- (Optional) Specify whether to enable the self-service portal for the Client VPN endpoint. Values can be enabled or disabled. Default value is disabled.'
            self_service_saml_provider_arn: '- (Optional) The ARN of the IAM SAML identity provider for the self service portal if type is federated-authentication.'
            server_certificate_arn: '- (Required) The ARN of the ACM server certificate.'
            session_timeout_hours: '- (Optional) The maximum session duration is a trigger by which end-users are required to re-authenticate prior to establishing a VPN session. Default value is 24 - Valid values: 8 | 10 | 12 | 24'
            split_tunnel: '- (Optional) Indicates whether split-tunnel is enabled on VPN endpoint. Default value is false.'
            status: '- Deprecated The current state of the Client VPN endpoint.'
            tags: '- (Optional) A mapping of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            transport_protocol: '- (Optional) The transport protocol to be used by the VPN session. Default value is udp.'
            type: '- (Required) The type of client authentication to be used. Specify certificate-authentication to use certificate-based authentication, directory-service-authentication to use Active Directory authentication, or federated-authentication to use Federated Authentication via SAML 2.0.'
            vpc_id: '- (Optional) The ID of the VPC to associate with the Client VPN endpoint. If no security group IDs are specified in the request, the default security group for the VPC is applied.'
            vpn_port: '- (Optional) The port number for the Client VPN endpoint. Valid values are 443 and 1194. Default value is 443.'
        importStatements: []
    aws_ec2_client_vpn_network_association:
        subCategory: VPN (Client)
        description: Provides network associations for AWS Client VPN endpoints.
        name: aws_ec2_client_vpn_network_association
        title: aws_ec2_client_vpn_network_association
        examples:
            - name: example
              manifest: |-
                {
                  "client_vpn_endpoint_id": "${aws_ec2_client_vpn_endpoint.example.id}",
                  "subnet_id": "${aws_subnet.example.id}"
                }
              references:
                client_vpn_endpoint_id: aws_ec2_client_vpn_endpoint.example.id
                subnet_id: aws_subnet.example.id
            - name: example
              manifest: |-
                {
                  "client_vpn_endpoint_id": "${aws_ec2_client_vpn_endpoint.example.id}",
                  "security_groups": [
                    "${aws_security_group.example1.id}",
                    "${aws_security_group.example2.id}"
                  ],
                  "subnet_id": "${aws_subnet.example.id}"
                }
              references:
                client_vpn_endpoint_id: aws_ec2_client_vpn_endpoint.example.id
                subnet_id: aws_subnet.example.id
        argumentDocs:
            association_id: '- The unique ID of the target network association.'
            client_vpn_endpoint_id: '- (Required) The ID of the Client VPN endpoint.'
            create: '- (Default 30 minutes) Used for network association'
            delete: '- (Default 30 minutes) Used for network disassociation'
            id: '- The unique ID of the target network association.'
            security_groups: '- (Optional, Deprecated use the security_group_ids argument of the aws_ec2_client_vpn_endpoint resource instead) A list of up to five custom security groups to apply to the target network. If not specified, the VPC''s default security group is assigned.'
            status: '- Deprecated The current state of the target network association.'
            subnet_id: '- (Required) The ID of the subnet to associate with the Client VPN endpoint.'
            vpc_id: '- The ID of the VPC in which the target subnet is located.'
        importStatements: []
    aws_ec2_client_vpn_route:
        subCategory: VPN (Client)
        description: Provides additional routes for AWS Client VPN endpoints.
        name: aws_ec2_client_vpn_route
        title: aws_ec2_client_vpn_route
        examples:
            - name: example
              manifest: |-
                {
                  "client_vpn_endpoint_id": "${aws_ec2_client_vpn_endpoint.example.id}",
                  "destination_cidr_block": "0.0.0.0/0",
                  "target_vpc_subnet_id": "${aws_ec2_client_vpn_network_association.example.subnet_id}"
                }
              references:
                client_vpn_endpoint_id: aws_ec2_client_vpn_endpoint.example.id
                target_vpc_subnet_id: aws_ec2_client_vpn_network_association.example.subnet_id
              dependencies:
                aws_ec2_client_vpn_endpoint.example: |-
                    {
                      "authentication_options": [
                        {
                          "root_certificate_chain_arn": "${aws_acm_certificate.example.arn}",
                          "type": "certificate-authentication"
                        }
                      ],
                      "client_cidr_block": "10.0.0.0/16",
                      "connection_log_options": [
                        {
                          "enabled": false
                        }
                      ],
                      "description": "Example Client VPN endpoint",
                      "server_certificate_arn": "${aws_acm_certificate.example.arn}"
                    }
                aws_ec2_client_vpn_network_association.example: |-
                    {
                      "client_vpn_endpoint_id": "${aws_ec2_client_vpn_endpoint.example.id}",
                      "subnet_id": "${aws_subnet.example.id}"
                    }
        argumentDocs:
            client_vpn_endpoint_id: '- (Required) The ID of the Client VPN endpoint.'
            create: '- (Default 1 minute) Used for route creation'
            delete: '- (Default 1 minute) Used for route deletion'
            description: '- (Optional) A brief description of the authorization rule.'
            destination_cidr_block: '- (Required) The IPv4 address range, in CIDR notation, of the route destination.'
            id: '- The ID of the Client VPN endpoint.'
            origin: '- Indicates how the Client VPN route was added. Will be add-route for routes created by this resource.'
            target_vpc_subnet_id: '- (Required) The ID of the Subnet to route the traffic through. It must already be attached to the Client VPN.'
            type: '- The type of the route.'
        importStatements: []
    aws_ec2_fleet:
        subCategory: EC2 (Elastic Compute Cloud)
        description: Provides a resource to manage EC2 Fleets
        name: aws_ec2_fleet
        title: aws_ec2_fleet
        examples:
            - name: example
              manifest: |-
                {
                  "launch_template_config": [
                    {
                      "launch_template_specification": [
                        {
                          "launch_template_id": "${aws_launch_template.example.id}",
                          "version": "${aws_launch_template.example.latest_version}"
                        }
                      ]
                    }
                  ],
                  "target_capacity_specification": [
                    {
                      "default_target_capacity_type": "spot",
                      "total_target_capacity": 5
                    }
                  ]
                }
              references:
                launch_template_config.launch_template_specification.launch_template_id: aws_launch_template.example.id
                launch_template_config.launch_template_specification.version: aws_launch_template.example.latest_version
            - name: example
              manifest: |-
                {
                  "launch_template_config": [
                    {
                      "override": [
                        {
                          "instance_type": "m4.xlarge",
                          "weighted_capacity": 1
                        },
                        {
                          "instance_type": "m4.2xlarge",
                          "weighted_capacity": 2
                        }
                      ]
                    }
                  ]
                }
        argumentDocs:
            accelerator_count: '- (Optional) Block describing the minimum and maximum number of accelerators (GPUs, FPGAs, or AWS Inferentia chips). Default is no minimum or maximum.'
            accelerator_count.max: '- (Optional) Maximum. Set to 0 to exclude instance types with accelerators.'
            accelerator_count.min: '- (Optional) Minimum.'
            accelerator_manufacturers: '- (Optional) List of accelerator manufacturer names. Default is any manufacturer.'
            accelerator_names: '- (Optional) List of accelerator names. Default is any acclerator.'
            accelerator_total_memory_mib: '- (Optional) Block describing the minimum and maximum total memory of the accelerators. Default is no minimum or maximum.'
            accelerator_total_memory_mib.max: '- (Optional) Maximum.'
            accelerator_total_memory_mib.min: '- (Optional) Minimum.'
            accelerator_types: '- (Optional) List of accelerator types. Default is any accelerator type.'
            arn: '- The ARN of the fleet'
            bare_metal: '- (Optional) Indicate whether bare metal instace types should be included, excluded, or required. Default is excluded.'
            baseline_ebs_bandwidth_mbps: '- (Optional) Block describing the minimum and maximum baseline EBS bandwidth, in Mbps. Default is no minimum or maximum.'
            baseline_ebs_bandwidth_mbps.max: '- (Optional) Maximum.'
            baseline_ebs_bandwidth_mbps.min: '- (Optional) Minimum.'
            burstable_performance: '- (Optional) Indicate whether burstable performance instance types should be included, excluded, or required. Default is excluded.'
            context: '- (Optional) Reserved.'
            cpu_manufacturers: (Optional) List of CPU manufacturer names. Default is any manufacturer.
            create: '- (Default 10m) How long to wait for a fleet to be active.'
            delete: '- (Default 10m) How long to wait for a fleet to be deleted. If terminate_instances is true, how long to wait for instances to terminate.'
            excess_capacity_termination_policy: '- (Optional) Whether running instances should be terminated if the total target capacity of the EC2 Fleet is decreased below the current size of the EC2. Valid values: no-termination, termination. Defaults to termination.'
            excluded_instance_types: '- (Optional) List of instance types to exclude. You can use strings with one or more wild cards, represented by an asterisk (*). The following are examples: c5*, m5a.*, r*, *3*. For example, if you specify c5*, you are excluding the entire C5 instance family, which includes all C5a and C5n instance types. If you specify m5a.*, you are excluding all the M5a instance types, but not the M5n instance types. Maximum of 400 entries in the list; each entry is limited to 30 characters. Default is no excluded instance types.'
            id: '- Fleet identifier'
            instance_generations: '- (Optional) List of instance generation names. Default is any generation.'
            launch_template_config: '- (Required) Nested argument containing EC2 Launch Template configurations. Defined below.'
            launch_template_config.launch_template_specification: '- (Required) Nested argument containing EC2 Launch Template to use. Defined below.'
            launch_template_config.launch_template_specification.launch_template_id: '- (Optional) ID of the launch template.'
            launch_template_config.launch_template_specification.launch_template_name: '- (Optional) Name of the launch template.'
            launch_template_config.launch_template_specification.version: '- (Required) Version number of the launch template.'
            launch_template_config.override: '- (Optional) Nested argument(s) containing parameters to override the same parameters in the Launch Template. Defined below.'
            launch_template_config.override.availability_zone: '- (Optional) Availability Zone in which to launch the instances.'
            launch_template_config.override.instance_requirements: '- (Optional) Override the instance type in the Launch Template with instance types that satisfy the requirements.'
            launch_template_config.override.instance_type: '- (Optional) Instance type.'
            launch_template_config.override.max_price: '- (Optional) Maximum price per unit hour that you are willing to pay for a Spot Instance.'
            launch_template_config.override.priority: '- (Optional) Priority for the launch template override. If on_demand_options allocation_strategy is set to prioritized, EC2 Fleet uses priority to determine which launch template override to use first in fulfilling On-Demand capacity. The highest priority is launched first. The lower the number, the higher the priority. If no number is set, the launch template override has the lowest priority. Valid values are whole numbers starting at 0.'
            launch_template_config.override.subnet_id: '- (Optional) ID of the subnet in which to launch the instances.'
            launch_template_config.override.weighted_capacity: '- (Optional) Number of units provided by the specified instance type.'
            local_storage: '- (Optional) Indicate whether instance types with local storage volumes are included, excluded, or required. Default is included.'
            local_storage_types: '- (Optional) List of local storage type names. Default any storage type.'
            memory_gib_per_vcpu: '- (Optional) Block describing the minimum and maximum amount of memory (GiB) per vCPU. Default is no minimum or maximum.'
            memory_gib_per_vcpu.max: '- (Optional) Maximum. May be a decimal number, e.g. 0.5.'
            memory_gib_per_vcpu.min: '- (Optional) Minimum. May be a decimal number, e.g. 0.5.'
            memory_mib: '- (Required) Block describing the minimum and maximum amount of memory (MiB). Default is no maximum.'
            memory_mib.max: '- (Optional) Maximum.'
            memory_mib.min: '- (Required) Minimum.'
            network_interface_count: '- (Optional) Block describing the minimum and maximum number of network interfaces. Default is no minimum or maximum.'
            network_interface_count.max: '- (Optional) Maximum.'
            network_interface_count.min: '- (Optional) Minimum.'
            on_demand_max_price_percentage_over_lowest_price: '- (Optional) The price protection threshold for On-Demand Instances. This is the maximum you’ll pay for an On-Demand Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Default is 20.'
            on_demand_options: '- (Optional) Nested argument containing On-Demand configurations. Defined below.'
            on_demand_options.allocation_strategy: '- (Optional) The order of the launch template overrides to use in fulfilling On-Demand capacity. Valid values: lowestPrice, prioritized. Default: lowestPrice.'
            replace_unhealthy_instances: '- (Optional) Whether EC2 Fleet should replace unhealthy instances. Defaults to false.'
            require_hibernate_support: '- (Optional) Indicate whether instance types must support On-Demand Instance Hibernation, either true or false. Default is false.'
            spot_max_price_percentage_over_lowest_price: '- (Optional) The price protection threshold for Spot Instances. This is the maximum you’ll pay for a Spot Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Default is 100.'
            spot_options: '- (Optional) Nested argument containing Spot configurations. Defined below.'
            spot_options.allocation_strategy: '- (Optional) How to allocate the target capacity across the Spot pools. Valid values: diversified, lowestPrice, capacity-optimized and capacity-optimized-prioritized. Default: lowestPrice.'
            spot_options.instance_interruption_behavior: '- (Optional) Behavior when a Spot Instance is interrupted. Valid values: hibernate, stop, terminate. Default: terminate.'
            spot_options.instance_pools_to_use_count: '- (Optional) Number of Spot pools across which to allocate your target Spot capacity. Valid only when Spot allocation_strategy is set to lowestPrice. Default: 1.'
            spot_options.maintenance_strategies: '- (Optional) Nested argument containing maintenance strategies for managing your Spot Instances that are at an elevated risk of being interrupted. Defined below.'
            spot_options.maintenance_strategies.capacity_rebalance: '- (Optional) Nested argument containing the capacity rebalance for your fleet request. Defined below.'
            spot_options.maintenance_strategies.capacity_rebalance.replacement_strategy: '- (Optional) The replacement strategy to use. Only available for fleets of type set to maintain. Valid values: launch.'
            tags: '- (Optional) Map of Fleet tags. To tag instances at launch, specify the tags in the Launch Template. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            target_capacity_specification: '- (Required) Nested argument containing target capacity configurations. Defined below.'
            target_capacity_specification.default_target_capacity_type: '- (Required) Default target capacity type. Valid values: on-demand, spot.'
            target_capacity_specification.on_demand_target_capacity: '- (Optional) The number of On-Demand units to request.'
            target_capacity_specification.spot_target_capacity: '- (Optional) The number of Spot units to request.'
            target_capacity_specification.total_target_capacity: '- (Required) The number of units to request, filled using default_target_capacity_type.'
            terminate_instances: '- (Optional) Whether to terminate instances for an EC2 Fleet if it is deleted successfully. Defaults to false.'
            terminate_instances_with_expiration: '- (Optional) Whether running instances should be terminated when the EC2 Fleet expires. Defaults to false.'
            total_local_storage_gb: '- (Optional) Block describing the minimum and maximum total local storage (GB). Default is no minimum or maximum.'
            total_local_storage_gb.max: '- (Optional) Maximum. May be a decimal number, e.g. 0.5.'
            total_local_storage_gb.min: '- (Optional) Minimum. May be a decimal number, e.g. 0.5.'
            type: '- (Optional) The type of request. Indicates whether the EC2 Fleet only requests the target capacity, or also attempts to maintain it. Valid values: maintain, request. Defaults to maintain.'
            update: '- (Default 10m) How long to wait for a fleet to be modified.'
            vcpu_count: '- (Required) Block describing the minimum and maximum number of vCPUs. Default is no maximum.'
            vcpu_count.max: '- (Optional) Maximum.'
            vcpu_count.min: '- (Required) Minimum.'
        importStatements: []
    aws_ec2_host:
        subCategory: EC2 (Elastic Compute Cloud)
        description: Provides an EC2 Host resource. This allows Dedicated Hosts to be allocated, modified, and released.
        name: aws_ec2_host
        title: aws_ec2_host
        examples:
            - name: test
              manifest: |-
                {
                  "auto_placement": "on",
                  "availability_zone": "us-west-2a",
                  "host_recovery": "on",
                  "instance_type": "c5.18xlarge"
                }
        argumentDocs:
            arn: '- The ARN of the Dedicated Host.'
            auto_placement: '- (Optional) Indicates whether the host accepts any untargeted instance launches that match its instance type configuration, or if it only accepts Host tenancy instance launches that specify its unique host ID. Valid values: on, off. Default: on.'
            availability_zone: '- (Required) The Availability Zone in which to allocate the Dedicated Host.'
            host_recovery: '- (Optional) Indicates whether to enable or disable host recovery for the Dedicated Host. Valid values: on, off. Default: off.'
            id: '- The ID of the allocated Dedicated Host. This is used to launch an instance onto a specific host.'
            instance_family: '- (Optional) Specifies the instance family to be supported by the Dedicated Hosts. If you specify an instance family, the Dedicated Hosts support multiple instance types within that instance family. Exactly one of instance_family or instance_type must be specified.'
            instance_type: '- (Optional) Specifies the instance type to be supported by the Dedicated Hosts. If you specify an instance type, the Dedicated Hosts support instances of the specified instance type only. Exactly one of instance_family or instance_type must be specified.'
            outpost_arn: '- (Optional) The Amazon Resource Name (ARN) of the AWS Outpost on which to allocate the Dedicated Host.'
            owner_id: '- The ID of the AWS account that owns the Dedicated Host.'
            tags: '- (Optional) Map of tags to assign to this resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_ec2_local_gateway_route:
        subCategory: Outposts (EC2)
        description: Manages an EC2 Local Gateway Route
        name: aws_ec2_local_gateway_route
        title: aws_ec2_local_gateway_route
        examples:
            - name: example
              manifest: |-
                {
                  "destination_cidr_block": "172.16.0.0/16",
                  "local_gateway_route_table_id": "${data.aws_ec2_local_gateway_route_table.example.id}",
                  "local_gateway_virtual_interface_group_id": "${data.aws_ec2_local_gateway_virtual_interface_group.example.id}"
                }
              references:
                local_gateway_route_table_id: data.aws_ec2_local_gateway_route_table.example.id
                local_gateway_virtual_interface_group_id: data.aws_ec2_local_gateway_virtual_interface_group.example.id
        argumentDocs:
            destination_cidr_block: '- (Required) IPv4 CIDR range used for destination matches. Routing decisions are based on the most specific match.'
            id: '- EC2 Local Gateway Route Table identifier and destination CIDR block separated by underscores (_)'
            local_gateway_route_table_id: '- (Required) Identifier of EC2 Local Gateway Route Table.'
            local_gateway_virtual_interface_group_id: '- (Required) Identifier of EC2 Local Gateway Virtual Interface Group.'
        importStatements: []
    aws_ec2_local_gateway_route_table_vpc_association:
        subCategory: Outposts (EC2)
        description: Manages an EC2 Local Gateway Route Table VPC Association
        name: aws_ec2_local_gateway_route_table_vpc_association
        title: aws_ec2_local_gateway_route_table_vpc_association
        examples:
            - name: example
              manifest: |-
                {
                  "local_gateway_route_table_id": "${data.aws_ec2_local_gateway_route_table.example.id}",
                  "vpc_id": "${aws_vpc.example.id}"
                }
              references:
                local_gateway_route_table_id: data.aws_ec2_local_gateway_route_table.example.id
                vpc_id: aws_vpc.example.id
              dependencies:
                aws_vpc.example: |-
                    {
                      "cidr_block": "10.0.0.0/16"
                    }
        argumentDocs:
            id: '- Identifier of EC2 Local Gateway Route Table VPC Association.'
            local_gateway_route_table_id: '- (Required) Identifier of EC2 Local Gateway Route Table.'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            vpc_id: '- (Required) Identifier of EC2 VPC.'
        importStatements: []
    aws_ec2_managed_prefix_list:
        subCategory: VPC (Virtual Private Cloud)
        description: Provides a managed prefix list resource.
        name: aws_ec2_managed_prefix_list
        title: aws_ec2_managed_prefix_list
        examples:
            - name: example
              manifest: |-
                {
                  "address_family": "IPv4",
                  "entry": [
                    {
                      "cidr": "${aws_vpc.example.cidr_block}",
                      "description": "Primary"
                    },
                    {
                      "cidr": "${aws_vpc_ipv4_cidr_block_association.example.cidr_block}",
                      "description": "Secondary"
                    }
                  ],
                  "max_entries": 5,
                  "name": "All VPC CIDR-s",
                  "tags": {
                    "Env": "live"
                  }
                }
              references:
                entry.cidr: aws_vpc_ipv4_cidr_block_association.example.cidr_block
        argumentDocs:
            address_family: '- (Required, Forces new resource) Address family (IPv4 or IPv6) of this prefix list.'
            arn: '- ARN of the prefix list.'
            entry: '- (Optional) Configuration block for prefix list entry. Detailed below. Different entries may have overlapping CIDR blocks, but a particular CIDR should not be duplicated.'
            entry.cidr: '- (Required) CIDR block of this entry.'
            entry.description: '- (Optional) Description of this entry. Due to API limitations, updating only the description of an existing entry requires temporarily removing and re-adding the entry.'
            id: '- ID of the prefix list.'
            max_entries: '- (Required) Maximum number of entries that this prefix list can contain.'
            name: '- (Required) Name of this resource. The name must not start with com.amazonaws.'
            owner_id: '- ID of the AWS account that owns this prefix list.'
            tags: '- (Optional) Map of tags to assign to this resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            version: '- Latest version of this prefix list.'
        importStatements: []
    aws_ec2_managed_prefix_list_entry:
        subCategory: VPC (Virtual Private Cloud)
        description: Provides a managed prefix list entry resource.
        name: aws_ec2_managed_prefix_list_entry
        title: aws_ec2_managed_prefix_list_entry
        examples:
            - name: entry_1
              manifest: |-
                {
                  "cidr": "${aws_vpc.example.cidr_block}",
                  "description": "Primary",
                  "prefix_list_id": "${aws_ec2_managed_prefix_list.entry.id}"
                }
              references:
                cidr: aws_vpc.example.cidr_block
                prefix_list_id: aws_ec2_managed_prefix_list.entry.id
              dependencies:
                aws_ec2_managed_prefix_list.example: |-
                    {
                      "address_family": "IPv4",
                      "max_entries": 5,
                      "name": "All VPC CIDR-s",
                      "tags": {
                        "Env": "live"
                      }
                    }
        argumentDocs:
            cidr: '- (Required) CIDR block of this entry.'
            description: '- (Optional) Description of this entry. Due to API limitations, updating only the description of an entry requires recreating the entry.'
            id: '- ID of the managed prefix list entry.'
            prefix_list_id: '- (Required) CIDR block of this entry.'
        importStatements: []
    aws_ec2_network_insights_path:
        subCategory: VPC (Virtual Private Cloud)
        description: Provides a Network Insights Path resource.
        name: aws_ec2_network_insights_path
        title: aws_ec2_network_insights_path
        examples:
            - name: test
              manifest: |-
                {
                  "destination": "${aws_network_interface.destination.id}",
                  "protocol": "tcp",
                  "source": "${aws_network_interface.source.id}"
                }
              references:
                destination: aws_network_interface.destination.id
                source: aws_network_interface.source.id
        argumentDocs:
            arn: '- ARN of the Network Insights Path.'
            destination: '- (Required) ID of the resource which is the source of the path. Can be an Instance, Internet Gateway, Network Interface, Transit Gateway, VPC Endpoint, VPC Peering Connection or VPN Gateway.'
            destination_ip: '- (Optional) IP address of the destination resource.'
            destination_port: '- (Optional) Destination port to analyze access to.'
            id: '- ID of the Network Insights Path.'
            protocol: '- (Required) Protocol to use for analysis. Valid options are tcp or udp.'
            source: '- (Required) ID of the resource which is the source of the path. Can be an Instance, Internet Gateway, Network Interface, Transit Gateway, VPC Endpoint, VPC Peering Connection or VPN Gateway.'
            source_ip: '- (Optional) IP address of the source resource.'
            tags: '- (Optional) Map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_ec2_serial_console_access:
        subCategory: EC2 (Elastic Compute Cloud)
        description: Manages whether serial console access is enabled for your AWS account in the current AWS region.
        name: aws_ec2_serial_console_access
        title: aws_ec2_serial_console_access
        examples:
            - name: example
              manifest: |-
                {
                  "enabled": true
                }
        argumentDocs:
            enabled: '- (Optional) Whether or not serial console access is enabled. Valid values are true or false. Defaults to true.'
        importStatements: []
    aws_ec2_subnet_cidr_reservation:
        subCategory: VPC (Virtual Private Cloud)
        description: Provides a subnet CIDR reservation resource.
        name: aws_ec2_subnet_cidr_reservation
        title: aws_ec2_subnet_cidr_reservation
        examples:
            - name: example
              manifest: |-
                {
                  "cidr_block": "10.0.0.16/28",
                  "reservation_type": "prefix",
                  "subnet_id": "${aws_subnet.example.id}"
                }
              references:
                subnet_id: aws_subnet.example.id
        argumentDocs:
            cidr_block: '- (Required) The CIDR block for the reservation.'
            description: '- (Optional) A brief description of the reservation.'
            id: '- ID of the CIDR reservation.'
            owner_id: '- ID of the AWS account that owns this CIDR reservation.'
            reservation_type: '- (Required) The type of reservation to create. Valid values: explicit, prefix'
            subnet_id: '- (Required) The ID of the subnet to create the reservation for.'
        importStatements: []
    aws_ec2_tag:
        subCategory: EC2 (Elastic Compute Cloud)
        description: Manages an individual EC2 resource tag
        name: aws_ec2_tag
        title: aws_ec2_tag
        examples:
            - name: example
              manifest: |-
                {
                  "key": "Name",
                  "resource_id": "${aws_vpn_connection.example.transit_gateway_attachment_id}",
                  "value": "Hello World"
                }
              references:
                resource_id: aws_vpn_connection.example.transit_gateway_attachment_id
              dependencies:
                aws_customer_gateway.example: |-
                    {
                      "bgp_asn": 65000,
                      "ip_address": "172.0.0.1",
                      "type": "ipsec.1"
                    }
                aws_ec2_transit_gateway.example: '{}'
                aws_vpn_connection.example: |-
                    {
                      "customer_gateway_id": "${aws_customer_gateway.example.id}",
                      "transit_gateway_id": "${aws_ec2_transit_gateway.example.id}",
                      "type": "${aws_customer_gateway.example.type}"
                    }
        argumentDocs:
            id: '- EC2 resource identifier and key, separated by a comma (,)'
            key: '- (Required) The tag name.'
            resource_id: '- (Required) The ID of the EC2 resource to manage the tag for.'
            value: '- (Required) The value of the tag.'
        importStatements: []
    aws_ec2_traffic_mirror_filter:
        subCategory: VPC (Virtual Private Cloud)
        description: Provides an Traffic mirror filter
        name: aws_ec2_traffic_mirror_filter
        title: aws_ec2_traffic_mirror_filter
        examples:
            - name: foo
              manifest: |-
                {
                  "description": "traffic mirror filter - terraform example",
                  "network_services": [
                    "amazon-dns"
                  ]
                }
        argumentDocs:
            arn: '- The ARN of the traffic mirror filter.'
            description: '- (Optional, Forces new resource) A description of the filter.'
            id: '- The name of the filter.'
            network_services: '- (Optional) List of amazon network services that should be mirrored. Valid values: amazon-dns.'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_ec2_traffic_mirror_filter_rule:
        subCategory: VPC (Virtual Private Cloud)
        description: Provides an Traffic mirror filter rule
        name: aws_ec2_traffic_mirror_filter_rule
        title: aws_ec2_traffic_mirror_filter_rule
        examples:
            - name: ruleout
              manifest: |-
                {
                  "description": "test rule",
                  "destination_cidr_block": "10.0.0.0/8",
                  "rule_action": "accept",
                  "rule_number": 1,
                  "source_cidr_block": "10.0.0.0/8",
                  "traffic_direction": "egress",
                  "traffic_mirror_filter_id": "${aws_ec2_traffic_mirror_filter.filter.id}"
                }
              references:
                traffic_mirror_filter_id: aws_ec2_traffic_mirror_filter.filter.id
              dependencies:
                aws_ec2_traffic_mirror_filter.filter: |-
                    {
                      "description": "traffic mirror filter - terraform example",
                      "network_services": [
                        "amazon-dns"
                      ]
                    }
            - name: rulein
              manifest: |-
                {
                  "description": "test rule",
                  "destination_cidr_block": "10.0.0.0/8",
                  "destination_port_range": [
                    {
                      "from_port": 22,
                      "to_port": 53
                    }
                  ],
                  "protocol": 6,
                  "rule_action": "accept",
                  "rule_number": 1,
                  "source_cidr_block": "10.0.0.0/8",
                  "source_port_range": [
                    {
                      "from_port": 0,
                      "to_port": 10
                    }
                  ],
                  "traffic_direction": "ingress",
                  "traffic_mirror_filter_id": "${aws_ec2_traffic_mirror_filter.filter.id}"
                }
              references:
                traffic_mirror_filter_id: aws_ec2_traffic_mirror_filter.filter.id
              dependencies:
                aws_ec2_traffic_mirror_filter.filter: |-
                    {
                      "description": "traffic mirror filter - terraform example",
                      "network_services": [
                        "amazon-dns"
                      ]
                    }
        argumentDocs:
            arn: '- ARN of the traffic mirror filter rule.'
            description: '- (Optional) Description of the traffic mirror filter rule.'
            destination_cidr_block: '- (Required) Destination CIDR block to assign to the Traffic Mirror rule.'
            destination_port_range: '- (Optional) Destination port range. Supported only when the protocol is set to TCP(6) or UDP(17). See Traffic mirror port range documented below'
            from_port: '- (Optional) Starting port of the range'
            id: '- Name of the traffic mirror filter rule.'
            protocol: '- (Optional) Protocol number, for example 17 (UDP), to assign to the Traffic Mirror rule. For information about the protocol value, see Protocol Numbers on the Internet Assigned Numbers Authority (IANA) website.'
            rule_action: '- (Required) Action to take (accept | reject) on the filtered traffic. Valid values are accept and reject'
            rule_number: '- (Required) Number of the Traffic Mirror rule. This number must be unique for each Traffic Mirror rule in a given direction. The rules are processed in ascending order by rule number.'
            source_cidr_block: '- (Required) Source CIDR block to assign to the Traffic Mirror rule.'
            source_port_range: '- (Optional) Source port range. Supported only when the protocol is set to TCP(6) or UDP(17). See Traffic mirror port range documented below'
            to_port: '- (Optional) Ending port of the range'
            traffic_direction: '- (Required) Direction of traffic to be captured. Valid values are ingress and egress'
            traffic_mirror_filter_id: '- (Required) ID of the traffic mirror filter to which this rule should be added'
        importStatements: []
    aws_ec2_traffic_mirror_session:
        subCategory: VPC (Virtual Private Cloud)
        description: Provides a Traffic mirror session
        name: aws_ec2_traffic_mirror_session
        title: aws_ec2_traffic_mirror_session
        examples:
            - name: session
              manifest: |-
                {
                  "description": "traffic mirror session - terraform example",
                  "network_interface_id": "${aws_instance.test.primary_network_interface_id}",
                  "session_number": 1,
                  "traffic_mirror_filter_id": "${aws_ec2_traffic_mirror_filter.filter.id}",
                  "traffic_mirror_target_id": "${aws_ec2_traffic_mirror_target.target.id}"
                }
              references:
                network_interface_id: aws_instance.test.primary_network_interface_id
                traffic_mirror_filter_id: aws_ec2_traffic_mirror_filter.filter.id
                traffic_mirror_target_id: aws_ec2_traffic_mirror_target.target.id
              dependencies:
                aws_ec2_traffic_mirror_filter.filter: |-
                    {
                      "description": "traffic mirror filter - terraform example",
                      "network_services": [
                        "amazon-dns"
                      ]
                    }
                aws_ec2_traffic_mirror_target.target: |-
                    {
                      "network_load_balancer_arn": "${aws_lb.lb.arn}"
                    }
        argumentDocs:
            arn: '- The ARN of the traffic mirror session.'
            description: '- (Optional) A description of the traffic mirror session.'
            id: '- The name of the session.'
            network_interface_id: '- (Required, Forces new) ID of the source network interface. Not all network interfaces are eligible as mirror sources. On EC2 instances only nitro based instances support mirroring.'
            owner_id: '- The AWS account ID of the session owner.'
            packet_length: '- (Optional) The number of bytes in each packet to mirror. These are bytes after the VXLAN header. Do not specify this parameter when you want to mirror the entire packet. To mirror a subset of the packet, set this to the length (in bytes) that you want to mirror.'
            session_number: '- (Required) - The session number determines the order in which sessions are evaluated when an interface is used by multiple sessions. The first session with a matching filter is the one that mirrors the packets.'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            traffic_mirror_filter_id: '- (Required) ID of the traffic mirror filter to be used'
            traffic_mirror_target_id: '- (Required) ID of the traffic mirror target to be used'
            virtual_network_id: '- (Optional) - The VXLAN ID for the Traffic Mirror session. For more information about the VXLAN protocol, see RFC 7348. If you do not specify a VirtualNetworkId, an account-wide unique id is chosen at random.'
        importStatements: []
    aws_ec2_traffic_mirror_target:
        subCategory: VPC (Virtual Private Cloud)
        description: Provides a Traffic mirror target
        name: aws_ec2_traffic_mirror_target
        title: aws_ec2_traffic_mirror_target
        examples:
            - name: nlb
              manifest: |-
                {
                  "description": "NLB target",
                  "network_load_balancer_arn": "${aws_lb.lb.arn}"
                }
              references:
                network_load_balancer_arn: aws_lb.lb.arn
            - name: eni
              manifest: |-
                {
                  "description": "ENI target",
                  "network_interface_id": "${aws_instance.test.primary_network_interface_id}"
                }
              references:
                network_interface_id: aws_instance.test.primary_network_interface_id
        argumentDocs:
            arn: '- The ARN of the traffic mirror target.'
            description: '- (Optional, Forces new) A description of the traffic mirror session.'
            id: '- The ID of the Traffic Mirror target.'
            network_interface_id: '- (Optional, Forces new) The network interface ID that is associated with the target.'
            network_load_balancer_arn: '- (Optional, Forces new) The Amazon Resource Name (ARN) of the Network Load Balancer that is associated with the target.'
            owner_id: '- The ID of the AWS account that owns the traffic mirror target.'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_ec2_transit_gateway:
        subCategory: Transit Gateway
        description: Manages an EC2 Transit Gateway
        name: aws_ec2_transit_gateway
        title: aws_ec2_transit_gateway
        examples:
            - name: example
              manifest: |-
                {
                  "description": "example"
                }
        argumentDocs:
            amazon_side_asn: '- (Optional) Private Autonomous System Number (ASN) for the Amazon side of a BGP session. The range is 64512 to 65534 for 16-bit ASNs and 4200000000 to 4294967294 for 32-bit ASNs. Default value: 64512.'
            arn: '- EC2 Transit Gateway Amazon Resource Name (ARN)'
            association_default_route_table_id: '- Identifier of the default association route table'
            auto_accept_shared_attachments: '- (Optional) Whether resource attachment requests are automatically accepted. Valid values: disable, enable. Default value: disable.'
            create: '- (Default 10 minutes) Used for EC2 Transit Gateway creation'
            default_route_table_association: '- (Optional) Whether resource attachments are automatically associated with the default association route table. Valid values: disable, enable. Default value: enable.'
            default_route_table_propagation: '- (Optional) Whether resource attachments automatically propagate routes to the default propagation route table. Valid values: disable, enable. Default value: enable.'
            delete: '- (Default 10 minutes) Used for EC2 Transit Gateway deletion'
            description: '- (Optional) Description of the EC2 Transit Gateway.'
            dns_support: '- (Optional) Whether DNS support is enabled. Valid values: disable, enable. Default value: enable.'
            id: '- EC2 Transit Gateway identifier'
            multicast_support: '- (Optional) Whether Multicast support is enabled. Required to use ec2_transit_gateway_multicast_domain. Valid values: disable, enable. Default value: disable.'
            owner_id: '- Identifier of the AWS account that owns the EC2 Transit Gateway'
            propagation_default_route_table_id: '- Identifier of the default propagation route table'
            tags: '- (Optional) Key-value tags for the EC2 Transit Gateway. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            transit_gateway_cidr_blocks: '- (Optional) One or more IPv4 or IPv6 CIDR blocks for the transit gateway. Must be a size /24 CIDR block or larger for IPv4, or a size /64 CIDR block or larger for IPv6.'
            update: '- (Default 10 minutes) Used for EC2 Transit Gateway updates'
            vpn_ecmp_support: '- (Optional) Whether VPN Equal Cost Multipath Protocol support is enabled. Valid values: disable, enable. Default value: enable.'
        importStatements: []
    aws_ec2_transit_gateway_connect:
        subCategory: Transit Gateway
        description: Manages an EC2 Transit Gateway Connect
        name: aws_ec2_transit_gateway_connect
        title: aws_ec2_transit_gateway_connect
        examples:
            - name: example
              manifest: |-
                {
                  "subnet_ids": [
                    "${aws_subnet.example.id}"
                  ],
                  "transit_gateway_id": "${aws_ec2_transit_gateway.example.id}",
                  "vpc_id": "${aws_vpc.example.id}"
                }
              references:
                transit_gateway_id: aws_ec2_transit_gateway.example.id
                vpc_id: aws_vpc.example.id
            - name: attachment
              manifest: |-
                {
                  "transit_gateway_id": "${aws_ec2_transit_gateway.example.id}",
                  "transport_attachment_id": "${aws_ec2_transit_gateway_vpc_attachment.example.id}"
                }
              references:
                transit_gateway_id: aws_ec2_transit_gateway.example.id
                transport_attachment_id: aws_ec2_transit_gateway_vpc_attachment.example.id
        argumentDocs:
            create: '- (Default 10 minutes) Used for EC2 Transit Gateway Connect creation'
            delete: '- (Default 10 minutes) Used for EC2 Transit Gateway Connect deletion'
            id: '- EC2 Transit Gateway Attachment identifier'
            protocol: '- (Optional) The tunnel protocol. Valida values: gre. Default is gre.'
            tags: '- (Optional) Key-value tags for the EC2 Transit Gateway Connect. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            transit_gateway_default_route_table_association: '- (Optional) Boolean whether the Connect should be associated with the EC2 Transit Gateway association default route table. This cannot be configured or perform drift detection with Resource Access Manager shared EC2 Transit Gateways. Default value: true.'
            transit_gateway_default_route_table_propagation: '- (Optional) Boolean whether the Connect should propagate routes with the EC2 Transit Gateway propagation default route table. This cannot be configured or perform drift detection with Resource Access Manager shared EC2 Transit Gateways. Default value: true.'
            transit_gateway_id: '- (Required) Identifier of EC2 Transit Gateway.'
            transport_attachment_id: '- (Required) The underlaying VPC attachment'
            update: '- (Default 10 minutes) Used for EC2 Transit Gateway Connect update'
        importStatements: []
    aws_ec2_transit_gateway_connect_peer:
        subCategory: Transit Gateway
        description: Manages an EC2 Transit Gateway Connect Peer
        name: aws_ec2_transit_gateway_connect_peer
        title: aws_ec2_transit_gateway_connect_peer
        examples:
            - name: example
              manifest: |-
                {
                  "inside_cidr_blocks": "169.254.100.0/29",
                  "peer_address": "10.1.2.3",
                  "transit_gateway_attachment_id": "${aws_ec2_transit_gateway_connect.example.id}"
                }
              references:
                transit_gateway_attachment_id: aws_ec2_transit_gateway_connect.example.id
              dependencies:
                aws_ec2_transit_gateway_connect.example: |-
                    {
                      "transit_gateway_id": "${aws_ec2_transit_gateway.example.id}",
                      "transport_attachment_id": "${aws_ec2_transit_gateway_vpc_attachment.example.id}"
                    }
        argumentDocs:
            arn: '- EC2 Transit Gateway Connect Peer ARN'
            bgp_asn: '- (Optional) The BGP ASN number assigned customer device. If not provided, it will use the same BGP ASN as is associated with Transit Gateway.'
            create: '- (Default 10 minutes) Used for EC2 Transit Gateway Connect Peer creation'
            delete: '- (Default 10 minutes) Used for EC2 Transit Gateway Connect Peer deletion'
            id: '- EC2 Transit Gateway Connect Peer identifier'
            inside_cidr_blocks: '- (Required) The CIDR block that will be used for addressing within the tunnel. It must contain exactly one IPv4 CIDR block and up to one IPv6 CIDR block. The IPv4 CIDR block must be /29 size and must be within 169.254.0.0/16 range, with exception of: 169.254.0.0/29, 169.254.1.0/29, 169.254.2.0/29, 169.254.3.0/29, 169.254.4.0/29, 169.254.5.0/29, 169.254.169.248/29. The IPv6 CIDR block must be /125 size and must be within fd00::/8. The first IP from each CIDR block is assigned for customer gateway, the second and third is for Transit Gateway (An example: from range 169.254.100.0/29, .1 is assigned to customer gateway and .2 and .3 are assigned to Transit Gateway)'
            peer_address: '- (Required) The IP addressed assigned to customer device, which will be used as tunnel endpoint. It can be IPv4 or IPv6 address, but must be the same address family as transit_gateway_address'
            tags: '- (Optional) Key-value tags for the EC2 Transit Gateway Connect Peer. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            transit_gateway_address: '- (Optional) The IP address assigned to Transit Gateway, which will be used as tunnel endpoint. This address must be from associated Transit Gateway CIDR block. The address must be from the same address family as peer_address. If not set explicitly, it will be selected from associated Transit Gateway CIDR blocks'
            transit_gateway_attachment_id: '- (Required) The Transit Gateway Connect'
        importStatements: []
    aws_ec2_transit_gateway_multicast_domain:
        subCategory: Transit Gateway
        description: Manages an EC2 Transit Gateway Multicast Domain
        name: aws_ec2_transit_gateway_multicast_domain
        title: aws_ec2_transit_gateway_multicast_domain
        examples:
            - name: domain
              manifest: |-
                {
                  "static_sources_support": "enable",
                  "tags": {
                    "Name": "Transit_Gateway_Multicast_Domain_Example"
                  },
                  "transit_gateway_id": "${aws_ec2_transit_gateway.tgw.id}"
                }
              references:
                transit_gateway_id: aws_ec2_transit_gateway.tgw.id
              dependencies:
                aws_ec2_transit_gateway.tgw: |-
                    {
                      "multicast_support": "enable"
                    }
                aws_ec2_transit_gateway_multicast_domain_association.association1: |-
                    {
                      "subnet_id": "${aws_subnet.subnet1.id}",
                      "transit_gateway_attachment_id": "${aws_ec2_transit_gateway_vpc_attachment.attachment1.id}",
                      "transit_gateway_multicast_domain_id": "${aws_ec2_transit_gateway_multicast_domain.domain.id}"
                    }
                aws_ec2_transit_gateway_multicast_domain_association.association2: |-
                    {
                      "subnet_id": "${aws_subnet.subnet2.id}",
                      "transit_gateway_attachment_id": "${aws_ec2_transit_gateway_vpc_attachment.attachment2.id}",
                      "transit_gateway_multicast_domain_id": "${aws_ec2_transit_gateway_multicast_domain.domain.id}"
                    }
                aws_ec2_transit_gateway_multicast_domain_association.association3: |-
                    {
                      "subnet_id": "${aws_subnet.subnet3.id}",
                      "transit_gateway_attachment_id": "${aws_ec2_transit_gateway_vpc_attachment.attachment2.id}",
                      "transit_gateway_multicast_domain_id": "${aws_ec2_transit_gateway_multicast_domain.domain.id}"
                    }
                aws_ec2_transit_gateway_multicast_group_member.member1: |-
                    {
                      "group_ip_address": "224.0.0.1",
                      "network_interface_id": "${aws_instance.instance1.primary_network_interface_id}",
                      "transit_gateway_multicast_domain_id": "${aws_ec2_transit_gateway_multicast_domain_association.association1.transit_gateway_multicast_domain_id}"
                    }
                aws_ec2_transit_gateway_multicast_group_member.member2: |-
                    {
                      "group_ip_address": "224.0.0.1",
                      "network_interface_id": "${aws_instance.instance2.primary_network_interface_id}",
                      "transit_gateway_multicast_domain_id": "${aws_ec2_transit_gateway_multicast_domain_association.association1.transit_gateway_multicast_domain_id}"
                    }
                aws_ec2_transit_gateway_multicast_group_source.source: |-
                    {
                      "group_ip_address": "224.0.0.1",
                      "network_interface_id": "${aws_instance.instance3.primary_network_interface_id}",
                      "transit_gateway_multicast_domain_id": "${aws_ec2_transit_gateway_multicast_domain_association.association3.transit_gateway_multicast_domain_id}"
                    }
                aws_ec2_transit_gateway_vpc_attachment.attachment1: |-
                    {
                      "subnet_ids": [
                        "${aws_subnet.subnet1.id}",
                        "${aws_subnet.subnet2.id}"
                      ],
                      "transit_gateway_id": "${aws_ec2_transit_gateway.tgw.id}",
                      "vpc_id": "${aws_vpc.vpc1.id}"
                    }
                aws_ec2_transit_gateway_vpc_attachment.attachment2: |-
                    {
                      "subnet_ids": [
                        "${aws_subnet.subnet3.id}"
                      ],
                      "transit_gateway_id": "${aws_ec2_transit_gateway.tgw.id}",
                      "vpc_id": "${aws_vpc.vpc2.id}"
                    }
                aws_instance.instance1: |-
                    {
                      "ami": "${data.aws_ami.amazon_linux.id}",
                      "instance_type": "t2.micro",
                      "subnet_id": "${aws_subnet.subnet1.id}"
                    }
                aws_instance.instance2: |-
                    {
                      "ami": "${data.aws_ami.amazon_linux.id}",
                      "instance_type": "t2.micro",
                      "subnet_id": "${aws_subnet.subnet2.id}"
                    }
                aws_instance.instance3: |-
                    {
                      "ami": "${data.aws_ami.amazon_linux.id}",
                      "instance_type": "t2.micro",
                      "subnet_id": "${aws_subnet.subnet3.id}"
                    }
                aws_subnet.subnet1: |-
                    {
                      "availability_zone": "${data.aws_availability_zones.available.names[0]}",
                      "cidr_block": "10.0.1.0/24",
                      "vpc_id": "${aws_vpc.vpc1.id}"
                    }
                aws_subnet.subnet2: |-
                    {
                      "availability_zone": "${data.aws_availability_zones.available.names[1]}",
                      "cidr_block": "10.0.2.0/24",
                      "vpc_id": "${aws_vpc.vpc1.id}"
                    }
                aws_subnet.subnet3: |-
                    {
                      "availability_zone": "${data.aws_availability_zones.available.names[0]}",
                      "cidr_block": "10.1.1.0/24",
                      "vpc_id": "${aws_vpc.vpc2.id}"
                    }
                aws_vpc.vpc1: |-
                    {
                      "cidr_block": "10.0.0.0/16"
                    }
                aws_vpc.vpc2: |-
                    {
                      "cidr_block": "10.1.0.0/16"
                    }
        argumentDocs:
            arn: '- EC2 Transit Gateway Multicast Domain Amazon Resource Name (ARN).'
            auto_accept_shared_associations: '- (Optional) Whether to automatically accept cross-account subnet associations that are associated with the EC2 Transit Gateway Multicast Domain. Valid values: disable, enable. Default value: disable.'
            create: '- (Default 10 minutes) Used for multicast domain creation'
            delete: '- (Default 10 minutes) Used for multicast domain deletion'
            id: '- EC2 Transit Gateway Multicast Domain identifier.'
            igmpv2_support: '- (Optional) Whether to enable Internet Group Management Protocol (IGMP) version 2 for the EC2 Transit Gateway Multicast Domain. Valid values: disable, enable. Default value: disable.'
            owner_id: '- Identifier of the AWS account that owns the EC2 Transit Gateway Multicast Domain.'
            static_sources_support: '- (Optional) Whether to enable support for statically configuring multicast group sources for the EC2 Transit Gateway Multicast Domain. Valid values: disable, enable. Default value: disable.'
            tags: '- (Optional) Key-value tags for the EC2 Transit Gateway Multicast Domain. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            transit_gateway_id: '- (Required) EC2 Transit Gateway identifier. The EC2 Transit Gateway must have multicast_support enabled.'
        importStatements: []
    aws_ec2_transit_gateway_multicast_domain_association:
        subCategory: Transit Gateway
        description: Manages an EC2 Transit Gateway Multicast Domain Association
        name: aws_ec2_transit_gateway_multicast_domain_association
        title: aws_ec2_transit_gateway_multicast_domain_association
        examples:
            - name: example
              manifest: |-
                {
                  "subnet_id": "${aws_subnet.example.id}",
                  "transit_gateway_attachment_id": "${aws_ec2_transit_gateway_vpc_attachment.example.id}",
                  "transit_gateway_multicast_domain_id": "${aws_ec2_transit_gateway_multicast_domain.example.id}"
                }
              references:
                subnet_id: aws_subnet.example.id
                transit_gateway_attachment_id: aws_ec2_transit_gateway_vpc_attachment.example.id
                transit_gateway_multicast_domain_id: aws_ec2_transit_gateway_multicast_domain.example.id
              dependencies:
                aws_ec2_transit_gateway.example: |-
                    {
                      "multicast_support": "enable"
                    }
                aws_ec2_transit_gateway_multicast_domain.example: |-
                    {
                      "transit_gateway_id": "${aws_ec2_transit_gateway.example.id}"
                    }
                aws_ec2_transit_gateway_vpc_attachment.example: |-
                    {
                      "subnet_ids": [
                        "${aws_subnet.example.id}"
                      ],
                      "transit_gateway_id": "${aws_ec2_transit_gateway.example.id}",
                      "vpc_id": "${aws_vpc.example.id}"
                    }
        argumentDocs:
            create: '- (Default 10 minutes) Used for multicast domain association creation'
            delete: '- (Default 10 minutes) Used for multicast domain association deletion'
            id: '- EC2 Transit Gateway Multicast Domain Association identifier.'
            subnet_id: '- (Required) The ID of the subnet to associate with the transit gateway multicast domain.'
            transit_gateway_attachment_id: '- (Required) The ID of the transit gateway attachment.'
            transit_gateway_multicast_domain_id: '- (Required) The ID of the transit gateway multicast domain.'
        importStatements: []
    aws_ec2_transit_gateway_multicast_group_member:
        subCategory: Transit Gateway
        description: Manages an EC2 Transit Gateway Multicast Group Member
        name: aws_ec2_transit_gateway_multicast_group_member
        title: aws_ec2_transit_gateway_multicast_group_member
        examples:
            - name: example
              manifest: |-
                {
                  "group_ip_address": "224.0.0.1",
                  "network_interface_id": "${aws_network_interface.example.id}",
                  "transit_gateway_multicast_domain_id": "${aws_ec2_transit_gateway_multicast_domain.example.id}"
                }
              references:
                network_interface_id: aws_network_interface.example.id
                transit_gateway_multicast_domain_id: aws_ec2_transit_gateway_multicast_domain.example.id
        argumentDocs:
            group_ip_address: '- (Required) The IP address assigned to the transit gateway multicast group.'
            id: '- EC2 Transit Gateway Multicast Group Member identifier.'
            network_interface_id: '- (Required) The group members'' network interface ID to register with the transit gateway multicast group.'
            transit_gateway_multicast_domain_id: '- (Required) The ID of the transit gateway multicast domain.'
        importStatements: []
    aws_ec2_transit_gateway_multicast_group_source:
        subCategory: Transit Gateway
        description: Manages an EC2 Transit Gateway Multicast Group Source
        name: aws_ec2_transit_gateway_multicast_group_source
        title: aws_ec2_transit_gateway_multicast_group_source
        examples:
            - name: example
              manifest: |-
                {
                  "group_ip_address": "224.0.0.1",
                  "network_interface_id": "${aws_network_interface.example.id}",
                  "transit_gateway_multicast_domain_id": "${aws_ec2_transit_gateway_multicast_domain.example.id}"
                }
              references:
                network_interface_id: aws_network_interface.example.id
                transit_gateway_multicast_domain_id: aws_ec2_transit_gateway_multicast_domain.example.id
        argumentDocs:
            group_ip_address: '- (Required) The IP address assigned to the transit gateway multicast group.'
            id: '- EC2 Transit Gateway Multicast Group Member identifier.'
            network_interface_id: '- (Required) The group members'' network interface ID to register with the transit gateway multicast group.'
            transit_gateway_multicast_domain_id: '- (Required) The ID of the transit gateway multicast domain.'
        importStatements: []
    aws_ec2_transit_gateway_peering_attachment:
        subCategory: Transit Gateway
        description: Manages an EC2 Transit Gateway Peering Attachment
        name: aws_ec2_transit_gateway_peering_attachment
        title: aws_ec2_transit_gateway_peering_attachment
        examples:
            - name: example
              manifest: |-
                {
                  "peer_account_id": "${aws_ec2_transit_gateway.peer.owner_id}",
                  "peer_region": "${data.aws_region.peer.name}",
                  "peer_transit_gateway_id": "${aws_ec2_transit_gateway.peer.id}",
                  "tags": {
                    "Name": "TGW Peering Requestor"
                  },
                  "transit_gateway_id": "${aws_ec2_transit_gateway.local.id}"
                }
              references:
                peer_account_id: aws_ec2_transit_gateway.peer.owner_id
                peer_region: data.aws_region.peer.name
                peer_transit_gateway_id: aws_ec2_transit_gateway.peer.id
                transit_gateway_id: aws_ec2_transit_gateway.local.id
              dependencies:
                aws_ec2_transit_gateway.local: |-
                    {
                      "provider": "${aws.local}",
                      "tags": {
                        "Name": "Local TGW"
                      }
                    }
                aws_ec2_transit_gateway.peer: |-
                    {
                      "provider": "${aws.peer}",
                      "tags": {
                        "Name": "Peer TGW"
                      }
                    }
        argumentDocs:
            id: '- EC2 Transit Gateway Attachment identifier'
            peer_account_id: '- (Optional) Account ID of EC2 Transit Gateway to peer with. Defaults to the account ID the AWS provider is currently connected to.'
            peer_region: '- (Required) Region of EC2 Transit Gateway to peer with.'
            peer_transit_gateway_id: '- (Required) Identifier of EC2 Transit Gateway to peer with.'
            tags: '- (Optional) Key-value tags for the EC2 Transit Gateway Peering Attachment. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            transit_gateway_id: '- (Required) Identifier of EC2 Transit Gateway.'
        importStatements: []
    aws_ec2_transit_gateway_peering_attachment_accepter:
        subCategory: Transit Gateway
        description: Manages the accepter's side of an EC2 Transit Gateway peering Attachment
        name: aws_ec2_transit_gateway_peering_attachment_accepter
        title: aws_ec2_transit_gateway_peering_attachment_accepter
        examples:
            - name: example
              manifest: |-
                {
                  "tags": {
                    "Name": "Example cross-account attachment"
                  },
                  "transit_gateway_attachment_id": "${aws_ec2_transit_gateway_peering_attachment.example.id}"
                }
              references:
                transit_gateway_attachment_id: aws_ec2_transit_gateway_peering_attachment.example.id
        argumentDocs:
            id: '- EC2 Transit Gateway Attachment identifier'
            peer_account_id: '- Identifier of the AWS account that owns the EC2 TGW peering.'
            peer_transit_gateway_id: '- Identifier of EC2 Transit Gateway to peer with.'
            tags: '- (Optional) Key-value tags for the EC2 Transit Gateway Peering Attachment. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            transit_gateway_attachment_id: '- (Required) The ID of the EC2 Transit Gateway Peering Attachment to manage.'
            transit_gateway_id: '- Identifier of EC2 Transit Gateway.'
        importStatements: []
    aws_ec2_transit_gateway_prefix_list_reference:
        subCategory: Transit Gateway
        description: Manages an EC2 Transit Gateway Prefix List Reference
        name: aws_ec2_transit_gateway_prefix_list_reference
        title: aws_ec2_transit_gateway_prefix_list_reference
        examples:
            - name: example
              manifest: |-
                {
                  "prefix_list_id": "${aws_ec2_managed_prefix_list.example.id}",
                  "transit_gateway_attachment_id": "${aws_ec2_transit_gateway_vpc_attachment.example.id}",
                  "transit_gateway_route_table_id": "${aws_ec2_transit_gateway.example.association_default_route_table_id}"
                }
              references:
                prefix_list_id: aws_ec2_managed_prefix_list.example.id
                transit_gateway_attachment_id: aws_ec2_transit_gateway_vpc_attachment.example.id
                transit_gateway_route_table_id: aws_ec2_transit_gateway.example.association_default_route_table_id
            - name: example
              manifest: |-
                {
                  "blackhole": true,
                  "prefix_list_id": "${aws_ec2_managed_prefix_list.example.id}",
                  "transit_gateway_route_table_id": "${aws_ec2_transit_gateway.example.association_default_route_table_id}"
                }
              references:
                prefix_list_id: aws_ec2_managed_prefix_list.example.id
                transit_gateway_route_table_id: aws_ec2_transit_gateway.example.association_default_route_table_id
        argumentDocs:
            blackhole: '- (Optional) Indicates whether to drop traffic that matches the Prefix List. Defaults to false.'
            id: '- EC2 Transit Gateway Route Table identifier and EC2 Prefix List identifier, separated by an underscore (_)'
            prefix_list_id: '- (Required) Identifier of EC2 Prefix List.'
            transit_gateway_attachment_id: '- (Optional) Identifier of EC2 Transit Gateway Attachment.'
            transit_gateway_route_table_id: '- (Required) Identifier of EC2 Transit Gateway Route Table.'
        importStatements: []
    aws_ec2_transit_gateway_route:
        subCategory: Transit Gateway
        description: Manages an EC2 Transit Gateway Route
        name: aws_ec2_transit_gateway_route
        title: aws_ec2_transit_gateway_route
        examples:
            - name: example
              manifest: |-
                {
                  "destination_cidr_block": "0.0.0.0/0",
                  "transit_gateway_attachment_id": "${aws_ec2_transit_gateway_vpc_attachment.example.id}",
                  "transit_gateway_route_table_id": "${aws_ec2_transit_gateway.example.association_default_route_table_id}"
                }
              references:
                transit_gateway_attachment_id: aws_ec2_transit_gateway_vpc_attachment.example.id
                transit_gateway_route_table_id: aws_ec2_transit_gateway.example.association_default_route_table_id
            - name: example
              manifest: |-
                {
                  "blackhole": true,
                  "destination_cidr_block": "0.0.0.0/0",
                  "transit_gateway_route_table_id": "${aws_ec2_transit_gateway.example.association_default_route_table_id}"
                }
              references:
                transit_gateway_route_table_id: aws_ec2_transit_gateway.example.association_default_route_table_id
        argumentDocs:
            blackhole: '- (Optional) Indicates whether to drop traffic that matches this route (default to false).'
            destination_cidr_block: '- (Required) IPv4 or IPv6 RFC1924 CIDR used for destination matches. Routing decisions are based on the most specific match.'
            id: '- EC2 Transit Gateway Route Table identifier combined with destination'
            transit_gateway_attachment_id: '- (Optional) Identifier of EC2 Transit Gateway Attachment (required if blackhole is set to false).'
            transit_gateway_route_table_id: '- (Required) Identifier of EC2 Transit Gateway Route Table.'
        importStatements: []
    aws_ec2_transit_gateway_route_table:
        subCategory: Transit Gateway
        description: Manages an EC2 Transit Gateway Route Table
        name: aws_ec2_transit_gateway_route_table
        title: aws_ec2_transit_gateway_route_table
        examples:
            - name: example
              manifest: |-
                {
                  "transit_gateway_id": "${aws_ec2_transit_gateway.example.id}"
                }
              references:
                transit_gateway_id: aws_ec2_transit_gateway.example.id
        argumentDocs:
            arn: '- EC2 Transit Gateway Route Table Amazon Resource Name (ARN).'
            default_association_route_table: '- Boolean whether this is the default association route table for the EC2 Transit Gateway.'
            default_propagation_route_table: '- Boolean whether this is the default propagation route table for the EC2 Transit Gateway.'
            id: '- EC2 Transit Gateway Route Table identifier'
            tags: '- (Optional) Key-value tags for the EC2 Transit Gateway Route Table. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            transit_gateway_id: '- (Required) Identifier of EC2 Transit Gateway.'
        importStatements: []
    aws_ec2_transit_gateway_route_table_association_table_association:
        subCategory: Transit Gateway
        description: Manages an EC2 Transit Gateway Route Table association
        name: aws_ec2_transit_gateway_route_table_association_table_association
        title: aws_ec2_transit_gateway_route_table_association_table_association
        argumentDocs:
            id: '- EC2 Transit Gateway Route Table identifier combined with EC2 Transit Gateway Attachment identifier'
            resource_id: '- Identifier of the resource'
            resource_type: '- Type of the resource'
            transit_gateway_attachment_id: '- (Required) Identifier of EC2 Transit Gateway Attachment.'
            transit_gateway_route_table_id: '- (Required) Identifier of EC2 Transit Gateway Route Table.'
        importStatements: []
    aws_ec2_transit_gateway_route_table_propagation_table_propagation:
        subCategory: Transit Gateway
        description: Manages an EC2 Transit Gateway Route Table propagation
        name: aws_ec2_transit_gateway_route_table_propagation_table_propagation
        title: aws_ec2_transit_gateway_route_table_propagation_table_propagation
        argumentDocs:
            id: '- EC2 Transit Gateway Route Table identifier combined with EC2 Transit Gateway Attachment identifier'
            resource_id: '- Identifier of the resource'
            resource_type: '- Type of the resource'
            transit_gateway_attachment_id: '- (Required) Identifier of EC2 Transit Gateway Attachment.'
            transit_gateway_route_table_id: '- (Required) Identifier of EC2 Transit Gateway Route Table.'
        importStatements: []
    aws_ec2_transit_gateway_vpc_attachment:
        subCategory: Transit Gateway
        description: Manages an EC2 Transit Gateway VPC Attachment
        name: aws_ec2_transit_gateway_vpc_attachment
        title: aws_ec2_transit_gateway_vpc_attachment
        examples:
            - name: example
              manifest: |-
                {
                  "subnet_ids": [
                    "${aws_subnet.example.id}"
                  ],
                  "transit_gateway_id": "${aws_ec2_transit_gateway.example.id}",
                  "vpc_id": "${aws_vpc.example.id}"
                }
              references:
                transit_gateway_id: aws_ec2_transit_gateway.example.id
                vpc_id: aws_vpc.example.id
        argumentDocs:
            appliance_mode_support: '- (Optional) Whether Appliance Mode support is enabled. If enabled, a traffic flow between a source and destination uses the same Availability Zone for the VPC attachment for the lifetime of that flow. Valid values: disable, enable. Default value: disable.'
            dns_support: '- (Optional) Whether DNS support is enabled. Valid values: disable, enable. Default value: enable.'
            id: '- EC2 Transit Gateway Attachment identifier'
            ipv6_support: '- (Optional) Whether IPv6 support is enabled. Valid values: disable, enable. Default value: disable.'
            subnet_ids: '- (Required) Identifiers of EC2 Subnets.'
            tags: '- (Optional) Key-value tags for the EC2 Transit Gateway VPC Attachment. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            transit_gateway_default_route_table_association: '- (Optional) Boolean whether the VPC Attachment should be associated with the EC2 Transit Gateway association default route table. This cannot be configured or perform drift detection with Resource Access Manager shared EC2 Transit Gateways. Default value: true.'
            transit_gateway_default_route_table_propagation: '- (Optional) Boolean whether the VPC Attachment should propagate routes with the EC2 Transit Gateway propagation default route table. This cannot be configured or perform drift detection with Resource Access Manager shared EC2 Transit Gateways. Default value: true.'
            transit_gateway_id: '- (Required) Identifier of EC2 Transit Gateway.'
            vpc_id: '- (Required) Identifier of EC2 VPC.'
            vpc_owner_id: '- Identifier of the AWS account that owns the EC2 VPC.'
        importStatements: []
    aws_ec2_transit_gateway_vpc_attachment_accepter:
        subCategory: Transit Gateway
        description: Manages the accepter's side of an EC2 Transit Gateway VPC Attachment
        name: aws_ec2_transit_gateway_vpc_attachment_accepter
        title: aws_ec2_transit_gateway_vpc_attachment_accepter
        examples:
            - name: example
              manifest: |-
                {
                  "tags": {
                    "Name": "Example cross-account attachment"
                  },
                  "transit_gateway_attachment_id": "${aws_ec2_transit_gateway_vpc_attachment.example.id}"
                }
              references:
                transit_gateway_attachment_id: aws_ec2_transit_gateway_vpc_attachment.example.id
        argumentDocs:
            appliance_mode_support: '- Whether Appliance Mode support is enabled. Valid values: disable, enable.'
            dns_support: '- Whether DNS support is enabled. Valid values: disable, enable.'
            id: '- EC2 Transit Gateway Attachment identifier'
            ipv6_support: '- Whether IPv6 support is enabled. Valid values: disable, enable.'
            subnet_ids: '- Identifiers of EC2 Subnets.'
            tags: '- (Optional) Key-value tags for the EC2 Transit Gateway VPC Attachment. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            transit_gateway_attachment_id: '- (Required) The ID of the EC2 Transit Gateway Attachment to manage.'
            transit_gateway_default_route_table_association: '- (Optional) Boolean whether the VPC Attachment should be associated with the EC2 Transit Gateway association default route table. Default value: true.'
            transit_gateway_default_route_table_propagation: '- (Optional) Boolean whether the VPC Attachment should propagate routes with the EC2 Transit Gateway propagation default route table. Default value: true.'
            transit_gateway_id: '- Identifier of EC2 Transit Gateway.'
            vpc_id: '- Identifier of EC2 VPC.'
            vpc_owner_id: '- Identifier of the AWS account that owns the EC2 VPC.'
        importStatements: []
    aws_ecr_lifecycle_policy:
        subCategory: ECR (Elastic Container Registry)
        description: Manages an ECR repository lifecycle policy.
        name: aws_ecr_lifecycle_policy
        title: aws_ecr_lifecycle_policy
        examples:
            - name: foopolicy
              manifest: |-
                {
                  "policy": "{\n    \"rules\": [\n        {\n            \"rulePriority\": 1,\n            \"description\": \"Expire images older than 14 days\",\n            \"selection\": {\n                \"tagStatus\": \"untagged\",\n                \"countType\": \"sinceImagePushed\",\n                \"countUnit\": \"days\",\n                \"countNumber\": 14\n            },\n            \"action\": {\n                \"type\": \"expire\"\n            }\n        }\n    ]\n}\n",
                  "repository": "${aws_ecr_repository.foo.name}"
                }
              references:
                repository: aws_ecr_repository.foo.name
              dependencies:
                aws_ecr_repository.foo: |-
                    {
                      "name": "bar"
                    }
            - name: foopolicy
              manifest: |-
                {
                  "policy": "{\n    \"rules\": [\n        {\n            \"rulePriority\": 1,\n            \"description\": \"Keep last 30 images\",\n            \"selection\": {\n                \"tagStatus\": \"tagged\",\n                \"tagPrefixList\": [\"v\"],\n                \"countType\": \"imageCountMoreThan\",\n                \"countNumber\": 30\n            },\n            \"action\": {\n                \"type\": \"expire\"\n            }\n        }\n    ]\n}\n",
                  "repository": "${aws_ecr_repository.foo.name}"
                }
              references:
                repository: aws_ecr_repository.foo.name
              dependencies:
                aws_ecr_repository.foo: |-
                    {
                      "name": "bar"
                    }
        argumentDocs:
            policy: '- (Required) The policy document. This is a JSON formatted string. See more details about Policy Parameters in the official AWS docs.'
            registry_id: '- The registry ID where the repository was created.'
            repository: '- (Required) Name of the repository to apply the policy.'
        importStatements: []
    aws_ecr_pull_through_cache_rule:
        subCategory: ECR (Elastic Container Registry)
        description: Provides an Elastic Container Registry Pull Through Cache Rule.
        name: aws_ecr_pull_through_cache_rule
        title: aws_ecr_pull_through_cache_rule
        examples:
            - name: example
              manifest: |-
                {
                  "ecr_repository_prefix": "ecr-public",
                  "upstream_registry_url": "public.ecr.aws"
                }
        argumentDocs:
            ecr_repository_prefix: '- (Required, Forces new resource) The repository name prefix to use when caching images from the source registry.'
            registry_id: '- The registry ID where the repository was created.'
            upstream_registry_url: '- (Required, Forces new resource) The registry URL of the upstream public registry to use as the source.'
        importStatements: []
    aws_ecr_registry_policy:
        subCategory: ECR (Elastic Container Registry)
        description: Provides an Elastic Container Registry Policy.
        name: aws_ecr_registry_policy
        title: aws_ecr_registry_policy
        examples:
            - name: example
              manifest: |-
                {
                  "policy": "${jsonencode({\n    Version = \"2012-10-17\",\n    Statement = [\n      {\n        Sid    = \"testpolicy\",\n        Effect = \"Allow\",\n        Principal = {\n          \"AWS\" : \"arn:${data.aws_partition.current.partition}:iam::${data.aws_caller_identity.current.account_id}:root\"\n        },\n        Action = [\n          \"ecr:ReplicateImage\"\n        ],\n        Resource = [\n          \"arn:${data.aws_partition.current.partition}:ecr:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:repository/*\"\n        ]\n      }\n    ]\n  })}"
                }
        argumentDocs:
            policy: '- (Required) The policy document. This is a JSON formatted string. For more information about building IAM policy documents with Terraform, see the AWS IAM Policy Document Guide'
            registry_id: '- The registry ID where the registry was created.'
        importStatements: []
    aws_ecr_registry_scanning_configuration:
        subCategory: ECR (Elastic Container Registry)
        description: Provides an Elastic Container Registry Scanning Configuration.
        name: aws_ecr_registry_scanning_configuration
        title: aws_ecr_registry_scanning_configuration
        examples:
            - name: configuration
              manifest: |-
                {
                  "rule": [
                    {
                      "repository_filter": [
                        {
                          "filter": "example",
                          "filter_type": "WILDCARD"
                        }
                      ],
                      "scan_frequency": "CONTINUOUS_SCAN"
                    }
                  ],
                  "scan_type": "ENHANCED"
                }
            - name: test
              manifest: |-
                {
                  "rule": [
                    {
                      "repository_filter": [
                        {
                          "filter": "*",
                          "filter_type": "WILDCARD"
                        }
                      ],
                      "scan_frequency": "SCAN_ON_PUSH"
                    },
                    {
                      "repository_filter": [
                        {
                          "filter": "example",
                          "filter_type": "WILDCARD"
                        }
                      ],
                      "scan_frequency": "CONTINUOUS_SCAN"
                    }
                  ],
                  "scan_type": "ENHANCED"
                }
        argumentDocs:
            registry_id: '- The registry ID the scanning configuration applies to.'
            rule: '- (Optional) One or multiple blocks specifying scanning rules to determine which repository filters are used and at what frequency scanning will occur. See below for schema.'
            rule.repository_filter: '- (Required) One or more repository filter blocks, containing a filter (required string filtering repositories, see pattern regex here) and a filter_type (required string, currently only WILDCARD is supported).'
            rule.scan_frequency: '- (Required) The frequency that scans are performed at for a private registry. Can be SCAN_ON_PUSH, CONTINUOUS_SCAN, or MANUAL.'
            scan_type: '- (Required) the scanning type to set for the registry. Can be either ENHANCED or BASIC.'
        importStatements: []
    aws_ecr_replication_configuration:
        subCategory: ECR (Elastic Container Registry)
        description: Provides an Elastic Container Registry Replication Configuration.
        name: aws_ecr_replication_configuration
        title: aws_ecr_replication_configuration
        examples:
            - name: example
              manifest: |-
                {
                  "replication_configuration": [
                    {
                      "rule": [
                        {
                          "destination": [
                            {
                              "region": "${data.aws_regions.example.names[0]}",
                              "registry_id": "${data.aws_caller_identity.current.account_id}"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              references:
                replication_configuration.rule.destination.region: data.aws_regions.example.names[0]
                replication_configuration.rule.destination.registry_id: data.aws_caller_identity.current.account_id
            - name: example
              manifest: |-
                {
                  "replication_configuration": [
                    {
                      "rule": [
                        {
                          "destination": [
                            {
                              "region": "${data.aws_regions.example.names[0]}",
                              "registry_id": "${data.aws_caller_identity.current.account_id}"
                            },
                            {
                              "region": "${data.aws_regions.example.names[1]}",
                              "registry_id": "${data.aws_caller_identity.current.account_id}"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              references:
                replication_configuration.rule.destination.region: data.aws_regions.example.names[1]
                replication_configuration.rule.destination.registry_id: data.aws_caller_identity.current.account_id
            - name: example
              manifest: |-
                {
                  "replication_configuration": [
                    {
                      "rule": [
                        {
                          "destination": [
                            {
                              "region": "${data.aws_regions.example.names[0]}",
                              "registry_id": "${data.aws_caller_identity.current.account_id}"
                            }
                          ],
                          "repository_filter": [
                            {
                              "filter": "prod-microservice",
                              "filter_type": "PREFIX_MATCH"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              references:
                replication_configuration.rule.destination.region: data.aws_regions.example.names[0]
                replication_configuration.rule.destination.registry_id: data.aws_caller_identity.current.account_id
        argumentDocs:
            destination: '- (Required) the details of a replication destination. A maximum of 25 are allowed per rule. See Destination.'
            filter: '- (Required) The repository filter details.'
            filter_type: '- (Required) The repository filter type. The only supported value is PREFIX_MATCH, which is a repository name prefix specified with the filter parameter.'
            region: '- (Required) A Region to replicate to.'
            registry_id: '- (Required) The account ID of the destination registry to replicate to.'
            replication_configuration: '- (Required) Replication configuration for a registry. See Replication Configuration.'
            repository_filter: '- (Optional) filters for a replication rule. See Repository Filter.'
            rule: '- (Required) The replication rules for a replication configuration. A maximum of 10 are allowed per replication_configuration. See Rule'
        importStatements: []
    aws_ecr_repository:
        subCategory: ECR (Elastic Container Registry)
        description: Provides an Elastic Container Registry Repository.
        name: aws_ecr_repository
        title: aws_ecr_repository
        examples:
            - name: foo
              manifest: |-
                {
                  "image_scanning_configuration": [
                    {
                      "scan_on_push": true
                    }
                  ],
                  "image_tag_mutability": "MUTABLE",
                  "name": "bar"
                }
        argumentDocs:
            arn: '- Full ARN of the repository.'
            delete: '- (Default 20 minutes) How long to wait for a repository to be deleted.'
            encryption_configuration: '- (Optional) Encryption configuration for the repository. See below for schema.'
            encryption_configuration.encryption_type: '- (Optional) The encryption type to use for the repository. Valid values are AES256 or KMS. Defaults to AES256.'
            encryption_configuration.kms_key: '- (Optional) The ARN of the KMS key to use when encryption_type is KMS. If not specified, uses the default AWS managed key for ECR.'
            force_delete: |-
                - (Optional) If true, will delete the repository even if it contains images.
                Defaults to false.
            image_scanning_configuration: '- (Optional) Configuration block that defines image scanning configuration for the repository. By default, image scanning must be manually triggered. See the ECR User Guide for more information about image scanning.'
            image_tag_mutability: '- (Optional) The tag mutability setting for the repository. Must be one of: MUTABLE or IMMUTABLE. Defaults to MUTABLE.'
            name: '- (Required) Name of the repository.'
            registry_id: '- The registry ID where the repository was created.'
            repository_url: '- The URL of the repository (in the form aws_account_id.dkr.ecr.region.amazonaws.com/repositoryName).'
            scan_on_push: '- (Required) Indicates whether images are scanned after being pushed to the repository (true) or not scanned (false).'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_ecr_repository_policy:
        subCategory: ECR (Elastic Container Registry)
        description: Provides an Elastic Container Registry Repository Policy.
        name: aws_ecr_repository_policy
        title: aws_ecr_repository_policy
        examples:
            - name: foopolicy
              manifest: |-
                {
                  "policy": "{\n    \"Version\": \"2008-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"new policy\",\n            \"Effect\": \"Allow\",\n            \"Principal\": \"*\",\n            \"Action\": [\n                \"ecr:GetDownloadUrlForLayer\",\n                \"ecr:BatchGetImage\",\n                \"ecr:BatchCheckLayerAvailability\",\n                \"ecr:PutImage\",\n                \"ecr:InitiateLayerUpload\",\n                \"ecr:UploadLayerPart\",\n                \"ecr:CompleteLayerUpload\",\n                \"ecr:DescribeRepositories\",\n                \"ecr:GetRepositoryPolicy\",\n                \"ecr:ListImages\",\n                \"ecr:DeleteRepository\",\n                \"ecr:BatchDeleteImage\",\n                \"ecr:SetRepositoryPolicy\",\n                \"ecr:DeleteRepositoryPolicy\"\n            ]\n        }\n    ]\n}\n",
                  "repository": "${aws_ecr_repository.foo.name}"
                }
              references:
                repository: aws_ecr_repository.foo.name
              dependencies:
                aws_ecr_repository.foo: |-
                    {
                      "name": "bar"
                    }
        argumentDocs:
            policy: '- (Required) The policy document. This is a JSON formatted string. For more information about building IAM policy documents with Terraform, see the AWS IAM Policy Document Guide'
            registry_id: '- The registry ID where the repository was created.'
            repository: '- (Required) Name of the repository to apply the policy.'
        importStatements: []
    aws_ecrpublic_repository:
        subCategory: ECR Public
        description: Provides a Public Elastic Container Registry Repository.
        name: aws_ecrpublic_repository
        title: aws_ecrpublic_repository
        examples:
            - name: foo
              manifest: |-
                {
                  "catalog_data": [
                    {
                      "about_text": "About Text",
                      "architectures": [
                        "ARM"
                      ],
                      "description": "Description",
                      "logo_image_blob": "${filebase64(image.png)}",
                      "operating_systems": [
                        "Linux"
                      ],
                      "usage_text": "Usage Text"
                    }
                  ],
                  "provider": "${aws.us_east_1}",
                  "repository_name": "bar"
                }
              references:
                provider: aws.us_east_1
        argumentDocs:
            arn: '- Full ARN of the repository.'
            catalog_data: '- (Optional) Catalog data configuration for the repository. See below for schema.'
            catalog_data.about_text: '- (Optional) A detailed description of the contents of the repository. It is publicly visible in the Amazon ECR Public Gallery. The text must be in markdown format.'
            catalog_data.architectures: '- (Optional) The system architecture that the images in the repository are compatible with. On the Amazon ECR Public Gallery, the following supported architectures will appear as badges on the repository and are used as search filters: ARM, ARM 64, x86, x86-64'
            catalog_data.description: '- (Optional) A short description of the contents of the repository. This text appears in both the image details and also when searching for repositories on the Amazon ECR Public Gallery.'
            catalog_data.logo_image_blob: '- (Optional) The base64-encoded repository logo payload. (Only visible for verified accounts) Note that drift detection is disabled for this attribute.'
            catalog_data.operating_systems: '-  (Optional) The operating systems that the images in the repository are compatible with. On the Amazon ECR Public Gallery, the following supported operating systems will appear as badges on the repository and are used as search filters: Linux, Windows'
            catalog_data.usage_text: '-  (Optional) Detailed information on how to use the contents of the repository. It is publicly visible in the Amazon ECR Public Gallery. The usage text provides context, support information, and additional usage details for users of the repository. The text must be in markdown format.'
            delete: '- (Default 20 minutes) How long to wait for a repository to be deleted.'
            id: '- The repository name.'
            registry_id: '- The registry ID where the repository was created.'
            repository_name: '- (Required) Name of the repository.'
            repository_uri: '- The URI of the repository.'
        importStatements: []
    aws_ecrpublic_repository_policy:
        subCategory: ECR Public
        description: Provides an Elastic Container Registry Public Repository Policy.
        name: aws_ecrpublic_repository_policy
        title: aws_ecrpublic_repository_policy
        examples:
            - name: example
              manifest: |-
                {
                  "policy": "{\n    \"Version\": \"2008-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"new policy\",\n            \"Effect\": \"Allow\",\n            \"Principal\": \"*\",\n            \"Action\": [\n                \"ecr:GetDownloadUrlForLayer\",\n                \"ecr:BatchGetImage\",\n                \"ecr:BatchCheckLayerAvailability\",\n                \"ecr:PutImage\",\n                \"ecr:InitiateLayerUpload\",\n                \"ecr:UploadLayerPart\",\n                \"ecr:CompleteLayerUpload\",\n                \"ecr:DescribeRepositories\",\n                \"ecr:GetRepositoryPolicy\",\n                \"ecr:ListImages\",\n                \"ecr:DeleteRepository\",\n                \"ecr:BatchDeleteImage\",\n                \"ecr:SetRepositoryPolicy\",\n                \"ecr:DeleteRepositoryPolicy\"\n            ]\n        }\n    ]\n}\n",
                  "repository_name": "${aws_ecrpublic_repository.example.repository_name}"
                }
              references:
                repository_name: aws_ecrpublic_repository.example.repository_name
              dependencies:
                aws_ecrpublic_repository.example: |-
                    {
                      "repository_name": "example"
                    }
        argumentDocs:
            policy: '- (Required) The policy document. This is a JSON formatted string. For more information about building IAM policy documents with Terraform, see the AWS IAM Policy Document Guide'
            registry_id: '- The registry ID where the repository was created.'
            repository_name: '- (Required) Name of the repository to apply the policy.'
        importStatements: []
    aws_ecs_account_setting_default:
        subCategory: ECS (Elastic Container)
        description: Provides an ECS Default account setting.
        name: aws_ecs_account_setting_default
        title: aws_ecs_account_setting_default
        examples:
            - name: test
              manifest: |-
                {
                  "name": "taskLongArnFormat",
                  "value": "enabled"
                }
        argumentDocs:
            id: '- ARN that identifies the account setting.'
            name: '- (Required) Name of the account setting to set. Valid values are serviceLongArnFormat, taskLongArnFormat, containerInstanceLongArnFormat, awsvpcTrunking and containerInsights.'
            prinicpal_arn: '- ARN that identifies the account setting.'
            value: '- (Required) State of the setting. Valid values are enabled and disabled.'
        importStatements: []
    aws_ecs_capacity_provider:
        subCategory: ECS (Elastic Container)
        description: Provides an ECS cluster capacity provider.
        name: aws_ecs_capacity_provider
        title: aws_ecs_capacity_provider
        examples:
            - name: test
              manifest: |-
                {
                  "auto_scaling_group_provider": [
                    {
                      "auto_scaling_group_arn": "${aws_autoscaling_group.test.arn}",
                      "managed_scaling": [
                        {
                          "maximum_scaling_step_size": 1000,
                          "minimum_scaling_step_size": 1,
                          "status": "ENABLED",
                          "target_capacity": 10
                        }
                      ],
                      "managed_termination_protection": "ENABLED"
                    }
                  ],
                  "name": "test"
                }
              references:
                auto_scaling_group_provider.auto_scaling_group_arn: aws_autoscaling_group.test.arn
              dependencies:
                aws_autoscaling_group.test: |-
                    {
                      "tag": [
                        {
                          "key": "AmazonECSManaged",
                          "propagate_at_launch": true,
                          "value": true
                        }
                      ]
                    }
        argumentDocs:
            arn: '- ARN that identifies the capacity provider.'
            auto_scaling_group_provider: '- (Required) Configuration block for the provider for the ECS auto scaling group. Detailed below.'
            auto_scaling_group_provider.auto_scaling_group_arn: '- (Required) - ARN of the associated auto scaling group.'
            auto_scaling_group_provider.managed_scaling: '- (Optional) - Configuration block defining the parameters of the auto scaling. Detailed below.'
            auto_scaling_group_provider.managed_scaling.instance_warmup_period: '- (Optional) Period of time, in seconds, after a newly launched Amazon EC2 instance can contribute to CloudWatch metrics for Auto Scaling group. If this parameter is omitted, the default value of 300 seconds is used.'
            auto_scaling_group_provider.managed_scaling.maximum_scaling_step_size: '- (Optional) Maximum step adjustment size. A number between 1 and 10,000.'
            auto_scaling_group_provider.managed_scaling.minimum_scaling_step_size: '- (Optional) Minimum step adjustment size. A number between 1 and 10,000.'
            auto_scaling_group_provider.managed_scaling.status: '- (Optional) Whether auto scaling is managed by ECS. Valid values are ENABLED and DISABLED.'
            auto_scaling_group_provider.managed_scaling.target_capacity: '- (Optional) Target utilization for the capacity provider. A number between 1 and 100.'
            auto_scaling_group_provider.managed_termination_protection: '- (Optional) - Enables or disables container-aware termination of instances in the auto scaling group when scale-in happens. Valid values are ENABLED and DISABLED.'
            id: '- ARN that identifies the capacity provider.'
            name: '- (Required) Name of the capacity provider.'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_ecs_cluster:
        subCategory: ECS (Elastic Container)
        description: Provides an ECS cluster.
        name: aws_ecs_cluster
        title: aws_ecs_cluster
        examples:
            - name: foo
              manifest: |-
                {
                  "name": "white-hart",
                  "setting": [
                    {
                      "name": "containerInsights",
                      "value": "enabled"
                    }
                  ]
                }
            - name: test
              manifest: |-
                {
                  "configuration": [
                    {
                      "execute_command_configuration": [
                        {
                          "kms_key_id": "${aws_kms_key.example.arn}",
                          "log_configuration": [
                            {
                              "cloud_watch_encryption_enabled": true,
                              "cloud_watch_log_group_name": "${aws_cloudwatch_log_group.example.name}"
                            }
                          ],
                          "logging": "OVERRIDE"
                        }
                      ]
                    }
                  ],
                  "name": "example"
                }
              references:
                configuration.execute_command_configuration.kms_key_id: aws_kms_key.example.arn
                configuration.execute_command_configuration.log_configuration.cloud_watch_log_group_name: aws_cloudwatch_log_group.example.name
              dependencies:
                aws_cloudwatch_log_group.example: |-
                    {
                      "name": "example"
                    }
                aws_kms_key.example: |-
                    {
                      "deletion_window_in_days": 7,
                      "description": "example"
                    }
            - name: example
              manifest: |-
                {
                  "name": "example"
                }
              dependencies:
                aws_ecs_capacity_provider.example: |-
                    {
                      "auto_scaling_group_provider": [
                        {
                          "auto_scaling_group_arn": "${aws_autoscaling_group.example.arn}"
                        }
                      ],
                      "name": "example"
                    }
                aws_ecs_cluster_capacity_providers.example: |-
                    {
                      "capacity_providers": [
                        "${aws_ecs_capacity_provider.example.name}"
                      ],
                      "cluster_name": "${aws_ecs_cluster.example.name}",
                      "default_capacity_provider_strategy": [
                        {
                          "base": 1,
                          "capacity_provider": "${aws_ecs_capacity_provider.example.name}",
                          "weight": 100
                        }
                      ]
                    }
        argumentDocs:
            arn: '- ARN that identifies the cluster.'
            capacity_providers: '- (Optional, Deprecated use the aws_ecs_cluster_capacity_providers resource instead) List of short names of one or more capacity providers to associate with the cluster. Valid values also include FARGATE and FARGATE_SPOT.'
            configuration: '- (Optional) The execute command configuration for the cluster. Detailed below.'
            configuration.execute_command_configuration: '- (Optional) The details of the execute command configuration. Detailed below.'
            configuration.execute_command_configuration.kms_key_id: '- (Optional) The AWS Key Management Service key ID to encrypt the data between the local client and the container.'
            configuration.execute_command_configuration.log_configuration: '- (Optional) The log configuration for the results of the execute command actions Required when logging is OVERRIDE. Detailed below.'
            configuration.execute_command_configuration.log_configuration.cloud_watch_encryption_enabled: '- (Optional) Whether or not to enable encryption on the CloudWatch logs. If not specified, encryption will be disabled.'
            configuration.execute_command_configuration.log_configuration.cloud_watch_log_group_name: '- (Optional) The name of the CloudWatch log group to send logs to.'
            configuration.execute_command_configuration.log_configuration.s3_bucket_encryption_enabled: '- (Optional) Whether or not to enable encryption on the logs sent to S3. If not specified, encryption will be disabled.'
            configuration.execute_command_configuration.log_configuration.s3_bucket_name: '- (Optional) The name of the S3 bucket to send logs to.'
            configuration.execute_command_configuration.log_configuration.s3_key_prefix: '- (Optional) An optional folder in the S3 bucket to place logs in.'
            configuration.execute_command_configuration.logging: '- (Optional) The log setting to use for redirecting logs for your execute command results. Valid values are NONE, DEFAULT, and OVERRIDE.'
            default_capacity_provider_strategy: '- (Optional, Deprecated use the aws_ecs_cluster_capacity_providers resource instead) Configuration block for capacity provider strategy to use by default for the cluster. Can be one or more. Detailed below.'
            default_capacity_provider_strategy.base: '- (Optional) The number of tasks, at a minimum, to run on the specified capacity provider. Only one capacity provider in a capacity provider strategy can have a base defined.'
            default_capacity_provider_strategy.capacity_provider: '- (Required) The short name of the capacity provider.'
            default_capacity_provider_strategy.weight: '- (Optional) The relative percentage of the total number of launched tasks that should use the specified capacity provider.'
            id: '- ARN that identifies the cluster.'
            name: '- (Required) Name of the cluster (up to 255 letters, numbers, hyphens, and underscores)'
            setting: '- (Optional) Configuration block(s) with cluster settings. For example, this can be used to enable CloudWatch Container Insights for a cluster. Detailed below.'
            setting.name: '- (Required) Name of the setting to manage. Valid values: containerInsights.'
            setting.value: '-  (Required) The value to assign to the setting. Valid values are enabled and disabled.'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_ecs_cluster_capacity_providers:
        subCategory: ECS (Elastic Container)
        description: Provides an ECS cluster capacity providers resource.
        name: aws_ecs_cluster_capacity_providers
        title: aws_ecs_cluster_capacity_providers
        examples:
            - name: example
              manifest: |-
                {
                  "capacity_providers": [
                    "FARGATE"
                  ],
                  "cluster_name": "${aws_ecs_cluster.example.name}",
                  "default_capacity_provider_strategy": [
                    {
                      "base": 1,
                      "capacity_provider": "FARGATE",
                      "weight": 100
                    }
                  ]
                }
              references:
                cluster_name: aws_ecs_cluster.example.name
              dependencies:
                aws_ecs_cluster.example: |-
                    {
                      "name": "my-cluster"
                    }
        argumentDocs:
            capacity_providers: '- (Optional) Set of names of one or more capacity providers to associate with the cluster. Valid values also include FARGATE and FARGATE_SPOT.'
            cluster_name: '- (Required, Forces new resource) Name of the ECS cluster to manage capacity providers for.'
            default_capacity_provider_strategy: '- (Optional) Set of capacity provider strategies to use by default for the cluster. Detailed below.'
            default_capacity_provider_strategy.base: '- (Optional) The number of tasks, at a minimum, to run on the specified capacity provider. Only one capacity provider in a capacity provider strategy can have a base defined. Defaults to 0.'
            default_capacity_provider_strategy.capacity_provider: '- (Required) Name of the capacity provider.'
            default_capacity_provider_strategy.weight: '- (Optional) The relative percentage of the total number of launched tasks that should use the specified capacity provider. The weight value is taken into consideration after the base count of tasks has been satisfied. Defaults to 0.'
            id: '- Same as cluster_name.'
        importStatements: []
    aws_ecs_service:
        subCategory: ECS (Elastic Container)
        description: Provides an ECS service.
        name: aws_ecs_service
        title: aws_ecs_service
        examples:
            - name: mongo
              manifest: |-
                {
                  "cluster": "${aws_ecs_cluster.foo.id}",
                  "depends_on": [
                    "${aws_iam_role_policy.foo}"
                  ],
                  "desired_count": 3,
                  "iam_role": "${aws_iam_role.foo.arn}",
                  "load_balancer": [
                    {
                      "container_name": "mongo",
                      "container_port": 8080,
                      "target_group_arn": "${aws_lb_target_group.foo.arn}"
                    }
                  ],
                  "name": "mongodb",
                  "ordered_placement_strategy": [
                    {
                      "field": "cpu",
                      "type": "binpack"
                    }
                  ],
                  "placement_constraints": [
                    {
                      "expression": "attribute:ecs.availability-zone in [us-west-2a, us-west-2b]",
                      "type": "memberOf"
                    }
                  ],
                  "task_definition": "${aws_ecs_task_definition.mongo.arn}"
                }
              references:
                cluster: aws_ecs_cluster.foo.id
                iam_role: aws_iam_role.foo.arn
                load_balancer.target_group_arn: aws_lb_target_group.foo.arn
                task_definition: aws_ecs_task_definition.mongo.arn
            - name: example
              manifest: |-
                {
                  "desired_count": 2,
                  "lifecycle": [
                    {
                      "ignore_changes": [
                        "${desired_count}"
                      ]
                    }
                  ]
                }
            - name: bar
              manifest: |-
                {
                  "cluster": "${aws_ecs_cluster.foo.id}",
                  "name": "bar",
                  "scheduling_strategy": "DAEMON",
                  "task_definition": "${aws_ecs_task_definition.bar.arn}"
                }
              references:
                cluster: aws_ecs_cluster.foo.id
                task_definition: aws_ecs_task_definition.bar.arn
            - name: example
              manifest: |-
                {
                  "cluster": "${aws_ecs_cluster.example.id}",
                  "deployment_controller": [
                    {
                      "type": "EXTERNAL"
                    }
                  ],
                  "name": "example"
                }
              references:
                cluster: aws_ecs_cluster.example.id
        argumentDocs:
            CODE_DEPLOY: or EXTERNAL deployment controller types don't support the DAEMON scheduling strategy
            capacity_provider_strategy: '- (Optional) Capacity provider strategies to use for the service. Can be one or more. These can be updated without destroying and recreating the service only if force_new_deployment = true and not changing from 0 capacity_provider_strategy blocks to greater than 0, or vice versa. See below.'
            capacity_provider_strategy.base: '- (Optional) Number of tasks, at a minimum, to run on the specified capacity provider. Only one capacity provider in a capacity provider strategy can have a base defined.'
            capacity_provider_strategy.capacity_provider: '- (Required) Short name of the capacity provider.'
            capacity_provider_strategy.weight: '- (Required) Relative percentage of the total number of launched tasks that should use the specified capacity provider.'
            cluster: '- (Optional) ARN of an ECS cluster.'
            create: '- (Default 20 minutes)'
            delete: '- (Default 20 minutes)'
            deployment_circuit_breaker: '- (Optional) Configuration block for deployment circuit breaker. See below.'
            deployment_circuit_breaker.enable: '- (Required) Whether to enable the deployment circuit breaker logic for the service.'
            deployment_circuit_breaker.rollback: '- (Required) Whether to enable Amazon ECS to roll back the service if a service deployment fails. If rollback is enabled, when a service deployment fails, the service is rolled back to the last deployment that completed successfully.'
            deployment_controller: '- (Optional) Configuration block for deployment controller configuration. See below.'
            deployment_controller.type: '- (Optional) Type of deployment controller. Valid values: CODE_DEPLOY, ECS, EXTERNAL. Default: ECS.'
            deployment_maximum_percent: '- (Optional) Upper limit (as a percentage of the service''s desiredCount) of the number of running tasks that can be running in a service during a deployment. Not valid when using the DAEMON scheduling strategy.'
            deployment_minimum_healthy_percent: '- (Optional) Lower limit (as a percentage of the service''s desiredCount) of the number of running tasks that must remain running and healthy in a service during a deployment.'
            desired_count: '- (Optional) Number of instances of the task definition to place and keep running. Defaults to 0. Do not specify if using the DAEMON scheduling strategy.'
            enable_ecs_managed_tags: '- (Optional) Specifies whether to enable Amazon ECS managed tags for the tasks within the service.'
            enable_execute_command: '- (Optional) Specifies whether to enable Amazon ECS Exec for the tasks within the service.'
            force_new_deployment: '- (Optional) Enable to force a new task deployment of the service. This can be used to update tasks to use a newer Docker image with same image/tag combination (e.g., myimage:latest), roll Fargate tasks onto a newer platform version, or immediately deploy ordered_placement_strategy and placement_constraints updates.'
            health_check_grace_period_seconds: '- (Optional) Seconds to ignore failing load balancer health checks on newly instantiated tasks to prevent premature shutdown, up to 2147483647. Only valid for services configured to use load balancers.'
            iam_role: '- (Optional) ARN of the IAM role that allows Amazon ECS to make calls to your load balancer on your behalf. This parameter is required if you are using a load balancer with your service, but only if your task definition does not use the awsvpc network mode. If using awsvpc network mode, do not specify this role. If your account has already created the Amazon ECS service-linked role, that role is used by default for your service unless you specify a role here.'
            id: '- ARN that identifies the service.'
            launch_type: '- (Optional) Launch type on which to run your service. The valid values are EC2, FARGATE, and EXTERNAL. Defaults to EC2.'
            load_balancer: '- (Optional) Configuration block for load balancers. See below.'
            load_balancer.container_name: '- (Required) Name of the container to associate with the load balancer (as it appears in a container definition).'
            load_balancer.container_port: '- (Required) Port on the container to associate with the load balancer.'
            load_balancer.elb_name: '- (Required for ELB Classic) Name of the ELB (Classic) to associate with the service.'
            load_balancer.target_group_arn: '- (Required for ALB/NLB) ARN of the Load Balancer target group to associate with the service.'
            name: '- (Required) Name of the service (up to 255 letters, numbers, hyphens, and underscores)'
            network_configuration: '- (Optional) Network configuration for the service. This parameter is required for task definitions that use the awsvpc network mode to receive their own Elastic Network Interface, and it is not supported for other network modes. See below.'
            network_configuration.assign_public_ip: '- (Optional) Assign a public IP address to the ENI (Fargate launch type only). Valid values are true or false. Default false.'
            network_configuration.security_groups: '- (Optional) Security groups associated with the task or service. If you do not specify a security group, the default security group for the VPC is used.'
            network_configuration.subnets: '- (Required) Subnets associated with the task or service.'
            ordered_placement_strategy: '- (Optional) Service level strategy rules that are taken into consideration during task placement. List from top to bottom in order of precedence. Updates to this configuration will take effect next task deployment unless force_new_deployment is enabled. The maximum number of ordered_placement_strategy blocks is 5. See below.'
            ordered_placement_strategy.field: |-
                - (Optional) For the spread placement strategy, valid values are instanceId (or host,
                which has the same effect), or any platform or custom attribute that is applied to a container instance.
                For the binpack type, valid values are memory and cpu. For the random type, this attribute is not
                needed. For more information, see Placement Strategy.
            ordered_placement_strategy.type: '- (Required) Type of placement strategy. Must be one of: binpack, random, or spread'
            placement_constraints: '- (Optional) Rules that are taken into consideration during task placement. Updates to this configuration will take effect next task deployment unless force_new_deployment is enabled. Maximum number of placement_constraints is 10. See below.'
            placement_constraints.expression: '-  (Optional) Cluster Query Language expression to apply to the constraint. Does not need to be specified for the distinctInstance type. For more information, see Cluster Query Language in the Amazon EC2 Container Service Developer Guide.'
            placement_constraints.type: '- (Required) Type of constraint. The only valid values at this time are memberOf and distinctInstance.'
            platform_version: '- (Optional) Platform version on which to run your service. Only applicable for launch_type set to FARGATE. Defaults to LATEST. More information about Fargate platform versions can be found in the AWS ECS User Guide.'
            propagate_tags: '- (Optional) Specifies whether to propagate the tags from the task definition or the service to the tasks. The valid values are SERVICE and TASK_DEFINITION.'
            scheduling_strategy: '- (Optional) Scheduling strategy to use for the service. The valid values are REPLICA and DAEMON. Defaults to REPLICA. Note that Tasks using the Fargate launch type or the .'
            service_registries: '- (Optional) Service discovery registries for the service. The maximum number of service_registries blocks is 1. See below.'
            service_registries.container_name: '- (Optional) Container name value, already specified in the task definition, to be used for your service discovery service.'
            service_registries.container_port: '- (Optional) Port value, already specified in the task definition, to be used for your service discovery service.'
            service_registries.port: '- (Optional) Port value used if your Service Discovery service specified an SRV record.'
            service_registries.registry_arn: '- (Required) ARN of the Service Registry. The currently supported service registry is Amazon Route 53 Auto Naming Service(aws_service_discovery_service). For more information, see Service'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            task_definition: '- (Optional) Family and revision (family:revision) or full ARN of the task definition that you want to run in your service. Required unless using the EXTERNAL deployment controller. If a revision is not specified, the latest ACTIVE revision is used.'
            update: '- (Default 20 minutes)'
            wait_for_steady_state: '- (Optional) If true, Terraform will wait for the service to reach a steady state (like aws ecs wait services-stable) before continuing. Default false.'
        importStatements: []
    aws_ecs_tag:
        subCategory: ECS (Elastic Container)
        description: Manages an individual ECS resource tag
        name: aws_ecs_tag
        title: aws_ecs_tag
        examples:
            - name: example
              manifest: |-
                {
                  "key": "Name",
                  "resource_arn": "${aws_batch_compute_environment.example.ecs_cluster_arn}",
                  "value": "Hello World"
                }
              references:
                resource_arn: aws_batch_compute_environment.example.ecs_cluster_arn
              dependencies:
                aws_batch_compute_environment.example: |-
                    {
                      "compute_environment_name": "example",
                      "service_role": "${aws_iam_role.example.arn}",
                      "type": "UNMANAGED"
                    }
        argumentDocs:
            id: '- ECS resource identifier and key, separated by a comma (,)'
            key: '- (Required) Tag name.'
            resource_arn: '- (Required) Amazon Resource Name (ARN) of the ECS resource to tag.'
            value: '- (Required) Tag value.'
        importStatements: []
    aws_ecs_task_definition:
        subCategory: ECS (Elastic Container)
        description: Manages a revision of an ECS task definition.
        name: aws_ecs_task_definition
        title: aws_ecs_task_definition
        examples:
            - name: service
              manifest: |-
                {
                  "container_definitions": "${jsonencode([\n    {\n      name      = \"first\"\n      image     = \"service-first\"\n      cpu       = 10\n      memory    = 512\n      essential = true\n      portMappings = [\n        {\n          containerPort = 80\n          hostPort      = 80\n        }\n      ]\n    },\n    {\n      name      = \"second\"\n      image     = \"service-second\"\n      cpu       = 10\n      memory    = 256\n      essential = true\n      portMappings = [\n        {\n          containerPort = 443\n          hostPort      = 443\n        }\n      ]\n    }\n  ])}",
                  "family": "service",
                  "placement_constraints": [
                    {
                      "expression": "attribute:ecs.availability-zone in [us-west-2a, us-west-2b]",
                      "type": "memberOf"
                    }
                  ],
                  "volume": [
                    {
                      "host_path": "/ecs/service-storage",
                      "name": "service-storage"
                    }
                  ]
                }
            - name: service
              manifest: |-
                {
                  "container_definitions": "${file(\"task-definitions/service.json\")}",
                  "family": "service",
                  "proxy_configuration": [
                    {
                      "container_name": "applicationContainerName",
                      "properties": {
                        "AppPorts": "8080",
                        "EgressIgnoredIPs": "169.254.170.2,169.254.169.254",
                        "IgnoredUID": "1337",
                        "ProxyEgressPort": 15001,
                        "ProxyIngressPort": 15000
                      },
                      "type": "APPMESH"
                    }
                  ]
                }
            - name: service
              manifest: |-
                {
                  "container_definitions": "${file(\"task-definitions/service.json\")}",
                  "family": "service",
                  "volume": [
                    {
                      "docker_volume_configuration": [
                        {
                          "autoprovision": true,
                          "driver": "local",
                          "driver_opts": {
                            "device": "${aws_efs_file_system.fs.dns_name}:/",
                            "o": "addr=${aws_efs_file_system.fs.dns_name},rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2,noresvport",
                            "type": "nfs"
                          },
                          "scope": "shared"
                        }
                      ],
                      "name": "service-storage"
                    }
                  ]
                }
            - name: service
              manifest: |-
                {
                  "container_definitions": "${file(\"task-definitions/service.json\")}",
                  "family": "service",
                  "volume": [
                    {
                      "efs_volume_configuration": [
                        {
                          "authorization_config": [
                            {
                              "access_point_id": "${aws_efs_access_point.test.id}",
                              "iam": "ENABLED"
                            }
                          ],
                          "file_system_id": "${aws_efs_file_system.fs.id}",
                          "root_directory": "/opt/data",
                          "transit_encryption": "ENABLED",
                          "transit_encryption_port": 2999
                        }
                      ],
                      "name": "service-storage"
                    }
                  ]
                }
              references:
                volume.efs_volume_configuration.authorization_config.access_point_id: aws_efs_access_point.test.id
                volume.efs_volume_configuration.file_system_id: aws_efs_file_system.fs.id
            - name: service
              manifest: |-
                {
                  "container_definitions": "${file(\"task-definitions/service.json\")}",
                  "family": "service",
                  "volume": [
                    {
                      "fsx_windows_file_server_volume_configuration": [
                        {
                          "authorization_config": [
                            {
                              "credentials_parameter": "${aws_secretsmanager_secret_version.test.arn}",
                              "domain": "${aws_directory_service_directory.test.name}"
                            }
                          ],
                          "file_system_id": "${aws_fsx_windows_file_system.test.id}",
                          "root_directory": "\\data"
                        }
                      ],
                      "name": "service-storage"
                    }
                  ]
                }
              references:
                volume.fsx_windows_file_server_volume_configuration.authorization_config.credentials_parameter: aws_secretsmanager_secret_version.test.arn
                volume.fsx_windows_file_server_volume_configuration.authorization_config.domain: aws_directory_service_directory.test.name
                volume.fsx_windows_file_server_volume_configuration.file_system_id: aws_fsx_windows_file_system.test.id
              dependencies:
                aws_secretsmanager_secret_version.test: |-
                    {
                      "secret_id": "${aws_secretsmanager_secret.test.id}",
                      "secret_string": "${jsonencode({ username : \"admin\", password : aws_directory_service_directory.test.password })}"
                    }
            - name: test
              manifest: |-
                {
                  "container_definitions": "[\n  {\n    \"cpu\": 10,\n    \"command\": [\"sleep\", \"10\"],\n    \"entryPoint\": [\"/\"],\n    \"environment\": [\n      {\"name\": \"VARNAME\", \"value\": \"VARVAL\"}\n    ],\n    \"essential\": true,\n    \"image\": \"jenkins\",\n    \"memory\": 128,\n    \"name\": \"jenkins\",\n    \"portMappings\": [\n      {\n        \"containerPort\": 80,\n        \"hostPort\": 8080\n      }\n    ],\n        \"resourceRequirements\":[\n            {\n                \"type\":\"InferenceAccelerator\",\n                \"value\":\"device_1\"\n            }\n        ]\n  }\n]\n",
                  "family": "test",
                  "inference_accelerator": [
                    {
                      "device_name": "device_1",
                      "device_type": "eia1.medium"
                    }
                  ]
                }
            - name: test
              manifest: |-
                {
                  "container_definitions": "[\n  {\n    \"name\": \"iis\",\n    \"image\": \"mcr.microsoft.com/windows/servercore/iis\",\n    \"cpu\": 1024,\n    \"memory\": 2048,\n    \"essential\": true\n  }\n]\n",
                  "cpu": 1024,
                  "family": "test",
                  "memory": 2048,
                  "network_mode": "awsvpc",
                  "requires_compatibilities": [
                    "FARGATE"
                  ],
                  "runtime_platform": [
                    {
                      "cpu_architecture": "X86_64",
                      "operating_system_family": "WINDOWS_SERVER_2019_CORE"
                    }
                  ]
                }
        argumentDocs:
            arn: '- Full ARN of the Task Definition (including both family and revision).'
            container_definitions: '- (Required) A list of valid container definitions provided as a single valid JSON document. Please note that you should only provide values that are part of the container definition document. For a detailed description of what parameters are available, see the Task Definition Parameters section from the official Developer Guide.'
            cpu: '- (Optional) Number of cpu units used by the task. If the requires_compatibilities is FARGATE this field is required.'
            ephemeral_storage: '- (Optional)  The amount of ephemeral storage to allocate for the task. This parameter is used to expand the total amount of ephemeral storage available, beyond the default amount, for tasks hosted on AWS Fargate. See Ephemeral Storage.'
            ephemeral_storage.size_in_gib: '- (Required) The total amount, in GiB, of ephemeral storage to set for the task. The minimum supported value is 21 GiB and the maximum supported value is 200 GiB.'
            execution_role_arn: '- (Optional) ARN of the task execution role that the Amazon ECS container agent and the Docker daemon can assume.'
            family: '- (Required) A unique name for your task definition.'
            inference_accelerator: '- (Optional) Configuration block(s) with Inference Accelerators settings. Detailed below.'
            inference_accelerator.device_name: '- (Required) Elastic Inference accelerator device name. The deviceName must also be referenced in a container definition as a ResourceRequirement.'
            inference_accelerator.device_type: '- (Required) Elastic Inference accelerator type to use.'
            ipc_mode: '- (Optional) IPC resource namespace to be used for the containers in the task The valid values are host, task, and none.'
            memory: '- (Optional) Amount (in MiB) of memory used by the task. If the requires_compatibilities is FARGATE this field is required.'
            network_mode: '- (Optional) Docker networking mode to use for the containers in the task. Valid values are none, bridge, awsvpc, and host.'
            pid_mode: '- (Optional) Process namespace to use for the containers in the task. The valid values are host and task.'
            placement_constraints: '- (Optional) Configuration block for rules that are taken into consideration during task placement. Maximum number of placement_constraints is 10. Detailed below.'
            placement_constraints.expression: '-  (Optional) Cluster Query Language expression to apply to the constraint. For more information, see Cluster Query Language in the Amazon EC2 Container Service Developer Guide.'
            placement_constraints.type: '- (Required) Type of constraint. Use memberOf to restrict selection to a group of valid candidates. Note that distinctInstance is not supported in task definitions.'
            proxy_configuration: '- (Optional) Configuration block for the App Mesh proxy. Detailed below.'
            proxy_configuration.container_name: '- (Required) Name of the container that will serve as the App Mesh proxy.'
            proxy_configuration.properties: '- (Required) Set of network configuration parameters to provide the Container Network Interface (CNI) plugin, specified a key-value mapping.'
            proxy_configuration.type: '- (Optional) Proxy type. The default value is APPMESH. The only supported value is APPMESH.'
            requires_compatibilities: '- (Optional) Set of launch types required by the task. The valid values are EC2 and FARGATE.'
            revision: '- Revision of the task in a particular family.'
            runtime_platform: '- (Optional) Configuration block for runtime_platform that containers in your task may use.'
            runtime_platform.cpu_architecture: '- (Optional) Must be set to either X86_64 or ARM64; see cpu architecture'
            runtime_platform.operating_system_family: '- (Optional) If the requires_compatibilities is FARGATE this field is required; must be set to a valid option from the operating system family in the runtime platform setting'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            task_role_arn: '- (Optional) ARN of IAM role that allows your Amazon ECS container task to make calls to other AWS services.'
            volume: '- (Optional) Configuration block for volumes that containers in your task may use. Detailed below.'
            volume.docker_volume_configuration: '- (Optional) Configuration block to configure a docker volume. Detailed below.'
            volume.docker_volume_configuration.autoprovision: '- (Optional) If this value is true, the Docker volume is created if it does not already exist. Note: This field is only used if the scope is shared.'
            volume.docker_volume_configuration.driver: '- (Optional) Docker volume driver to use. The driver value must match the driver name provided by Docker because it is used for task placement.'
            volume.docker_volume_configuration.driver_opts: '- (Optional) Map of Docker driver specific options.'
            volume.docker_volume_configuration.labels: '- (Optional) Map of custom metadata to add to your Docker volume.'
            volume.docker_volume_configuration.scope: '- (Optional) Scope for the Docker volume, which determines its lifecycle, either task or shared.  Docker volumes that are scoped to a task are automatically provisioned when the task starts and destroyed when the task stops. Docker volumes that are scoped as shared persist after the task stops.'
            volume.efs_volume_configuration: '- (Optional) Configuration block for an EFS volume. Detailed below.'
            volume.efs_volume_configuration.authorization_config: '- (Optional) Configuration block for authorization for the Amazon EFS file system. Detailed below.'
            volume.efs_volume_configuration.authorization_config.access_point_id: '- (Optional) Access point ID to use. If an access point is specified, the root directory value will be relative to the directory set for the access point. If specified, transit encryption must be enabled in the EFSVolumeConfiguration.'
            volume.efs_volume_configuration.authorization_config.credentials_parameter: '- (Required) The authorization credential option to use. The authorization credential options can be provided using either the Amazon Resource Name (ARN) of an AWS Secrets Manager secret or AWS Systems Manager Parameter Store parameter. The ARNs refer to the stored credentials.'
            volume.efs_volume_configuration.authorization_config.domain: '- (Required) A fully qualified domain name hosted by an AWS Directory Service Managed Microsoft AD (Active Directory) or self-hosted AD on Amazon EC2.'
            volume.efs_volume_configuration.authorization_config.iam: '- (Optional) Whether or not to use the Amazon ECS task IAM role defined in a task definition when mounting the Amazon EFS file system. If enabled, transit encryption must be enabled in the EFSVolumeConfiguration. Valid values: ENABLED, DISABLED. If this parameter is omitted, the default value of DISABLED is used.'
            volume.efs_volume_configuration.file_system_id: '- (Required) ID of the EFS File System.'
            volume.efs_volume_configuration.root_directory: '- (Optional) Directory within the Amazon EFS file system to mount as the root directory inside the host. If this parameter is omitted, the root of the Amazon EFS volume will be used. Specifying / will have the same effect as omitting this parameter. This argument is ignored when using authorization_config.'
            volume.efs_volume_configuration.transit_encryption: '- (Optional) Whether or not to enable encryption for Amazon EFS data in transit between the Amazon ECS host and the Amazon EFS server. Transit encryption must be enabled if Amazon EFS IAM authorization is used. Valid values: ENABLED, DISABLED. If this parameter is omitted, the default value of DISABLED is used.'
            volume.efs_volume_configuration.transit_encryption_port: '- (Optional) Port to use for transit encryption. If you do not specify a transit encryption port, it will use the port selection strategy that the Amazon EFS mount helper uses.'
            volume.fsx_windows_file_server_volume_configuration: '- (Optional) Configuration block for an FSX Windows File Server volume. Detailed below.'
            volume.fsx_windows_file_server_volume_configuration.authorization_config: '- (Required) Configuration block for authorization for the Amazon FSx for Windows File Server file system detailed below.'
            volume.fsx_windows_file_server_volume_configuration.file_system_id: '- (Required) The Amazon FSx for Windows File Server file system ID to use.'
            volume.fsx_windows_file_server_volume_configuration.root_directory: '- (Required) The directory within the Amazon FSx for Windows File Server file system to mount as the root directory inside the host.'
            volume.host_path: '- (Optional) Path on the host container instance that is presented to the container. If not set, ECS will create a nonpersistent data volume that starts empty and is deleted after the task has finished.'
            volume.name: |-
                - (Required) Name of the volume. This name is referenced in the sourceVolume
                parameter of container definition in the mountPoints section.
        importStatements: []
    aws_ecs_task_set:
        subCategory: ECS (Elastic Container)
        description: Provides an ECS task set.
        name: aws_ecs_task_set
        title: aws_ecs_task_set
        examples:
            - name: example
              manifest: |-
                {
                  "cluster": "${aws_ecs_cluster.example.id}",
                  "load_balancer": [
                    {
                      "container_name": "mongo",
                      "container_port": 8080,
                      "target_group_arn": "${aws_lb_target_group.example.arn}"
                    }
                  ],
                  "service": "${aws_ecs_service.example.id}",
                  "task_definition": "${aws_ecs_task_definition.example.arn}"
                }
              references:
                cluster: aws_ecs_cluster.example.id
                load_balancer.target_group_arn: aws_lb_target_group.example.arn
                service: aws_ecs_service.example.id
                task_definition: aws_ecs_task_definition.example.arn
            - name: example
              manifest: |-
                {
                  "lifecycle": [
                    {
                      "ignore_changes": [
                        "scale"
                      ]
                    }
                  ],
                  "scale": [
                    {
                      "value": 50
                    }
                  ]
                }
        argumentDocs:
            arn: '- The Amazon Resource Name (ARN) that identifies the task set.'
            capacity_provider_strategy: '- (Optional) The capacity provider strategy to use for the service. Can be one or more.  Defined below.'
            capacity_provider_strategy.base: '- (Optional) The number of tasks, at a minimum, to run on the specified capacity provider. Only one capacity provider in a capacity provider strategy can have a base defined.'
            capacity_provider_strategy.capacity_provider: '- (Required) The short name or full Amazon Resource Name (ARN) of the capacity provider.'
            capacity_provider_strategy.weight: '- (Required) The relative percentage of the total number of launched tasks that should use the specified capacity provider.'
            cluster: '- (Required) The short name or ARN of the cluster that hosts the service to create the task set in.'
            external_id: '- (Optional) The external ID associated with the task set.'
            force_delete: '- (Optional) Whether to allow deleting the task set without waiting for scaling down to 0. You can force a task set to delete even if it''s in the process of scaling a resource. Normally, Terraform drains all the tasks before deleting the task set. This bypasses that behavior and potentially leaves resources dangling.'
            id: '- The task_set_id, service and cluster separated by commas (,).'
            launch_type: '- (Optional) The launch type on which to run your service. The valid values are EC2, FARGATE, and EXTERNAL. Defaults to EC2.'
            load_balancer: '- (Optional) Details on load balancers that are used with a task set. Detailed below.'
            load_balancer.container_name: '- (Required) The name of the container to associate with the load balancer (as it appears in a container definition).'
            load_balancer.container_port: '- (Optional) The port on the container to associate with the load balancer. Defaults to 0 if not specified.'
            load_balancer.load_balancer_name: '- (Optional, Required for ELB Classic) The name of the ELB (Classic) to associate with the service.'
            load_balancer.target_group_arn: '- (Optional, Required for ALB/NLB) The ARN of the Load Balancer target group to associate with the service.'
            network_configuration: '- (Optional) The network configuration for the service. This parameter is required for task definitions that use the awsvpc network mode to receive their own Elastic Network Interface, and it is not supported for other network modes. Detailed below.'
            network_configuration.assign_public_ip: '- (Optional) Whether to assign a public IP address to the ENI (FARGATE launch type only). Valid values are true or false. Default false.'
            network_configuration.security_groups: '- (Optional) The security groups associated with the task or service. If you do not specify a security group, the default security group for the VPC is used. Maximum of 5.'
            network_configuration.subnets: '- (Required) The subnets associated with the task or service. Maximum of 16.'
            platform_version: '- (Optional) The platform version on which to run your service. Only applicable for launch_type set to FARGATE. Defaults to LATEST. More information about Fargate platform versions can be found in the AWS ECS User Guide.'
            scale: '- (Optional) A floating-point percentage of the desired number of tasks to place and keep running in the task set. Detailed below.'
            scale.unit: '- (Optional) The unit of measure for the scale value. Default: PERCENT.'
            scale.value: '- (Optional) The value, specified as a percent total of a service''s desiredCount, to scale the task set. Defaults to 0 if not specified. Accepted values are numbers between 0.0 and 100.0.'
            service: '- (Required) The short name or ARN of the ECS service.'
            service_registries: '- (Optional) The service discovery registries for the service. The maximum number of service_registries blocks is 1. Detailed below.'
            service_registries.container_name: '- (Optional) The container name value, already specified in the task definition, to be used for your service discovery service.'
            service_registries.container_port: '- (Optional) The port value, already specified in the task definition, to be used for your service discovery service.'
            service_registries.port: '- (Optional) The port value used if your Service Discovery service specified an SRV record.'
            service_registries.registry_arn: '- (Required) The ARN of the Service Registry. The currently supported service registry is Amazon Route 53 Auto Naming Service(aws_service_discovery_service resource). For more information, see Service.'
            stability_status: '- The stability status. This indicates whether the task set has reached a steady state.'
            status: '- The status of the task set.'
            tags: '- (Optional) A map of tags to assign to the file system. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level. If you have set copy_tags_to_backups to true, and you specify one or more tags, no existing file system tags are copied from the file system to the backup.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            task_definition: '- (Required) The family and revision (family:revision) or full ARN of the task definition that you want to run in your service.'
            task_set_id: '- The ID of the task set.'
            wait_until_stable: '- (Optional) Whether terraform should wait until the task set has reached STEADY_STATE.'
            wait_until_stable_timeout: '- (Optional) Wait timeout for task set to reach STEADY_STATE. Valid time units include ns, us (or µs), ms, s, m, and h. Default 10m.'
        importStatements: []
    aws_efs_access_point:
        subCategory: EFS (Elastic File System)
        description: Provides an Elastic File System (EFS) access point.
        name: aws_efs_access_point
        title: aws_efs_access_point
        examples:
            - name: test
              manifest: |-
                {
                  "file_system_id": "${aws_efs_file_system.foo.id}"
                }
              references:
                file_system_id: aws_efs_file_system.foo.id
        argumentDocs:
            arn: '- ARN of the access point.'
            file_system_arn: '- ARN of the file system.'
            file_system_id: '- (Required) ID of the file system for which the access point is intended.'
            id: '- ID of the access point.'
            posix_user: '- (Optional) Operating system user and group applied to all file system requests made using the access point. Detailed below.'
            posix_user.gid: '- (Required) POSIX group ID used for all file system operations using this access point.'
            posix_user.secondary_gids: '- (Optional) Secondary POSIX group IDs used for all file system operations using this access point.'
            posix_user.uid: '- (Required) POSIX user ID used for all file system operations using this access point.'
            root_directory: '- (Optional) Directory on the Amazon EFS file system that the access point provides access to. Detailed below.'
            root_directory.creation_info: '- (Optional) POSIX IDs and permissions to apply to the access point''s Root Directory. See Creation Info below.'
            root_directory.creation_info.owner_gid: '- (Required) POSIX group ID to apply to the root_directory.'
            root_directory.creation_info.owner_uid: '- (Required) POSIX user ID to apply to the root_directory.'
            root_directory.creation_info.permissions: '- (Required) POSIX permissions to apply to the RootDirectory, in the format of an octal number representing the file''s mode bits.'
            root_directory.path: '- (Optional) Path on the EFS file system to expose as the root directory to NFS clients using the access point to access the EFS file system. A path can have up to four subdirectories. If the specified path does not exist, you are required to provide creation_info.'
            tags: '- (Optional) Key-value mapping of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_efs_backup_policy:
        subCategory: EFS (Elastic File System)
        description: Provides an Elastic File System (EFS) Backup Policy resource.
        name: aws_efs_backup_policy
        title: aws_efs_backup_policy
        examples:
            - name: policy
              manifest: |-
                {
                  "backup_policy": [
                    {
                      "status": "ENABLED"
                    }
                  ],
                  "file_system_id": "${aws_efs_file_system.fs.id}"
                }
              references:
                file_system_id: aws_efs_file_system.fs.id
              dependencies:
                aws_efs_file_system.fs: |-
                    {
                      "creation_token": "my-product"
                    }
        argumentDocs:
            backup_policy: '- (Required) A backup_policy object (documented below).'
            file_system_id: '- (Required) The ID of the EFS file system.'
            id: '- The ID that identifies the file system (e.g., fs-ccfc0d65).'
            status: '- (Required) A status of the backup policy. Valid values: ENABLED, DISABLED.'
        importStatements: []
    aws_efs_file_system:
        subCategory: EFS (Elastic File System)
        description: Provides an Elastic File System (EFS) File System resource.
        name: aws_efs_file_system
        title: aws_efs_file_system
        examples:
            - name: foo
              manifest: |-
                {
                  "creation_token": "my-product",
                  "tags": {
                    "Name": "MyProduct"
                  }
                }
            - name: foo_with_lifecyle_policy
              manifest: |-
                {
                  "creation_token": "my-product",
                  "lifecycle_policy": [
                    {
                      "transition_to_ia": "AFTER_30_DAYS"
                    }
                  ]
                }
        argumentDocs:
            arn: '- Amazon Resource Name of the file system.'
            availability_zone_id: '- The identifier of the Availability Zone in which the file system''s One Zone storage classes exist.'
            availability_zone_name: '- (Optional) the AWS Availability Zone in which to create the file system. Used to create a file system that uses One Zone storage classes. See user guide for more information.'
            creation_token: |-
                - (Optional) A unique name (a maximum of 64 characters are allowed)
                used as reference when creating the Elastic File System to ensure idempotent file
                system creation. By default generated by Terraform. See Elastic File System
                user guide for more information.
            dns_name: '- The DNS name for the filesystem per documented convention.'
            encrypted: '- (Optional) If true, the disk will be encrypted.'
            id: '- The ID that identifies the file system (e.g., fs-ccfc0d65).'
            kms_key_id: '- (Optional) The ARN for the KMS encryption key. When specifying kms_key_id, encrypted needs to be set to true.'
            lifecycle_policy: '- (Optional) A file system lifecycle policy object (documented below).'
            number_of_mount_targets: '- The current number of mount targets that the file system has.'
            owner_id: '- The AWS account that created the file system. If the file system was createdby an IAM user, the parent account to which the user belongs is the owner.'
            performance_mode: '- (Optional) The file system performance mode. Can be either "generalPurpose" or "maxIO" (Default: "generalPurpose").'
            provisioned_throughput_in_mibps: '- (Optional) The throughput, measured in MiB/s, that you want to provision for the file system. Only applicable with throughput_mode set to provisioned.'
            size_in_bytes: '- The latest known metered size (in bytes) of data stored in the file system, the value is not the exact size that the file system was at any point in time. See Size In Bytes.'
            tags: '- (Optional) A map of tags to assign to the file system. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            throughput_mode: '- (Optional) Throughput mode for the file system. Defaults to bursting. Valid values: bursting, provisioned. When using provisioned, also set provisioned_throughput_in_mibps.'
            transition_to_ia: '- (Optional) Indicates how long it takes to transition files to the IA storage class. Valid values: AFTER_7_DAYS, AFTER_14_DAYS, AFTER_30_DAYS, AFTER_60_DAYS, or AFTER_90_DAYS.'
            transition_to_primary_storage_class: '- (Optional) Describes the policy used to transition a file from infequent access storage to primary storage. Valid values: AFTER_1_ACCESS.'
            value: '- The latest known metered size (in bytes) of data stored in the file system.'
            value_in_ia: '- The latest known metered size (in bytes) of data stored in the Infrequent Access storage class.'
            value_in_standard: '- The latest known metered size (in bytes) of data stored in the Standard storage class.'
        importStatements: []
    aws_efs_file_system_policy:
        subCategory: EFS (Elastic File System)
        description: Provides an Elastic File System (EFS) File System Policy resource.
        name: aws_efs_file_system_policy
        title: aws_efs_file_system_policy
        examples:
            - name: policy
              manifest: |-
                {
                  "bypass_policy_lockout_safety_check": true,
                  "file_system_id": "${aws_efs_file_system.fs.id}",
                  "policy": "{\n    \"Version\": \"2012-10-17\",\n    \"Id\": \"ExamplePolicy01\",\n    \"Statement\": [\n        {\n            \"Sid\": \"ExampleStatement01\",\n            \"Effect\": \"Allow\",\n            \"Principal\": {\n                \"AWS\": \"*\"\n            },\n            \"Resource\": \"${aws_efs_file_system.test.arn}\",\n            \"Action\": [\n                \"elasticfilesystem:ClientMount\",\n                \"elasticfilesystem:ClientWrite\"\n            ],\n            \"Condition\": {\n                \"Bool\": {\n                    \"aws:SecureTransport\": \"true\"\n                }\n            }\n        }\n    ]\n}\n"
                }
              references:
                file_system_id: aws_efs_file_system.fs.id
              dependencies:
                aws_efs_file_system.fs: |-
                    {
                      "creation_token": "my-product"
                    }
        argumentDocs:
            bypass_policy_lockout_safety_check: '- (Optional) A flag to indicate whether to bypass the aws_efs_file_system_policy lockout safety check. The policy lockout safety check determines whether the policy in the request will prevent the principal making the request will be locked out from making future PutFileSystemPolicy requests on the file system. Set bypass_policy_lockout_safety_check to true only when you intend to prevent the principal that is making the request from making a subsequent PutFileSystemPolicy request on the file system. The default value is false.'
            file_system_id: '- (Required) The ID of the EFS file system.'
            id: '- The ID that identifies the file system (e.g., fs-ccfc0d65).'
            policy: '- (Required) The JSON formatted file system policy for the EFS file system. see Docs for more info.'
        importStatements: []
    aws_efs_mount_target:
        subCategory: EFS (Elastic File System)
        description: Provides an Elastic File System (EFS) mount target.
        name: aws_efs_mount_target
        title: aws_efs_mount_target
        examples:
            - name: alpha
              manifest: |-
                {
                  "file_system_id": "${aws_efs_file_system.foo.id}",
                  "subnet_id": "${aws_subnet.alpha.id}"
                }
              references:
                file_system_id: aws_efs_file_system.foo.id
                subnet_id: aws_subnet.alpha.id
              dependencies:
                aws_subnet.alpha: |-
                    {
                      "availability_zone": "us-west-2a",
                      "cidr_block": "10.0.1.0/24",
                      "vpc_id": "${aws_vpc.foo.id}"
                    }
                aws_vpc.foo: |-
                    {
                      "cidr_block": "10.0.0.0/16"
                    }
        argumentDocs:
            availability_zone_id: '- The unique and consistent identifier of the Availability Zone (AZ) that the mount target resides in.'
            availability_zone_name: '- The name of the Availability Zone (AZ) that the mount target resides in.'
            dns_name: '- The DNS name for the EFS file system.'
            file_system_arn: '- Amazon Resource Name of the file system.'
            file_system_id: '- (Required) The ID of the file system for which the mount target is intended.'
            id: '- The ID of the mount target.'
            ip_address: |-
                - (Optional) The address (within the address range of the specified subnet) at
                which the file system may be mounted via the mount target.
            mount_target_dns_name: '- The DNS name for the given subnet/AZ per documented convention.'
            network_interface_id: '- The ID of the network interface that Amazon EFS created when it created the mount target.'
            owner_id: '- AWS account ID that owns the resource.'
            security_groups: |-
                - (Optional) A list of up to 5 VPC security group IDs (that must
                be for the same VPC as subnet specified) in effect for the mount target.
            subnet_id: '- (Required) The ID of the subnet to add the mount target in.'
        importStatements: []
    aws_efs_replication_configuration:
        subCategory: EFS (Elastic File System)
        description: Provides an Elastic File System (EFS) Replication Configuration.
        name: aws_efs_replication_configuration
        title: aws_efs_replication_configuration
        examples:
            - name: example
              manifest: |-
                {
                  "destination": [
                    {
                      "region": "us-west-2"
                    }
                  ],
                  "source_file_system_id": "${aws_efs_file_system.example.id}"
                }
              references:
                source_file_system_id: aws_efs_file_system.example.id
              dependencies:
                aws_efs_file_system.example: '{}'
            - name: example
              manifest: |-
                {
                  "destination": [
                    {
                      "availability_zone_name": "us-west-2b",
                      "kms_key_id": "1234abcd-12ab-34cd-56ef-1234567890ab"
                    }
                  ],
                  "source_file_system_id": "${aws_efs_file_system.example.id}"
                }
              references:
                source_file_system_id: aws_efs_file_system.example.id
              dependencies:
                aws_efs_file_system.example: '{}'
        argumentDocs:
            availability_zone_name: '- (Optional) The availability zone in which the replica should be created. If specified, the replica will be created with One Zone storage. If omitted, regional storage will be used.'
            creation_time: '- When the replication configuration was created.'
            destination: '- (Required) A destination configuration block (documented below).'
            destination[0].file_system_id: '- The fs ID of the replica.'
            destination[0].status: '- The status of the replication.'
            kms_key_id: '- (Optional) The Key ID, ARN, alias, or alias ARN of the KMS key that should be used to encrypt the replica file system. If omitted, the default KMS key for EFS /aws/elasticfilesystem will be used.'
            original_source_file_system_arn: '- The Amazon Resource Name (ARN) of the original source Amazon EFS file system in the replication configuration.'
            region: '- (Optional) The region in which the replica should be created.'
            source_file_system_arn: '- The Amazon Resource Name (ARN) of the current source file system in the replication configuration.'
            source_file_system_id: '- (Required) The ID of the file system that is to be replicated.'
            source_file_system_region: '- The AWS Region in which the source Amazon EFS file system is located.'
            timeouts.create: '- (Default 10 minutes) Used when creating the replication configuration.'
            timeouts.delete: '- (Default 20 minutes) Used when deleting the replication configuration.'
        importStatements: []
    aws_egress_only_internet_gateway:
        subCategory: VPC (Virtual Private Cloud)
        description: Provides a resource to create an egress-only Internet gateway.
        name: aws_egress_only_internet_gateway
        title: aws_egress_only_internet_gateway
        examples:
            - name: example
              manifest: |-
                {
                  "tags": {
                    "Name": "main"
                  },
                  "vpc_id": "${aws_vpc.example.id}"
                }
              references:
                vpc_id: aws_vpc.example.id
              dependencies:
                aws_vpc.example: |-
                    {
                      "assign_generated_ipv6_cidr_block": true,
                      "cidr_block": "10.1.0.0/16"
                    }
        argumentDocs:
            id: '- The ID of the egress-only Internet gateway.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            vpc_id: '- (Required) The VPC ID to create in.'
        importStatements: []
    aws_eip:
        subCategory: EC2 (Elastic Compute Cloud)
        description: Provides an Elastic IP resource.
        name: aws_eip
        title: aws_eip
        examples:
            - name: lb
              manifest: |-
                {
                  "instance": "${aws_instance.web.id}",
                  "vpc": true
                }
              references:
                instance: aws_instance.web.id
            - name: one
              manifest: |-
                {
                  "associate_with_private_ip": "10.0.0.10",
                  "network_interface": "${aws_network_interface.multi-ip.id}",
                  "vpc": true
                }
              references:
                network_interface: aws_network_interface.multi-ip.id
              dependencies:
                aws_network_interface.multi-ip: |-
                    {
                      "private_ips": [
                        "10.0.0.10",
                        "10.0.0.11"
                      ],
                      "subnet_id": "${aws_subnet.main.id}"
                    }
            - name: two
              manifest: |-
                {
                  "associate_with_private_ip": "10.0.0.11",
                  "network_interface": "${aws_network_interface.multi-ip.id}",
                  "vpc": true
                }
              references:
                network_interface: aws_network_interface.multi-ip.id
              dependencies:
                aws_network_interface.multi-ip: |-
                    {
                      "private_ips": [
                        "10.0.0.10",
                        "10.0.0.11"
                      ],
                      "subnet_id": "${aws_subnet.main.id}"
                    }
            - name: bar
              manifest: |-
                {
                  "associate_with_private_ip": "10.0.0.12",
                  "depends_on": [
                    "${aws_internet_gateway.gw}"
                  ],
                  "instance": "${aws_instance.foo.id}",
                  "vpc": true
                }
              references:
                instance: aws_instance.foo.id
              dependencies:
                aws_instance.foo: |-
                    {
                      "ami": "ami-5189a661",
                      "instance_type": "t2.micro",
                      "private_ip": "10.0.0.12",
                      "subnet_id": "${aws_subnet.tf_test_subnet.id}"
                    }
                aws_internet_gateway.gw: |-
                    {
                      "vpc_id": "${aws_vpc.default.id}"
                    }
                aws_subnet.tf_test_subnet: |-
                    {
                      "cidr_block": "10.0.0.0/24",
                      "depends_on": [
                        "${aws_internet_gateway.gw}"
                      ],
                      "map_public_ip_on_launch": true,
                      "vpc_id": "${aws_vpc.default.id}"
                    }
                aws_vpc.default: |-
                    {
                      "cidr_block": "10.0.0.0/16",
                      "enable_dns_hostnames": true
                    }
            - name: byoip-ip
              manifest: |-
                {
                  "public_ipv4_pool": "ipv4pool-ec2-012345",
                  "vpc": true
                }
        argumentDocs:
            address: '- (Optional) IP address from an EC2 BYOIP pool. This option is only available for VPC EIPs.'
            allocation_id: '- ID that AWS assigns to represent the allocation of the Elastic IP address for use with instances in a VPC.'
            associate_with_private_ip: '- (Optional) User-specified primary or secondary private IP address to associate with the Elastic IP address. If no private IP address is specified, the Elastic IP address is associated with the primary private IP address.'
            association_id: '- ID representing the association of the address with an instance in a VPC.'
            carrier_ip: '- Carrier IP address.'
            customer_owned_ip: '- Customer owned IP.'
            customer_owned_ipv4_pool: '- (Optional) ID  of a customer-owned address pool. For more on customer owned IP addressed check out Customer-owned IP addresses guide.'
            delete: '- (Default 3 minutes) How long to wait for an EIP to be deleted.'
            domain: '- Indicates if this EIP is for use in VPC (vpc) or EC2 Classic (standard).'
            id: '- Contains the EIP allocation ID.'
            instance: '- (Optional) EC2 instance ID.'
            network_border_group: '- (Optional) Location from which the IP address is advertised. Use this parameter to limit the address to this location.'
            network_interface: '- (Optional) Network interface ID to associate with.'
            private_dns: '- The Private DNS associated with the Elastic IP address (if in VPC).'
            private_ip: '- Contains the private IP address (if in VPC).'
            public_dns: '- Public DNS associated with the Elastic IP address.'
            public_ip: '- Contains the public IP address.'
            public_ipv4_pool: '- (Optional) EC2 IPv4 address pool identifier or amazon. This option is only available for VPC EIPs.'
            read: '- (Default 15 minutes) How long to wait querying for information about EIPs.'
            tags: '- (Optional) Map of tags to assign to the resource. Tags can only be applied to EIPs in a VPC. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            update: '- (Default 5 minutes) How long to wait for an EIP to be updated.'
            vpc: '- (Optional) Boolean if the EIP is in a VPC or not.'
        importStatements: []
    aws_eip_association:
        subCategory: EC2 (Elastic Compute Cloud)
        description: Provides an AWS EIP Association
        name: aws_eip_association
        title: aws_eip_association
        examples:
            - name: eip_assoc
              manifest: |-
                {
                  "allocation_id": "${aws_eip.example.id}",
                  "instance_id": "${aws_instance.web.id}"
                }
              references:
                allocation_id: aws_eip.example.id
                instance_id: aws_instance.web.id
              dependencies:
                aws_eip.example: |-
                    {
                      "vpc": true
                    }
                aws_instance.web: |-
                    {
                      "ami": "ami-21f78e11",
                      "availability_zone": "us-west-2a",
                      "instance_type": "t2.micro",
                      "tags": {
                        "Name": "HelloWorld"
                      }
                    }
        argumentDocs:
            allocation_id: '- (Optional) The allocation ID. This is required for EC2-VPC.'
            allow_reassociation: |-
                - (Optional, Boolean) Whether to allow an Elastic IP to
                be re-associated. Defaults to true in VPC.
            association_id: |-
                - The ID that represents the association of the Elastic IP
                address with an instance.
            instance_id: |-
                - (Optional) The ID of the instance. This is required for
                EC2-Classic. For EC2-VPC, you can specify either the instance ID or the
                network interface ID, but not both. The operation fails if you specify an
                instance ID unless exactly one network interface is attached.
            network_interface_id: |-
                - (Optional) The ID of the network interface. If the
                instance has more than one network interface, you must specify a network
                interface ID.
            private_ip_address: |-
                - (Optional) The primary or secondary private IP address
                to associate with the Elastic IP address. If no private IP address is
                specified, the Elastic IP address is associated with the primary private IP
                address.
            public_ip: '- (Optional) The Elastic IP address. This is required for EC2-Classic.'
        importStatements: []
    aws_eks_addon:
        subCategory: EKS (Elastic Kubernetes)
        description: Manages an EKS add-on
        name: aws_eks_addon
        title: aws_eks_addon
        examples:
            - name: example
              manifest: |-
                {
                  "addon_name": "vpc-cni",
                  "cluster_name": "${aws_eks_cluster.example.name}"
                }
              references:
                cluster_name: aws_eks_cluster.example.name
        argumentDocs:
            addon_name: |-
                – (Required) Name of the EKS add-on. The name must match one of
                the names returned by describe-addon-versions.
            addon_version: |-
                – (Optional) The version of the EKS add-on. The version must
                match one of the versions returned by describe-addon-versions.
            arn: '- Amazon Resource Name (ARN) of the EKS add-on.'
            cluster_name: – (Required) Name of the EKS Cluster. Must be between 1-100 characters in length. Must begin with an alphanumeric character, and must only contain alphanumeric characters, dashes and underscores (^[0-9A-Za-z][A-Za-z0-9\-_]+$).
            created_at: '- Date and time in RFC3339 format that the EKS add-on was created.'
            id: '- EKS Cluster name and EKS Addon name separated by a colon (:).'
            modified_at: '- Date and time in RFC3339 format that the EKS add-on was updated.'
            preserve: '- (Optional) Indicates if you want to preserve the created resources when deleting the EKS add-on.'
            resolve_conflicts: |-
                - (Optional) Define how to resolve parameter value conflicts
                when migrating an existing add-on to an Amazon EKS add-on or when applying
                version updates to the add-on. Valid values are NONE and OVERWRITE.
            service_account_role_arn: |-
                - (Optional) The Amazon Resource Name (ARN) of an
                existing IAM role to bind to the add-on's service account. The role must be
                assigned the IAM permissions required by the add-on. If you don't specify
                an existing IAM role, then the add-on uses the permissions assigned to the node
                IAM role. For more information, see Amazon EKS node IAM role
                in the Amazon EKS User Guide.
            status: '- Status of the EKS add-on.'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- (Optional) Key-value map of resource tags, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_eks_cluster:
        subCategory: EKS (Elastic Kubernetes)
        description: Manages an EKS Cluster
        name: aws_eks_cluster
        title: aws_eks_cluster
        examples:
            - name: example
              manifest: |-
                {
                  "depends_on": [
                    "${aws_iam_role_policy_attachment.example-AmazonEKSClusterPolicy}",
                    "${aws_iam_role_policy_attachment.example-AmazonEKSVPCResourceController}"
                  ],
                  "name": "example",
                  "role_arn": "${aws_iam_role.example.arn}",
                  "vpc_config": [
                    {
                      "subnet_ids": [
                        "${aws_subnet.example1.id}",
                        "${aws_subnet.example2.id}"
                      ]
                    }
                  ]
                }
              references:
                role_arn: aws_iam_role.example.arn
            - name: example
              manifest: |-
                {
                  "depends_on": [
                    "${aws_cloudwatch_log_group.example}"
                  ],
                  "enabled_cluster_log_types": [
                    "api",
                    "audit"
                  ],
                  "name": "${var.cluster_name}"
                }
              references:
                name: var.cluster_name
              dependencies:
                aws_cloudwatch_log_group.example: |-
                    {
                      "name": "/aws/eks/${var.cluster_name}/cluster",
                      "retention_in_days": 7
                    }
            - name: example
              manifest: '{}'
              dependencies:
                aws_iam_openid_connect_provider.example: |-
                    {
                      "client_id_list": [
                        "sts.amazonaws.com"
                      ],
                      "thumbprint_list": [
                        "${data.tls_certificate.example.certificates[0].sha1_fingerprint}"
                      ],
                      "url": "${aws_eks_cluster.example.identity[0].oidc[0].issuer}"
                    }
                aws_iam_role.example: |-
                    {
                      "assume_role_policy": "${data.aws_iam_policy_document.example_assume_role_policy.json}",
                      "name": "example"
                    }
        argumentDocs:
            arn: '- ARN of the cluster.'
            certificate_authority: '- Attribute block containing certificate-authority-data for your cluster. Detailed below.'
            certificate_authority.data: '- Base64 encoded certificate data required to communicate with your cluster. Add this to the certificate-authority-data section of the kubeconfig file for your cluster.'
            cluster_security_group_id: '- Cluster security group that was created by Amazon EKS for the cluster. Managed node groups use this security group for control-plane-to-data-plane communication.'
            create: '- (Default 30 minutes) How long to wait for the EKS Cluster to be created.'
            created_at: '- Unix epoch timestamp in seconds for when the cluster was created.'
            delete: '- (Default 15 minutes) How long to wait for the EKS Cluster to be deleted.'
            enabled_cluster_log_types: '- (Optional) List of the desired control plane logging to enable. For more information, see Amazon EKS Control Plane Logging.'
            encryption_config: '- (Optional) Configuration block with encryption configuration for the cluster. Only available on Kubernetes 1.13 and above clusters created after March 6, 2020. Detailed below.'
            encryption_config.provider: '- (Required) Configuration block with provider for encryption. Detailed below.'
            encryption_config.provider.key_arn: '- (Required) ARN of the Key Management Service (KMS) customer master key (CMK). The CMK must be symmetric, created in the same region as the cluster, and if the CMK was created in a different account, the user must have access to the CMK. For more information, see Allowing Users in Other Accounts to Use a CMK in the AWS Key Management Service Developer Guide.'
            encryption_config.resources: '- (Required) List of strings with resources to be encrypted. Valid values: secrets.'
            endpoint: '- Endpoint for your Kubernetes API server.'
            endpoint_private_access: '- (Optional) Whether the Amazon EKS private API server endpoint is enabled. Default is false.'
            endpoint_public_access: '- (Optional) Whether the Amazon EKS public API server endpoint is enabled. Default is true.'
            id: '- Name of the cluster.'
            identity: '- Attribute block containing identity provider information for your cluster. Only available on Kubernetes version 1.13 and 1.14 clusters created or upgraded on or after September 3, 2019. Detailed below.'
            identity.oidc: '- Nested block containing OpenID Connect identity provider information for the cluster. Detailed below.'
            identity.oidc.issuer: '- Issuer URL for the OpenID Connect identity provider.'
            kubernetes_network_config: '- (Optional) Configuration block with kubernetes network configuration for the cluster. Detailed below. If removed, Terraform will only perform drift detection if a configuration value is provided.'
            kubernetes_network_config.ip_family: '- (Optional) The IP family used to assign Kubernetes pod and service addresses. Valid values are ipv4 (default) and ipv6. You can only specify an IP family when you create a cluster, changing this value will force a new cluster to be created.'
            kubernetes_network_config.service_ipv4_cidr: '- (Optional) The CIDR block to assign Kubernetes service IP addresses from. If you don''t specify a block, Kubernetes assigns addresses from either the 10.100.0.0/16 or 172.20.0.0/16 CIDR blocks. We recommend that you specify a block that does not overlap with resources in other networks that are peered or connected to your VPC. You can only specify a custom CIDR block when you create a cluster, changing this value will force a new cluster to be created. The block must meet the following requirements:'
            name: – (Required) Name of the cluster. Must be between 1-100 characters in length. Must begin with an alphanumeric character, and must only contain alphanumeric characters, dashes and underscores (^[0-9A-Za-z][A-Za-z0-9\-_]+$).
            platform_version: '- Platform version for the cluster.'
            public_access_cidrs: '- (Optional) List of CIDR blocks. Indicates which CIDR blocks can access the Amazon EKS public API server endpoint when enabled. EKS defaults this to a list with 0.0.0.0/0. Terraform will only perform drift detection of its value when present in a configuration.'
            role_arn: '- (Required) ARN of the IAM role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf. Ensure the resource configuration includes explicit dependencies on the IAM Role permissions by adding depends_on if using the aws_iam_role_policy resource or aws_iam_role_policy_attachment resource, otherwise EKS cannot delete EKS managed EC2 infrastructure such as Security Groups on EKS Cluster deletion.'
            security_group_ids: – (Optional) List of security group IDs for the cross-account elastic network interfaces that Amazon EKS creates to use to allow communication between your worker nodes and the Kubernetes control plane.
            status: '- Status of the EKS cluster. One of CREATING, ACTIVE, DELETING, FAILED.'
            subnet_ids: – (Required) List of subnet IDs. Must be in at least two different availability zones. Amazon EKS creates cross-account elastic network interfaces in these subnets to allow communication between your worker nodes and the Kubernetes control plane.
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            update: |-
                - (Default 60 minutes) How long to wait for the EKS Cluster to be updated.
                Note that the update timeout is used separately for both version and vpc_config update timeouts.
            version: – (Optional) Desired Kubernetes master version. If you do not specify a value, the latest available version at resource creation is used and no upgrades will occur except those automatically triggered by EKS. The value must be configured and increased to upgrade the version when desired. Downgrades are not supported by EKS.
            vpc_config: '- (Required) Configuration block for the VPC associated with your cluster. Amazon EKS VPC resources have specific requirements to work properly with Kubernetes. For more information, see Cluster VPC Considerations and Cluster Security Group Considerations in the Amazon EKS User Guide. Detailed below. Also contains attributes detailed in the Attributes section.'
            vpc_id: '- ID of the VPC associated with your cluster.'
        importStatements: []
    aws_eks_fargate_profile:
        subCategory: EKS (Elastic Kubernetes)
        description: Manages an EKS Fargate Profile
        name: aws_eks_fargate_profile
        title: aws_eks_fargate_profile
        examples:
            - name: example
              manifest: |-
                {
                  "cluster_name": "${aws_eks_cluster.example.name}",
                  "fargate_profile_name": "example",
                  "pod_execution_role_arn": "${aws_iam_role.example.arn}",
                  "selector": [
                    {
                      "namespace": "example"
                    }
                  ],
                  "subnet_ids": "${aws_subnet.example[*].id}"
                }
              references:
                cluster_name: aws_eks_cluster.example.name
                pod_execution_role_arn: aws_iam_role.example.arn
        argumentDocs:
            arn: '- Amazon Resource Name (ARN) of the EKS Fargate Profile.'
            cluster_name: – (Required) Name of the EKS Cluster. Must be between 1-100 characters in length. Must begin with an alphanumeric character, and must only contain alphanumeric characters, dashes and underscores (^[0-9A-Za-z][A-Za-z0-9\-_]+$).
            create: '- (Default 10 minutes) How long to wait for the EKS Fargate Profile to be created.'
            delete: '- (Default 10 minutes) How long to wait for the EKS Fargate Profile to be deleted.'
            fargate_profile_name: – (Required) Name of the EKS Fargate Profile.
            id: '- EKS Cluster name and EKS Fargate Profile name separated by a colon (:).'
            pod_execution_role_arn: – (Required) Amazon Resource Name (ARN) of the IAM Role that provides permissions for the EKS Fargate Profile.
            selector: '- (Required) Configuration block(s) for selecting Kubernetes Pods to execute with this EKS Fargate Profile. Detailed below.'
            selector.labels: '- (Optional) Key-value map of Kubernetes labels for selection.'
            selector.namespace: '- (Required) Kubernetes namespace for selection.'
            status: '- Status of the EKS Fargate Profile.'
            subnet_ids: '– (Required) Identifiers of private EC2 Subnets to associate with the EKS Fargate Profile. These subnets must have the following resource tag: kubernetes.io/cluster/CLUSTER_NAME (where CLUSTER_NAME is replaced with the name of the EKS Cluster).'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_eks_identity_provider_config:
        subCategory: EKS (Elastic Kubernetes)
        description: Manages an EKS Identity Provider Configuration.
        name: aws_eks_identity_provider_config
        title: aws_eks_identity_provider_config
        examples:
            - name: example
              manifest: |-
                {
                  "cluster_name": "${aws_eks_cluster.example.name}",
                  "oidc": [
                    {
                      "client_id": "your client_id",
                      "identity_provider_config_name": "example",
                      "issuer_url": "your issuer_url"
                    }
                  ]
                }
              references:
                cluster_name: aws_eks_cluster.example.name
        argumentDocs:
            arn: '- Amazon Resource Name (ARN) of the EKS Identity Provider Configuration.'
            cluster_name: – (Required) Name of the EKS Cluster.
            create: '- (Default 40 minutes) How long to wait for the EKS Identity Provider Configuration to be associated.'
            delete: '- (Default 40 minutes) How long to wait for the EKS Identity Provider Configuration to be disassociated.'
            id: '- EKS Cluster name and EKS Identity Provider Configuration name separated by a colon (:).'
            oidc: '- (Required) Nested attribute containing OpenID Connect identity provider information for the cluster. Detailed below.'
            oidc.client_id: – (Required) Client ID for the OpenID Connect identity provider.
            oidc.groups_claim: '- (Optional) The JWT claim that the provider will use to return groups.'
            oidc.groups_prefix: '- (Optional) A prefix that is prepended to group claims e.g., oidc:.'
            oidc.identity_provider_config_name: – (Required) The name of the identity provider config.
            oidc.issuer_url: '- (Required) Issuer URL for the OpenID Connect identity provider.'
            oidc.required_claims: '- (Optional) The key value pairs that describe required claims in the identity token.'
            oidc.username_claim: '- (Optional) The JWT claim that the provider will use as the username.'
            oidc.username_prefix: '- (Optional) A prefix that is prepended to username claims.'
            status: '- Status of the EKS Identity Provider Configuration.'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_eks_node_group:
        subCategory: EKS (Elastic Kubernetes)
        description: Manages an EKS Node Group
        name: aws_eks_node_group
        title: aws_eks_node_group
        examples:
            - name: example
              manifest: |-
                {
                  "cluster_name": "${aws_eks_cluster.example.name}",
                  "depends_on": [
                    "${aws_iam_role_policy_attachment.example-AmazonEKSWorkerNodePolicy}",
                    "${aws_iam_role_policy_attachment.example-AmazonEKS_CNI_Policy}",
                    "${aws_iam_role_policy_attachment.example-AmazonEC2ContainerRegistryReadOnly}"
                  ],
                  "node_group_name": "example",
                  "node_role_arn": "${aws_iam_role.example.arn}",
                  "scaling_config": [
                    {
                      "desired_size": 1,
                      "max_size": 1,
                      "min_size": 1
                    }
                  ],
                  "subnet_ids": "${aws_subnet.example[*].id}",
                  "update_config": [
                    {
                      "max_unavailable": 2
                    }
                  ]
                }
              references:
                cluster_name: aws_eks_cluster.example.name
                node_role_arn: aws_iam_role.example.arn
            - name: example
              manifest: |-
                {
                  "lifecycle": [
                    {
                      "ignore_changes": [
                        "${scaling_config[0].desired_size}"
                      ]
                    }
                  ],
                  "scaling_config": [
                    {
                      "desired_size": 2
                    }
                  ]
                }
        argumentDocs:
            ami_type: '- (Optional) Type of Amazon Machine Image (AMI) associated with the EKS Node Group. See the AWS documentation for valid values. Terraform will only perform drift detection if a configuration value is provided.'
            arn: '- Amazon Resource Name (ARN) of the EKS Node Group.'
            autoscaling_groups: '- List of objects containing information about AutoScaling Groups.'
            capacity_type: '- (Optional) Type of capacity associated with the EKS Node Group. Valid values: ON_DEMAND, SPOT. Terraform will only perform drift detection if a configuration value is provided.'
            cluster_name: – (Required) Name of the EKS Cluster. Must be between 1-100 characters in length. Must begin with an alphanumeric character, and must only contain alphanumeric characters, dashes and underscores (^[0-9A-Za-z][A-Za-z0-9\-_]+$).
            create: '- (Default 60 minutes) How long to wait for the EKS Node Group to be created.'
            delete: '- (Default 60 minutes) How long to wait for the EKS Node Group to be deleted.'
            disk_size: '- (Optional) Disk size in GiB for worker nodes. Defaults to 20. Terraform will only perform drift detection if a configuration value is provided.'
            force_update_version: '- (Optional) Force version update if existing pods are unable to be drained due to a pod disruption budget issue.'
            id: '- EKS Cluster name and EKS Node Group name separated by a colon (:).'
            instance_types: '- (Optional) List of instance types associated with the EKS Node Group. Defaults to ["t3.medium"]. Terraform will only perform drift detection if a configuration value is provided.'
            labels: '- (Optional) Key-value map of Kubernetes labels. Only labels that are applied with the EKS API are managed by this argument. Other Kubernetes labels applied to the EKS Node Group will not be managed.'
            launch_template: '- (Optional) Configuration block with Launch Template settings. Detailed below.'
            launch_template.id: '- (Optional) Identifier of the EC2 Launch Template. Conflicts with name.'
            launch_template.name: '- (Optional) Name of the EC2 Launch Template. Conflicts with id.'
            launch_template.version: '- (Required) EC2 Launch Template version number. While the API accepts values like $Default and $Latest, the API will convert the value to the associated version number (e.g., 1) on read and Terraform will show a difference on next plan. Using the default_version or latest_version attribute of the aws_launch_template resource or data source is recommended for this argument.'
            max_unavailable: '- (Optional) Desired max number of unavailable worker nodes during node group update.'
            max_unavailable_percentage: '- (Optional) Desired max percentage of unavailable worker nodes during node group update.'
            name: '- Name of the AutoScaling Group.'
            node_group_name: – (Optional) Name of the EKS Node Group. If omitted, Terraform will assign a random, unique name. Conflicts with node_group_name_prefix.
            node_group_name_prefix: – (Optional) Creates a unique name beginning with the specified prefix. Conflicts with node_group_name.
            node_role_arn: – (Required) Amazon Resource Name (ARN) of the IAM Role that provides permissions for the EKS Node Group.
            release_version: – (Optional) AMI version of the EKS Node Group. Defaults to latest version for Kubernetes version.
            remote_access: '- (Optional) Configuration block with remote access settings. Detailed below.'
            remote_access.ec2_ssh_key: '- (Optional) EC2 Key Pair name that provides access for SSH communication with the worker nodes in the EKS Node Group. If you specify this configuration, but do not specify source_security_group_ids when you create an EKS Node Group, port 22 on the worker nodes is opened to the Internet (0.0.0.0/0).'
            remote_access.source_security_group_ids: '- (Optional) Set of EC2 Security Group IDs to allow SSH access (port 22) from on the worker nodes. If you specify ec2_ssh_key, but do not specify this configuration when you create an EKS Node Group, port 22 on the worker nodes is opened to the Internet (0.0.0.0/0).'
            remote_access_security_group_id: '- Identifier of the remote access EC2 Security Group.'
            resources: '- List of objects containing information about underlying resources.'
            scaling_config: '- (Required) Configuration block with scaling settings. Detailed below.'
            scaling_config.desired_size: '- (Required) Desired number of worker nodes.'
            scaling_config.max_size: '- (Required) Maximum number of worker nodes.'
            scaling_config.min_size: '- (Required) Minimum number of worker nodes.'
            status: '- Status of the EKS Node Group.'
            subnet_ids: '– (Required) Identifiers of EC2 Subnets to associate with the EKS Node Group. These subnets must have the following resource tag: kubernetes.io/cluster/CLUSTER_NAME (where CLUSTER_NAME is replaced with the name of the EKS Cluster).'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            taint: '- (Optional) The Kubernetes taints to be applied to the nodes in the node group. Maximum of 50 taints per node group. Detailed below.'
            taint.effect: '- (Required) The effect of the taint. Valid values: NO_SCHEDULE, NO_EXECUTE, PREFER_NO_SCHEDULE.'
            taint.key: '- (Required) The key of the taint. Maximum length of 63.'
            taint.value: '- (Optional) The value of the taint. Maximum length of 63.'
            update: '- (Default 60 minutes) How long to wait for the EKS Node Group to be updated. Note that the update timeout is used separately for both configuration and version update operations.'
            version: – (Optional) Kubernetes version. Defaults to EKS Cluster Kubernetes version. Terraform will only perform drift detection if a configuration value is provided.
        importStatements: []
    aws_elastic_beanstalk_application:
        subCategory: Elastic Beanstalk
        description: Provides an Elastic Beanstalk Application Resource
        name: aws_elastic_beanstalk_application
        title: aws_elastic_beanstalk_application
        examples:
            - name: tftest
              manifest: |-
                {
                  "appversion_lifecycle": [
                    {
                      "delete_source_from_s3": true,
                      "max_count": 128,
                      "service_role": "${aws_iam_role.beanstalk_service.arn}"
                    }
                  ],
                  "description": "tf-test-desc",
                  "name": "tf-test-name"
                }
              references:
                appversion_lifecycle.service_role: aws_iam_role.beanstalk_service.arn
        argumentDocs:
            arn: '- The ARN assigned by AWS for this Elastic Beanstalk Application.'
            delete_source_from_s3: '- (Optional) Set to true to delete a version''s source bundle from S3 when the application version is deleted.'
            description: '- (Optional) Short description of the application'
            max_age_in_days: '- (Optional) The number of days to retain an application version (''max_age_in_days'' and ''max_count'' cannot be enabled simultaneously.).'
            max_count: '- (Optional) The maximum number of application versions to retain (''max_age_in_days'' and ''max_count'' cannot be enabled simultaneously.).'
            name: '- (Required) The name of the application, must be unique within your account'
            service_role: '- (Required) The ARN of an IAM service role under which the application version is deleted.  Elastic Beanstalk must have permission to assume this role.'
            tags: '- (Optional) Key-value map of tags for the Elastic Beanstalk Application. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_elastic_beanstalk_application_version:
        subCategory: Elastic Beanstalk
        description: Provides an Elastic Beanstalk Application Version Resource
        name: aws_elastic_beanstalk_application_version
        title: aws_elastic_beanstalk_application_version
        examples:
            - name: default
              manifest: |-
                {
                  "application": "tf-test-name",
                  "bucket": "${aws_s3_bucket.default.id}",
                  "description": "application version created by terraform",
                  "key": "${aws_s3_object.default.id}",
                  "name": "tf-test-version-label"
                }
              references:
                bucket: aws_s3_bucket.default.id
                key: aws_s3_object.default.id
              dependencies:
                aws_elastic_beanstalk_application.default: |-
                    {
                      "description": "tf-test-desc",
                      "name": "tf-test-name"
                    }
                aws_s3_bucket.default: |-
                    {
                      "bucket": "tftest.applicationversion.bucket"
                    }
                aws_s3_object.default: |-
                    {
                      "bucket": "${aws_s3_bucket.default.id}",
                      "key": "beanstalk/go-v1.zip",
                      "source": "go-v1.zip"
                    }
        argumentDocs:
            application: '- (Required) Name of the Beanstalk Application the version is associated with.'
            arn: '- ARN assigned by AWS for this Elastic Beanstalk Application.'
            bucket: '- (Required) S3 bucket that contains the Application Version source bundle.'
            description: '- (Optional) Short description of the Application Version.'
            force_delete: '- (Optional) On delete, force an Application Version to be deleted when it may be in use by multiple Elastic Beanstalk Environments.'
            key: '- (Required) S3 object that is the Application Version source bundle.'
            name: '- (Required) Unique name for the this Application Version.'
            tags: '- (Optional) Key-value map of tags for the Elastic Beanstalk Application Version. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_elastic_beanstalk_configuration_template:
        subCategory: Elastic Beanstalk
        description: Provides an Elastic Beanstalk Configuration Template
        name: aws_elastic_beanstalk_configuration_template
        title: aws_elastic_beanstalk_configuration_template
        examples:
            - name: tf_template
              manifest: |-
                {
                  "application": "${aws_elastic_beanstalk_application.tftest.name}",
                  "name": "tf-test-template-config",
                  "solution_stack_name": "64bit Amazon Linux 2015.09 v2.0.8 running Go 1.4"
                }
              references:
                application: aws_elastic_beanstalk_application.tftest.name
              dependencies:
                aws_elastic_beanstalk_application.tftest: |-
                    {
                      "description": "tf-test-desc",
                      "name": "tf-test-name"
                    }
        argumentDocs:
            application: – (Required) name of the application to associate with this configuration template
            description: '- (Optional) Short description of the Template'
            environment_id: – (Optional) The ID of the environment used with this configuration template
            name: '- (Required) A unique name for this Template.'
            namespace: '- unique namespace identifying the option''s associated AWS resource'
            resource: '- (Optional) resource name for scheduled action'
            setting: |-
                – (Optional) Option settings to configure the new Environment. These
                override specific values that are set as defaults. The format is detailed
                below in Option Settings
            solution_stack_name: |-
                – (Optional) A solution stack to base your Template
                off of. Example stacks can be found in the Amazon API documentation
            value: '- value for the configuration option'
        importStatements: []
    aws_elastic_beanstalk_environment:
        subCategory: Elastic Beanstalk
        description: Provides an Elastic Beanstalk Environment Resource
        name: aws_elastic_beanstalk_environment
        title: aws_elastic_beanstalk_environment
        examples:
            - name: tfenvtest
              manifest: |-
                {
                  "application": "${aws_elastic_beanstalk_application.tftest.name}",
                  "name": "tf-test-name",
                  "solution_stack_name": "64bit Amazon Linux 2015.03 v2.0.3 running Go 1.4"
                }
              references:
                application: aws_elastic_beanstalk_application.tftest.name
              dependencies:
                aws_elastic_beanstalk_application.tftest: |-
                    {
                      "description": "tf-test-desc",
                      "name": "tf-test-name"
                    }
            - name: tfenvtest
              manifest: |-
                {
                  "application": "${aws_elastic_beanstalk_application.tftest.name}",
                  "name": "tf-test-name",
                  "setting": [
                    {
                      "name": "VPCId",
                      "namespace": "aws:ec2:vpc",
                      "value": "vpc-xxxxxxxx"
                    },
                    {
                      "name": "Subnets",
                      "namespace": "aws:ec2:vpc",
                      "value": "subnet-xxxxxxxx"
                    }
                  ],
                  "solution_stack_name": "64bit Amazon Linux 2015.03 v2.0.3 running Go 1.4"
                }
              references:
                application: aws_elastic_beanstalk_application.tftest.name
              dependencies:
                aws_elastic_beanstalk_application.tftest: |-
                    {
                      "description": "tf-test-desc",
                      "name": "tf-test-name"
                    }
        argumentDocs:
            all_settings: |-
                – List of all option settings configured in this Environment. These
                are a combination of default settings and their overrides from setting in
                the configuration.
            application: |-
                – (Required) Name of the application that contains the version
                to be deployed
            autoscaling_groups: '- The autoscaling groups used by this Environment.'
            cname: '- Fully qualified DNS name for this Environment.'
            cname_prefix: |-
                - (Optional) Prefix to use for the fully qualified DNS name of
                the Environment.
            description: '- (Optional) Short description of the Environment'
            endpoint_url: '- The URL to the Load Balancer for this Environment'
            id: '- ID of the Elastic Beanstalk Environment.'
            instances: '- Instances used by this Environment.'
            launch_configurations: '- Launch configurations in use by this Environment.'
            load_balancers: '- Elastic load balancers in use by this Environment.'
            name: |-
                - (Required) A unique name for this Environment. This name is used
                in the application URL
            namespace: '- unique namespace identifying the option''s associated AWS resource'
            platform_arn: |-
                – (Optional) The ARN of the Elastic Beanstalk Platform
                to use in deployment
            poll_interval: |-
                – The time between polling the AWS API to
                check if changes have been applied. Use this to adjust the rate of API calls
                for any create or update action. Minimum 10s, maximum 180s. Omit this to
                use the default behavior, which is an exponential backoff
            queues: '- SQS queues in use by this Environment.'
            resource: '- (Optional) resource name for scheduled action'
            setting: |-
                – (Optional) Option settings to configure the new Environment. These
                override specific values that are set as defaults. The format is detailed
                below in Option Settings
            solution_stack_name: |-
                – (Optional) A solution stack to base your environment
                off of. Example stacks can be found in the Amazon API documentation
            tags: '- (Optional) A set of tags to apply to the Environment. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            template_name: |-
                – (Optional) The name of the Elastic Beanstalk Configuration
                template to use in deployment
            tier: |-
                - (Optional) Elastic Beanstalk Environment tier. Valid values are Worker
                or WebServer. If tier is left blank WebServer will be used.
            triggers: '- Autoscaling triggers in use by this Environment.'
            value: '- value for the configuration option'
            version_label: |-
                - (Optional) The name of the Elastic Beanstalk Application Version
                to use in deployment.
            wait_for_ready_timeout: |-
                - (Default: 20m) The maximum
                duration that Terraform should
                wait for an Elastic Beanstalk Environment to be in a ready state before timing
                out.
        importStatements: []
    aws_elasticache_cluster:
        subCategory: ElastiCache
        description: Provides an ElastiCache Cluster resource.
        name: aws_elasticache_cluster
        title: aws_elasticache_cluster
        examples:
            - name: example
              manifest: |-
                {
                  "cluster_id": "cluster-example",
                  "engine": "memcached",
                  "node_type": "cache.m4.large",
                  "num_cache_nodes": 2,
                  "parameter_group_name": "default.memcached1.4",
                  "port": 11211
                }
            - name: example
              manifest: |-
                {
                  "cluster_id": "cluster-example",
                  "engine": "redis",
                  "engine_version": "3.2.10",
                  "node_type": "cache.m4.large",
                  "num_cache_nodes": 1,
                  "parameter_group_name": "default.redis3.2",
                  "port": 6379
                }
            - name: replica
              manifest: |-
                {
                  "cluster_id": "cluster-example",
                  "replication_group_id": "${aws_elasticache_replication_group.example.id}"
                }
              references:
                replication_group_id: aws_elasticache_replication_group.example.id
            - name: test
              manifest: |-
                {
                  "apply_immediately": true,
                  "cluster_id": "mycluster",
                  "engine": "redis",
                  "log_delivery_configuration": [
                    {
                      "destination": "${aws_cloudwatch_log_group.example.name}",
                      "destination_type": "cloudwatch-logs",
                      "log_format": "text",
                      "log_type": "slow-log"
                    },
                    {
                      "destination": "${aws_kinesis_firehose_delivery_stream.example.name}",
                      "destination_type": "kinesis-firehose",
                      "log_format": "json",
                      "log_type": "engine-log"
                    }
                  ],
                  "node_type": "cache.t3.micro",
                  "num_cache_nodes": 1,
                  "port": 6379
                }
              references:
                log_delivery_configuration.destination: aws_kinesis_firehose_delivery_stream.example.name
        argumentDocs:
            apply_immediately: '- (Optional) Whether any database modifications are applied immediately, or during the next maintenance window. Default is false. See Amazon ElastiCache Documentation for more information..'
            arn: '- The ARN of the created ElastiCache Cluster.'
            auto_minor_version_upgrade: |-
                - (Optional) Specifies whether minor version engine upgrades will be applied automatically to the underlying Cache Cluster instances during the maintenance window.
                Only supported for engine type "redis" and if the engine version is 6 or higher.
                Defaults to true.
            availability_zone: '- (Optional) Availability Zone for the cache cluster. If you want to create cache nodes in multi-az, use preferred_availability_zones instead. Default: System chosen Availability Zone. Changing this value will re-create the resource.'
            az_mode: '- (Optional, Memcached only) Whether the nodes in this Memcached node group are created in a single Availability Zone or created across multiple Availability Zones in the cluster''s region. Valid values for this parameter are single-az or cross-az, default is single-az. If you want to choose cross-az, num_cache_nodes must be greater than 1.'
            cache_nodes: '- List of node objects including id, address, port and availability_zone.'
            cluster_address: '- (Memcached only) DNS name of the cache cluster without the port appended.'
            cluster_id: – (Required) Group identifier. ElastiCache converts this name to lowercase. Changing this value will re-create the resource.
            configuration_endpoint: '- (Memcached only) Configuration endpoint to allow host discovery.'
            engine: – (Optional, Required if replication_group_id is not specified) Name of the cache engine to be used for this cache cluster. Valid values are memcached or redis.
            engine_version: |-
                – (Optional) Version number of the cache engine to be used.
                If not set, defaults to the latest version.
                See Describe Cache Engine Versions in the AWS Documentation for supported versions.
                When engine is redis and the version is 6 or higher, the major and minor version can be set, e.g., 6.2,
                or the minor version can be unspecified which will use the latest version at creation time, e.g., 6.x.
                Otherwise, specify the full version desired, e.g., 5.0.6.
                The actual engine version used is returned in the attribute engine_version_actual, see Attributes Reference below.
            engine_version_actual: '- Because ElastiCache pulls the latest minor or patch for a version, this attribute returns the running version of the cache engine.'
            final_snapshot_identifier: '- (Optional, Redis only) Name of your final cluster snapshot. If omitted, no final snapshot will be made.'
            log_delivery_configuration: '- (Optional, Redis only) Specifies the destination and format of Redis SLOWLOG or Redis Engine Log. See the documentation on Amazon ElastiCache. See Log Delivery Configuration below for more details.'
            log_delivery_configuration.destination: '- Name of either the CloudWatch Logs LogGroup or Kinesis Data Firehose resource.'
            log_delivery_configuration.destination_type: '- For CloudWatch Logs use cloudwatch-logs or for Kinesis Data Firehose use kinesis-firehose.'
            log_delivery_configuration.log_format: '- Valid values are json or text'
            log_delivery_configuration.log_type: '- Valid values are  slow-log or engine-log. Max 1 of each.'
            maintenance_window: |-
                – (Optional) Specifies the weekly time range for when maintenance
                on the cache cluster is performed. The format is ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC).
                The minimum maintenance window is a 60 minute period. Example: sun:05:00-sun:09:00.
            node_type: – (Required unless replication_group_id is provided) The instance class used. See AWS documentation for information on supported node types for Redis and guidance on selecting node types for Redis. See AWS documentation for information on supported node types for Memcached and guidance on selecting node types for Memcached. For Memcached, changing this value will re-create the resource.
            notification_topic_arn: '– (Optional) ARN of an SNS topic to send ElastiCache notifications to. Example: arn:aws:sns:us-east-1:012345678999:my_sns_topic.'
            num_cache_nodes: – (Required unless replication_group_id is provided) The initial number of cache nodes that the cache cluster will have. For Redis, this value must be 1. For Memcached, this value must be between 1 and 40. If this number is reduced on subsequent runs, the highest numbered nodes will be removed.
            parameter_group_name: – (Required unless replication_group_id is provided) The name of the parameter group to associate with this cache cluster.
            port: – (Optional) The port number on which each of the cache nodes will accept connections. For Memcached the default is 11211, and for Redis the default port is 6379. Cannot be provided with replication_group_id. Changing this value will re-create the resource.
            preferred_availability_zones: '- (Optional, Memcached only) List of the Availability Zones in which cache nodes are created. If you are creating your cluster in an Amazon VPC you can only locate nodes in Availability Zones that are associated with the subnets in the selected subnet group. The number of Availability Zones listed must equal the value of num_cache_nodes. If you want all the nodes in the same Availability Zone, use availability_zone instead, or repeat the Availability Zone multiple times in the list. Default: System chosen Availability Zones. Detecting drift of existing node availability zone is not currently supported. Updating this argument by itself to migrate existing node availability zones is not currently supported and will show a perpetual difference.'
            replication_group_id: '- (Optional, Required if engine is not specified) ID of the replication group to which this cluster should belong. If this parameter is specified, the cluster is added to the specified replication group as a read replica; otherwise, the cluster is a standalone primary that is not part of any replication group.'
            security_group_ids: – (Optional, VPC only) One or more VPC security groups associated with the cache cluster
            security_group_names: – (Optional, EC2 Classic only) List of security group names to associate with this cache cluster. Changing this value will re-create the resource.
            snapshot_arns: – (Optional, Redis only) Single-element string list containing an Amazon Resource Name (ARN) of a Redis RDB snapshot file stored in Amazon S3. The object name cannot contain any commas. Changing snapshot_arns forces a new resource.
            snapshot_name: '- (Optional, Redis only) Name of a snapshot from which to restore data into the new node group. Changing snapshot_name forces a new resource.'
            snapshot_retention_limit: '- (Optional, Redis only) Number of days for which ElastiCache will retain automatic cache cluster snapshots before deleting them. For example, if you set SnapshotRetentionLimit to 5, then a snapshot that was taken today will be retained for 5 days before being deleted. If the value of SnapshotRetentionLimit is set to zero (0), backups are turned off. Please note that setting a snapshot_retention_limit is not supported on cache.t1.micro cache nodes'
            snapshot_window: '- (Optional, Redis only) Daily time range (in UTC) during which ElastiCache will begin taking a daily snapshot of your cache cluster. Example: 05:00-09:00'
            subnet_group_name: – (Optional, VPC only) Name of the subnet group to be used for the cache cluster. Changing this value will re-create the resource.
            tags: '- (Optional) Map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_elasticache_global_replication_group:
        subCategory: ElastiCache
        description: Provides an ElastiCache Global Replication Group resource.
        name: aws_elasticache_global_replication_group
        title: aws_elasticache_global_replication_group
        examples:
            - name: example
              manifest: |-
                {
                  "global_replication_group_id_suffix": "example",
                  "primary_replication_group_id": "${aws_elasticache_replication_group.primary.id}"
                }
              references:
                primary_replication_group_id: aws_elasticache_replication_group.primary.id
              dependencies:
                aws_elasticache_replication_group.primary: |-
                    {
                      "engine": "redis",
                      "engine_version": "5.0.6",
                      "node_type": "cache.m5.large",
                      "number_cache_clusters": 1,
                      "replication_group_description": "primary replication group",
                      "replication_group_id": "example-primary"
                    }
                aws_elasticache_replication_group.secondary: |-
                    {
                      "global_replication_group_id": "${aws_elasticache_global_replication_group.example.global_replication_group_id}",
                      "number_cache_clusters": 1,
                      "provider": "${aws.other_region}",
                      "replication_group_description": "secondary replication group",
                      "replication_group_id": "example-secondary"
                    }
            - name: example
              manifest: |-
                {
                  "engine_version": "6.2",
                  "global_replication_group_id_suffix": "example",
                  "primary_replication_group_id": "${aws_elasticache_replication_group.primary.id}"
                }
              references:
                primary_replication_group_id: aws_elasticache_replication_group.primary.id
              dependencies:
                aws_elasticache_replication_group.primary: |-
                    {
                      "engine": "redis",
                      "engine_version": "6.0",
                      "lifecycle": [
                        {
                          "ignore_changes": [
                            "${engine_version}"
                          ]
                        }
                      ],
                      "node_type": "cache.m5.large",
                      "number_cache_clusters": 1,
                      "replication_group_description": "primary replication group",
                      "replication_group_id": "example-primary"
                    }
                aws_elasticache_replication_group.secondary: |-
                    {
                      "global_replication_group_id": "${aws_elasticache_global_replication_group.example.global_replication_group_id}",
                      "lifecycle": [
                        {
                          "ignore_changes": [
                            "${engine_version}"
                          ]
                        }
                      ],
                      "number_cache_clusters": 1,
                      "provider": "${aws.other_region}",
                      "replication_group_description": "secondary replication group",
                      "replication_group_id": "example-secondary"
                    }
        argumentDocs:
            arn: '- The ARN of the ElastiCache Global Replication Group.'
            at_rest_encryption_enabled: '- A flag that indicate whether the encryption at rest is enabled.'
            auth_token_enabled: '- A flag that indicate whether AuthToken (password) is enabled.'
            cache_node_type: '- The instance class used. See AWS documentation for information on supported node types and guidance on selecting node types.'
            cluster_enabled: '- Indicates whether the Global Datastore is cluster enabled.'
            engine: '- The name of the cache engine to be used for the clusters in this global replication group.'
            engine_version: |-
                - (Optional) Redis version to use for the Global Replication Group.
                When creating, by default the Global Replication Group inherits the version of the primary replication group.
                If a version is specified, the Global Replication Group and all member replication groups will be upgraded to this version.
                Cannot be downgraded without replacing the Global Replication Group and all member replication groups.
                If the version is 6 or higher, the major and minor version can be set, e.g., 6.2,
                or the minor version can be unspecified which will use the latest version at creation time, e.g., 6.x.
                The actual engine version used is returned in the attribute engine_version_actual, see Attributes Reference below.
            engine_version_actual: '- The full version number of the cache engine running on the members of this global replication group.'
            global_replication_group_description: – (Optional) A user-created description for the global replication group.
            global_replication_group_id: '- The full ID of the global replication group.'
            global_replication_group_id_suffix: – (Required) The suffix name of a Global Datastore. If global_replication_group_id_suffix is changed, creates a new resource.
            id: '- The ID of the ElastiCache Global Replication Group.'
            parameter_group_name: |-
                - (Optional) An ElastiCache Parameter Group to use for the Global Replication Group.
                Required when upgrading a major engine version, but will be ignored if left configured after the upgrade is complete.
                Specifying without a major version upgrade will fail.
                Note that ElastiCache creates a copy of this parameter group for each member replication group.
            primary_replication_group_id: – (Required) The ID of the primary cluster that accepts writes and will replicate updates to the secondary cluster. If primary_replication_group_id is changed, creates a new resource.
            transit_encryption_enabled: '- A flag that indicates whether the encryption in transit is enabled.'
        importStatements: []
    aws_elasticache_parameter_group:
        subCategory: ElastiCache
        description: Provides an ElastiCache parameter group resource.
        name: aws_elasticache_parameter_group
        title: aws_elasticache_parameter_group
        examples:
            - name: default
              manifest: |-
                {
                  "family": "redis2.8",
                  "name": "cache-params",
                  "parameter": [
                    {
                      "name": "activerehashing",
                      "value": "yes"
                    },
                    {
                      "name": "min-slaves-to-write",
                      "value": "2"
                    }
                  ]
                }
        argumentDocs:
            arn: '- The AWS ARN associated with the parameter group.'
            description: '- (Optional) The description of the ElastiCache parameter group. Defaults to "Managed by Terraform".'
            family: '- (Required) The family of the ElastiCache parameter group.'
            id: '- The ElastiCache parameter group name.'
            name: '- (Required) The name of the ElastiCache parameter group.'
            parameter: '- (Optional) A list of ElastiCache parameters to apply.'
            tags: '- (Optional) Key-value mapping of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            value: '- (Required) The value of the ElastiCache parameter.'
        importStatements: []
    aws_elasticache_replication_group:
        subCategory: ElastiCache
        description: Provides an ElastiCache Replication Group resource.
        name: aws_elasticache_replication_group
        title: aws_elasticache_replication_group
        examples:
            - name: example
              manifest: |-
                {
                  "automatic_failover_enabled": true,
                  "description": "example description",
                  "node_type": "cache.m4.large",
                  "number_cache_clusters": 2,
                  "parameter_group_name": "default.redis3.2",
                  "port": 6379,
                  "preferred_cache_cluster_azs": [
                    "us-west-2a",
                    "us-west-2b"
                  ],
                  "replication_group_id": "tf-rep-group-1"
                }
            - name: example
              manifest: |-
                {
                  "automatic_failover_enabled": true,
                  "description": "example description",
                  "lifecycle": [
                    {
                      "ignore_changes": [
                        "${number_cache_clusters}"
                      ]
                    }
                  ],
                  "node_type": "cache.m4.large",
                  "number_cache_clusters": 2,
                  "parameter_group_name": "default.redis3.2",
                  "port": 6379,
                  "preferred_cache_cluster_azs": [
                    "us-west-2a",
                    "us-west-2b"
                  ],
                  "replication_group_id": "tf-rep-group-1"
                }
              dependencies:
                aws_elasticache_cluster.replica: |-
                    {
                      "cluster_id": "tf-rep-group-1-${count.index}",
                      "count": 1,
                      "replication_group_id": "${aws_elasticache_replication_group.example.id}"
                    }
            - name: baz
              manifest: |-
                {
                  "automatic_failover_enabled": true,
                  "description": "example description",
                  "node_type": "cache.t2.small",
                  "num_node_groups": 2,
                  "parameter_group_name": "default.redis3.2.cluster.on",
                  "port": 6379,
                  "replicas_per_node_group": 1,
                  "replication_group_id": "tf-redis-cluster"
                }
            - name: test
              manifest: |-
                {
                  "apply_immediately": true,
                  "auto_minor_version_upgrade": false,
                  "log_delivery_configuration": [
                    {
                      "destination": "${aws_cloudwatch_log_group.example.name}",
                      "destination_type": "cloudwatch-logs",
                      "log_format": "text",
                      "log_type": "slow-log"
                    },
                    {
                      "destination": "${aws_kinesis_firehose_delivery_stream.example.name}",
                      "destination_type": "kinesis-firehose",
                      "log_format": "json",
                      "log_type": "engine-log"
                    }
                  ],
                  "maintenance_window": "tue:06:30-tue:07:30",
                  "node_type": "cache.t3.small",
                  "port": 6379,
                  "replication_group_description": "test description",
                  "replication_group_id": "myreplicaciongroup",
                  "snapshot_window": "01:00-02:00"
                }
              references:
                log_delivery_configuration.destination: aws_kinesis_firehose_delivery_stream.example.name
            - name: secondary
              manifest: |-
                {
                  "description": "secondary replication group",
                  "global_replication_group_id": "${aws_elasticache_global_replication_group.example.global_replication_group_id}",
                  "number_cache_clusters": 1,
                  "replication_group_id": "example-secondary"
                }
              references:
                global_replication_group_id: aws_elasticache_global_replication_group.example.global_replication_group_id
              dependencies:
                aws_elasticache_global_replication_group.example: |-
                    {
                      "global_replication_group_id_suffix": "example",
                      "primary_replication_group_id": "${aws_elasticache_replication_group.primary.id}",
                      "provider": "${aws.other_region}"
                    }
            - name: primary
              manifest: |-
                {
                  "description": "primary replication group",
                  "engine": "redis",
                  "engine_version": "5.0.6",
                  "node_type": "cache.m5.large",
                  "number_cache_clusters": 1,
                  "provider": "${aws.other_region}",
                  "replication_group_id": "example-primary"
                }
              references:
                provider: aws.other_region
              dependencies:
                aws_elasticache_global_replication_group.example: |-
                    {
                      "global_replication_group_id_suffix": "example",
                      "primary_replication_group_id": "${aws_elasticache_replication_group.primary.id}",
                      "provider": "${aws.other_region}"
                    }
        argumentDocs:
            apply_immediately: '- (Optional) Specifies whether any modifications are applied immediately, or during the next maintenance window. Default is false.'
            arn: '- ARN of the created ElastiCache Replication Group.'
            at_rest_encryption_enabled: '- (Optional) Whether to enable encryption at rest.'
            auth_token: '- (Optional) Password used to access a password protected server. Can be specified only if transit_encryption_enabled = true.'
            auto_minor_version_upgrade: |-
                - (Optional) Specifies whether minor version engine upgrades will be applied automatically to the underlying Cache Cluster instances during the maintenance window.
                Only supported for engine type "redis" and if the engine version is 6 or higher.
                Defaults to true.
            automatic_failover_enabled: '- (Optional) Specifies whether a read-only replica will be automatically promoted to read/write primary if the existing primary fails. If enabled, number_cache_clusters must be greater than 1. Must be enabled for Redis (cluster mode enabled) replication groups. Defaults to false.'
            availability_zones: '- (Optional, Deprecated use preferred_cache_cluster_azs instead) List of EC2 availability zones in which the replication group''s cache clusters will be created. The order of the availability zones in the list is not considered.'
            aws_elasticache_cluster: resource
            cluster_enabled: '- Indicates if cluster mode is enabled.'
            cluster_mode: '- (Optional, Deprecated use root-level num_node_groups and replicas_per_node_group instead) Create a native Redis cluster. automatic_failover_enabled must be set to true. Cluster Mode documented below. Only 1 cluster_mode block is allowed. Note that configuring this block does not enable cluster mode, i.e., data sharding, this requires using a parameter group that has the parameter cluster-enabled set to true.'
            configuration_endpoint_address: '- Address of the replication group configuration endpoint when cluster mode is enabled.'
            create: '- (Default 60m) How long to wait for a replication group to be created.'
            data_tiering_enabled: '- (Optional) Enables data tiering. Data tiering is only supported for replication groups using the r6gd node type. This parameter must be set to true when using r6gd nodes.'
            delete: '- (Default 40m) How long to wait for a replication group to be deleted.'
            description: – (Required) User-created description for the replication group. Must not be empty.
            engine: '- (Optional) Name of the cache engine to be used for the clusters in this replication group. The only valid value is redis.'
            engine_version: |-
                - (Optional) Version number of the cache engine to be used for the cache clusters in this replication group.
                If the version is 6 or higher, the major and minor version can be set, e.g., 6.2,
                or the minor version can be unspecified which will use the latest version at creation time, e.g., 6.x.
                Otherwise, specify the full version desired, e.g., 5.0.6.
                The actual engine version used is returned in the attribute engine_version_actual, see Attributes Reference below.
            engine_version_actual: '- Because ElastiCache pulls the latest minor or patch for a version, this attribute returns the running version of the cache engine.'
            final_snapshot_identifier: '- (Optional) The name of your final node group (shard) snapshot. ElastiCache creates the snapshot from the primary node in the cluster. If omitted, no final snapshot will be made.'
            global_replication_group_id: '- (Optional) The ID of the global replication group to which this replication group should belong. If this parameter is specified, the replication group is added to the specified global replication group as a secondary replication group; otherwise, the replication group is not part of any global replication group. If global_replication_group_id is set, the num_node_groups parameter (or the num_node_groups parameter of the deprecated cluster_mode block) cannot be set.'
            id: '- ID of the ElastiCache Replication Group.'
            kms_key_id: '- (Optional) The ARN of the key that you wish to use if encrypting at rest. If not supplied, uses service managed encryption. Can be specified only if at_rest_encryption_enabled = true.'
            log_delivery_configuration: '- (Optional, Redis only) Specifies the destination and format of Redis SLOWLOG or Redis Engine Log. See the documentation on Amazon ElastiCache. See Log Delivery Configuration below for more details.'
            log_delivery_configuration.destination: '- Name of either the CloudWatch Logs LogGroup or Kinesis Data Firehose resource.'
            log_delivery_configuration.destination_type: '- For CloudWatch Logs use cloudwatch-logs or for Kinesis Data Firehose use kinesis-firehose.'
            log_delivery_configuration.log_format: '- Valid values are json or text'
            log_delivery_configuration.log_type: '- Valid values are  slow-log or engine-log. Max 1 of each.'
            maintenance_window: '– (Optional) Specifies the weekly time range for when maintenance on the cache cluster is performed. The format is ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance window is a 60 minute period. Example: sun:05:00-sun:09:00'
            member_clusters: '- Identifiers of all the nodes that are part of this replication group.'
            multi_az_enabled: '- (Optional) Specifies whether to enable Multi-AZ Support for the replication group. If true, automatic_failover_enabled must also be enabled. Defaults to false.'
            node_type: '- (Optional) Instance class to be used. See AWS documentation for information on supported node types and guidance on selecting node types. Required unless global_replication_group_id is set. Cannot be set if global_replication_group_id is set.'
            notification_topic_arn: '– (Optional) ARN of an SNS topic to send ElastiCache notifications to. Example: arn:aws:sns:us-east-1:012345678999:my_sns_topic'
            num_cache_clusters: '- (Optional) Number of cache clusters (primary and replicas) this replication group will have. If Multi-AZ is enabled, the value of this parameter must be at least 2. Updates will occur before other modifications. Conflicts with num_node_groups, the deprecatednumber_cache_clusters, or the deprecated cluster_mode. Defaults to 1.'
            num_node_groups: '- (Optional, Deprecated use root-level num_node_groups instead) Number of node groups (shards) for this Redis replication group. Changing this number will trigger an online resizing operation before other settings modifications. Required unless global_replication_group_id is set.'
            number_cache_clusters: directly. This will attempt to automatically add or remove replicas, but provides no granular control (e.g., preferred availability zone, cache cluster ID) for the added or removed replicas. This also currently expects cache cluster IDs in the form of replication_group_id-00#.
            parameter_group_name: '- (Optional) Name of the parameter group to associate with this replication group. If this argument is omitted, the default cache parameter group for the specified engine is used. To enable "cluster mode", i.e., data sharding, use a parameter group that has the parameter cluster-enabled set to true.'
            port: – (Optional) Port number on which each of the cache nodes will accept connections. For Memcache the default is 11211, and for Redis the default port is 6379.
            preferred_cache_cluster_azs: '- (Optional) List of EC2 availability zones in which the replication group''s cache clusters will be created. The order of the availability zones in the list is considered. The first item in the list will be the primary node. Ignored when updating.'
            primary_endpoint_address: '- (Redis only) Address of the endpoint for the primary node in the replication group, if the cluster mode is disabled.'
            reader_endpoint_address: '- (Redis only) Address of the endpoint for the reader node in the replication group, if the cluster mode is disabled.'
            replicas_per_node_group: '- (Optional, Required with cluster_mode num_node_groups, Deprecated use root-level replicas_per_node_group instead) Number of replica nodes in each node group. Valid values are 0 to 5. Changing this number will trigger an online resizing operation before other settings modifications.'
            replication_group_description: – (Deprecated use description instead) User-created description for the replication group. Must not be empty.
            replication_group_id: attribute. In this situation, you will need to utilize the lifecycle configuration block with ignore_changes to prevent perpetual differences during Terraform plan with the number_cache_cluster attribute.
            security_group_ids: '- (Optional) One or more Amazon VPC security groups associated with this replication group. Use this parameter only when you are creating a replication group in an Amazon Virtual Private Cloud'
            security_group_names: '- (Optional) List of cache security group names to associate with this replication group.'
            snapshot_arns: – (Optional) List of ARNs that identify Redis RDB snapshot files stored in Amazon S3. The names object names cannot contain any commas.
            snapshot_name: '- (Optional) Name of a snapshot from which to restore data into the new node group. Changing the snapshot_name forces a new resource.'
            snapshot_retention_limit: '- (Optional, Redis only) Number of days for which ElastiCache will retain automatic cache cluster snapshots before deleting them. For example, if you set SnapshotRetentionLimit to 5, then a snapshot that was taken today will be retained for 5 days before being deleted. If the value of snapshot_retention_limit is set to zero (0), backups are turned off. Please note that setting a snapshot_retention_limit is not supported on cache.t1.micro cache nodes'
            snapshot_window: '- (Optional, Redis only) Daily time range (in UTC) during which ElastiCache will begin taking a daily snapshot of your cache cluster. The minimum snapshot window is a 60 minute period. Example: 05:00-09:00'
            subnet_group_name: '- (Optional) Name of the cache subnet group to be used for the replication group.'
            tags: '- (Optional) Map of tags to assign to the resource. Adding tags to this resource will add or overwrite any existing tags on the clusters in the replication group and not to the group itself. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            transit_encryption_enabled: '- (Optional) Whether to enable encryption in transit.'
            update: '- (Default 40m) How long to wait for replication group settings to be updated. This is also separately used for adding/removing replicas and online resize operation completion, if necessary.'
            user_group_ids: '- (Optional) User Group ID to associate with the replication group. Only a maximum of one (1) user group ID is valid. NOTE: This argument is a set because the AWS specification allows for multiple IDs. However, in practice, AWS only allows a maximum size of one.'
        importStatements: []
    aws_elasticache_security_group:
        subCategory: ElastiCache
        description: Provides an ElastiCache Security Group to control access to one or more cache clusters.
        name: aws_elasticache_security_group
        title: aws_elasticache_security_group
        examples:
            - name: bar
              manifest: |-
                {
                  "name": "elasticache-security-group",
                  "security_group_names": [
                    "${aws_security_group.bar.name}"
                  ]
                }
              dependencies:
                aws_security_group.bar: |-
                    {
                      "name": "security-group"
                    }
        argumentDocs:
            description: – (Optional) description for the cache security group. Defaults to "Managed by Terraform".
            name: – (Required) Name for the cache security group. This value is stored as a lowercase string.
            security_group_names: |-
                – (Required) List of EC2 security group names to be
                authorized for ingress to the cache security group
        importStatements: []
    aws_elasticache_subnet_group:
        subCategory: ElastiCache
        description: Provides an ElastiCache Subnet Group resource.
        name: aws_elasticache_subnet_group
        title: aws_elasticache_subnet_group
        examples:
            - name: bar
              manifest: |-
                {
                  "name": "tf-test-cache-subnet",
                  "subnet_ids": [
                    "${aws_subnet.foo.id}"
                  ]
                }
              dependencies:
                aws_subnet.foo: |-
                    {
                      "availability_zone": "us-west-2a",
                      "cidr_block": "10.0.0.0/24",
                      "tags": {
                        "Name": "tf-test"
                      },
                      "vpc_id": "${aws_vpc.foo.id}"
                    }
                aws_vpc.foo: |-
                    {
                      "cidr_block": "10.0.0.0/16",
                      "tags": {
                        "Name": "tf-test"
                      }
                    }
        argumentDocs:
            description: – (Optional) Description for the cache subnet group. Defaults to "Managed by Terraform".
            name: – (Required) Name for the cache subnet group. Elasticache converts this name to lowercase.
            subnet_ids: – (Required) List of VPC Subnet IDs for the cache subnet group
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_elasticache_user:
        subCategory: ElastiCache
        description: Provides an ElastiCache user.
        name: aws_elasticache_user
        title: aws_elasticache_user
        examples:
            - name: test
              manifest: |-
                {
                  "access_string": "on ~app::* -@all +@read +@hash +@bitmap +@geo -setbit -bitfield -hset -hsetnx -hmset -hincrby -hincrbyfloat -hdel -bitop -geoadd -georadius -georadiusbymember",
                  "engine": "REDIS",
                  "passwords": [
                    "password123456789"
                  ],
                  "user_id": "testUserId",
                  "user_name": "testUserName"
                }
        argumentDocs:
            access_string: '- (Required) Access permissions string used for this user. See Specifying Permissions Using an Access String for more details.'
            arn: '- The ARN of the created ElastiCache User.'
            engine: '- (Required) The current supported value is REDIS.'
            no_password_required: '- (Optional) Indicates a password is not required for this user.'
            passwords: '- (Optional) Passwords used for this user. You can create up to two passwords for each user.'
            tags: '- (Optional) A list of tags to be added to this resource. A tag is a key-value pair.'
            user_id: '- (Required) The ID of the user.'
            user_name: '- (Required) The username of the user.'
        importStatements: []
    aws_elasticache_user_group:
        subCategory: ElastiCache
        description: Provides an ElastiCache user group.
        name: aws_elasticache_user_group
        title: aws_elasticache_user_group
        examples:
            - name: test
              manifest: |-
                {
                  "engine": "REDIS",
                  "user_group_id": "userGroupId",
                  "user_ids": [
                    "${aws_elasticache_user.test.user_id}"
                  ]
                }
              dependencies:
                aws_elasticache_user.test: |-
                    {
                      "access_string": "on ~app::* -@all +@read +@hash +@bitmap +@geo -setbit -bitfield -hset -hsetnx -hmset -hincrby -hincrbyfloat -hdel -bitop -geoadd -georadius -georadiusbymember",
                      "engine": "REDIS",
                      "passwords": [
                        "password123456789"
                      ],
                      "user_id": "testUserId",
                      "user_name": "default"
                    }
        argumentDocs:
            engine: '- (Required) The current supported value is REDIS.'
            id: '- The user group identifier.'
            user_group_id: '- (Required) The ID of the user group.'
            user_ids: '- (Optional) The list of user IDs that belong to the user group.'
        importStatements: []
    aws_elasticache_user_group_association:
        subCategory: ElastiCache
        description: Associate an ElastiCache user and user group.
        name: aws_elasticache_user_group_association
        title: aws_elasticache_user_group_association
        examples:
            - name: example
              manifest: |-
                {
                  "user_group_id": "${aws_elasticache_user_group.example.user_group_id}",
                  "user_id": "${aws_elasticache_user.example.user_id}"
                }
              references:
                user_group_id: aws_elasticache_user_group.example.user_group_id
                user_id: aws_elasticache_user.example.user_id
              dependencies:
                aws_elasticache_user.default: |-
                    {
                      "access_string": "on ~app::* -@all +@read +@hash +@bitmap +@geo -setbit -bitfield -hset -hsetnx -hmset -hincrby -hincrbyfloat -hdel -bitop -geoadd -georadius -georadiusbymember",
                      "engine": "REDIS",
                      "passwords": [
                        "password123456789"
                      ],
                      "user_id": "defaultUserID",
                      "user_name": "default"
                    }
                aws_elasticache_user.example: |-
                    {
                      "access_string": "on ~app::* -@all +@read +@hash +@bitmap +@geo -setbit -bitfield -hset -hsetnx -hmset -hincrby -hincrbyfloat -hdel -bitop -geoadd -georadius -georadiusbymember",
                      "engine": "REDIS",
                      "passwords": [
                        "password123456789"
                      ],
                      "user_id": "exampleUserID",
                      "user_name": "exampleuser"
                    }
                aws_elasticache_user_group.example: |-
                    {
                      "engine": "REDIS",
                      "lifecycle": [
                        {
                          "ignore_changes": [
                            "${user_ids}"
                          ]
                        }
                      ],
                      "user_group_id": "userGroupId",
                      "user_ids": [
                        "${aws_elasticache_user.default.user_id}"
                      ]
                    }
        argumentDocs:
            user_group_id: '- (Required) ID of the user group.'
            user_id: '- (Required) ID of the user to associated with the user group.'
        importStatements: []
    aws_elasticsearch_domain:
        subCategory: Elasticsearch
        description: Provides an Elasticsearch Domain Policy.
        name: aws_elasticsearch_domain
        title: aws_elasticsearch_domain
        examples:
            - name: example
              manifest: |-
                {
                  "domain_name": "tf-test",
                  "elasticsearch_version": "2.3"
                }
              dependencies:
                aws_elasticsearch_domain_policy.main: |-
                    {
                      "access_policies": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Action\": \"es:*\",\n            \"Principal\": \"*\",\n            \"Effect\": \"Allow\",\n            \"Condition\": {\n                \"IpAddress\": {\"aws:SourceIp\": \"127.0.0.1/32\"}\n            },\n            \"Resource\": \"${aws_elasticsearch_domain.example.arn}/*\"\n        }\n    ]\n}\n",
                      "domain_name": "${aws_elasticsearch_domain.example.domain_name}"
                    }
        argumentDocs:
            access_policies: '- (Optional) IAM policy document specifying the access policies for the domain'
            domain_name: '- (Required) Name of the domain.'
        importStatements: []
    aws_elasticsearch_domain_saml_options:
        subCategory: Elasticsearch
        description: Terraform resource for managing SAML authentication options for an AWS Elasticsearch Domain.
        name: aws_elasticsearch_domain_saml_options
        title: aws_elasticsearch_domain_saml_options
        examples:
            - name: example
              manifest: |-
                {
                  "domain_name": "${aws_elasticsearch_domain.example.domain_name}",
                  "saml_options": [
                    {
                      "enabled": true,
                      "idp": [
                        {
                          "entity_id": "https://example.com",
                          "metadata_content": "${file(\"./saml-metadata.xml\")}"
                        }
                      ]
                    }
                  ]
                }
              references:
                domain_name: aws_elasticsearch_domain.example.domain_name
              dependencies:
                aws_elasticsearch_domain.example: |-
                    {
                      "cluster_config": [
                        {
                          "instance_type": "r4.large.elasticsearch"
                        }
                      ],
                      "domain_name": "example",
                      "elasticsearch_version": "1.5",
                      "snapshot_options": [
                        {
                          "automated_snapshot_start_hour": 23
                        }
                      ],
                      "tags": {
                        "Domain": "TestDomain"
                      }
                    }
        argumentDocs:
            domain_name: '- (Required) Name of the domain.'
            id: '- The name of the domain the SAML options are associated with.'
            saml_options: '- (Optional) The SAML authentication options for an AWS Elasticsearch Domain.'
            saml_options.enabled: '- (Required) Whether SAML authentication is enabled.'
            saml_options.idp: '- (Optional) Information from your identity provider.'
            saml_options.idp.entity_id: '- (Required) The unique Entity ID of the application in SAML Identity Provider.'
            saml_options.idp.metadata_content: '- (Required) The Metadata of the SAML application in xml format.'
            saml_options.master_backend_role: '- (Optional) This backend role from the SAML IdP receives full permissions to the cluster, equivalent to a new master user.'
            saml_options.master_user_name: '- (Optional) This username from the SAML IdP receives full permissions to the cluster, equivalent to a new master user.'
            saml_options.roles_key: '- (Optional) Element of the SAML assertion to use for backend roles. Default is roles.'
            saml_options.session_timeout_minutes: '- (Optional) Duration of a session in minutes after a user logs in. Default is 60. Maximum value is 1,440.'
            saml_options.subject_key: '- (Optional) Custom SAML attribute to use for user names. Default is an empty string - "". This will cause Elasticsearch to use the NameID element of the Subject, which is the default location for name identifiers in the SAML specification.'
        importStatements: []
    aws_elastictranscoder_pipeline:
        subCategory: Elastic Transcoder
        description: Provides an Elastic Transcoder pipeline resource.
        name: aws_elastictranscoder_pipeline
        title: aws_elastictranscoder_pipeline
        examples:
            - name: bar
              manifest: |-
                {
                  "content_config": [
                    {
                      "bucket": "${aws_s3_bucket.content_bucket.bucket}",
                      "storage_class": "Standard"
                    }
                  ],
                  "input_bucket": "${aws_s3_bucket.input_bucket.bucket}",
                  "name": "aws_elastictranscoder_pipeline_tf_test_",
                  "role": "${aws_iam_role.test_role.arn}",
                  "thumbnail_config": [
                    {
                      "bucket": "${aws_s3_bucket.thumb_bucket.bucket}",
                      "storage_class": "Standard"
                    }
                  ]
                }
              references:
                content_config.bucket: aws_s3_bucket.content_bucket.bucket
                input_bucket: aws_s3_bucket.input_bucket.bucket
                role: aws_iam_role.test_role.arn
                thumbnail_config.bucket: aws_s3_bucket.thumb_bucket.bucket
        argumentDocs:
            access: '- The permission that you want to give to the AWS user that you specified in content_config_permissions.grantee. Valid values are Read, ReadAcp, WriteAcp or FullControl.'
            arn: '- The ARN of the Elastictranscoder pipeline.'
            aws_kms_key_arn: '- (Optional) The AWS Key Management Service (AWS KMS) key that you want to use with this pipeline.'
            bucket: '- The Amazon S3 bucket in which you want Elastic Transcoder to save transcoded files and playlists.'
            completed: '- The topic ARN for the Amazon SNS topic that you want to notify when Elastic Transcoder has finished processing a job in this pipeline.'
            content_config: '- (Optional) The ContentConfig object specifies information about the Amazon S3 bucket in which you want Elastic Transcoder to save transcoded files and playlists. (documented below)'
            content_config_permissions: '- (Optional) The permissions for the content_config object. (documented below)'
            error: '- The topic ARN for the Amazon SNS topic that you want to notify when Elastic Transcoder encounters an error condition while processing a job in this pipeline.'
            grantee: '- The AWS user or group that you want to have access to transcoded files and playlists.'
            grantee_type: '- Specify the type of value that appears in the content_config_permissions.grantee object. Valid values are Canonical, Email or Group.'
            id: '- The ID of the Elastictranscoder pipeline.'
            input_bucket: '- (Required) The Amazon S3 bucket in which you saved the media files that you want to transcode and the graphics that you want to use as watermarks.'
            name: '- (Optional, Forces new resource) The name of the pipeline. Maximum 40 characters'
            notifications: '- (Optional) The Amazon Simple Notification Service (Amazon SNS) topic that you want to notify to report job status. (documented below)'
            output_bucket: '- (Optional) The Amazon S3 bucket in which you want Elastic Transcoder to save the transcoded files.'
            progressing: '- The topic ARN for the Amazon Simple Notification Service (Amazon SNS) topic that you want to notify when Elastic Transcoder has started to process a job in this pipeline.'
            role: '- (Required) The IAM Amazon Resource Name (ARN) for the role that you want Elastic Transcoder to use to transcode jobs for this pipeline.'
            storage_class: '- The Amazon S3 storage class, Standard or ReducedRedundancy, that you want Elastic Transcoder to assign to the files and playlists that it stores in your Amazon S3 bucket.'
            thumbnail_config: '- (Optional) The ThumbnailConfig object specifies information about the Amazon S3 bucket in which you want Elastic Transcoder to save thumbnail files. (documented below)'
            thumbnail_config_permissions: '- (Optional) The permissions for the thumbnail_config object. (documented below)'
            warning: '- The topic ARN for the Amazon SNS topic that you want to notify when Elastic Transcoder encounters a warning condition while processing a job in this pipeline.'
        importStatements: []
    aws_elastictranscoder_preset:
        subCategory: Elastic Transcoder
        description: Provides an Elastic Transcoder preset resource.
        name: aws_elastictranscoder_preset
        title: aws_elastictranscoder_preset
        examples:
            - name: bar
              manifest: |-
                {
                  "audio": [
                    {
                      "audio_packing_mode": "SingleTrack",
                      "bit_rate": 96,
                      "channels": 2,
                      "codec": "AAC",
                      "sample_rate": 44100
                    }
                  ],
                  "audio_codec_options": [
                    {
                      "profile": "AAC-LC"
                    }
                  ],
                  "container": "mp4",
                  "description": "Sample Preset",
                  "name": "sample_preset",
                  "thumbnails": [
                    {
                      "format": "png",
                      "interval": 120,
                      "max_height": "auto",
                      "max_width": "auto",
                      "padding_policy": "Pad",
                      "sizing_policy": "Fit"
                    }
                  ],
                  "video": [
                    {
                      "bit_rate": "1600",
                      "codec": "H.264",
                      "display_aspect_ratio": "16:9",
                      "fixed_gop": "false",
                      "frame_rate": "auto",
                      "keyframes_max_dist": 240,
                      "max_frame_rate": "60",
                      "max_height": "auto",
                      "max_width": "auto",
                      "padding_policy": "Pad",
                      "sizing_policy": "Fit"
                    }
                  ],
                  "video_codec_options": {
                    "ColorSpaceConversionMode": "None",
                    "InterlacedMode": "Progressive",
                    "Level": "2.2",
                    "MaxReferenceFrames": 3,
                    "Profile": "main"
                  },
                  "video_watermarks": [
                    {
                      "horizontal_align": "Right",
                      "horizontal_offset": "10px",
                      "id": "Terraform Test",
                      "max_height": "20%",
                      "max_width": "20%",
                      "opacity": "55.5",
                      "sizing_policy": "ShrinkToFit",
                      "target": "Content",
                      "vertical_align": "Bottom",
                      "vertical_offset": "10px"
                    }
                  ]
                }
        argumentDocs:
            BufferSize: '- The maximum number of kilobits in any x seconds of the output video. This window is commonly 10 seconds, the standard segment duration when you''re using ts for the container type of the output video. Specify an integer greater than 0. If you specify MaxBitRate and omit BufferSize, Elastic Transcoder sets BufferSize to 10 times the value of MaxBitRate. (Optional, H.264/MPEG2/VP8/VP9 only)'
            ChromaSubsampling: '- The sampling pattern for the chroma (color) channels of the output video. Valid values are yuv420p and yuv422p.'
            ColorSpaceConversion: '- The color space conversion Elastic Transcoder applies to the output video. Valid values are None, Bt709toBt601, Bt601toBt709, and Auto. (Optional, H.264/MPEG2 Only)'
            InterlacedMode: '-  The interlace mode for the output video. (Optional, H.264/MPEG2 Only)'
            Level: '- The H.264 level that you want to use for the output file. Elastic Transcoder supports the following levels: 1, 1b, 1.1, 1.2, 1.3, 2, 2.1, 2.2, 3, 3.1, 3.2, 4, 4.1 (H.264 only)'
            LoopCount: '- The number of times you want the output gif to loop (Gif only)'
            MaxBitRate: '- The maximum number of kilobits per second in the output video. Specify a value between 16 and 62,500 inclusive, or auto. (Optional, H.264/MPEG2/VP8/VP9 only)'
            MaxReferenceFrames: '- The maximum number of previously decoded frames to use as a reference for decoding future frames. Valid values are integers 0 through 16. (H.264 only)'
            Profile: '- The codec profile that you want to use for the output file. (H.264/VP8 Only)'
            arn: '- Amazon Resource Name (ARN) of the Elastic Transcoder Preset.'
            aspect_ratio: '- The aspect ratio of thumbnails. The following values are valid: auto, 1:1, 4:3, 3:2, 16:9'
            audio: '- (Optional, Forces new resource) Audio parameters object (documented below).'
            audio_codec_options: '- (Optional, Forces new resource) Codec options for the audio parameters (documented below)'
            audio_packing_mode: '- The method of organizing audio channels and tracks. Use Audio:Channels to specify the number of channels in your output, and Audio:AudioPackingMode to specify the number of tracks and their relation to the channels. If you do not specify an Audio:AudioPackingMode, Elastic Transcoder uses SingleTrack.'
            bit_depth: '- The bit depth of a sample is how many bits of information are included in the audio samples. Valid values are 16 and 24. (FLAC/PCM Only)'
            bit_order: '- The order the bits of a PCM sample are stored in. The supported value is LittleEndian. (PCM Only)'
            bit_rate: '- The bit rate of the audio stream in the output file, in kilobits/second. Enter an integer between 64 and 320, inclusive.'
            channels: '- The number of audio channels in the output file'
            codec: '- The audio codec for the output file. Valid values are AAC, flac, mp2, mp3, pcm, and vorbis.'
            container: '- (Required, Forces new resource) The container type for the output file. Valid values are flac, flv, fmp4, gif, mp3, mp4, mpg, mxf, oga, ogg, ts, and webm.'
            description: '- (Optional, Forces new resource) A description of the preset (maximum 255 characters)'
            display_aspect_ratio: '- The value that Elastic Transcoder adds to the metadata in the output file. If you set DisplayAspectRatio to auto, Elastic Transcoder chooses an aspect ratio that ensures square pixels. If you specify another option, Elastic Transcoder sets that value in the output file.'
            fixed_gop: '- Whether to use a fixed value for Video:FixedGOP. Not applicable for containers of type gif. Valid values are true and false. Also known as, Fixed Number of Frames Between Keyframes.'
            format: '- The format of thumbnails, if any. Valid formats are jpg and png.'
            frame_rate: '- The frames per second for the video stream in the output file. The following values are valid: auto, 10, 15, 23.97, 24, 25, 29.97, 30, 50, 60.'
            horizontal_align: '- The horizontal position of the watermark unless you specify a nonzero value for horzontal_offset.'
            horizontal_offset: '- The amount by which you want the horizontal position of the watermark to be offset from the position specified by horizontal_align.'
            id: '- A unique identifier for the settings for one watermark. The value of Id can be up to 40 characters long. You can specify settings for up to four watermarks.'
            interval: '- The approximate number of seconds between thumbnails. The value must be an integer. The actual interval can vary by several seconds from one thumbnail to the next.'
            keyframes_max_dist: '- The maximum number of frames between key frames. Not applicable for containers of type gif.'
            max_frame_rate: '- If you specify auto for FrameRate, Elastic Transcoder uses the frame rate of the input video for the frame rate of the output video, up to the maximum frame rate. If you do not specify a MaxFrameRate, Elastic Transcoder will use a default of 30.'
            max_height: '- The maximum height of thumbnails, in pixels. If you specify auto, Elastic Transcoder uses 1080 (Full HD) as the default value. If you specify a numeric value, enter an even integer between 32 and 3072, inclusive.'
            max_width: '- The maximum width of thumbnails, in pixels. If you specify auto, Elastic Transcoder uses 1920 (Full HD) as the default value. If you specify a numeric value, enter an even integer between 32 and 4096, inclusive.'
            name: '- (Optional, Forces new resource) The name of the preset. (maximum 40 characters)'
            opacity: '- A percentage that indicates how much you want a watermark to obscure the video in the location where it appears.'
            padding_policy: '- When you set PaddingPolicy to Pad, Elastic Transcoder might add black bars to the top and bottom and/or left and right sides of thumbnails to make the total size of the thumbnails match the values that you specified for thumbnail MaxWidth and MaxHeight settings.'
            profile: '- If you specified AAC for Audio:Codec, choose the AAC profile for the output file.'
            resolution: '- The width and height of thumbnail files in pixels, in the format WidthxHeight, where both values are even integers. The values cannot exceed the width and height that you specified in the Video:Resolution object. (To better control resolution and aspect ratio of thumbnails, we recommend that you use the thumbnail values max_width, max_height, sizing_policy, and padding_policy instead of resolution and aspect_ratio. The two groups of settings are mutually exclusive. Do not use them together)'
            sample_rate: '- The sample rate of the audio stream in the output file, in hertz. Valid values are: auto, 22050, 32000, 44100, 48000, 96000'
            signed: '- Whether audio samples are represented with negative and positive numbers (signed) or only positive numbers (unsigned). The supported value is Signed. (PCM Only)'
            sizing_policy: '- A value that controls scaling of thumbnails. Valid values are: Fit, Fill, Stretch, Keep, ShrinkToFit, and ShrinkToFill.'
            target: '- A value that determines how Elastic Transcoder interprets values that you specified for video_watermarks.horizontal_offset, video_watermarks.vertical_offset, video_watermarks.max_width, and video_watermarks.max_height. Valid values are Content and Frame.'
            thumbnails: '- (Optional, Forces new resource) Thumbnail parameters object (documented below)'
            vertical_align: '- The vertical position of the watermark unless you specify a nonzero value for vertical_align. Valid values are Top, Bottom, Center.'
            vertical_offset: '- The amount by which you want the vertical position of the watermark to be offset from the position specified by vertical_align'
            video: '- (Optional, Forces new resource) Video parameters object (documented below)'
            video_codec_options: (Optional, Forces new resource) Codec options for the video parameters
            video_watermarks: '- (Optional, Forces new resource) Watermark parameters for the video parameters (documented below)'
        importStatements: []
    aws_elb:
        subCategory: ELB Classic
        description: Provides an Elastic Load Balancer resource.
        name: aws_elb
        title: aws_elb
        examples:
            - name: bar
              manifest: |-
                {
                  "access_logs": [
                    {
                      "bucket": "foo",
                      "bucket_prefix": "bar",
                      "interval": 60
                    }
                  ],
                  "availability_zones": [
                    "us-west-2a",
                    "us-west-2b",
                    "us-west-2c"
                  ],
                  "connection_draining": true,
                  "connection_draining_timeout": 400,
                  "cross_zone_load_balancing": true,
                  "health_check": [
                    {
                      "healthy_threshold": 2,
                      "interval": 30,
                      "target": "HTTP:8000/",
                      "timeout": 3,
                      "unhealthy_threshold": 2
                    }
                  ],
                  "idle_timeout": 400,
                  "instances": [
                    "${aws_instance.foo.id}"
                  ],
                  "listener": [
                    {
                      "instance_port": 8000,
                      "instance_protocol": "http",
                      "lb_port": 80,
                      "lb_protocol": "http"
                    },
                    {
                      "instance_port": 8000,
                      "instance_protocol": "http",
                      "lb_port": 443,
                      "lb_protocol": "https",
                      "ssl_certificate_id": "arn:aws:iam::123456789012:server-certificate/certName"
                    }
                  ],
                  "name": "foobar-terraform-elb",
                  "tags": {
                    "Name": "foobar-terraform-elb"
                  }
                }
        argumentDocs:
            HTTP: ', HTTPS - PORT and PATH are required'
            TCP: ', SSL - PORT is required, PATH is not supported'
            access_logs: '- (Optional) An Access Logs block. Access Logs documented below.'
            arn: '- The ARN of the ELB'
            availability_zones: '- (Required for an EC2-classic ELB) The AZ''s to serve traffic in.'
            bucket: '- (Required) The S3 bucket name to store the logs in.'
            bucket_prefix: '- (Optional) The S3 bucket prefix. Logs are stored in the root if not configured.'
            connection_draining: '- (Optional) Boolean to enable connection draining. Default: false'
            connection_draining_timeout: '- (Optional) The time in seconds to allow for connections to drain. Default: 300'
            cross_zone_load_balancing: '- (Optional) Enable cross-zone load balancing. Default: true'
            desync_mitigation_mode: '- (Optional) Determines how the load balancer handles requests that might pose a security risk to an application due to HTTP desync. Valid values are monitor, defensive (default), strictest.'
            dns_name: '- The DNS name of the ELB'
            enabled: '- (Optional) Boolean to enable / disable access_logs. Default is true'
            health_check: '- (Optional) A health_check block. Health Check documented below.'
            healthy_threshold: '- (Required) The number of checks before the instance is declared healthy.'
            id: '- The name of the ELB'
            idle_timeout: '- (Optional) The time in seconds that the connection is allowed to be idle. Default: 60'
            instance_port: '- (Required) The port on the instance to route to'
            instance_protocol: |-
                - (Required) The protocol to use to the instance. Valid
                values are HTTP, HTTPS, TCP, or SSL
            instances: '- (Optional) A list of instance ids to place in the ELB pool.'
            internal: '- (Optional) If true, ELB will be an internal ELB.'
            interval: '- (Optional) The publishing interval in minutes. Default: 60 minutes.'
            lb_port: '- (Required) The port to listen on for the load balancer'
            lb_protocol: |-
                - (Required) The protocol to listen on. Valid values are HTTP,
                HTTPS, TCP, or SSL
            listener: '- (Required) A list of listener blocks. Listeners documented below.'
            name: '- (Optional) The name of the ELB. By default generated by Terraform.'
            name_prefix: |-
                - (Optional, Forces new resource) Creates a unique name beginning with the specified
                prefix. Conflicts with name.
            security_groups: |-
                - (Optional) A list of security group IDs to assign to the ELB.
                Only valid if creating an ELB within a VPC
            source_security_group: |-
                - The name of the security group that you can use as
                part of your inbound rules for your load balancer's back-end application
                instances. Use this for Classic or Default VPC only.
            source_security_group_id: |-
                - The ID of the security group that you can use as
                part of your inbound rules for your load balancer's back-end application
                instances. Only available on ELBs launched in a VPC.
            ssl_certificate_id: |-
                - (Optional) The ARN of an SSL certificate you have
                uploaded to AWS IAM. Note ECDSA-specific restrictions below.  Only valid when
            subnets: '- (Required for a VPC ELB) A list of subnet IDs to attach to the ELB.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            target: |-
                - (Required) The target of the check. Valid pattern is "${PROTOCOL}:${PORT}${PATH}", where PROTOCOL
                values are:
            timeout: '- (Required) The length of time before the check times out.'
            unhealthy_threshold: '- (Required) The number of checks before the instance is declared unhealthy.'
            zone_id: '- The canonical hosted zone ID of the ELB (to be used in a Route 53 Alias record)'
        importStatements: []
    aws_elb_attachment:
        subCategory: ELB Classic
        description: Provides an Elastic Load Balancer Attachment resource.
        name: aws_elb_attachment
        title: aws_elb_attachment
        examples:
            - name: baz
              manifest: |-
                {
                  "elb": "${aws_elb.bar.id}",
                  "instance": "${aws_instance.foo.id}"
                }
              references:
                elb: aws_elb.bar.id
                instance: aws_instance.foo.id
        argumentDocs:
            elb: '- (Required) The name of the ELB.'
            instance: '- (Required) Instance ID to place in the ELB pool.'
        importStatements: []
    aws_emr_cluster:
        subCategory: EMR
        description: Provides an Elastic MapReduce Cluster
        name: aws_emr_cluster
        title: aws_emr_cluster
        examples:
            - name: cluster
              manifest: |-
                {
                  "additional_info": "{\n  \"instanceAwsClientConfiguration\": {\n    \"proxyPort\": 8099,\n    \"proxyHost\": \"myproxy.example.com\"\n  }\n}\n",
                  "applications": [
                    "Spark"
                  ],
                  "bootstrap_action": [
                    {
                      "args": [
                        "instance.isMaster=true",
                        "echo running on master node"
                      ],
                      "name": "runif",
                      "path": "s3://elasticmapreduce/bootstrap-actions/run-if"
                    }
                  ],
                  "configurations_json": "  [\n    {\n      \"Classification\": \"hadoop-env\",\n      \"Configurations\": [\n        {\n          \"Classification\": \"export\",\n          \"Properties\": {\n            \"JAVA_HOME\": \"/usr/lib/jvm/java-1.8.0\"\n          }\n        }\n      ],\n      \"Properties\": {}\n    },\n    {\n      \"Classification\": \"spark-env\",\n      \"Configurations\": [\n        {\n          \"Classification\": \"export\",\n          \"Properties\": {\n            \"JAVA_HOME\": \"/usr/lib/jvm/java-1.8.0\"\n          }\n        }\n      ],\n      \"Properties\": {}\n    }\n  ]\n",
                  "core_instance_group": [
                    {
                      "autoscaling_policy": "{\n\"Constraints\": {\n  \"MinCapacity\": 1,\n  \"MaxCapacity\": 2\n},\n\"Rules\": [\n  {\n    \"Name\": \"ScaleOutMemoryPercentage\",\n    \"Description\": \"Scale out if YARNMemoryAvailablePercentage is less than 15\",\n    \"Action\": {\n      \"SimpleScalingPolicyConfiguration\": {\n        \"AdjustmentType\": \"CHANGE_IN_CAPACITY\",\n        \"ScalingAdjustment\": 1,\n        \"CoolDown\": 300\n      }\n    },\n    \"Trigger\": {\n      \"CloudWatchAlarmDefinition\": {\n        \"ComparisonOperator\": \"LESS_THAN\",\n        \"EvaluationPeriods\": 1,\n        \"MetricName\": \"YARNMemoryAvailablePercentage\",\n        \"Namespace\": \"AWS/ElasticMapReduce\",\n        \"Period\": 300,\n        \"Statistic\": \"AVERAGE\",\n        \"Threshold\": 15.0,\n        \"Unit\": \"PERCENT\"\n      }\n    }\n  }\n]\n}\n",
                      "bid_price": "0.30",
                      "ebs_config": [
                        {
                          "size": "40",
                          "type": "gp2",
                          "volumes_per_instance": 1
                        }
                      ],
                      "instance_count": 1,
                      "instance_type": "c4.large"
                    }
                  ],
                  "ebs_root_volume_size": 100,
                  "ec2_attributes": [
                    {
                      "emr_managed_master_security_group": "${aws_security_group.sg.id}",
                      "emr_managed_slave_security_group": "${aws_security_group.sg.id}",
                      "instance_profile": "${aws_iam_instance_profile.emr_profile.arn}",
                      "subnet_id": "${aws_subnet.main.id}"
                    }
                  ],
                  "keep_job_flow_alive_when_no_steps": true,
                  "master_instance_group": [
                    {
                      "instance_type": "m4.large"
                    }
                  ],
                  "name": "emr-test-arn",
                  "release_label": "emr-4.6.0",
                  "service_role": "${aws_iam_role.iam_emr_service_role.arn}",
                  "tags": {
                    "env": "env",
                    "role": "rolename"
                  },
                  "termination_protection": false
                }
              references:
                ec2_attributes.emr_managed_master_security_group: aws_security_group.sg.id
                ec2_attributes.emr_managed_slave_security_group: aws_security_group.sg.id
                ec2_attributes.instance_profile: aws_iam_instance_profile.emr_profile.arn
                ec2_attributes.subnet_id: aws_subnet.main.id
                service_role: aws_iam_role.iam_emr_service_role.arn
            - name: example
              manifest: |-
                {
                  "core_instance_fleet": [
                    {
                      "instance_type_configs": [
                        {
                          "bid_price_as_percentage_of_on_demand_price": 80,
                          "ebs_config": [
                            {
                              "size": 100,
                              "type": "gp2",
                              "volumes_per_instance": 1
                            }
                          ],
                          "instance_type": "m3.xlarge",
                          "weighted_capacity": 1
                        },
                        {
                          "bid_price_as_percentage_of_on_demand_price": 100,
                          "ebs_config": [
                            {
                              "size": 100,
                              "type": "gp2",
                              "volumes_per_instance": 1
                            }
                          ],
                          "instance_type": "m4.xlarge",
                          "weighted_capacity": 1
                        },
                        {
                          "bid_price_as_percentage_of_on_demand_price": 100,
                          "ebs_config": [
                            {
                              "size": 100,
                              "type": "gp2",
                              "volumes_per_instance": 1
                            }
                          ],
                          "instance_type": "m4.2xlarge",
                          "weighted_capacity": 2
                        }
                      ],
                      "launch_specifications": [
                        {
                          "spot_specification": [
                            {
                              "allocation_strategy": "capacity-optimized",
                              "block_duration_minutes": 0,
                              "timeout_action": "SWITCH_TO_ON_DEMAND",
                              "timeout_duration_minutes": 10
                            }
                          ]
                        }
                      ],
                      "name": "core fleet",
                      "target_on_demand_capacity": 2,
                      "target_spot_capacity": 2
                    }
                  ],
                  "master_instance_fleet": [
                    {
                      "instance_type_configs": [
                        {
                          "instance_type": "m4.xlarge"
                        }
                      ],
                      "target_on_demand_capacity": 1
                    }
                  ]
                }
              dependencies:
                aws_emr_instance_fleet.task: |-
                    {
                      "cluster_id": "${aws_emr_cluster.example.id}",
                      "instance_type_configs": [
                        {
                          "bid_price_as_percentage_of_on_demand_price": 100,
                          "ebs_config": [
                            {
                              "size": 100,
                              "type": "gp2",
                              "volumes_per_instance": 1
                            }
                          ],
                          "instance_type": "m4.xlarge",
                          "weighted_capacity": 1
                        },
                        {
                          "bid_price_as_percentage_of_on_demand_price": 100,
                          "ebs_config": [
                            {
                              "size": 100,
                              "type": "gp2",
                              "volumes_per_instance": 1
                            }
                          ],
                          "instance_type": "m4.2xlarge",
                          "weighted_capacity": 2
                        }
                      ],
                      "launch_specifications": [
                        {
                          "spot_specification": [
                            {
                              "allocation_strategy": "capacity-optimized",
                              "block_duration_minutes": 0,
                              "timeout_action": "TERMINATE_CLUSTER",
                              "timeout_duration_minutes": 10
                            }
                          ]
                        }
                      ],
                      "name": "task fleet",
                      "target_on_demand_capacity": 1,
                      "target_spot_capacity": 1
                    }
            - name: example
              manifest: |-
                {
                  "lifecycle": [
                    {
                      "ignore_changes": [
                        "${step}"
                      ]
                    }
                  ],
                  "step": [
                    {
                      "action_on_failure": "TERMINATE_CLUSTER",
                      "hadoop_jar_step": [
                        {
                          "args": [
                            "state-pusher-script"
                          ],
                          "jar": "command-runner.jar"
                        }
                      ],
                      "name": "Setup Hadoop Debugging"
                    }
                  ]
                }
            - name: example
              manifest: |-
                {
                  "core_instance_group": [
                    {}
                  ],
                  "ec2_attributes": [
                    {
                      "subnet_id": "${aws_subnet.example.id}"
                    }
                  ],
                  "master_instance_group": [
                    {
                      "instance_count": 3
                    }
                  ],
                  "release_label": "emr-5.24.1",
                  "termination_protection": true
                }
              references:
                ec2_attributes.subnet_id: aws_subnet.example.id
              dependencies:
                aws_subnet.example: |-
                    {
                      "map_public_ip_on_launch": true
                    }
            - name: cluster
              manifest: |-
                {
                  "applications": [
                    "Spark"
                  ],
                  "bootstrap_action": [
                    {
                      "args": [
                        "instance.isMaster=true",
                        "echo running on master node"
                      ],
                      "name": "runif",
                      "path": "s3://elasticmapreduce/bootstrap-actions/run-if"
                    }
                  ],
                  "configurations_json": "  [\n    {\n      \"Classification\": \"hadoop-env\",\n      \"Configurations\": [\n        {\n          \"Classification\": \"export\",\n          \"Properties\": {\n            \"JAVA_HOME\": \"/usr/lib/jvm/java-1.8.0\"\n          }\n        }\n      ],\n      \"Properties\": {}\n    },\n    {\n      \"Classification\": \"spark-env\",\n      \"Configurations\": [\n        {\n          \"Classification\": \"export\",\n          \"Properties\": {\n            \"JAVA_HOME\": \"/usr/lib/jvm/java-1.8.0\"\n          }\n        }\n      ],\n      \"Properties\": {}\n    }\n  ]\n",
                  "core_instance_group": [
                    {
                      "instance_count": 1,
                      "instance_type": "m5.xlarge"
                    }
                  ],
                  "ec2_attributes": [
                    {
                      "emr_managed_master_security_group": "${aws_security_group.allow_access.id}",
                      "emr_managed_slave_security_group": "${aws_security_group.allow_access.id}",
                      "instance_profile": "${aws_iam_instance_profile.emr_profile.arn}",
                      "subnet_id": "${aws_subnet.main.id}"
                    }
                  ],
                  "master_instance_group": [
                    {
                      "instance_type": "m5.xlarge"
                    }
                  ],
                  "name": "emr-test-arn",
                  "release_label": "emr-4.6.0",
                  "service_role": "${aws_iam_role.iam_emr_service_role.arn}",
                  "tags": {
                    "dns_zone": "env_zone",
                    "env": "env",
                    "name": "name-env",
                    "role": "rolename"
                  }
                }
              references:
                ec2_attributes.emr_managed_master_security_group: aws_security_group.allow_access.id
                ec2_attributes.emr_managed_slave_security_group: aws_security_group.allow_access.id
                ec2_attributes.instance_profile: aws_iam_instance_profile.emr_profile.arn
                ec2_attributes.subnet_id: aws_subnet.main.id
                service_role: aws_iam_role.iam_emr_service_role.arn
              dependencies:
                aws_iam_instance_profile.emr_profile: |-
                    {
                      "name": "emr_profile",
                      "role": "${aws_iam_role.iam_emr_profile_role.name}"
                    }
                aws_iam_role.iam_emr_profile_role: |-
                    {
                      "assume_role_policy": "{\n  \"Version\": \"2008-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      },\n      \"Action\": \"sts:AssumeRole\"\n    }\n  ]\n}\n",
                      "name": "iam_emr_profile_role"
                    }
                aws_iam_role.iam_emr_service_role: |-
                    {
                      "assume_role_policy": "{\n  \"Version\": \"2008-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Principal\": {\n        \"Service\": \"elasticmapreduce.amazonaws.com\"\n      },\n      \"Action\": \"sts:AssumeRole\"\n    }\n  ]\n}\n",
                      "name": "iam_emr_service_role"
                    }
                aws_iam_role_policy.iam_emr_profile_policy: |-
                    {
                      "name": "iam_emr_profile_policy",
                      "policy": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [{\n        \"Effect\": \"Allow\",\n        \"Resource\": \"*\",\n        \"Action\": [\n            \"cloudwatch:*\",\n            \"dynamodb:*\",\n            \"ec2:Describe*\",\n            \"elasticmapreduce:Describe*\",\n            \"elasticmapreduce:ListBootstrapActions\",\n            \"elasticmapreduce:ListClusters\",\n            \"elasticmapreduce:ListInstanceGroups\",\n            \"elasticmapreduce:ListInstances\",\n            \"elasticmapreduce:ListSteps\",\n            \"kinesis:CreateStream\",\n            \"kinesis:DeleteStream\",\n            \"kinesis:DescribeStream\",\n            \"kinesis:GetRecords\",\n            \"kinesis:GetShardIterator\",\n            \"kinesis:MergeShards\",\n            \"kinesis:PutRecord\",\n            \"kinesis:SplitShard\",\n            \"rds:Describe*\",\n            \"s3:*\",\n            \"sdb:*\",\n            \"sns:*\",\n            \"sqs:*\"\n        ]\n    }]\n}\n",
                      "role": "${aws_iam_role.iam_emr_profile_role.id}"
                    }
                aws_iam_role_policy.iam_emr_service_policy: |-
                    {
                      "name": "iam_emr_service_policy",
                      "policy": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [{\n        \"Effect\": \"Allow\",\n        \"Resource\": \"*\",\n        \"Action\": [\n            \"ec2:AuthorizeSecurityGroupEgress\",\n            \"ec2:AuthorizeSecurityGroupIngress\",\n            \"ec2:CancelSpotInstanceRequests\",\n            \"ec2:CreateNetworkInterface\",\n            \"ec2:CreateSecurityGroup\",\n            \"ec2:CreateTags\",\n            \"ec2:DeleteNetworkInterface\",\n            \"ec2:DeleteSecurityGroup\",\n            \"ec2:DeleteTags\",\n            \"ec2:DescribeAvailabilityZones\",\n            \"ec2:DescribeAccountAttributes\",\n            \"ec2:DescribeDhcpOptions\",\n            \"ec2:DescribeInstanceStatus\",\n            \"ec2:DescribeInstances\",\n            \"ec2:DescribeKeyPairs\",\n            \"ec2:DescribeNetworkAcls\",\n            \"ec2:DescribeNetworkInterfaces\",\n            \"ec2:DescribePrefixLists\",\n            \"ec2:DescribeRouteTables\",\n            \"ec2:DescribeSecurityGroups\",\n            \"ec2:DescribeSpotInstanceRequests\",\n            \"ec2:DescribeSpotPriceHistory\",\n            \"ec2:DescribeSubnets\",\n            \"ec2:DescribeVpcAttribute\",\n            \"ec2:DescribeVpcEndpoints\",\n            \"ec2:DescribeVpcEndpointServices\",\n            \"ec2:DescribeVpcs\",\n            \"ec2:DetachNetworkInterface\",\n            \"ec2:ModifyImageAttribute\",\n            \"ec2:ModifyInstanceAttribute\",\n            \"ec2:RequestSpotInstances\",\n            \"ec2:RevokeSecurityGroupEgress\",\n            \"ec2:RunInstances\",\n            \"ec2:TerminateInstances\",\n            \"ec2:DeleteVolume\",\n            \"ec2:DescribeVolumeStatus\",\n            \"ec2:DescribeVolumes\",\n            \"ec2:DetachVolume\",\n            \"iam:GetRole\",\n            \"iam:GetRolePolicy\",\n            \"iam:ListInstanceProfiles\",\n            \"iam:ListRolePolicies\",\n            \"iam:PassRole\",\n            \"s3:CreateBucket\",\n            \"s3:Get*\",\n            \"s3:List*\",\n            \"sdb:BatchPutAttributes\",\n            \"sdb:Select\",\n            \"sqs:CreateQueue\",\n            \"sqs:Delete*\",\n            \"sqs:GetQueue*\",\n            \"sqs:PurgeQueue\",\n            \"sqs:ReceiveMessage\"\n        ]\n    }]\n}\n",
                      "role": "${aws_iam_role.iam_emr_service_role.id}"
                    }
                aws_internet_gateway.gw: |-
                    {
                      "vpc_id": "${aws_vpc.main.id}"
                    }
                aws_main_route_table_association.a: |-
                    {
                      "route_table_id": "${aws_route_table.r.id}",
                      "vpc_id": "${aws_vpc.main.id}"
                    }
                aws_route_table.r: |-
                    {
                      "route": [
                        {
                          "cidr_block": "0.0.0.0/0",
                          "gateway_id": "${aws_internet_gateway.gw.id}"
                        }
                      ],
                      "vpc_id": "${aws_vpc.main.id}"
                    }
                aws_security_group.allow_access: |-
                    {
                      "depends_on": [
                        "${aws_subnet.main}"
                      ],
                      "description": "Allow inbound traffic",
                      "egress": [
                        {
                          "cidr_blocks": [
                            "0.0.0.0/0"
                          ],
                          "from_port": 0,
                          "protocol": "-1",
                          "to_port": 0
                        }
                      ],
                      "ingress": [
                        {
                          "cidr_blocks": [
                            "${aws_vpc.main.cidr_block}"
                          ],
                          "from_port": 0,
                          "protocol": "-1",
                          "to_port": 0
                        }
                      ],
                      "lifecycle": [
                        {
                          "ignore_changes": [
                            "${ingress}",
                            "${egress}"
                          ]
                        }
                      ],
                      "name": "allow_access",
                      "tags": {
                        "name": "emr_test"
                      },
                      "vpc_id": "${aws_vpc.main.id}"
                    }
                aws_subnet.main: |-
                    {
                      "cidr_block": "168.31.0.0/20",
                      "tags": {
                        "name": "emr_test"
                      },
                      "vpc_id": "${aws_vpc.main.id}"
                    }
                aws_vpc.main: |-
                    {
                      "cidr_block": "168.31.0.0/16",
                      "enable_dns_hostnames": true,
                      "tags": {
                        "name": "emr_test"
                      }
                    }
            - name: cluster
              manifest: |-
                {
                  "configurations_json": "  [\n    {\n      \"Classification\": \"hadoop-env\",\n      \"Configurations\": [\n        {\n          \"Classification\": \"export\",\n          \"Properties\": {\n            \"JAVA_HOME\": \"/usr/lib/jvm/java-1.8.0\"\n          }\n        }\n      ],\n      \"Properties\": {}\n    }\n  ]\n"
                }
            - name: example
              manifest: |-
                {
                  "lifecycle": [
                    {
                      "ignore_changes": [
                        "${kerberos_attributes}"
                      ]
                    }
                  ]
                }
        argumentDocs:
            action_on_failure: '- (Required) Action to take if the step fails. Valid values: TERMINATE_JOB_FLOW, TERMINATE_CLUSTER, CANCEL_AND_WAIT, and CONTINUE'
            additional_info: '- (Optional) JSON string for selecting additional features such as adding proxy information. Note: Currently there is no API to retrieve the value of this argument after EMR cluster creation from provider, therefore Terraform cannot detect drift from the actual EMR cluster if its value is changed outside Terraform.'
            applications: '- (Optional) A case-insensitive list of applications for Amazon EMR to install and configure when launching the cluster. For a list of applications available for each Amazon EMR release version, see the Amazon EMR Release Guide.'
            args: '- (Optional) List of command line arguments passed to the JAR file''s main function when executed.'
            arn: '- ARN of the cluster.'
            auto_termination_policy: '- (Optional) An auto-termination policy for an Amazon EMR cluster. An auto-termination policy defines the amount of idle time in seconds after which a cluster automatically terminates. See Auto Termination Policy Below.'
            auto_termination_policy.idle_timeout: '- (Optional) Specifies the amount of idle time in seconds after which the cluster automatically terminates. You can specify a minimum of 60 seconds and a maximum of 604800 seconds (seven days).'
            autoscaling_role: '- (Optional) IAM role for automatic scaling policies. The IAM role provides permissions that the automatic scaling feature requires to launch and terminate EC2 instances in an instance group.'
            bootstrap_action: '- (Optional) Ordered list of bootstrap actions that will be run before Hadoop is started on the cluster nodes. See below.'
            bootstrap_action.args: '- (Optional) List of command line arguments to pass to the bootstrap action script.'
            bootstrap_action.name: '- (Required) Name of the bootstrap action.'
            bootstrap_action.path: '- (Required) Location of the script to run during a bootstrap action. Can be either a location in Amazon S3 or on a local file system.'
            configurations: '- (Optional) List of configurations supplied for the EMR cluster you are creating. Supply a configuration object for applications to override their default configuration. See AWS Documentation for more information.'
            configurations.classification: '- (Optional) Classification within a configuration.'
            configurations.properties: '- (Optional) Map of properties specified within a configuration classification.'
            configurations_json: '- (Optional) JSON string for supplying list of configurations for the EMR cluster.'
            core_instance_fleet: '- (Optional) Configuration block to use an Instance Fleet for the core node type. Cannot be specified if any core_instance_group configuration blocks are set. Detailed below.'
            core_instance_fleet.instance_type_configs: '- (Optional) Configuration block for instance fleet.'
            core_instance_fleet.instance_type_configs.bid_price: '- (Optional) Bid price for each EC2 Spot instance type as defined by instance_type. Expressed in USD. If neither bid_price nor bid_price_as_percentage_of_on_demand_price is provided, bid_price_as_percentage_of_on_demand_price defaults to 100%.'
            core_instance_fleet.instance_type_configs.bid_price_as_percentage_of_on_demand_price: '- (Optional) Bid price, as a percentage of On-Demand price, for each EC2 Spot instance as defined by instance_type. Expressed as a number (for example, 20 specifies 20%). If neither bid_price nor bid_price_as_percentage_of_on_demand_price is provided, bid_price_as_percentage_of_on_demand_price defaults to 100%.'
            core_instance_fleet.instance_type_configs.configurations: '- (Optional) Configuration classification that applies when provisioning cluster instances, which can include configurations for applications and software that run on the cluster. List of configuration blocks.'
            core_instance_fleet.instance_type_configs.ebs_config: '- (Optional) Configuration block(s) for EBS volumes attached to each instance in the instance group. Detailed below.'
            core_instance_fleet.instance_type_configs.ebs_config.iops: '- (Optional) Number of I/O operations per second (IOPS) that the volume supports.'
            core_instance_fleet.instance_type_configs.ebs_config.size: '- (Required) Volume size, in gibibytes (GiB).'
            core_instance_fleet.instance_type_configs.ebs_config.throughput: '- (Optional) The throughput, in mebibyte per second (MiB/s).'
            core_instance_fleet.instance_type_configs.ebs_config.type: '- (Required) Volume type. Valid options are gp3, gp2, io1, standard, st1 and sc1. See EBS Volume Types.'
            core_instance_fleet.instance_type_configs.ebs_config.volumes_per_instance: '- (Optional) Number of EBS volumes with this configuration to attach to each EC2 instance in the instance group (default is 1).'
            core_instance_fleet.instance_type_configs.instance_type: '- (Required) EC2 instance type, such as m4.xlarge.'
            core_instance_fleet.instance_type_configs.weighted_capacity: '- (Optional) Number of units that a provisioned instance of this type provides toward fulfilling the target capacities defined in aws_emr_instance_fleet.'
            core_instance_fleet.launch_specifications: '- (Optional) Configuration block for launch specification.'
            core_instance_fleet.launch_specifications.on_demand_specification: '- (Optional) Configuration block for on demand instances launch specifications.'
            core_instance_fleet.launch_specifications.on_demand_specification.allocation_strategy: '- (Required) Specifies the strategy to use in launching On-Demand instance fleets. Currently, the only option is lowest-price (the default), which launches the lowest price first.'
            core_instance_fleet.launch_specifications.spot_specification: '- (Optional) Configuration block for spot instances launch specifications.'
            core_instance_fleet.launch_specifications.spot_specification.allocation_strategy: '- (Required) Specifies the strategy to use in launching Spot instance fleets. Currently, the only option is capacity-optimized (the default), which launches instances from Spot instance pools with optimal capacity for the number of instances that are launching.'
            core_instance_fleet.launch_specifications.spot_specification.block_duration_minutes: '- (Optional) Defined duration for Spot instances (also known as Spot blocks) in minutes. When specified, the Spot instance does not terminate before the defined duration expires, and defined duration pricing for Spot instances applies. Valid values are 60, 120, 180, 240, 300, or 360. The duration period starts as soon as a Spot instance receives its instance ID. At the end of the duration, Amazon EC2 marks the Spot instance for termination and provides a Spot instance termination notice, which gives the instance a two-minute warning before it terminates.'
            core_instance_fleet.launch_specifications.spot_specification.timeout_action: '- (Required) Action to take when TargetSpotCapacity has not been fulfilled when the TimeoutDurationMinutes has expired; that is, when all Spot instances could not be provisioned within the Spot provisioning timeout. Valid values are TERMINATE_CLUSTER and SWITCH_TO_ON_DEMAND. SWITCH_TO_ON_DEMAND specifies that if no Spot instances are available, On-Demand Instances should be provisioned to fulfill any remaining Spot capacity.'
            core_instance_fleet.launch_specifications.spot_specification.timeout_duration_minutes: '- (Required) Spot provisioning timeout period in minutes. If Spot instances are not provisioned within this time period, the TimeOutAction is taken. Minimum value is 5 and maximum value is 1440. The timeout applies only during initial provisioning, when the cluster is first created.'
            core_instance_fleet.name: '- (Optional) Friendly name given to the instance fleet.'
            core_instance_fleet.target_on_demand_capacity: '- (Optional)  The target capacity of On-Demand units for the instance fleet, which determines how many On-Demand instances to provision.'
            core_instance_fleet.target_spot_capacity: '- (Optional) Target capacity of Spot units for the instance fleet, which determines how many Spot instances to provision.'
            core_instance_group: '- (Optional) Configuration block to use an Instance Group for the core node type.'
            core_instance_group.0.id: '- Core node type Instance Group ID, if using Instance Group for this node type.'
            core_instance_group.autoscaling_policy: '- (Optional) String containing the EMR Auto Scaling Policy JSON.'
            core_instance_group.bid_price: '- (Optional) Bid price for each EC2 instance in the instance group, expressed in USD. By setting this attribute, the instance group is being declared as a Spot Instance, and will implicitly create a Spot request. Leave this blank to use On-Demand Instances.'
            core_instance_group.ebs_config: '- (Optional) Configuration block(s) for EBS volumes attached to each instance in the instance group. Detailed below.'
            core_instance_group.instance_count: '- (Optional) Target number of instances for the instance group. Must be at least 1. Defaults to 1.'
            core_instance_group.instance_type: '- (Required) EC2 instance type for all instances in the instance group.'
            core_instance_group.name: '- (Optional) Friendly name given to the instance group.'
            custom_ami_id: '- (Optional) Custom Amazon Linux AMI for the cluster (instead of an EMR-owned AMI). Available in Amazon EMR version 5.7.0 and later.'
            ebs_root_volume_size: '- (Optional) Size in GiB of the EBS root device volume of the Linux AMI that is used for each EC2 instance. Available in Amazon EMR version 4.x and later.'
            ec2_attributes: '- (Optional) Attributes for the EC2 instances running the job flow. See below.'
            ec2_attributes.additional_master_security_groups: '- (Optional) String containing a comma separated list of additional Amazon EC2 security group IDs for the master node.'
            ec2_attributes.additional_slave_security_groups: '- (Optional) String containing a comma separated list of additional Amazon EC2 security group IDs for the slave nodes as a comma separated string.'
            ec2_attributes.emr_managed_master_security_group: '- (Optional) Identifier of the Amazon EC2 EMR-Managed security group for the master node.'
            ec2_attributes.emr_managed_slave_security_group: '- (Optional) Identifier of the Amazon EC2 EMR-Managed security group for the slave nodes.'
            ec2_attributes.instance_profile: '- (Required) Instance Profile for EC2 instances of the cluster assume this role.'
            ec2_attributes.key_name: '- (Optional) Amazon EC2 key pair that can be used to ssh to the master node as the user called hadoop.'
            ec2_attributes.service_access_security_group: '- (Optional) Identifier of the Amazon EC2 service-access security group - required when the cluster runs on a private subnet.'
            ec2_attributes.subnet_id: '- (Optional) VPC subnet id where you want the job flow to launch. Cannot specify the cc1.4xlarge instance type for nodes of a job flow launched in an Amazon VPC.'
            ec2_attributes.subnet_ids: '- (Optional) List of VPC subnet id-s where you want the job flow to launch.  Amazon EMR identifies the best Availability Zone to launch instances according to your fleet specifications.'
            hadoop_jar_step: '- (Required) JAR file used for the step. See below.'
            id: '- ID of the cluster.'
            jar: '- (Required) Path to a JAR file run during the step.'
            keep_job_flow_alive_when_no_steps: '- (Optional) Switch on/off run cluster with no steps or when all steps are complete (default is on)'
            kerberos_attributes: '- (Optional) Kerberos configuration for the cluster. See below.'
            kerberos_attributes.ad_domain_join_password: '- (Optional) Active Directory password for ad_domain_join_user. Terraform cannot perform drift detection of this configuration.'
            kerberos_attributes.ad_domain_join_user: '- (Optional) Required only when establishing a cross-realm trust with an Active Directory domain. A user with sufficient privileges to join resources to the domain. Terraform cannot perform drift detection of this configuration.'
            kerberos_attributes.cross_realm_trust_principal_password: '- (Optional) Required only when establishing a cross-realm trust with a KDC in a different realm. The cross-realm principal password, which must be identical across realms. Terraform cannot perform drift detection of this configuration.'
            kerberos_attributes.kdc_admin_password: '- (Required) Password used within the cluster for the kadmin service on the cluster-dedicated KDC, which maintains Kerberos principals, password policies, and keytabs for the cluster. Terraform cannot perform drift detection of this configuration.'
            kerberos_attributes.realm: '- (Required) Name of the Kerberos realm to which all nodes in a cluster belong. For example, EC2.INTERNAL'
            list_steps_states: '- (Optional) List of step states used to filter returned steps'
            log_encryption_kms_key_id: '- (Optional) AWS KMS customer master key (CMK) key ID or arn used for encrypting log files. This attribute is only available with EMR version 5.30.0 and later, excluding EMR 6.0.0.'
            log_uri: '- (Optional) S3 bucket to write the log files of the job flow. If a value is not provided, logs are not created.'
            main_class: '- (Optional) Name of the main class in the specified Java file. If not specified, the JAR file should specify a Main-Class in its manifest file.'
            master_instance_fleet: '- (Optional) Configuration block to use an Instance Fleet for the master node type. Cannot be specified if any master_instance_group configuration blocks are set. Detailed below.'
            master_instance_fleet.instance_type_configs: '- (Optional) Configuration block for instance fleet.'
            master_instance_fleet.launch_specifications: '- (Optional) Configuration block for launch specification.'
            master_instance_fleet.name: '- (Optional) Friendly name given to the instance fleet.'
            master_instance_fleet.target_on_demand_capacity: '- (Optional) Target capacity of On-Demand units for the instance fleet, which determines how many On-Demand instances to provision.'
            master_instance_fleet.target_spot_capacity: '- (Optional) Target capacity of Spot units for the instance fleet, which determines how many Spot instances to provision.'
            master_instance_group: '- (Optional) Configuration block to use an Instance Group for the master node type.'
            master_instance_group.0.id: '- Master node type Instance Group ID, if using Instance Group for this node type.'
            master_instance_group.bid_price: '- (Optional) Bid price for each EC2 instance in the instance group, expressed in USD. By setting this attribute, the instance group is being declared as a Spot Instance, and will implicitly create a Spot request. Leave this blank to use On-Demand Instances.'
            master_instance_group.ebs_config: '- (Optional) Configuration block(s) for EBS volumes attached to each instance in the instance group. Detailed below.'
            master_instance_group.instance_count: '- (Optional) Target number of instances for the instance group. Must be 1 or 3. Defaults to 1. Launching with multiple master nodes is only supported in EMR version 5.23.0+, and requires this resource''s core_instance_group to be configured. Public (Internet accessible) instances must be created in VPC subnets that have map public IP on launch enabled. Termination protection is automatically enabled when launched with multiple master nodes and Terraform must have the termination_protection = false configuration applied before destroying this resource.'
            master_instance_group.instance_type: '- (Required) EC2 instance type for all instances in the instance group.'
            master_instance_group.name: '- (Optional) Friendly name given to the instance group.'
            master_public_dns: '- The DNS name of the master node. If the cluster is on a private subnet, this is the private DNS name. On a public subnet, this is the public DNS name.'
            name: '- (Required) Name of the job flow.'
            properties: '- (Optional) Key-Value map of Java properties that are set when the step runs. You can use these properties to pass key value pairs to your main function.'
            release_label: '- (Required) Release label for the Amazon EMR release.'
            scale_down_behavior: '- (Optional) Way that individual Amazon EC2 instances terminate when an automatic scale-in activity occurs or an instance group is resized.'
            security_configuration: '- (Optional) Security configuration name to attach to the EMR cluster. Only valid for EMR clusters with release_label 4.8.0 or greater.'
            service_role: '- (Required) IAM role that will be assumed by the Amazon EMR service to access AWS resources.'
            step: '- (Optional) List of steps to run when creating the cluster. See below. It is highly recommended to utilize the lifecycle configuration block with ignore_changes if other steps are being managed outside of Terraform. This argument is processed in attribute-as-blocks mode.'
            step_concurrency_level: '- (Optional) Number of steps that can be executed concurrently. You can specify a maximum of 256 steps. Only valid for EMR clusters with release_label 5.28.0 or greater (default is 1).'
            tags: '- (Optional) list of tags to apply to the EMR Cluster. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            termination_protection: '- (Optional) Switch on/off termination protection (default is false, except when using multiple master nodes). Before attempting to destroy the resource when termination protection is enabled, this configuration must be applied with its value set to false.'
            visible_to_all_users: '- (Optional) Whether the job flow is visible to all IAM users of the AWS account associated with the job flow. Default value is true.'
        importStatements: []
    aws_emr_instance_fleet:
        subCategory: EMR
        description: Provides an Elastic MapReduce Cluster Instance Fleet
        name: aws_emr_instance_fleet
        title: aws_emr_instance_fleet
        examples:
            - name: task
              manifest: |-
                {
                  "cluster_id": "${aws_emr_cluster.cluster.id}",
                  "instance_type_configs": [
                    {
                      "bid_price_as_percentage_of_on_demand_price": 100,
                      "ebs_config": [
                        {
                          "size": 100,
                          "type": "gp2",
                          "volumes_per_instance": 1
                        }
                      ],
                      "instance_type": "m4.xlarge",
                      "weighted_capacity": 1
                    },
                    {
                      "bid_price_as_percentage_of_on_demand_price": 100,
                      "ebs_config": [
                        {
                          "size": 100,
                          "type": "gp2",
                          "volumes_per_instance": 1
                        }
                      ],
                      "instance_type": "m4.2xlarge",
                      "weighted_capacity": 2
                    }
                  ],
                  "launch_specifications": [
                    {
                      "spot_specification": [
                        {
                          "allocation_strategy": "capacity-optimized",
                          "block_duration_minutes": 0,
                          "timeout_action": "TERMINATE_CLUSTER",
                          "timeout_duration_minutes": 10
                        }
                      ]
                    }
                  ],
                  "name": "task fleet",
                  "target_on_demand_capacity": 1,
                  "target_spot_capacity": 1
                }
              references:
                cluster_id: aws_emr_cluster.cluster.id
        argumentDocs:
            allocation_strategy: '- (Required) Specifies the strategy to use in launching On-Demand instance fleets. Currently, the only option is lowest-price (the default), which launches the lowest price first.'
            block_duration_minutes: '- (Optional) The defined duration for Spot instances (also known as Spot blocks) in minutes. When specified, the Spot instance does not terminate before the defined duration expires, and defined duration pricing for Spot instances applies. Valid values are 60, 120, 180, 240, 300, or 360. The duration period starts as soon as a Spot instance receives its instance ID. At the end of the duration, Amazon EC2 marks the Spot instance for termination and provides a Spot instance termination notice, which gives the instance a two-minute warning before it terminates.'
            classification: '- (Optional) The classification within a configuration.'
            cluster_id: '- (Required) ID of the EMR Cluster to attach to. Changing this forces a new resource to be created.'
            id: '- The unique identifier of the instance fleet.'
            instance_type_configs: '- (Optional) Configuration block for instance fleet'
            instance_type_configs.bid_price: '- (Optional) The bid price for each EC2 Spot instance type as defined by instance_type. Expressed in USD. If neither bid_price nor bid_price_as_percentage_of_on_demand_price is provided, bid_price_as_percentage_of_on_demand_price defaults to 100%.'
            instance_type_configs.bid_price_as_percentage_of_on_demand_price: '- (Optional) The bid price, as a percentage of On-Demand price, for each EC2 Spot instance as defined by instance_type. Expressed as a number (for example, 20 specifies 20%). If neither bid_price nor bid_price_as_percentage_of_on_demand_price is provided, bid_price_as_percentage_of_on_demand_price defaults to 100%.'
            instance_type_configs.configurations: '- (Optional) A configuration classification that applies when provisioning cluster instances, which can include configurations for applications and software that run on the cluster. List of configuration blocks.'
            instance_type_configs.ebs_config: '- (Optional) Configuration block(s) for EBS volumes attached to each instance in the instance group. Detailed below.'
            instance_type_configs.instance_type: '- (Required) An EC2 instance type, such as m4.xlarge.'
            instance_type_configs.weighted_capacity: '- (Optional) The number of units that a provisioned instance of this type provides toward fulfilling the target capacities defined in aws_emr_instance_fleet.'
            launch_specifications: '- (Optional) Configuration block for launch specification'
            launch_specifications.on_demand_specification: '- (Optional) Configuration block for on demand instances launch specifications'
            launch_specifications.spot_specification: '- (Optional) Configuration block for spot instances launch specifications'
            master_instance_group.iops: '- (Optional) The number of I/O operations per second (IOPS) that the volume supports'
            master_instance_group.size: '- (Required) The volume size, in gibibytes (GiB).'
            master_instance_group.type: '- (Required) The volume type. Valid options are gp2, io1, standard and st1. See EBS Volume Types.'
            master_instance_group.volumes_per_instance: '- (Optional) The number of EBS volumes with this configuration to attach to each EC2 instance in the instance group (default is 1)'
            name: '- (Optional) Friendly name given to the instance fleet.'
            properties: '- (Optional) A map of properties specified within a configuration classification'
            provisioned_on_demand_capacity: |-
                The number of On-Demand units that have been provisioned for the instance
                fleet to fulfill TargetOnDemandCapacity. This provisioned capacity might be less than or greater than TargetOnDemandCapacity.
            provisioned_spot_capacity: |-
                The number of Spot units that have been provisioned for this instance fleet
                to fulfill TargetSpotCapacity. This provisioned capacity might be less than or greater than TargetSpotCapacity.
            status: The current status of the instance fleet.
            target_on_demand_capacity: '- (Optional)  The target capacity of On-Demand units for the instance fleet, which determines how many On-Demand instances to provision.'
            target_spot_capacity: '- (Optional) The target capacity of Spot units for the instance fleet, which determines how many Spot instances to provision.'
            timeout_action: '- (Required) The action to take when TargetSpotCapacity has not been fulfilled when the TimeoutDurationMinutes has expired; that is, when all Spot instances could not be provisioned within the Spot provisioning timeout. Valid values are TERMINATE_CLUSTER and SWITCH_TO_ON_DEMAND. SWITCH_TO_ON_DEMAND specifies that if no Spot instances are available, On-Demand Instances should be provisioned to fulfill any remaining Spot capacity.'
            timeout_duration_minutes: '- (Required) The spot provisioning timeout period in minutes. If Spot instances are not provisioned within this time period, the TimeOutAction is taken. Minimum value is 5 and maximum value is 1440. The timeout applies only during initial provisioning, when the cluster is first created.'
        importStatements: []
    aws_emr_instance_group:
        subCategory: EMR
        description: Provides an Elastic MapReduce Cluster Instance Group
        name: aws_emr_instance_group
        title: aws_emr_instance_group
        examples:
            - name: task
              manifest: |-
                {
                  "cluster_id": "${aws_emr_cluster.tf-test-cluster.id}",
                  "instance_count": 1,
                  "instance_type": "m5.xlarge",
                  "name": "my little instance group"
                }
              references:
                cluster_id: aws_emr_cluster.tf-test-cluster.id
            - name: task
              manifest: |-
                {
                  "configurations_json": "  [\n    {\n      \"Classification\": \"hadoop-env\",\n      \"Configurations\": [\n        {\n          \"Classification\": \"export\",\n          \"Properties\": {\n            \"JAVA_HOME\": \"/usr/lib/jvm/java-1.8.0\"\n          }\n        }\n      ],\n      \"Properties\": {}\n    }\n  ]\n"
                }
        argumentDocs:
            autoscaling_policy: '- (Optional) The autoscaling policy document. This is a JSON formatted string. See EMR Auto Scaling'
            bid_price: '- (Optional) If set, the bid price for each EC2 instance in the instance group, expressed in USD. By setting this attribute, the instance group is being declared as a Spot Instance, and will implicitly create a Spot request. Leave this blank to use On-Demand Instances.'
            cluster_id: (Required) ID of the EMR Cluster to attach to. Changing this forces a new resource to be created.
            configurations_json: '- (Optional) A JSON string for supplying list of configurations specific to the EMR instance group. Note that this can only be changed when using EMR release 5.21 or later.'
            ebs_config: (Optional) One or more ebs_config blocks as defined below. Changing this forces a new resource to be created.
            ebs_optimized: (Optional) Indicates whether an Amazon EBS volume is EBS-optimized. Changing this forces a new resource to be created.
            id: '- The EMR Instance ID'
            instance_count: (optional) target number of instances for the instance group. defaults to 0.
            instance_type: (Required) The EC2 instance type for all instances in the instance group. Changing this forces a new resource to be created.
            iops: '- (Optional) The number of I/O operations per second (IOPS) that the volume supports.'
            name: (Required) Human friendly name given to the instance group. Changing this forces a new resource to be created.
            running_instance_count: The number of instances currently running in this instance group.
            size: '- (Optional) The volume size, in gibibytes (GiB). This can be a number from 1 - 1024. If the volume type is EBS-optimized, the minimum value is 10.'
            status: The current status of the instance group.
            type: '- (Optional) The volume type. Valid options are ''gp2'', ''io1'' and ''standard''.'
            volumes_per_instance: '- (Optional) The number of EBS Volumes to attach per instance.'
        importStatements: []
    aws_emr_managed_scaling_policy:
        subCategory: EMR
        description: Provides a resource for EMR Managed Scaling policy
        name: aws_emr_managed_scaling_policy
        title: aws_emr_managed_scaling_policy
        examples:
            - name: samplepolicy
              manifest: |-
                {
                  "cluster_id": "${aws_emr_cluster.sample.id}",
                  "compute_limits": [
                    {
                      "maximum_capacity_units": 10,
                      "maximum_core_capacity_units": 10,
                      "maximum_ondemand_capacity_units": 2,
                      "minimum_capacity_units": 2,
                      "unit_type": "Instances"
                    }
                  ]
                }
              references:
                cluster_id: aws_emr_cluster.sample.id
              dependencies:
                aws_emr_cluster.sample: |-
                    {
                      "core_instance_group": [
                        {
                          "instance_type": "c4.large"
                        }
                      ],
                      "master_instance_group": [
                        {
                          "instance_type": "m4.large"
                        }
                      ],
                      "name": "emr-sample-cluster",
                      "release_label": "emr-5.30.0"
                    }
        argumentDocs:
            cluster_id: '- (Required) The id of the EMR cluster'
            compute_limits: '- (Required) Configuration block with compute limit settings. Described below.'
            compute_limits.maximum_capacity_units: '- (Required) The upper boundary of EC2 units. It is measured through VCPU cores or instances for instance groups and measured through units for instance fleets. Managed scaling activities are not allowed beyond this boundary. The limit only applies to the core and task nodes. The master node cannot be scaled after initial configuration.'
            compute_limits.maximum_core_capacity_units: '- (Optional) The upper boundary of EC2 units for core node type in a cluster. It is measured through VCPU cores or instances for instance groups and measured through units for instance fleets. The core units are not allowed to scale beyond this boundary. The parameter is used to split capacity allocation between core and task nodes.'
            compute_limits.maximum_ondemand_capacity_units: '- (Optional) The upper boundary of On-Demand EC2 units. It is measured through VCPU cores or instances for instance groups and measured through units for instance fleets. The On-Demand units are not allowed to scale beyond this boundary. The parameter is used to split capacity allocation between On-Demand and Spot instances.'
            compute_limits.minimum_capacity_units: '- (Required) The lower boundary of EC2 units. It is measured through VCPU cores or instances for instance groups and measured through units for instance fleets. Managed scaling activities are not allowed beyond this boundary. The limit only applies to the core and task nodes. The master node cannot be scaled after initial configuration.'
            compute_limits.unit_type: '- (Required) The unit type used for specifying a managed scaling policy. Valid Values: InstanceFleetUnits | Instances | VCPU'
        importStatements: []
    aws_emr_security_configuration:
        subCategory: EMR
        description: Provides a resource to manage AWS EMR Security Configurations
        name: aws_emr_security_configuration
        title: aws_emr_security_configuration
        examples:
            - name: foo
              manifest: |-
                {
                  "configuration": "{\n  \"EncryptionConfiguration\": {\n    \"AtRestEncryptionConfiguration\": {\n      \"S3EncryptionConfiguration\": {\n        \"EncryptionMode\": \"SSE-S3\"\n      },\n      \"LocalDiskEncryptionConfiguration\": {\n        \"EncryptionKeyProviderType\": \"AwsKms\",\n        \"AwsKmsKey\": \"arn:aws:kms:us-west-2:187416307283:alias/tf_emr_test_key\"\n      }\n    },\n    \"EnableInTransitEncryption\": false,\n    \"EnableAtRestEncryption\": true\n  }\n}\n",
                  "name": "emrsc_other"
                }
        argumentDocs:
            configuration: '- (Required) A JSON formatted Security Configuration'
            creation_date: '- Date the Security Configuration was created'
            id: '- The ID of the EMR Security Configuration (Same as the name)'
            name: '- (Optional) The name of the EMR Security Configuration. By default generated by Terraform.'
            name_prefix: |-
                - (Optional) Creates a unique name beginning with the specified
                prefix. Conflicts with name.
        importStatements: []
    aws_emr_studio:
        subCategory: EMR
        description: Provides an Elastic MapReduce Studio
        name: aws_emr_studio
        title: aws_emr_studio
        examples:
            - name: example
              manifest: |-
                {
                  "auth_mode": "SSO",
                  "default_s3_location": "s3://${aws_s3_bucket.test.bucket}/test",
                  "engine_security_group_id": "${aws_security_group.test.id}",
                  "name": "example",
                  "service_role": "${aws_iam_role.test.arn}",
                  "subnet_ids": [
                    "${aws_subnet.test.id}"
                  ],
                  "user_role": "${aws_iam_role.test.arn}",
                  "vpc_id": "${aws_vpc.test.id}",
                  "workspace_security_group_id": "${aws_security_group.test.id}"
                }
              references:
                engine_security_group_id: aws_security_group.test.id
                service_role: aws_iam_role.test.arn
                user_role: aws_iam_role.test.arn
                vpc_id: aws_vpc.test.id
                workspace_security_group_id: aws_security_group.test.id
        argumentDocs:
            arn: '- ARN of the studio.'
            auth_mode: '- (Required) Specifies whether the Studio authenticates users using IAM or Amazon Web Services SSO. Valid values are SSO or IAM.'
            default_s3_location: '- (Required) The Amazon S3 location to back up Amazon EMR Studio Workspaces and notebook files.'
            description: '- (Optional) A detailed description of the Amazon EMR Studio.'
            engine_security_group_id: '- (Required) The ID of the Amazon EMR Studio Engine security group. The Engine security group allows inbound network traffic from the Workspace security group, and it must be in the same VPC specified by vpc_id.'
            idp_auth_url: '- (Optional) The authentication endpoint of your identity provider (IdP). Specify this value when you use IAM authentication and want to let federated users log in to a Studio with the Studio URL and credentials from your IdP. Amazon EMR Studio redirects users to this endpoint to enter credentials.'
            idp_relay_state_parameter_name: '- (Optional) The name that your identity provider (IdP) uses for its RelayState parameter. For example, RelayState or TargetSource. Specify this value when you use IAM authentication and want to let federated users log in to a Studio using the Studio URL. The RelayState parameter differs by IdP.'
            name: '- (Required) A descriptive name for the Amazon EMR Studio.'
            service_role: '- (Required) The IAM role that the Amazon EMR Studio assumes. The service role provides a way for Amazon EMR Studio to interoperate with other Amazon Web Services services.'
            subnet_ids: '- (Required) A list of subnet IDs to associate with the Amazon EMR Studio. A Studio can have a maximum of 5 subnets. The subnets must belong to the VPC specified by vpc_id. Studio users can create a Workspace in any of the specified subnets.'
            tags: '- (Optional) list of tags to apply to the EMR Cluster. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            url: '- The unique access URL of the Amazon EMR Studio.'
            user_role: '- (Optional) - The IAM user role that users and groups assume when logged in to an Amazon EMR Studio. Only specify a User Role when you use Amazon Web Services SSO authentication. The permissions attached to the User Role can be scoped down for each user or group using session policies.'
            vpc_id: '- (Required) The ID of the Amazon Virtual Private Cloud (Amazon VPC) to associate with the Studio.'
            workspace_security_group_id: '- (Required) The ID of the Amazon EMR Studio Workspace security group. The Workspace security group allows outbound network traffic to resources in the Engine security group, and it must be in the same VPC specified by vpc_id.'
        importStatements: []
    aws_emr_studio_session_mapping:
        subCategory: EMR
        description: Provides an Elastic MapReduce Studio
        name: aws_emr_studio_session_mapping
        title: aws_emr_studio_session_mapping
        examples:
            - name: example
              manifest: |-
                {
                  "identity_id": "example",
                  "identity_type": "USER",
                  "session_policy_arn": "${aws_iam_policy.example.arn}",
                  "studio_id": "${aws_emr_studio.example.id}"
                }
              references:
                session_policy_arn: aws_iam_policy.example.arn
                studio_id: aws_emr_studio.example.id
        argumentDocs:
            id: '- The id of the Elastic MapReduce Studio Session Mapping.'
            identity_id: '- (Optional) The globally unique identifier (GUID) of the user or group from the Amazon Web Services SSO Identity Store.'
            identity_name: '- (Optional) The name of the user or group from the Amazon Web Services SSO Identity Store.'
            identity_type: '- (Required) Specifies whether the identity to map to the Amazon EMR Studio is a USER or a GROUP.'
            session_policy_arn: '- (Required) The Amazon Resource Name (ARN) for the session policy that will be applied to the user or group. You should specify the ARN for the session policy that you want to apply, not the ARN of your user role.'
            studio_id: '- (Required) The ID of the Amazon EMR Studio to which the user or group will be mapped.'
        importStatements: []
    aws_emrcontainers_virtual_cluster:
        subCategory: EMR Containers
        description: Manages an EMR Containers (EMR on EKS) Virtual Cluster
        name: aws_emrcontainers_virtual_cluster
        title: aws_emrcontainers_virtual_cluster
        examples:
            - name: example
              manifest: |-
                {
                  "container_provider": [
                    {
                      "id": "${aws_eks_cluster.example.name}",
                      "info": [
                        {
                          "eks_info": [
                            {
                              "namespace": "default"
                            }
                          ]
                        }
                      ],
                      "type": "EKS"
                    }
                  ],
                  "name": "example"
                }
              references:
                container_provider.id: aws_eks_cluster.example.name
        argumentDocs:
            arn: '- ARN of the cluster.'
            container_provider: '- (Required) Configuration block for the container provider associated with your cluster.'
            eks_info: '- Nested list containing EKS-specific information about the cluster where the EMR Containers cluster is running'
            id: '- The name of the container provider that is running your EMR Containers cluster'
            info: '- Nested list containing information about the configuration of the container provider'
            name: – (Required) Name of the virtual cluster.
            namespace: '- The namespace where the EMR Containers cluster is running'
            tags: '- (Optional) Key-value mapping of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            type: '- The type of the container provider'
        importStatements: []
    aws_emrserverless_application:
        subCategory: EMR Serverless
        description: Manages an EMR Serverless Application
        name: aws_emrserverless_application
        title: aws_emrserverless_application
        examples:
            - name: example
              manifest: |-
                {
                  "name": "example",
                  "release_label": "emr-6.6.0",
                  "type": "hive"
                }
            - name: example
              manifest: |-
                {
                  "initial_capacity": [
                    {
                      "initial_capacity_config": [
                        {
                          "worker_configuration": [
                            {
                              "cpu": "2 vCPU",
                              "memory": "10 GB"
                            }
                          ],
                          "worker_count": 1
                        }
                      ],
                      "initial_capacity_type": "HiveDriver"
                    }
                  ],
                  "name": "example",
                  "release_label": "emr-6.6.0",
                  "type": "hive"
                }
            - name: example
              manifest: |-
                {
                  "maximum_capacity": [
                    {
                      "cpu": "2 vCPU",
                      "memory": "10 GB"
                    }
                  ],
                  "name": "example",
                  "release_label": "emr-6.6.0",
                  "type": "hive"
                }
        argumentDocs:
            arn: '- ARN of the cluster.'
            auto_start_configuration: – (Optional) The configuration for an application to automatically start on job submission.
            auto_stop_configuration: – (Optional) The configuration for an application to automatically stop after a certain amount of time being idle.
            cpu: '- (Required) The maximum allowed CPU for an application.'
            disk: '- (Optional) The maximum allowed disk for an application.'
            enabled: '- (Optional) Enables the application to automatically start on job submission. Defaults to true.'
            id: '- The ID of the cluster.'
            idle_timeout_minutes: '- (Optional) The amount of idle time in minutes after which your application will automatically stop. Defaults to 15 minutes.'
            initial_capacity: – (Optional) The capacity to initialize when the application is created.
            initial_capacity_config: '- (Optional) The initial capacity configuration per worker.'
            initial_capacity_type: '- (Required) The worker type for an analytics framework. For Spark applications, the key can either be set to Driver or Executor. For Hive applications, it can be set to HiveDriver or TezTask.'
            maximum_capacity: – (Optional) The maximum capacity to allocate when the application is created. This is cumulative across all workers at any given point in time, not just when an application is created. No new resources will be created once any one of the defined limits is hit.
            memory: '- (Required) The maximum allowed resources for an application.'
            name: – (Required) The name of the application.
            network_configuration: – (Optional) The network configuration for customer VPC connectivity.
            release_label: – (Required) The EMR release version associated with the application.
            security_group_ids: '- (Optional) The array of security group Ids for customer VPC connectivity.'
            subnet_ids: '- (Optional) The array of subnet Ids for customer VPC connectivity.'
            tags: '- (Optional) Key-value mapping of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            type: – (Required) The type of application you want to start, such as spark or hive.
            worker_configuration: '- (Optional) The resource configuration of the initial capacity configuration.'
            worker_count: '- (Required) The number of workers in the initial capacity configuration.'
        importStatements: []
    aws_flow_log:
        subCategory: VPC (Virtual Private Cloud)
        description: Provides a VPC/Subnet/ENI Flow Log
        name: aws_flow_log
        title: aws_flow_log
        examples:
            - name: example
              manifest: |-
                {
                  "iam_role_arn": "${aws_iam_role.example.arn}",
                  "log_destination": "${aws_cloudwatch_log_group.example.arn}",
                  "traffic_type": "ALL",
                  "vpc_id": "${aws_vpc.example.id}"
                }
              references:
                iam_role_arn: aws_iam_role.example.arn
                log_destination: aws_cloudwatch_log_group.example.arn
                vpc_id: aws_vpc.example.id
              dependencies:
                aws_cloudwatch_log_group.example: |-
                    {
                      "name": "example"
                    }
                aws_iam_role.example: |-
                    {
                      "assume_role_policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Principal\": {\n        \"Service\": \"vpc-flow-logs.amazonaws.com\"\n      },\n      \"Action\": \"sts:AssumeRole\"\n    }\n  ]\n}\n",
                      "name": "example"
                    }
                aws_iam_role_policy.example: |-
                    {
                      "name": "example",
                      "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": [\n        \"logs:CreateLogGroup\",\n        \"logs:CreateLogStream\",\n        \"logs:PutLogEvents\",\n        \"logs:DescribeLogGroups\",\n        \"logs:DescribeLogStreams\"\n      ],\n      \"Effect\": \"Allow\",\n      \"Resource\": \"*\"\n    }\n  ]\n}\n",
                      "role": "${aws_iam_role.example.id}"
                    }
            - name: example
              manifest: |-
                {
                  "log_destination": "${aws_s3_bucket.example.arn}",
                  "log_destination_type": "s3",
                  "traffic_type": "ALL",
                  "vpc_id": "${aws_vpc.example.id}"
                }
              references:
                log_destination: aws_s3_bucket.example.arn
                vpc_id: aws_vpc.example.id
              dependencies:
                aws_s3_bucket.example: |-
                    {
                      "bucket": "example"
                    }
            - name: example
              manifest: |-
                {
                  "destination_options": [
                    {
                      "file_format": "parquet",
                      "per_hour_partition": true
                    }
                  ],
                  "log_destination": "${aws_s3_bucket.example.arn}",
                  "log_destination_type": "s3",
                  "traffic_type": "ALL",
                  "vpc_id": "${aws_vpc.example.id}"
                }
              references:
                log_destination: aws_s3_bucket.example.arn
                vpc_id: aws_vpc.example.id
              dependencies:
                aws_s3_bucket.example: |-
                    {
                      "bucket": "example"
                    }
        argumentDocs:
            arn: '- The ARN of the Flow Log.'
            destination_options: '- (Optional) Describes the destination options for a flow log. More details below.'
            destination_options.file_format: '- (Optional) The format for the flow log. Default value: plain-text. Valid values: plain-text, parquet.'
            destination_options.hive_compatible_partitions: '- (Optional) Indicates whether to use Hive-compatible prefixes for flow logs stored in Amazon S3. Default value: false.'
            destination_options.per_hour_partition: '- (Optional) Indicates whether to partition the flow log per hour. This reduces the cost and response time for queries. Default value: false.'
            eni_id: '- (Optional) Elastic Network Interface ID to attach to'
            iam_role_arn: '- (Optional) The ARN for the IAM role that''s used to post flow logs to a CloudWatch Logs log group'
            id: '- The Flow Log ID'
            log_destination: '- (Optional) The ARN of the logging destination.'
            log_destination_type: '- (Optional) The type of the logging destination. Valid values: cloud-watch-logs, s3. Default: cloud-watch-logs.'
            log_format: '- (Optional) The fields to include in the flow log record, in the order in which they should appear.'
            log_group_name: '- (Optional) Deprecated: Use log_destination instead. The name of the CloudWatch log group.'
            max_aggregation_interval: |-
                - (Optional) The maximum interval of time
                during which a flow of packets is captured and aggregated into a flow
                log record. Valid Values: 60 seconds (1 minute) or 600 seconds (10
                minutes). Default: 600.
            subnet_id: '- (Optional) Subnet ID to attach to'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            traffic_type: '- (Required) The type of traffic to capture. Valid values: ACCEPT,REJECT, ALL.'
            vpc_id: '- (Optional) VPC ID to attach to'
        importStatements: []
    aws_fms_admin_account:
        subCategory: FMS (Firewall Manager)
        description: Provides a resource to associate/disassociate an AWS Firewall Manager administrator account
        name: aws_fms_admin_account
        title: aws_fms_admin_account
        examples:
            - name: example
              manifest: '{}'
        argumentDocs:
            account_id: '- (Optional) The AWS account ID to associate with AWS Firewall Manager as the AWS Firewall Manager administrator account. This can be an AWS Organizations master account or a member account. Defaults to the current account. Must be configured to perform drift detection.'
            id: '- The AWS account ID of the AWS Firewall Manager administrator account.'
        importStatements: []
    aws_fms_policy:
        subCategory: FMS (Firewall Manager)
        description: Provides a resource to create an AWS Firewall Manager policy
        name: aws_fms_policy
        title: aws_fms_policy
        examples:
            - name: example
              manifest: |-
                {
                  "exclude_resource_tags": false,
                  "name": "FMS-Policy-Example",
                  "remediation_enabled": false,
                  "resource_type_list": [
                    "AWS::ElasticLoadBalancingV2::LoadBalancer"
                  ],
                  "security_service_policy_data": [
                    {
                      "managed_service_data": "${jsonencode({\n      type = \"WAF\",\n      ruleGroups = [{\n        id = aws_wafregional_rule_group.example.id\n        overrideAction = {\n          type = \"COUNT\"\n        }\n      }]\n      defaultAction = {\n        type = \"BLOCK\"\n      }\n      overrideCustomerWebACLAssociation = false\n    })}",
                      "type": "WAF"
                    }
                  ],
                  "tags": {
                    "Name": "example-fms-policy"
                  }
                }
              dependencies:
                aws_wafregional_rule_group.example: |-
                    {
                      "metric_name": "WAFRuleGroupExample",
                      "name": "WAF-Rule-Group-Example"
                    }
        argumentDocs:
            delete_all_policy_resources: '- (Optional) If true, the request will also perform a clean-up process. Defaults to true. More information can be found here AWS Firewall Manager delete policy'
            delete_unused_fm_managed_resources: '- (Optional) If true, Firewall Manager will automatically remove protections from resources that leave the policy scope. Defaults to false. More information can be found here AWS Firewall Manager policy contents'
            exclude_map: '- (Optional) A map of lists of accounts and OU''s to exclude from the policy.'
            exclude_map.account: '- (Optional) A list of AWS Organization member Accounts that you want to exclude from this AWS FMS Policy.'
            exclude_map.orgunit: '- (Optional) A list of AWS Organizational Units that you want to exclude from this AWS FMS Policy. Specifying an OU is the equivalent of specifying all accounts in the OU and in any of its child OUs, including any child OUs and accounts that are added at a later time.'
            exclude_resource_tags: '- (Required, Forces new resource) A boolean value, if true the tags that are specified in the resource_tags are not protected by this policy. If set to false and resource_tags are populated, resources that contain tags will be protected by this policy.'
            id: '- The AWS account ID of the AWS Firewall Manager administrator account.'
            include_map: '- (Optional) A map of lists of accounts and OU''s to include in the policy.'
            include_map.account: '- (Optional) A list of AWS Organization member Accounts that you want to include for this AWS FMS Policy.'
            include_map.orgunit: '- (Optional) A list of AWS Organizational Units that you want to include for this AWS FMS Policy. Specifying an OU is the equivalent of specifying all accounts in the OU and in any of its child OUs, including any child OUs and accounts that are added at a later time.'
            name: '- (Required, Forces new resource) The friendly name of the AWS Firewall Manager Policy.'
            policy_update_token: '- A unique identifier for each update to the policy.'
            remediation_enabled: '- (Required) A boolean value, indicates if the policy should automatically applied to resources that already exist in the account.'
            resource_tags: '- (Optional) A map of resource tags, that if present will filter protections on resources based on the exclude_resource_tags.'
            resource_type: '- (Optional) A resource type to protect. Conflicts with resource_type_list. See the FMS API Reference for more information about supported values.'
            resource_type_list: '- (Optional) A list of resource types to protect. Conflicts with resource_type. See the FMS API Reference for more information about supported values.'
            security_service_policy_data: '- (Required) The objects to include in Security Service Policy Data. Documented below.'
            security_service_policy_data.managed_service_data: (Optional) Details about the service that are specific to the service type, in JSON format. For service type SHIELD_ADVANCED, this is an empty string. Examples depending on type can be found in the AWS Firewall Manager SecurityServicePolicyData API Reference.
            security_service_policy_data.type: '- (Required, Forces new resource) The service that the policy is using to protect the resources. For the current list of supported types, please refer to the AWS Firewall Manager SecurityServicePolicyData API Type Reference.'
            tags: '- (Optional) Key-value mapping of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_fsx_backup:
        subCategory: FSx
        description: Manages a FSx Backup.
        name: aws_fsx_backup
        title: aws_fsx_backup
        examples:
            - name: example
              manifest: |-
                {
                  "file_system_id": "${aws_fsx_lustre_file_system.example.id}"
                }
              references:
                file_system_id: aws_fsx_lustre_file_system.example.id
              dependencies:
                aws_fsx_lustre_file_system.example: |-
                    {
                      "deployment_type": "PERSISTENT_1",
                      "per_unit_storage_throughput": 50,
                      "storage_capacity": 1200,
                      "subnet_ids": [
                        "${aws_subnet.example.id}"
                      ]
                    }
            - name: example
              manifest: |-
                {
                  "file_system_id": "${aws_fsx_windows_file_system.example.id}"
                }
              references:
                file_system_id: aws_fsx_windows_file_system.example.id
              dependencies:
                aws_fsx_windows_file_system.example: |-
                    {
                      "active_directory_id": "${aws_directory_service_directory.eample.id}",
                      "skip_final_backup": true,
                      "storage_capacity": 32,
                      "subnet_ids": [
                        "${aws_subnet.example1.id}"
                      ],
                      "throughput_capacity": 8
                    }
            - name: example
              manifest: |-
                {
                  "volume_id": "${aws_fsx_ontap_volume.example.id}"
                }
              references:
                volume_id: aws_fsx_ontap_volume.example.id
              dependencies:
                aws_fsx_ontap_volume.example: |-
                    {
                      "junction_path": "/example",
                      "name": "example",
                      "size_in_megabytes": 1024,
                      "storage_efficiency_enabled": true,
                      "storage_virtual_machine_id": "${aws_fsx_ontap_storage_virtual_machine.test.id}"
                    }
            - name: example
              manifest: |-
                {
                  "file_system_id": "${aws_fsx_openzfs_file_system.example.id}"
                }
              references:
                file_system_id: aws_fsx_openzfs_file_system.example.id
              dependencies:
                aws_fsx_openzfs_file_system.example: |-
                    {
                      "deployment_type": "SINGLE_AZ_1",
                      "storage_capacity": 64,
                      "subnet_ids": [
                        "${aws_subnet.example.id}"
                      ],
                      "throughput_capacity": 64
                    }
        argumentDocs:
            arn: '- Amazon Resource Name of the backup.'
            create: '- (Default 10m) How long to wait for the backup to be created.'
            delete: '- (Default 10m) How long to wait for the backup to be deleted.'
            file_system_id: '- (Optional) The ID of the file system to back up. Required if backing up Lustre or Windows file systems.'
            id: '- Identifier of the backup, e.g., fs-12345678'
            kms_key_id: '-  The ID of the AWS Key Management Service (AWS KMS) key used to encrypt the backup of the Amazon FSx file system''s data at rest.'
            owner_id: '- AWS account identifier that created the file system.'
            tags: '- (Optional) A map of tags to assign to the file system. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level. If you have set copy_tags_to_backups to true, and you specify one or more tags, no existing file system tags are copied from the file system to the backup.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            type: '- The type of the file system backup.'
            volume_id: '- (Optional) The ID of the volume to back up. Required if backing up a ONTAP Volume.'
        importStatements: []
    aws_fsx_data_repository_association:
        subCategory: FSx
        description: Manages a FSx for Lustre Data Repository Association.
        name: aws_fsx_data_repository_association
        title: aws_fsx_data_repository_association
        examples:
            - name: example
              manifest: |-
                {
                  "data_repository_path": "s3://${aws_s3_bucket.example.id}",
                  "file_system_id": "${aws_fsx_lustre_file_system.example.id}",
                  "file_system_path": "/my-bucket",
                  "s3": [
                    {
                      "auto_export_policy": [
                        {
                          "events": [
                            "NEW",
                            "CHANGED",
                            "DELETED"
                          ]
                        }
                      ],
                      "auto_import_policy": [
                        {
                          "events": [
                            "NEW",
                            "CHANGED",
                            "DELETED"
                          ]
                        }
                      ]
                    }
                  ]
                }
              references:
                file_system_id: aws_fsx_lustre_file_system.example.id
              dependencies:
                aws_fsx_lustre_file_system.example: |-
                    {
                      "deployment_type": "PERSISTENT_2",
                      "per_unit_storage_throughput": 125,
                      "storage_capacity": 1200,
                      "subnet_ids": [
                        "${aws_subnet.example.id}"
                      ]
                    }
                aws_s3_bucket.example: |-
                    {
                      "bucket": "my-bucket"
                    }
                aws_s3_bucket_acl.example: |-
                    {
                      "acl": "private",
                      "bucket": "${aws_s3_bucket.example.id}"
                    }
        argumentDocs:
            arn: '- Amazon Resource Name of the file system.'
            auto_export_policy: '- (Optional) Specifies the type of updated objects that will be automatically exported from your file system to the linked S3 bucket. See the events configuration block.'
            auto_import_policy: '- (Optional) Specifies the type of updated objects that will be automatically imported from the linked S3 bucket to your file system. See the events configuration block.'
            batch_import_meta_data_on_create: '- (Optional) Set to true to run an import data repository task to import metadata from the data repository to the file system after the data repository association is created. Defaults to false.'
            create: '- (Default 10m) How long to wait for the file system to be created.'
            data_repository_path: '- (Required) The path to the Amazon S3 data repository that will be linked to the file system. The path must be an S3 bucket s3://myBucket/myPrefix/. This path specifies where in the S3 data repository files will be imported from or exported to. The same S3 bucket cannot be linked more than once to the same file system.'
            delete: '- (Default 10m) How long to wait for the file system to be deleted.'
            delete_data_in_filesystem: '- (Optional) Set to true to delete files from the file system upon deleting this data repository association. Defaults to false.'
            events: '- (Optional) A list of file event types to automatically export to your linked S3 bucket or import from the linked S3 bucket. Valid values are NEW, CHANGED, DELETED. Max of 3.'
            file_system_id: '- (Required) The ID of the Amazon FSx file system to on which to create a data repository association.'
            file_system_path: '- (Required) A path on the file system that points to a high-level directory (such as /ns1/) or subdirectory (such as /ns1/subdir/) that will be mapped 1-1 with data_repository_path. The leading forward slash in the name is required. Two data repository associations cannot have overlapping file system paths. For example, if a data repository is associated with file system path /ns1/, then you cannot link another data repository with file system path /ns1/ns2. This path specifies where in your file system files will be exported from or imported to. This file system directory can be linked to only one Amazon S3 bucket, and no other S3 bucket can be linked to the directory.'
            id: '- Identifier of the data repository association, e.g., dra-12345678'
            imported_file_chunk_size: '- (Optional) For files imported from a data repository, this value determines the stripe count and maximum amount of data per file (in MiB) stored on a single physical disk. The maximum number of disks that a single file can be striped across is limited by the total number of disks that make up the file system.'
            s3: |-
                - (Optional) See the s3 configuration block. Max of 1.
                The configuration for an Amazon S3 data repository linked to an Amazon FSx Lustre file system with a data repository association. The configuration defines which file events (new, changed, or deleted files or directories) are automatically imported from the linked data repository to the file system or automatically exported from the file system to the data repository.
            tags: '- (Optional) A map of tags to assign to the data repository association. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            update: '- (Default 10m) How long to wait for the file system to be updated.'
        importStatements: []
    aws_fsx_lustre_file_system:
        subCategory: FSx
        description: Manages a FSx Lustre File System.
        name: aws_fsx_lustre_file_system
        title: aws_fsx_lustre_file_system
        examples:
            - name: example
              manifest: |-
                {
                  "import_path": "s3://${aws_s3_bucket.example.bucket}",
                  "storage_capacity": 1200,
                  "subnet_ids": [
                    "${aws_subnet.example.id}"
                  ]
                }
            - name: example
              manifest: |-
                {
                  "lifecycle": [
                    {
                      "ignore_changes": [
                        "${security_group_ids}"
                      ]
                    }
                  ],
                  "security_group_ids": [
                    "${aws_security_group.example.id}"
                  ]
                }
        argumentDocs:
            arn: '- Amazon Resource Name of the file system.'
            auto_import_policy: '- (Optional) How Amazon FSx keeps your file and directory listings up to date as you add or modify objects in your linked S3 bucket. see Auto Import Data Repo for more details. Only supported on PERSISTENT_1 deployment types.'
            automatic_backup_retention_days: '- (Optional) The number of days to retain automatic backups. Setting this to 0 disables automatic backups. You can retain automatic backups for a maximum of 90 days. only valid for PERSISTENT_1 and PERSISTENT_2 deployment_type.'
            backup_id: '- (Optional) The ID of the source backup to create the filesystem from.'
            copy_tags_to_backups: '- (Optional) A boolean flag indicating whether tags for the file system should be copied to backups. Applicable for PERSISTENT_1 and PERSISTENT_2 deployment_type. The default value is false.'
            create: '- (Default 30m) How long to wait for the file system to be created.'
            daily_automatic_backup_start_time: '- (Optional) A recurring daily time, in the format HH:MM. HH is the zero-padded hour of the day (0-23), and MM is the zero-padded minute of the hour. For example, 05:00 specifies 5 AM daily. only valid for PERSISTENT_1 and PERSISTENT_2 deployment_type. Requires automatic_backup_retention_days to be set.'
            data_compression_type: '- (Optional) Sets the data compression configuration for the file system. Valid values are LZ4 and NONE. Default value is NONE. Unsetting this value reverts the compression type back to NONE.'
            delete: '- (Default 30m) How long to wait for the file system to be deleted.'
            deployment_type: '- (Optional) - The filesystem deployment type. One of: SCRATCH_1, SCRATCH_2, PERSISTENT_1, PERSISTENT_2.'
            dns_name: '- DNS name for the file system, e.g., fs-12345678.fsx.us-west-2.amazonaws.com'
            drive_cache_type: '- (Optional) - The type of drive cache used by PERSISTENT_1 filesystems that are provisioned with HDD storage_type. Required for HDD storage_type, set to either READ or NONE.'
            export_path: '- (Optional) S3 URI (with optional prefix) where the root of your Amazon FSx file system is exported. Can only be specified with import_path argument and the path must use the same Amazon S3 bucket as specified in import_path. Set equal to import_path to overwrite files on export. Defaults to s3://{IMPORT BUCKET}/FSxLustre{CREATION TIMESTAMP}. Only supported on PERSISTENT_1 deployment types.'
            file_system_type_version: '- (Optional) Sets the Lustre version for the file system that you''re creating. Valid values are 2.10 for SCRATCH_1, SCRATCH_2 and PERSISTENT_1 deployment types. Valid values for 2.12 include all deployment types.'
            id: '- Identifier of the file system, e.g., fs-12345678'
            import_path: '- (Optional) S3 URI (with optional prefix) that you''re using as the data repository for your FSx for Lustre file system. For example, s3://example-bucket/optional-prefix/. Only supported on PERSISTENT_1 deployment types.'
            imported_file_chunk_size: '- (Optional) For files imported from a data repository, this value determines the stripe count and maximum amount of data per file (in MiB) stored on a single physical disk. Can only be specified with import_path argument. Defaults to 1024. Minimum of 1 and maximum of 512000. Only supported on PERSISTENT_1 deployment types.'
            kms_key_id: '- (Optional) ARN for the KMS Key to encrypt the file system at rest, applicable for PERSISTENT_1 and PERSISTENT_2 deployment_type. Defaults to an AWS managed KMS Key.'
            log_configuration: '- (Optional) The Lustre logging configuration used when creating an Amazon FSx for Lustre file system. When logging is enabled, Lustre logs error and warning events for data repositories associated with your file system to Amazon CloudWatch Logs.'
            log_configuration.destination: '- (Optional) The Amazon Resource Name (ARN) that specifies the destination of the logs. The name of the Amazon CloudWatch Logs log group must begin with the /aws/fsx prefix. If you do not provide a destination, Amazon FSx will create and use a log stream in the CloudWatch Logs /aws/fsx/lustre log group.'
            log_configuration.level: '- (Optional) Sets which data repository events are logged by Amazon FSx. Valid values are WARN_ONLY, FAILURE_ONLY, ERROR_ONLY, WARN_ERROR and DISABLED. Default value is DISABLED.'
            mount_name: '- The value to be used when mounting the filesystem.'
            network_interface_ids: '- Set of Elastic Network Interface identifiers from which the file system is accessible. As explained in the documentation, the first network interface returned is the primary network interface.'
            owner_id: '- AWS account identifier that created the file system.'
            per_unit_storage_throughput: '- (Optional) - Describes the amount of read and write throughput for each 1 tebibyte of storage, in MB/s/TiB, required for the PERSISTENT_1 and PERSISTENT_2 deployment_type. Valid values for PERSISTENT_1 deployment_type and SSD storage_type are 50, 100, 200. Valid values for PERSISTENT_1 deployment_type and HDD storage_type are 12, 40. Valid values for PERSISTENT_2 deployment_type and  SSD storage_type are 125, 250, 500, 1000.'
            security_group_ids: '- (Optional) A list of IDs for the security groups that apply to the specified network interfaces created for file system access. These security groups will apply to all network interfaces.'
            storage_capacity: '- (Optional) The storage capacity (GiB) of the file system. Minimum of 1200. See more details at Allowed values for Fsx storage capacity. Update is allowed only for SCRATCH_2, PERSISTENT_1 and PERSISTENT_2 deployment types, See more details at Fsx Storage Capacity Update. Required when not creating filesystem for a backup.'
            storage_type: '- (Optional) - The filesystem storage type. Either SSD or HDD, defaults to SSD. HDD is only supported on PERSISTENT_1 deployment types.'
            subnet_ids: '- (Required) A list of IDs for the subnets that the file system will be accessible from. File systems currently support only one subnet. The file server is also launched in that subnet''s Availability Zone.'
            tags: '- (Optional) A map of tags to assign to the file system. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            update: '- (Default 30m) How long to wait for the file system to be updated.'
            vpc_id: '- Identifier of the Virtual Private Cloud for the file system.'
            weekly_maintenance_start_time: '- (Optional) The preferred start time (in d:HH:MM format) to perform weekly maintenance, in the UTC time zone.'
        importStatements: []
    aws_fsx_ontap_file_system:
        subCategory: FSx
        description: Manages an Amazon FSx for NetApp ONTAP file system.
        name: aws_fsx_ontap_file_system
        title: aws_fsx_ontap_file_system
        examples:
            - name: test
              manifest: |-
                {
                  "deployment_type": "MULTI_AZ_1",
                  "preferred_subnet_id": "${aws_subnet.test1.id}",
                  "storage_capacity": 1024,
                  "subnet_ids": [
                    "${aws_subnet.test1.id}",
                    "${aws_subnet.test2.id}"
                  ],
                  "throughput_capacity": 512
                }
              references:
                preferred_subnet_id: aws_subnet.test1.id
            - name: example
              manifest: |-
                {
                  "lifecycle": [
                    {
                      "ignore_changes": [
                        "${security_group_ids}"
                      ]
                    }
                  ],
                  "security_group_ids": [
                    "${aws_security_group.example.id}"
                  ]
                }
        argumentDocs:
            arn: '- Amazon Resource Name of the file system.'
            automatic_backup_retention_days: '- (Optional) The number of days to retain automatic backups. Setting this to 0 disables automatic backups. You can retain automatic backups for a maximum of 90 days.'
            create: '- (Default 60m) How long to wait for the file system to be created.'
            daily_automatic_backup_start_time: '- (Optional) A recurring daily time, in the format HH:MM. HH is the zero-padded hour of the day (0-23), and MM is the zero-padded minute of the hour. For example, 05:00 specifies 5 AM daily. Requires automatic_backup_retention_days to be set.'
            delete: '- (Default 60m) How long to wait for the file system to be deleted.'
            deployment_type: '- (Optional) - The filesystem deployment type. Supports MULTI_AZ_1 and SINGLE_AZ_1.'
            disk_iops_configuration: '- (Optional) The SSD IOPS configuration for the Amazon FSx for NetApp ONTAP file system. See Disk Iops Configuration Below.'
            dns_name: '- DNS name for the file system, e.g., fs-12345678.fsx.us-west-2.amazonaws.com'
            endpoint_ip_address_range: '- (Optional) Specifies the IP address range in which the endpoints to access your file system will be created. By default, Amazon FSx selects an unused IP address range for you from the 198.19.* range.'
            endpoints: '- The endpoints that are used to access data or to manage the file system using the NetApp ONTAP CLI, REST API, or NetApp SnapMirror. See Endpoints below.'
            fsx_admin_password: '- (Optional) The ONTAP administrative password for the fsxadmin user that you can use to administer your file system using the ONTAP CLI and REST API.'
            id: '- Identifier of the file system, e.g., fs-12345678'
            intercluster: '- An endpoint for managing your file system by setting up NetApp SnapMirror with other ONTAP systems. See Endpoint.'
            iops: '- (Optional) - The total number of SSD IOPS provisioned for the file system.'
            ip_addresses: '- IP addresses of the file system endpoint.'
            kms_key_id: '- (Optional) ARN for the KMS Key to encrypt the file system at rest, Defaults to an AWS managed KMS Key.'
            management: '- An endpoint for managing your file system using the NetApp ONTAP CLI and NetApp ONTAP API. See Endpoint.'
            mode: '- (Optional) - Specifies whether the number of IOPS for the file system is using the system. Valid values are AUTOMATIC and USER_PROVISIONED. Default value is AUTOMATIC.'
            network_interface_ids: '- Set of Elastic Network Interface identifiers from which the file system is accessible The first network interface returned is the primary network interface.'
            owner_id: '- AWS account identifier that created the file system.'
            preferred_subnet_id: '- (Required) The ID for a subnet. A subnet is a range of IP addresses in your virtual private cloud (VPC).'
            route_table_ids: '- (Optional) Specifies the VPC route tables in which your file system''s endpoints will be created. You should specify all VPC route tables associated with the subnets in which your clients are located. By default, Amazon FSx selects your VPC''s default route table.'
            security_group_ids: '- (Optional) A list of IDs for the security groups that apply to the specified network interfaces created for file system access. These security groups will apply to all network interfaces.'
            storage_capacity: '- (Optional) The storage capacity (GiB) of the file system. Valid values between 1024 and 196608.'
            storage_type: '- (Optional) - The filesystem storage type. defaults to SSD.'
            subnet_ids: '- (Required) A list of IDs for the subnets that the file system will be accessible from. Upto 2 subnets can be provided.'
            tags: '- (Optional) A map of tags to assign to the file system. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            throughput_capacity: '- (Required) Sets the throughput capacity (in MBps) for the file system that you''re creating. Valid values are 128, 256, 512, 1024, and 2048.'
            update: '- (Default 60m) How long to wait for the file system to be updated.'
            vpc_id: '- Identifier of the Virtual Private Cloud for the file system.'
            weekly_maintenance_start_time: '- (Optional) The preferred start time (in d:HH:MM format) to perform weekly maintenance, in the UTC time zone.'
        importStatements: []
    aws_fsx_ontap_storage_virtual_machine:
        subCategory: FSx
        description: Manages a FSx Storage Virtual Machine.
        name: aws_fsx_ontap_storage_virtual_machine
        title: aws_fsx_ontap_storage_virtual_machine
        examples:
            - name: test
              manifest: |-
                {
                  "file_system_id": "${aws_fsx_ontap_file_system.test.id}",
                  "name": "test"
                }
              references:
                file_system_id: aws_fsx_ontap_file_system.test.id
            - name: test
              manifest: |-
                {
                  "active_directory_configuration": [
                    {
                      "netbios_name": "mysvm",
                      "self_managed_active_directory_configuration": [
                        {
                          "dns_ips": [
                            "10.0.0.111",
                            "10.0.0.222"
                          ],
                          "domain_name": "corp.example.com",
                          "password": "avoid-plaintext-passwords",
                          "username": "Admin"
                        }
                      ]
                    }
                  ],
                  "file_system_id": "${aws_fsx_ontap_file_system.test.id}",
                  "name": "mysvm"
                }
              references:
                file_system_id: aws_fsx_ontap_file_system.test.id
            - name: example
              manifest: |-
                {
                  "lifecycle": [
                    {
                      "ignore_changes": [
                        "${svm_admin_password}"
                      ]
                    }
                  ],
                  "svm_admin_password": "avoid-plaintext-passwords"
                }
        argumentDocs:
            active_directory_configuration: '- (Optional) Configuration block that Amazon FSx uses to join the FSx ONTAP Storage Virtual Machine(SVM) to your Microsoft Active Directory (AD) directory. Detailed below.'
            active_directory_configuration.netbios_name: '- (Required) The NetBIOS name of the Active Directory computer object that will be created for your SVM. This is often the same as the SVM name but can be different. It is limited to 15 characters because of standard NetBIOS naming limits.'
            active_directory_configuration.self_managed_active_directory: '- (Optional) Configuration block that Amazon FSx uses to join the SVM to your self-managed (including on-premises) Microsoft Active Directory (AD) directory.'
            active_directory_configuration.self_managed_active_directory.dns_ips: '- (Required) A list of up to three IP addresses of DNS servers or domain controllers in the self-managed AD directory.'
            active_directory_configuration.self_managed_active_directory.domain_name: '- (Required) The fully qualified domain name of the self-managed AD directory. For example, corp.example.com.'
            active_directory_configuration.self_managed_active_directory.file_system_administrators_group: '- (Optional) The name of the domain group whose members are granted administrative privileges for the SVM. The group that you specify must already exist in your domain. Defaults to Domain Admins.'
            active_directory_configuration.self_managed_active_directory.organizational_unit_distinguished_name: '- (Optional) The fully qualified distinguished name of the organizational unit within your self-managed AD directory that the Windows File Server instance will join. For example, OU=FSx,DC=yourdomain,DC=corp,DC=com. Only accepts OU as the direct parent of the SVM. If none is provided, the SVM is created in the default location of your self-managed AD directory. To learn more, see RFC 2253.'
            active_directory_configuration.self_managed_active_directory.password: '- (Required) The password for the service account on your self-managed AD domain that Amazon FSx will use to join to your AD domain.'
            active_directory_configuration.self_managed_active_directory.username: '- (Required) The user name for the service account on your self-managed AD domain that Amazon FSx will use to join to your AD domain.'
            arn: '- Amazon Resource Name of the storage virtual machine.'
            create: '- (Default 30m) How long to wait for the storage virtual machine to be created.'
            delete: '- (Default 30m) How long to wait for the storage virtual machine to be deleted.'
            dns_name: '- The Domain Name Service (DNS) name for the storage virtual machine. You can mount your storage virtual machine using its DNS name.'
            endpoints: '- The endpoints that are used to access data or to manage the storage virtual machine using the NetApp ONTAP CLI, REST API, or NetApp SnapMirror. See Endpoints below.'
            file_system_id: '- (Required) The ID of the Amazon FSx ONTAP File System that this SVM will be created on.'
            id: '- Identifier of the storage virtual machine, e.g., svm-12345678'
            ip_addresses: '- IP addresses of the storage virtual machine endpoint.'
            iscsi: '- An endpoint for accessing data on your storage virtual machine via iSCSI protocol. See Endpoint.'
            management: '- An endpoint for managing your file system using the NetApp ONTAP CLI and NetApp ONTAP API. See Endpoint.'
            name: '- (Required) The name of the SVM. You can use a maximum of 47 alphanumeric characters, plus the underscore (_) special character.'
            nfs: '- An endpoint for accessing data on your storage virtual machine via NFS protocol. See Endpoint.'
            root_volume_security_style: '- (Optional) Specifies the root volume security style, Valid values are UNIX, NTFS, and MIXED. All volumes created under this SVM will inherit the root security style unless the security style is specified on the volume. Default value is UNIX.'
            smb: '- An endpoint for accessing data on your storage virtual machine via SMB protocol. This is only set if an active_directory_configuration has been set. See Endpoint.'
            subtype: '- Describes the SVM''s subtype, e.g. DEFAULT'
            tags: '- (Optional) A map of tags to assign to the storage virtual machine. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            update: '- (Default 30m) How long to wait for the storage virtual machine to be updated.'
            uuid: '- The SVM''s UUID (universally unique identifier).'
        importStatements: []
    aws_fsx_ontap_volume:
        subCategory: FSx
        description: Manages a FSx ONTAP Volume.
        name: aws_fsx_ontap_volume
        title: aws_fsx_ontap_volume
        examples:
            - name: test
              manifest: |-
                {
                  "junction_path": "/test",
                  "name": "test",
                  "size_in_megabytes": 1024,
                  "storage_efficiency_enabled": true,
                  "storage_virtual_machine_id": "${aws_fsx_ontap_storage_virtual_machine.test.id}"
                }
              references:
                storage_virtual_machine_id: aws_fsx_ontap_storage_virtual_machine.test.id
            - name: test
              manifest: |-
                {
                  "junction_path": "/test",
                  "name": "test",
                  "size_in_megabytes": 1024,
                  "storage_efficiency_enabled": true,
                  "storage_virtual_machine_id": "${aws_fsx_ontap_storage_virtual_machine.test.id}",
                  "tiering_policy": [
                    {
                      "cooling_period": 31,
                      "name": "AUTO"
                    }
                  ]
                }
              references:
                storage_virtual_machine_id: aws_fsx_ontap_storage_virtual_machine.test.id
        argumentDocs:
            arn: '- Amazon Resource Name of the volune.'
            create: '- (Default 30m) How long to wait for the storage virtual machine to be created.'
            delete: '- (Default 30m) How long to wait for the storage virtual machine to be deleted.'
            file_system_id: '- Describes the file system for the volume, e.g. fs-12345679'
            flexcache_endpoint_type: '- Specifies the FlexCache endpoint type of the volume, Valid values are NONE, ORIGIN, CACHE. Default value is NONE. These can be set by the ONTAP CLI or API and are use with FlexCache feature.'
            id: '- Identifier of the volume, e.g., fsvol-12345678'
            junction_path: '- (Required) Specifies the location in the storage virtual machine''s namespace where the volume is mounted. The junction_path must have a leading forward slash, such as /vol3'
            name: '- (Required) The name of the Volume. You can use a maximum of 203 alphanumeric characters, plus the underscore (_) special character.'
            ontap_volume_type: '- Specifies the type of volume, Valid values are RW, DP,  and LS. Default value is RW. These can be set by the ONTAP CLI or API. This setting is used as part of migration and replication Migrating to Amazon FSx for NetApp ONTAP'
            security_style: '- (Optional) Specifies the volume security style, Valid values are UNIX, NTFS, and MIXED. Default value is UNIX.'
            size_in_megabytes: '- (Required) Specifies the size of the volume, in megabytes (MB), that you are creating.'
            storage_efficiency_enabled: '- (Required) Set to true to enable deduplication, compression, and compaction storage efficiency features on the volume.'
            storage_virtual_machine_id: '- (Required) Specifies the storage virtual machine in which to create the volume.'
            tags: '- (Optional) A map of tags to assign to the volume. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            tiering_policy.cooling_policy: '- (Optional) Specifies the number of days that user data in a volume must remain inactive before it is considered "cold" and moved to the capacity pool. Used with AUTO and SNAPSHOT_ONLY tiering policies only. Valid values are whole numbers between 2 and 183. Default values are 31 days for AUTO and 2 days for SNAPSHOT_ONLY.'
            tiering_policy.name: '- (Required) Specifies the tiering policy for the ONTAP volume for moving data to the capacity pool storage. Valid values are SNAPSHOT_ONLY, AUTO, ALL, NONE. Default value is SNAPSHOT_ONLY.'
            update: '- (Default 30m) How long to wait for the storage virtual machine to be updated.'
            uuid: '- The Volume''s UUID (universally unique identifier).'
            volume_type: '- The type of volume, currently the only valid value is ONTAP.'
        importStatements: []
    aws_fsx_openzfs_file_system:
        subCategory: FSx
        description: Manages an Amazon FSx for OpenZFS file system.
        name: aws_fsx_openzfs_file_system
        title: aws_fsx_openzfs_file_system
        examples:
            - name: test
              manifest: |-
                {
                  "deployment_type": "SINGLE_AZ_1",
                  "storage_capacity": 64,
                  "subnet_ids": [
                    "${aws_subnet.test1.id}"
                  ],
                  "throughput_capacity": 64
                }
            - name: example
              manifest: |-
                {
                  "lifecycle": [
                    {
                      "ignore_changes": [
                        "${security_group_ids}"
                      ]
                    }
                  ],
                  "security_group_ids": [
                    "${aws_security_group.example.id}"
                  ]
                }
        argumentDocs:
            arn: '- Amazon Resource Name of the file system.'
            automatic_backup_retention_days: '- (Optional) The number of days to retain automatic backups. Setting this to 0 disables automatic backups. You can retain automatic backups for a maximum of 90 days.'
            backup_id: '- (Optional) The ID of the source backup to create the filesystem from.'
            client_configurations: '- (Required) - A list of configuration objects that contain the client and options for mounting the OpenZFS file system. Maximum of 25 items. See [Client Configurations](#client configurations) Below.'
            clients: '- (Required) - A value that specifies who can mount the file system. You can provide a wildcard character (*), an IP address (0.0.0.0), or a CIDR address (192.0.2.0/24. By default, Amazon FSx uses the wildcard character when specifying the client.'
            copy_tags_to_backups: '- (Optional) A boolean flag indicating whether tags for the file system should be copied to backups. The default value is false.'
            copy_tags_to_snapshots: '- (Optional) - A boolean flag indicating whether tags for the file system should be copied to snapshots. The default value is false.'
            copy_tags_to_volumes: '- (Optional) A boolean flag indicating whether tags for the file system should be copied to snapshots. The default value is false.'
            create: '- (Default 60m) How long to wait for the file system to be created.'
            daily_automatic_backup_start_time: '- (Optional) A recurring daily time, in the format HH:MM. HH is the zero-padded hour of the day (0-23), and MM is the zero-padded minute of the hour. For example, 05:00 specifies 5 AM daily. Requires automatic_backup_retention_days to be set.'
            data_compression_type: '- (Optional) - Method used to compress the data on the volume. Valid values are LZ4, NONE or ZSTD. Child volumes that don''t specify compression option will inherit from parent volume. This option on file system applies to the root volume.'
            delete: '- (Default 60m) How long to wait for the file system to be deleted.'
            deployment_type: '- (Required) - The filesystem deployment type. Only SINGLE_AZ_1 is supported.'
            disk_iops_configuration: '- (Optional) The SSD IOPS configuration for the Amazon FSx for OpenZFS file system. See Disk Iops Configuration Below.'
            dns_name: '- DNS name for the file system, e.g., fs-12345678.fsx.us-west-2.amazonaws.com'
            id: '- (Required) - The ID of the user or group. Valid values between 0 and 2147483647'
            iops: '- (Optional) - The total number of SSD IOPS provisioned for the file system.'
            kms_key_id: '- (Optional) ARN for the KMS Key to encrypt the file system at rest, Defaults to an AWS managed KMS Key.'
            mode: '- (Optional) - Specifies whether the number of IOPS for the file system is using the system. Valid values are AUTOMATIC and USER_PROVISIONED. Default value is AUTOMATIC.'
            network_interface_ids: '- Set of Elastic Network Interface identifiers from which the file system is accessible The first network interface returned is the primary network interface.'
            nfs_exports: '- (Optional) - NFS export configuration for the root volume. Exactly 1 item. See NFS Exports Below.'
            options: '- (Required) -  The options to use when mounting the file system. Maximum of 20 items. See the Linix NFS exports man page for more information. crossmount and sync are used by default.'
            owner_id: '- AWS account identifier that created the file system.'
            read_only: '- (Optional) - specifies whether the volume is read-only. Default is false.'
            root_volume_configuration: '- (Optional) The configuration for the root volume of the file system. All other volumes are children or the root volume. See Root Volume Configuration Below.'
            root_volume_id: '- Identifier of the root volume, e.g., fsvol-12345678'
            security_group_ids: '- (Optional) A list of IDs for the security groups that apply to the specified network interfaces created for file system access. These security groups will apply to all network interfaces.'
            storage_capacity: '- (Required) The storage capacity (GiB) of the file system. Valid values between 64 and 524288.'
            storage_capacity_quota_gib: '- (Required) - The amount of storage that the user or group can use in gibibytes (GiB). Valid values between 0 and 2147483647'
            storage_type: '- (Optional) The filesystem storage type. Only SSD is supported.'
            subnet_ids: '- (Required) A list of IDs for the subnets that the file system will be accessible from. Exactly 1 subnet need to be provided.'
            tags: '- (Optional) A map of tags to assign to the file system. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            throughput_capacity: '- (Required) Throughput (megabytes per second) of the file system in power of 2 increments. Minimum of 64 and maximum of 4096.'
            type: '- (Required) - A value that specifies whether the quota applies to a user or group. Valid values are USER or GROUP.'
            update: '- (Default 60m) How long to wait for the file system to be updated.'
            user_and_group_quotas: '- (Optional) - Specify how much storage users or groups can use on the volume. Maximum of 100 items. See User and Group Quotas Below.'
            vpc_id: '- Identifier of the Virtual Private Cloud for the file system.'
            weekly_maintenance_start_time: '- (Optional) The preferred start time (in d:HH:MM format) to perform weekly maintenance, in the UTC time zone.'
        importStatements: []
    aws_fsx_openzfs_snapshot:
        subCategory: FSx
        description: Manages an Amazon FSx for OpenZFS snapshot.
        name: aws_fsx_openzfs_snapshot
        title: aws_fsx_openzfs_snapshot
        examples:
            - name: example
              manifest: |-
                {
                  "name": "example",
                  "volume_id": "${aws_fsx_openzfs_file_system.example.root_volume_id}"
                }
              references:
                volume_id: aws_fsx_openzfs_file_system.example.root_volume_id
              dependencies:
                aws_fsx_openzfs_file_system.example: |-
                    {
                      "deployment_type": "SINGLE_AZ_1",
                      "storage_capacity": 64,
                      "subnet_ids": [
                        "${aws_subnet.example.id}"
                      ],
                      "throughput_capacity": 64
                    }
            - name: example
              manifest: |-
                {
                  "name": "example",
                  "volume_id": "${aws_fsx_openzfs_volume.example.id}"
                }
              references:
                volume_id: aws_fsx_openzfs_volume.example.id
              dependencies:
                aws_fsx_openzfs_file_system.example: |-
                    {
                      "deployment_type": "SINGLE_AZ_1",
                      "storage_capacity": 64,
                      "subnet_ids": [
                        "${aws_subnet.example.id}"
                      ],
                      "throughput_capacity": 64
                    }
                aws_fsx_openzfs_volume.example: |-
                    {
                      "name": "example",
                      "parent_volume_id": "${aws_fsx_openzfs_file_system.example.root_volume_id}"
                    }
        argumentDocs:
            arn: '- Amazon Resource Name of the snapshot.'
            create: '- (Default 30m) How long to wait for the backup to be created.'
            delete: '- (Default 30m) How long to wait for the backup to be deleted.'
            id: '- Identifier of the snapshot, e.g., fsvolsnap-12345678'
            name: '- (Required) The name of the Snapshot. You can use a maximum of 203 alphanumeric characters plus either _ or -  or : or . for the name.'
            tags: '- (Optional) A map of tags to assign to the file system. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level. If you have set copy_tags_to_backups to true, and you specify one or more tags, no existing file system tags are copied from the file system to the backup.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            update: '- (Default 30m) How long to wait for the backup to be deleted.'
            volume_id: '- (Optional) The ID of the volume to snapshot. This can be the root volume or a child volume.'
        importStatements: []
    aws_fsx_openzfs_volume:
        subCategory: FSx
        description: Manages an Amazon FSx for OpenZFS volume.
        name: aws_fsx_openzfs_volume
        title: aws_fsx_openzfs_volume
        examples:
            - name: test
              manifest: |-
                {
                  "name": "testvolume",
                  "parent_volume_id": "${aws_fsx_openzfs_file_system.test.root_volume_id}"
                }
              references:
                parent_volume_id: aws_fsx_openzfs_file_system.test.root_volume_id
        argumentDocs:
            Type: '- (Required) - A value that specifies whether the quota applies to a user or group. Valid values are USER or GROUP.'
            arn: '- Amazon Resource Name of the file system.'
            client_configurations: '- (Required) - A list of configuration objects that contain the client and options for mounting the OpenZFS file system. Maximum of 25 items. See [Client Configurations](#client configurations) Below.'
            clients: '- (Required) - A value that specifies who can mount the file system. You can provide a wildcard character (*), an IP address (0.0.0.0), or a CIDR address (192.0.2.0/24. By default, Amazon FSx uses the wildcard character when specifying the client.'
            copy_tags_to_snapshots: '- (Optional) A boolean flag indicating whether tags for the file system should be copied to snapshots. The default value is false.'
            create: '- (Default 30m) How long to wait for the file system to be created.'
            data_compression_type: '- (Optional) Method used to compress the data on the volume. Valid values are NONE or ZSTD. Child volumes that don''t specify compression option will inherit from parent volume. This option on file system applies to the root volume.'
            delete: '- (Default 30m) How long to wait for the file system to be deleted.'
            id: '- (Required) - The ID of the user or group. Valid values between 0 and 2147483647'
            name: '- (Required) The name of the Volume. You can use a maximum of 203 alphanumeric characters, plus the underscore (_) special character.'
            nfs_exports: '- (Optional) NFS export configuration for the root volume. Exactly 1 item. See NFS Exports Below.'
            options: '- (Required) -  The options to use when mounting the file system. Maximum of 20 items. See the Linix NFS exports man page for more information. crossmount and sync are used by default.'
            origin_snapshot: '- (Optional) The ARN of the source snapshot to create the volume from.'
            parent_volume_id: '- (Required) The volume id of volume that will be the parent volume for the volume being created, this could be the root volume created from the aws_fsx_openzfs_file_system resource with the root_volume_id or the id property of another aws_fsx_openzfs_volume.'
            read_only: '- (Optional) specifies whether the volume is read-only. Default is false.'
            storage_capacity_quota_gib: '- (Optional) The maximum amount of storage in gibibytes (GiB) that the volume can use from its parent.'
            storage_capacity_reservation_gib: '- (Optional) The amount of storage in gibibytes (GiB) to reserve from the parent volume.'
            tags: '- (Optional) A map of tags to assign to the file system. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            update: '- (Default 30m) How long to wait for the file system to be updated.'
            user_and_group_quotas: '- (Optional) - Specify how much storage users or groups can use on the volume. Maximum of 100 items. See User and Group Quotas Below.'
        importStatements: []
    aws_fsx_windows_file_system:
        subCategory: FSx
        description: Manages a FSx Windows File System.
        name: aws_fsx_windows_file_system
        title: aws_fsx_windows_file_system
        examples:
            - name: example
              manifest: |-
                {
                  "active_directory_id": "${aws_directory_service_directory.example.id}",
                  "kms_key_id": "${aws_kms_key.example.arn}",
                  "storage_capacity": 300,
                  "subnet_ids": [
                    "${aws_subnet.example.id}"
                  ],
                  "throughput_capacity": 1024
                }
              references:
                active_directory_id: aws_directory_service_directory.example.id
                kms_key_id: aws_kms_key.example.arn
            - name: example
              manifest: |-
                {
                  "kms_key_id": "${aws_kms_key.example.arn}",
                  "self_managed_active_directory": [
                    {
                      "dns_ips": [
                        "10.0.0.111",
                        "10.0.0.222"
                      ],
                      "domain_name": "corp.example.com",
                      "password": "avoid-plaintext-passwords",
                      "username": "Admin"
                    }
                  ],
                  "storage_capacity": 300,
                  "subnet_ids": [
                    "${aws_subnet.example.id}"
                  ],
                  "throughput_capacity": 1024
                }
              references:
                kms_key_id: aws_kms_key.example.arn
            - name: example
              manifest: |-
                {
                  "lifecycle": [
                    {
                      "ignore_changes": [
                        "${security_group_ids}"
                      ]
                    }
                  ],
                  "security_group_ids": [
                    "${aws_security_group.example.id}"
                  ]
                }
        argumentDocs:
            active_directory_id: '- (Optional) The ID for an existing Microsoft Active Directory instance that the file system should join when it''s created. Cannot be specified with self_managed_active_directory.'
            aliases: '- (Optional) An array DNS alias names that you want to associate with the Amazon FSx file system.  For more information, see Working with DNS Aliases'
            arn: '- Amazon Resource Name of the file system.'
            audit_log_configuration: '- (Optional) The configuration that Amazon FSx for Windows File Server uses to audit and log user accesses of files, folders, and file shares on the Amazon FSx for Windows File Server file system. See below.'
            audit_log_configuration.audit_log_destination: '- (Optional) The Amazon Resource Name (ARN) for the destination of the audit logs. The destination can be any Amazon CloudWatch Logs log group ARN or Amazon Kinesis Data Firehose delivery stream ARN. Can be specified when file_access_audit_log_level and file_share_access_audit_log_level are not set to DISABLED. The name of the Amazon CloudWatch Logs log group must begin with the /aws/fsx prefix. The name of the Amazon Kinesis Data Firehouse delivery stream must begin with the aws-fsx prefix. If you do not provide a destination in audit_log_destionation, Amazon FSx will create and use a log stream in the CloudWatch Logs /aws/fsx/windows log group.'
            audit_log_configuration.file_access_audit_log_level: '- (Optional) Sets which attempt type is logged by Amazon FSx for file and folder accesses. Valid values are SUCCESS_ONLY, FAILURE_ONLY, SUCCESS_AND_FAILURE, and DISABLED. Default value is DISABLED.'
            audit_log_configuration.file_share_access_audit_log_level: '- (Optional) Sets which attempt type is logged by Amazon FSx for file share accesses. Valid values are SUCCESS_ONLY, FAILURE_ONLY, SUCCESS_AND_FAILURE, and DISABLED. Default value is DISABLED.'
            automatic_backup_retention_days: '- (Optional) The number of days to retain automatic backups. Minimum of 0 and maximum of 90. Defaults to 7. Set to 0 to disable.'
            backup_id: '- (Optional) The ID of the source backup to create the filesystem from.'
            copy_tags_to_backups: '- (Optional) A boolean flag indicating whether tags on the file system should be copied to backups. Defaults to false.'
            create: '- (Default 45m) How long to wait for the file system to be created.'
            daily_automatic_backup_start_time: '- (Optional) The preferred time (in HH:MM format) to take daily automatic backups, in the UTC time zone.'
            delete: '- (Default 30m) How long to wait for the file system to be deleted.'
            deployment_type: '- (Optional) Specifies the file system deployment type, valid values are MULTI_AZ_1, SINGLE_AZ_1 and SINGLE_AZ_2. Default value is SINGLE_AZ_1.'
            dns_name: '- DNS name for the file system, e.g., fs-12345678.corp.example.com (domain name matching the Active Directory domain name)'
            id: '- Identifier of the file system, e.g., fs-12345678'
            kms_key_id: '- (Optional) ARN for the KMS Key to encrypt the file system at rest. Defaults to an AWS managed KMS Key.'
            network_interface_ids: '- Set of Elastic Network Interface identifiers from which the file system is accessible.'
            owner_id: '- AWS account identifier that created the file system.'
            preferred_file_server_ip: '- The IP address of the primary, or preferred, file server.'
            preferred_subnet_id: '- (Optional) Specifies the subnet in which you want the preferred file server to be located. Required for when deployment type is MULTI_AZ_1.'
            remote_administration_endpoint: '- For MULTI_AZ_1 deployment types, use this endpoint when performing administrative tasks on the file system using Amazon FSx Remote PowerShell. For SINGLE_AZ_1 deployment types, this is the DNS name of the file system.'
            security_group_ids: '- (Optional) A list of IDs for the security groups that apply to the specified network interfaces created for file system access. These security groups will apply to all network interfaces.'
            self_managed_active_directory: '- (Optional) Configuration block that Amazon FSx uses to join the Windows File Server instance to your self-managed (including on-premises) Microsoft Active Directory (AD) directory. Cannot be specified with active_directory_id. Detailed below.'
            self_managed_active_directory.dns_ips: '- (Required) A list of up to two IP addresses of DNS servers or domain controllers in the self-managed AD directory. The IP addresses need to be either in the same VPC CIDR range as the file system or in the private IP version 4 (IPv4) address ranges as specified in RFC 1918.'
            self_managed_active_directory.domain_name: '- (Required) The fully qualified domain name of the self-managed AD directory. For example, corp.example.com.'
            self_managed_active_directory.file_system_administrators_group: '- (Optional) The name of the domain group whose members are granted administrative privileges for the file system. Administrative privileges include taking ownership of files and folders, and setting audit controls (audit ACLs) on files and folders. The group that you specify must already exist in your domain. Defaults to Domain Admins.'
            self_managed_active_directory.organizational_unit_distinguished_name: '- (Optional) The fully qualified distinguished name of the organizational unit within your self-managed AD directory that the Windows File Server instance will join. For example, OU=FSx,DC=yourdomain,DC=corp,DC=com. Only accepts OU as the direct parent of the file system. If none is provided, the FSx file system is created in the default location of your self-managed AD directory. To learn more, see RFC 2253.'
            self_managed_active_directory.password: '- (Required) The password for the service account on your self-managed AD domain that Amazon FSx will use to join to your AD domain.'
            self_managed_active_directory.username: '- (Required) The user name for the service account on your self-managed AD domain that Amazon FSx will use to join to your AD domain.'
            skip_final_backup: '- (Optional) When enabled, will skip the default final backup taken when the file system is deleted. This configuration must be applied separately before attempting to delete the resource to have the desired behavior. Defaults to false.'
            storage_capacity: '- (Optional) Storage capacity (GiB) of the file system. Minimum of 32 and maximum of 65536. If the storage type is set to HDD the minimum value is 2000. Required when not creating filesystem for a backup.'
            storage_type: '- (Optional) Specifies the storage type, Valid values are SSD and HDD. HDD is supported on SINGLE_AZ_2 and MULTI_AZ_1 Windows file system deployment types. Default value is SSD.'
            subnet_ids: '- (Required) A list of IDs for the subnets that the file system will be accessible from. To specify more than a single subnet set deployment_type to MULTI_AZ_1.'
            tags: '- (Optional) A map of tags to assign to the file system. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            throughput_capacity: '- (Required) Throughput (megabytes per second) of the file system in power of 2 increments. Minimum of 8 and maximum of 2048.'
            update: '- (Default 45m) How long to wait for the file system to be updated.'
            vpc_id: '- Identifier of the Virtual Private Cloud for the file system.'
            weekly_maintenance_start_time: '- (Optional) The preferred start time (in d:HH:MM format) to perform weekly maintenance, in the UTC time zone.'
        importStatements: []
    aws_gamelift_alias:
        subCategory: GameLift
        description: Provides a GameLift Alias resource.
        name: aws_gamelift_alias
        title: aws_gamelift_alias
        examples:
            - name: example
              manifest: |-
                {
                  "description": "Example Description",
                  "name": "example-alias",
                  "routing_strategy": [
                    {
                      "message": "Example Message",
                      "type": "TERMINAL"
                    }
                  ]
                }
        argumentDocs:
            arn: '- Alias ARN.'
            description: '- (Optional) Description of the alias.'
            id: '- Alias ID.'
            name: '- (Required) Name of the alias.'
            routing_strategy: '- (Required) Specifies the fleet and/or routing type to use for the alias.'
            routing_strategy.fleet_id: '- (Optional) ID of the GameLift Fleet to point the alias to.'
            routing_strategy.message: '- (Optional) Message text to be used with the TERMINAL routing strategy.'
            routing_strategy.type: '- (Required) Type of routing strategyE.g., SIMPLE or TERMINAL'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_gamelift_build:
        subCategory: GameLift
        description: Provides a GameLift Build resource.
        name: aws_gamelift_build
        title: aws_gamelift_build
        examples:
            - name: test
              manifest: |-
                {
                  "name": "example-build",
                  "operating_system": "WINDOWS_2012",
                  "storage_location": [
                    {
                      "bucket": "${aws_s3_bucket.test.bucket}",
                      "key": "${aws_s3_object.test.key}",
                      "role_arn": "${aws_iam_role.test.arn}"
                    }
                  ]
                }
              references:
                storage_location.bucket: aws_s3_bucket.test.bucket
                storage_location.key: aws_s3_object.test.key
                storage_location.role_arn: aws_iam_role.test.arn
        argumentDocs:
            arn: '- GameLift Build ARN.'
            id: '- GameLift Build ID.'
            name: '- (Required) Name of the build'
            operating_system: '- (Required) Operating system that the game server binaries are built to run onE.g., WINDOWS_2012, AMAZON_LINUX or AMAZON_LINUX_2.'
            storage_location: '- (Required) Information indicating where your game build files are stored. See below.'
            storage_location.bucket: '- (Required) Name of your S3 bucket.'
            storage_location.key: '- (Required) Name of the zip file containing your build files.'
            storage_location.object_version: '- (Optional) A specific version of the file. If not set, the latest version of the file is retrieved.'
            storage_location.role_arn: '- (Required) ARN of the access role that allows Amazon GameLift to access your S3 bucket.'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            version: '- (Optional) Version that is associated with this build.'
        importStatements: []
    aws_gamelift_fleet:
        subCategory: GameLift
        description: Provides a GameLift Fleet resource.
        name: aws_gamelift_fleet
        title: aws_gamelift_fleet
        examples:
            - name: example
              manifest: |-
                {
                  "build_id": "${aws_gamelift_build.example.id}",
                  "ec2_instance_type": "t2.micro",
                  "fleet_type": "ON_DEMAND",
                  "name": "example-fleet-name",
                  "runtime_configuration": [
                    {
                      "server_process": [
                        {
                          "concurrent_executions": 1,
                          "launch_path": "C:\\game\\GomokuServer.exe"
                        }
                      ]
                    }
                  ]
                }
              references:
                build_id: aws_gamelift_build.example.id
        argumentDocs:
            arn: '- Fleet ARN.'
            build_arn: '- Build ARN.'
            build_id: '- (Optional) ID of the GameLift Build to be deployed on the fleet.'
            certificate_configuration: '- (Optional) Prompts GameLift to generate a TLS/SSL certificate for the fleet. See certificate_configuration.'
            certificate_configuration.certificate_type: '- (Optional) Indicates whether a TLS/SSL certificate is generated for a fleet. Valid values are DISABLED and GENERATED. Default value is DISABLED.'
            create: '- (Default 70m) How long to wait for a fleet to be created.'
            delete: '- (Default 20m) How long to wait for a fleet to be deleted.'
            description: '- (Optional) Human-readable description of the fleet.'
            ec2_inbound_permission: '- (Optional) Range of IP addresses and port settings that permit inbound traffic to access server processes running on the fleet. See below.'
            ec2_inbound_permission.from_port: '- (Required) Starting value for a range of allowed port numbers.'
            ec2_inbound_permission.ip_range: '- (Required) Range of allowed IP addresses expressed in CIDR notationE.g., 000.000.000.000/[subnet mask] or 0.0.0.0/[subnet mask].'
            ec2_inbound_permission.protocol: '- (Required) Network communication protocol used by the fleetE.g., TCP or UDP'
            ec2_inbound_permission.to_port: '- (Required) Ending value for a range of allowed port numbers. Port numbers are end-inclusive. This value must be higher than from_port.'
            ec2_instance_type: '- (Required) Name of an EC2 instance typeE.g., t2.micro'
            fleet_type: '- (Optional) Type of fleet. This value must be ON_DEMAND or SPOT. Defaults to ON_DEMAND.'
            id: '- Fleet ID.'
            instance_role_arn: '- (Optional) ARN of an IAM role that instances in the fleet can assume.'
            metric_groups: '- (Optional) List of names of metric groups to add this fleet to. A metric group tracks metrics across all fleets in the group. Defaults to default.'
            name: '- (Required) The name of the fleet.'
            new_game_session_protection_policy: '- (Optional) Game session protection policy to apply to all instances in this fleetE.g., FullProtection. Defaults to NoProtection.'
            operating_system: '- Operating system of the fleet''s computing resources.'
            resource_creation_limit_policy: '- (Optional) Policy that limits the number of game sessions an individual player can create over a span of time for this fleet. See below.'
            resource_creation_limit_policy.new_game_sessions_per_creator: '- (Optional) Maximum number of game sessions that an individual can create during the policy period.'
            resource_creation_limit_policy.policy_period_in_minutes: '- (Optional) Time span used in evaluating the resource creation limit policy.'
            runtime_configuration: '- (Optional) Instructions for launching server processes on each instance in the fleet. See below.'
            runtime_configuration.game_session_activation_timeout_seconds: '- (Optional) Maximum amount of time (in seconds) that a game session can remain in status ACTIVATING.'
            runtime_configuration.max_concurrent_game_session_activations: '- (Optional) Maximum number of game sessions with status ACTIVATING to allow on an instance simultaneously.'
            runtime_configuration.server_process: '- (Optional) Collection of server process configurations that describe which server processes to run on each instance in a fleet. See below.'
            runtime_configuration.server_process.concurrent_executions: '- (Required) Number of server processes using this configuration to run concurrently on an instance.'
            runtime_configuration.server_process.launch_path: '- (Required) Location of the server executable in a game build. All game builds are installed on instances at the root : for Windows instances C:\game, and for Linux instances /local/game.'
            runtime_configuration.server_process.parameters: '- (Optional) Optional list of parameters to pass to the server executable on launch.'
            script_arn: '- Script ARN.'
            script_id: '- (Optional) ID of the GameLift Script to be deployed on the fleet.'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_gamelift_game_server_group:
        subCategory: GameLift
        description: Provides a GameLift Game Server Group resource.
        name: aws_gamelift_game_server_group
        title: aws_gamelift_game_server_group
        examples:
            - name: example
              manifest: |-
                {
                  "depends_on": [
                    "${aws_iam_role_policy_attachment.example}"
                  ],
                  "game_server_group_name": "example",
                  "instance_definition": [
                    {
                      "instance_type": "c5.large"
                    },
                    {
                      "instance_type": "c5a.large"
                    }
                  ],
                  "launch_template": [
                    {
                      "id": "${aws_launch_template.example.id}"
                    }
                  ],
                  "max_size": 1,
                  "min_size": 1,
                  "role_arn": "${aws_iam_role.example.arn}"
                }
              references:
                launch_template.id: aws_launch_template.example.id
                role_arn: aws_iam_role.example.arn
            - name: example
              manifest: |-
                {
                  "auto_scaling_policy": [
                    {
                      "estimated_instance_warmup": 60,
                      "target_tracking_configuration": [
                        {
                          "target_value": 75
                        }
                      ]
                    }
                  ],
                  "balancing_strategy": "SPOT_ONLY",
                  "depends_on": [
                    "${aws_iam_role_policy_attachment.example}"
                  ],
                  "game_server_group_name": "example",
                  "game_server_protection_policy": "FULL_PROTECTION",
                  "instance_definition": [
                    {
                      "instance_type": "c5.large",
                      "weighted_capacity": "1"
                    },
                    {
                      "instance_type": "c5.2xlarge",
                      "weighted_capacity": "2"
                    }
                  ],
                  "launch_template": [
                    {
                      "id": "${aws_launch_template.example.id}",
                      "version": "1"
                    }
                  ],
                  "max_size": 1,
                  "min_size": 1,
                  "role_arn": "${aws_iam_role.example.arn}",
                  "tags": {
                    "Name": "example"
                  },
                  "vpc_subnets": [
                    "subnet-12345678",
                    "subnet-23456789"
                  ]
                }
              references:
                launch_template.id: aws_launch_template.example.id
                role_arn: aws_iam_role.example.arn
        argumentDocs:
            arn: '- The ARN of the GameLift Game Server Group.'
            auto_scaling_group_arn: '- The ARN of the created EC2 Auto Scaling group.'
            balancing_strategy: |-
                - (Optional) Indicates how GameLift FleetIQ balances the use of Spot Instances and On-Demand Instances.
                Valid values: SPOT_ONLY, SPOT_PREFERRED, ON_DEMAND_ONLY. Defaults to SPOT_PREFERRED.
            create: '- (Default 10 minutes) How long to wait for the GameLift Game Server Group to be created.'
            delete: '- (Default 30 minutes) How long to wait for the GameLift Game Server Group to be deleted.'
            estimated_instance_warmup: |-
                - (Optional) Length of time, in seconds, it takes for a new instance to start
                new game server processes and register with GameLift FleetIQ.
                Specifying a warm-up time can be useful, particularly with game servers that take a long time to start up,
                because it avoids prematurely starting new instances. Defaults to 60.
            game_server_group_name: |-
                - (Required) Name of the game server group.
                This value is used to generate unique ARN identifiers for the EC2 Auto Scaling group and the GameLift FleetIQ game server group.
            game_server_protection_policy: |-
                - (Optional) Indicates whether instances in the game server group are protected from early termination.
                Unprotected instances that have active game servers running might be terminated during a scale-down event,
                causing players to be dropped from the game.
                Protected instances cannot be terminated while there are active game servers running except in the event
                of a forced game server group deletion.
                Valid values: NO_PROTECTION, FULL_PROTECTION. Defaults to NO_PROTECTION.
            id: '- (Optional) A unique identifier for an existing EC2 launch template.'
            instance_type: '- (Required) An EC2 instance type.'
            max_size: |-
                - (Required) The maximum number of instances allowed in the EC2 Auto Scaling group.
                During automatic scaling events, GameLift FleetIQ and EC2 do not scale up the group above this maximum.
            min_size: |-
                - (Required) The minimum number of instances allowed in the EC2 Auto Scaling group.
                During automatic scaling events, GameLift FleetIQ and EC2 do not scale down the group below this minimum.
            name: '- (Optional) A readable identifier for an existing EC2 launch template.'
            role_arn: '- (Required) ARN for an IAM role that allows Amazon GameLift to access your EC2 Auto Scaling groups.'
            tags: '- (Optional) Key-value map of resource tags'
            target_value: '- (Required) Desired value to use with a game server group target-based scaling policy.'
            version: '- (Optional) The version of the EC2 launch template to use. If none is set, the default is the first version created.'
            vpc_subnets: |-
                - (Optional) A list of VPC subnets to use with instances in the game server group.
                By default, all GameLift FleetIQ-supported Availability Zones are used.
            weighted_capacity: |-
                - (Optional) Instance weighting that indicates how much this instance type contributes
                to the total capacity of a game server group.
                Instance weights are used by GameLift FleetIQ to calculate the instance type's cost per unit hour and better identify
                the most cost-effective options.
        importStatements: []
    aws_gamelift_game_session_queue:
        subCategory: GameLift
        description: Provides a GameLift Game Session Queue resource.
        name: aws_gamelift_game_session_queue
        title: aws_gamelift_game_session_queue
        examples:
            - name: test
              manifest: |-
                {
                  "destinations": [
                    "${aws_gamelift_fleet.us_west_2_fleet.arn}",
                    "${aws_gamelift_fleet.eu_central_1_fleet.arn}"
                  ],
                  "name": "example-session-queue",
                  "notification_target": "${aws_sns_topic.game_session_queue_notifications.arn}",
                  "player_latency_policy": [
                    {
                      "maximum_individual_player_latency_milliseconds": 100,
                      "policy_duration_seconds": 5
                    },
                    {
                      "maximum_individual_player_latency_milliseconds": 200
                    }
                  ],
                  "timeout_in_seconds": 60
                }
              references:
                notification_target: aws_sns_topic.game_session_queue_notifications.arn
        argumentDocs:
            arn: '- Game Session Queue ARN.'
            destinations: '- (Optional) List of fleet/alias ARNs used by session queue for placing game sessions.'
            name: '- (Required) Name of the session queue.'
            notification_target: '- (Optional) An SNS topic ARN that is set up to receive game session placement notifications.'
            player_latency_policy: '- (Optional) One or more policies used to choose fleet based on player latency. See below.'
            player_latency_policy.maximum_individual_player_latency_milliseconds: '- (Required) Maximum latency value that is allowed for any player.'
            player_latency_policy.policy_duration_seconds: '- (Optional) Length of time that the policy is enforced while placing a new game session. Absence of value for this attribute means that the policy is enforced until the queue times out.'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            timeout_in_seconds: '- (Required) Maximum time a game session request can remain in the queue.'
        importStatements: []
    aws_gamelift_script:
        subCategory: GameLift
        description: Provides a GameLift Script resource.
        name: aws_gamelift_script
        title: aws_gamelift_script
        examples:
            - name: example
              manifest: |-
                {
                  "name": "example-script",
                  "storage_location": [
                    {
                      "bucket": "${aws_s3_bucket.example.bucket}",
                      "key": "${aws_s3_object.example.key}",
                      "role_arn": "${aws_iam_role.example.arn}"
                    }
                  ]
                }
              references:
                storage_location.bucket: aws_s3_bucket.example.bucket
                storage_location.key: aws_s3_object.example.key
                storage_location.role_arn: aws_iam_role.example.arn
        argumentDocs:
            arn: '- GameLift Script ARN.'
            id: '- GameLift Script ID.'
            name: '- (Required) Name of the script'
            storage_location: '- (Optional) Information indicating where your game script files are stored. See below.'
            storage_location.bucket: '- (Required) Name of your S3 bucket.'
            storage_location.key: '- (Required) Name of the zip file containing your script files.'
            storage_location.object_version: '- (Optional) A specific version of the file. If not set, the latest version of the file is retrieved.'
            storage_location.role_arn: '- (Required) ARN of the access role that allows Amazon GameLift to access your S3 bucket.'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            version: '- (Optional) Version that is associated with this script.'
            zip_file: '- (Optional) A data object containing your Realtime scripts and dependencies as a zip  file. The zip file can have one or multiple files. Maximum size of a zip file is 5 MB.'
        importStatements: []
    aws_glacier_vault:
        subCategory: S3 Glacier
        description: Provides a Glacier Vault.
        name: aws_glacier_vault
        title: aws_glacier_vault
        examples:
            - name: my_archive
              manifest: |-
                {
                  "access_policy": "{\n    \"Version\":\"2012-10-17\",\n    \"Statement\":[\n       {\n          \"Sid\": \"add-read-only-perm\",\n          \"Principal\": \"*\",\n          \"Effect\": \"Allow\",\n          \"Action\": [\n             \"glacier:InitiateJob\",\n             \"glacier:GetJobOutput\"\n          ],\n          \"Resource\": \"arn:aws:glacier:eu-west-1:432981146916:vaults/MyArchive\"\n       }\n    ]\n}\n",
                  "name": "MyArchive",
                  "notification": [
                    {
                      "events": [
                        "ArchiveRetrievalCompleted",
                        "InventoryRetrievalCompleted"
                      ],
                      "sns_topic": "${aws_sns_topic.aws_sns_topic.arn}"
                    }
                  ],
                  "tags": {
                    "Test": "MyArchive"
                  }
                }
              references:
                notification.sns_topic: aws_sns_topic.aws_sns_topic.arn
              dependencies:
                aws_sns_topic.aws_sns_topic: |-
                    {
                      "name": "glacier-sns-topic"
                    }
        argumentDocs:
            access_policy: |-
                - (Optional) The policy document. This is a JSON formatted string.
                The heredoc syntax or file function is helpful here. Use the Glacier Developer Guide for more information on Glacier Vault Policy
            arn: '- The ARN of the vault.'
            events: '- (Required) You can configure a vault to publish a notification for ArchiveRetrievalCompleted and InventoryRetrievalCompleted events.'
            location: '- The URI of the vault that was created.'
            name: '- (Required) The name of the Vault. Names can be between 1 and 255 characters long and the valid characters are a-z, A-Z, 0-9, ''_'' (underscore), ''-'' (hyphen), and ''.'' (period).'
            notification: '- (Optional) The notifications for the Vault. Fields documented below.'
            sns_topic: '- (Required) The SNS Topic ARN.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_glacier_vault_lock:
        subCategory: S3 Glacier
        description: Manages a Glacier Vault Lock.
        name: aws_glacier_vault_lock
        title: aws_glacier_vault_lock
        examples:
            - name: example
              manifest: |-
                {
                  "complete_lock": false,
                  "policy": "${data.aws_iam_policy_document.example.json}",
                  "vault_name": "${aws_glacier_vault.example.name}"
                }
              references:
                policy: data.aws_iam_policy_document.example.json
                vault_name: aws_glacier_vault.example.name
              dependencies:
                aws_glacier_vault.example: |-
                    {
                      "name": "example"
                    }
            - name: example
              manifest: |-
                {
                  "complete_lock": true,
                  "policy": "${data.aws_iam_policy_document.example.json}",
                  "vault_name": "${aws_glacier_vault.example.name}"
                }
              references:
                policy: data.aws_iam_policy_document.example.json
                vault_name: aws_glacier_vault.example.name
        argumentDocs:
            complete_lock: '- (Required) Boolean whether to permanently apply this Glacier Lock Policy. Once completed, this cannot be undone. If set to false, the Glacier Lock Policy remains in a testing mode for 24 hours. After that time, the Glacier Lock Policy is automatically removed by Glacier and the Terraform resource will show as needing recreation. Changing this from false to true will show as resource recreation, which is expected. Changing this from true to false is not possible unless the Glacier Vault is recreated at the same time.'
            id: '- Glacier Vault name.'
            ignore_deletion_error: '- (Optional) Allow Terraform to ignore the error returned when attempting to delete the Glacier Lock Policy. This can be used to delete or recreate the Glacier Vault via Terraform, for example, if the Glacier Vault Lock policy permits that action. This should only be used in conjunction with complete_lock being set to true.'
            policy: '- (Required) JSON string containing the IAM policy to apply as the Glacier Vault Lock policy.'
            vault_name: '- (Required) The name of the Glacier Vault.'
        importStatements: []
    aws_globalaccelerator_accelerator:
        subCategory: Global Accelerator
        description: Provides a Global Accelerator accelerator.
        name: aws_globalaccelerator_accelerator
        title: aws_globalaccelerator_accelerator
        examples:
            - name: example
              manifest: |-
                {
                  "attributes": [
                    {
                      "flow_logs_enabled": true,
                      "flow_logs_s3_bucket": "example-bucket",
                      "flow_logs_s3_prefix": "flow-logs/"
                    }
                  ],
                  "enabled": true,
                  "ip_address_type": "IPV4",
                  "name": "Example"
                }
        argumentDocs:
            attributes: '- (Optional) The attributes of the accelerator. Fields documented below.'
            create: '- (Default 30 minutes) How long to wait for the Global Accelerator Accelerator to be created.'
            dns_name: '- The DNS name of the accelerator. For example, a5d53ff5ee6bca4ce.awsglobalaccelerator.com.'
            enabled: '- (Optional) Indicates whether the accelerator is enabled. Defaults to true. Valid values: true, false.'
            flow_logs_enabled: '- (Optional) Indicates whether flow logs are enabled. Defaults to false. Valid values: true, false.'
            flow_logs_s3_bucket: '- (Optional) The name of the Amazon S3 bucket for the flow logs. Required if flow_logs_enabled is true.'
            flow_logs_s3_prefix: '- (Optional) The prefix for the location in the Amazon S3 bucket for the flow logs. Required if flow_logs_enabled is true.'
            hosted_zone_id: |-
                --  The Global Accelerator Route 53 zone ID that can be used to
                route an Alias Resource Record Set to the Global Accelerator. This attribute
                is simply an alias for the zone ID Z2BJ6XQ5FK7U4H.
            id: '- The Amazon Resource Name (ARN) of the accelerator.'
            ip_address_type: '- (Optional) The value for the address type. Defaults to IPV4. Valid values: IPV4.'
            ip_addresses: '- A list of IP addresses in the IP address set.'
            ip_family: '- The type of IP addresses included in this IP set.'
            ip_sets: '- IP address set associated with the accelerator.'
            name: '- (Required) The name of the accelerator.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            update: '- (Default 30 minutes) How long to wait for the Global Accelerator Accelerator to be updated.'
        importStatements: []
    aws_globalaccelerator_endpoint_group:
        subCategory: Global Accelerator
        description: Provides a Global Accelerator endpoint group.
        name: aws_globalaccelerator_endpoint_group
        title: aws_globalaccelerator_endpoint_group
        examples:
            - name: example
              manifest: |-
                {
                  "endpoint_configuration": [
                    {
                      "endpoint_id": "${aws_lb.example.arn}",
                      "weight": 100
                    }
                  ],
                  "listener_arn": "${aws_globalaccelerator_listener.example.id}"
                }
              references:
                endpoint_configuration.endpoint_id: aws_lb.example.arn
                listener_arn: aws_globalaccelerator_listener.example.id
        argumentDocs:
            arn: '- The Amazon Resource Name (ARN) of the endpoint group.'
            client_ip_preservation_enabled: |-
                - (Optional) Indicates whether client IP address preservation is enabled for an Application Load Balancer endpoint. See the AWS documentation for more details. The default value is false.
                Note: When client IP address preservation is enabled, the Global Accelerator service creates an EC2 Security Group in the VPC named GlobalAccelerator that must be deleted (potentially outside of Terraform) before the VPC will successfully delete. If this EC2 Security Group is not deleted, Terraform will retry the VPC deletion for a few minutes before reporting a DependencyViolation error. This cannot be resolved by re-running Terraform.
            create: '- (Default 30 minutes) How long to wait for the Global Accelerator Endpoint Group to be created.'
            delete: '- (Default 30 minutes) How long to wait for the Global Accelerator Endpoint Group to be deleted.'
            endpoint_configuration: '- (Optional) The list of endpoint objects. Fields documented below.'
            endpoint_group_region: (Optional) - The name of the AWS Region where the endpoint group is located.
            endpoint_id: '- (Optional) An ID for the endpoint. If the endpoint is a Network Load Balancer or Application Load Balancer, this is the Amazon Resource Name (ARN) of the resource. If the endpoint is an Elastic IP address, this is the Elastic IP address allocation ID.'
            endpoint_port: '- (Required) The endpoint port that you want a listener port to be mapped to. This is the port on the endpoint, such as the Application Load Balancer or Amazon EC2 instance.'
            health_check_interval_seconds: '- (Optional) The time—10 seconds or 30 seconds—between each health check for an endpoint. The default value is 30.'
            health_check_path: '- (Optional) If the protocol is HTTP/S, then this specifies the path that is the destination for health check targets. The default value is slash (/). Terraform will only perform drift detection of its value when present in a configuration.'
            health_check_port: |-
                - (Optional) The port that AWS Global Accelerator uses to check the health of endpoints that are part of this endpoint group. The default port is the listener port that this endpoint group is associated with. If listener port is a list of ports, Global Accelerator uses the first port in the list.
                Terraform will only perform drift detection of its value when present in a configuration.
            health_check_protocol: '- (Optional) The protocol that AWS Global Accelerator uses to check the health of endpoints that are part of this endpoint group. The default value is TCP.'
            id: '- The Amazon Resource Name (ARN) of the endpoint group.'
            listener_arn: '- (Required) The Amazon Resource Name (ARN) of the listener.'
            listener_port: '- (Required) The listener port that you want to map to a specific endpoint port. This is the port that user traffic arrives to the Global Accelerator on.'
            port_override: '- (Optional) Override specific listener ports used to route traffic to endpoints that are part of this endpoint group. Fields documented below.'
            threshold_count: '- (Optional) The number of consecutive health checks required to set the state of a healthy endpoint to unhealthy, or to set an unhealthy endpoint to healthy. The default value is 3.'
            traffic_dial_percentage: '- (Optional) The percentage of traffic to send to an AWS Region. Additional traffic is distributed to other endpoint groups for this listener. The default value is 100.'
            update: '- (Default 30 minutes) How long to wait for the Global Accelerator Endpoint Group to be updated.'
            weight: '- (Optional) The weight associated with the endpoint. When you add weights to endpoints, you configure AWS Global Accelerator to route traffic based on proportions that you specify.'
        importStatements: []
    aws_globalaccelerator_listener:
        subCategory: Global Accelerator
        description: Provides a Global Accelerator listener.
        name: aws_globalaccelerator_listener
        title: aws_globalaccelerator_listener
        examples:
            - name: example
              manifest: |-
                {
                  "accelerator_arn": "${aws_globalaccelerator_accelerator.example.id}",
                  "client_affinity": "SOURCE_IP",
                  "port_range": [
                    {
                      "from_port": 80,
                      "to_port": 80
                    }
                  ],
                  "protocol": "TCP"
                }
              references:
                accelerator_arn: aws_globalaccelerator_accelerator.example.id
              dependencies:
                aws_globalaccelerator_accelerator.example: |-
                    {
                      "attributes": [
                        {
                          "flow_logs_enabled": true,
                          "flow_logs_s3_bucket": "example-bucket",
                          "flow_logs_s3_prefix": "flow-logs/"
                        }
                      ],
                      "enabled": true,
                      "ip_address_type": "IPV4",
                      "name": "Example"
                    }
        argumentDocs:
            accelerator_arn: '- (Required) The Amazon Resource Name (ARN) of your accelerator.'
            client_affinity: '- (Optional) Direct all requests from a user to the same endpoint. Valid values are NONE, SOURCE_IP. Default: NONE. If NONE, Global Accelerator uses the "five-tuple" properties of source IP address, source port, destination IP address, destination port, and protocol to select the hash value. If SOURCE_IP, Global Accelerator uses the "two-tuple" properties of source (client) IP address and destination IP address to select the hash value.'
            create: '- (Default 30 minutes) How long to wait for the Global Accelerator Listener to be created.'
            delete: '- (Default 30 minutes) How long to wait for the Global Accelerator Listener to be deleted.'
            from_port: '- (Optional) The first port in the range of ports, inclusive.'
            id: '- The Amazon Resource Name (ARN) of the listener.'
            port_range: '- (Optional) The list of port ranges for the connections from clients to the accelerator. Fields documented below.'
            protocol: '- (Optional) The protocol for the connections from clients to the accelerator. Valid values are TCP, UDP.'
            to_port: '- (Optional) The last port in the range of ports, inclusive.'
            update: '- (Default 30 minutes) How long to wait for the Global Accelerator Listener to be updated.'
        importStatements: []
    aws_glue_catalog_database:
        subCategory: Glue
        description: Provides a Glue Catalog Database.
        name: aws_glue_catalog_database
        title: aws_glue_catalog_database
        examples:
            - name: aws_glue_catalog_database
              manifest: |-
                {
                  "name": "MyCatalogDatabase"
                }
            - name: aws_glue_catalog_database
              manifest: |-
                {
                  "create_table_default_permission": [
                    {
                      "permissions": [
                        "SELECT"
                      ],
                      "principal": [
                        {
                          "data_lake_principal_identifier": "IAM_ALLOWED_PRINCIPALS"
                        }
                      ]
                    }
                  ],
                  "name": "MyCatalogDatabase"
                }
        argumentDocs:
            arn: '- ARN of the Glue Catalog Database.'
            catalog_id: '- (Optional) ID of the Glue Catalog to create the database in. If omitted, this defaults to the AWS Account ID.'
            create_table_default_permission: '- (Optional) Creates a set of default permissions on the table for principals. See create_table_default_permission below.'
            create_table_default_permission.permissions: '- (Optional) The permissions that are granted to the principal.'
            create_table_default_permission.principal: '- (Optional) The principal who is granted permissions.. See principal below.'
            create_table_default_permission.principal.data_lake_principal_identifier: '- (Optional) An identifier for the Lake Formation principal.'
            description: '- (Optional) Description of the database.'
            id: '- Catalog ID and name of the database'
            location_uri: '- (Optional) Location of the database (for example, an HDFS path).'
            name: '- (Required) Name of the database. The acceptable characters are lowercase letters, numbers, and the underscore character.'
            parameters: '- (Optional) List of key-value pairs that define parameters and properties of the database.'
            target_database: '- (Optional) Configuration block for a target database for resource linking. See target_database below.'
            target_database.catalog_id: '- (Required) ID of the Data Catalog in which the database resides.'
            target_database.database_name: '- (Required) Name of the catalog database.'
        importStatements: []
    aws_glue_catalog_table:
        subCategory: Glue
        description: Provides a Glue Catalog Table.
        name: aws_glue_catalog_table
        title: aws_glue_catalog_table
        examples:
            - name: aws_glue_catalog_table
              manifest: |-
                {
                  "database_name": "MyCatalogDatabase",
                  "name": "MyCatalogTable"
                }
            - name: aws_glue_catalog_table
              manifest: |-
                {
                  "database_name": "MyCatalogDatabase",
                  "name": "MyCatalogTable",
                  "parameters": {
                    "EXTERNAL": "TRUE",
                    "parquet.compression": "SNAPPY"
                  },
                  "storage_descriptor": [
                    {
                      "columns": [
                        {
                          "name": "my_string",
                          "type": "string"
                        },
                        {
                          "name": "my_double",
                          "type": "double"
                        },
                        {
                          "comment": "",
                          "name": "my_date",
                          "type": "date"
                        },
                        {
                          "comment": "",
                          "name": "my_bigint",
                          "type": "bigint"
                        },
                        {
                          "comment": "",
                          "name": "my_struct",
                          "type": "struct\u003cmy_nested_string:string\u003e"
                        }
                      ],
                      "input_format": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
                      "location": "s3://my-bucket/event-streams/my-stream",
                      "output_format": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
                      "ser_de_info": [
                        {
                          "name": "my-stream",
                          "parameters": {
                            "serialization.format": 1
                          },
                          "serialization_library": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe"
                        }
                      ]
                    }
                  ],
                  "table_type": "EXTERNAL_TABLE"
                }
        argumentDocs:
            arn: '- The ARN of the Glue Table.'
            catalog_id: '- (Optional) ID of the Glue Catalog and database to create the table in. If omitted, this defaults to the AWS Account ID plus the database name.'
            database_name: '- (Required) Name of the metadata database where the table metadata resides. For Hive compatibility, this must be all lowercase.'
            description: '- (Optional) Description of the table.'
            id: '- Catalog ID, Database name and of the name table.'
            name: '- (Required) Name of the table. For Hive compatibility, this must be entirely lowercase.'
            owner: '- (Optional) Owner of the table.'
            parameters: '- (Optional) Properties associated with this table, as a list of key-value pairs.'
            partition_index: '- (Optional) Configuration block for a maximum of 3 partition indexes. See partition_index below.'
            partition_index.index_name: '- (Required) Name of the partition index.'
            partition_index.keys: '- (Required) Keys for the partition index.'
            partition_keys: '- (Optional) Configuration block of columns by which the table is partitioned. Only primitive types are supported as partition keys. See partition_keys below.'
            partition_keys.comment: '- (Optional) Free-form text comment.'
            partition_keys.name: '- (Required) Name of the Partition Key.'
            partition_keys.type: '- (Optional) Datatype of data in the Partition Key.'
            retention: '- (Optional) Retention time for this table.'
            storage_descriptor: '- (Optional) Configuration block for information about the physical storage of this table. For more information, refer to the Glue Developer Guide. See storage_descriptor below.'
            storage_descriptor.bucket_columns: '- (Optional) List of reducer grouping columns, clustering columns, and bucketing columns in the table.'
            storage_descriptor.columns: '- (Optional) Configuration block for columns in the table. See columns below.'
            storage_descriptor.columns.comment: '- (Optional) Free-form text comment.'
            storage_descriptor.columns.name: '- (Required) Name of the Column.'
            storage_descriptor.columns.parameters: '- (Optional) Key-value pairs defining properties associated with the column.'
            storage_descriptor.columns.type: '- (Optional) Datatype of data in the Column.'
            storage_descriptor.compressed: '- (Optional) Whether the data in the table is compressed.'
            storage_descriptor.input_format: '- (Optional) Input format: SequenceFileInputFormat (binary), or TextInputFormat, or a custom format.'
            storage_descriptor.location: '- (Optional) Physical location of the table. By default this takes the form of the warehouse location, followed by the database location in the warehouse, followed by the table name.'
            storage_descriptor.number_of_buckets: '- (Optional) Must be specified if the table contains any dimension columns.'
            storage_descriptor.output_format: '- (Optional) Output format: SequenceFileOutputFormat (binary), or IgnoreKeyTextOutputFormat, or a custom format.'
            storage_descriptor.parameters: '- (Optional) User-supplied properties in key-value form.'
            storage_descriptor.schema_reference: '- (Optional) Object that references a schema stored in the AWS Glue Schema Registry. When creating a table, you can pass an empty list of columns for the schema, and instead use a schema reference. See Schema Reference below.'
            storage_descriptor.schema_reference.schema_id: '- (Optional) Configuration block that contains schema identity fields. Either this or the schema_version_id has to be provided. See schema_id below.'
            storage_descriptor.schema_reference.schema_id.registry_name: '- (Optional) Name of the schema registry that contains the schema. Must be provided when schema_name is specified and conflicts with schema_arn.'
            storage_descriptor.schema_reference.schema_id.schema_arn: '- (Optional) ARN of the schema. One of schema_arn or schema_name has to be provided.'
            storage_descriptor.schema_reference.schema_id.schema_name: '- (Optional) Name of the schema. One of schema_arn or schema_name has to be provided.'
            storage_descriptor.schema_reference.schema_version_id: '- (Optional) Unique ID assigned to a version of the schema. Either this or the schema_id has to be provided.'
            storage_descriptor.schema_reference.schema_version_number: '- (Required) Version number of the schema.'
            storage_descriptor.ser_de_info: '- (Optional) Configuration block for serialization and deserialization ("SerDe") information. See ser_de_info below.'
            storage_descriptor.ser_de_info.name: '- (Optional) Name of the SerDe.'
            storage_descriptor.ser_de_info.parameters: '- (Optional) Map of initialization parameters for the SerDe, in key-value form.'
            storage_descriptor.ser_de_info.serialization_library: '- (Optional) Usually the class that implements the SerDe. An example is org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe.'
            storage_descriptor.skewed_info: '- (Optional) Configuration block with information about values that appear very frequently in a column (skewed values). See skewed_info below.'
            storage_descriptor.skewed_info.skewed_column_names: '- (Optional) List of names of columns that contain skewed values.'
            storage_descriptor.skewed_info.skewed_column_value_location_maps: '- (Optional) List of values that appear so frequently as to be considered skewed.'
            storage_descriptor.skewed_info.skewed_column_values: '- (Optional) Map of skewed values to the columns that contain them.'
            storage_descriptor.sort_columns: '- (Optional) Configuration block for the sort order of each bucket in the table. See sort_columns below.'
            storage_descriptor.sort_columns.column: '- (Required) Name of the column.'
            storage_descriptor.sort_columns.sort_order: '- (Required) Whether the column is sorted in ascending (1) or descending order (0).'
            storage_descriptor.stored_as_sub_directories: '- (Optional) Whether the table data is stored in subdirectories.'
            table_type: '- (Optional) Type of this table (EXTERNAL_TABLE, VIRTUAL_VIEW, etc.). While optional, some Athena DDL queries such as ALTER TABLE and SHOW CREATE TABLE will fail if this argument is empty.'
            target_table: '- (Optional) Configuration block of a target table for resource linking. See target_table below.'
            target_table.catalog_id: '- (Required) ID of the Data Catalog in which the table resides.'
            target_table.database_name: '- (Required) Name of the catalog database that contains the target table.'
            target_table.name: '- (Required) Name of the target table.'
            view_expanded_text: '- (Optional) If the table is a view, the expanded text of the view; otherwise null.'
            view_original_text: '- (Optional) If the table is a view, the original text of the view; otherwise null.'
        importStatements: []
    aws_glue_classifier:
        subCategory: Glue
        description: Provides an Glue Classifier resource.
        name: aws_glue_classifier
        title: aws_glue_classifier
        examples:
            - name: example
              manifest: |-
                {
                  "csv_classifier": [
                    {
                      "allow_single_column": false,
                      "contains_header": "PRESENT",
                      "delimiter": ",",
                      "disable_value_trimming": false,
                      "header": [
                        "example1",
                        "example2"
                      ],
                      "quote_symbol": "'"
                    }
                  ],
                  "name": "example"
                }
            - name: example
              manifest: |-
                {
                  "grok_classifier": [
                    {
                      "classification": "example",
                      "grok_pattern": "example"
                    }
                  ],
                  "name": "example"
                }
            - name: example
              manifest: |-
                {
                  "json_classifier": [
                    {
                      "json_path": "example"
                    }
                  ],
                  "name": "example"
                }
            - name: example
              manifest: |-
                {
                  "name": "example",
                  "xml_classifier": [
                    {
                      "classification": "example",
                      "row_tag": "example"
                    }
                  ]
                }
        argumentDocs:
            csv_classifier: '- (Optional) A classifier for Csv content. Defined below.'
            csv_classifier.allow_single_column: '- (Optional) Enables the processing of files that contain only one column.'
            csv_classifier.contains_header: '- (Optional) Indicates whether the CSV file contains a header. This can be one of "ABSENT", "PRESENT", or "UNKNOWN".'
            csv_classifier.delimiter: '- (Optional) The delimiter used in the Csv to separate columns.'
            csv_classifier.disable_value_trimming: '- (Optional) Specifies whether to trim column values.'
            csv_classifier.header: '- (Optional) A list of strings representing column names.'
            csv_classifier.quote_symbol: '- (Optional) A custom symbol to denote what combines content into a single column value. It must be different from the column delimiter.'
            grok_classifier: – (Optional) A classifier that uses grok patterns. Defined below.
            grok_classifier.classification: '- (Required) An identifier of the data format that the classifier matches, such as Twitter, JSON, Omniture logs, Amazon CloudWatch Logs, and so on.'
            grok_classifier.custom_patterns: '- (Optional) Custom grok patterns used by this classifier.'
            grok_classifier.grok_pattern: '- (Required) The grok pattern used by this classifier.'
            id: '- Name of the classifier'
            json_classifier: – (Optional) A classifier for JSON content. Defined below.
            json_classifier.json_path: '- (Required) A JsonPath string defining the JSON data for the classifier to classify. AWS Glue supports a subset of JsonPath, as described in Writing JsonPath Custom Classifiers.'
            name: – (Required) The name of the classifier.
            xml_classifier: – (Optional) A classifier for XML content. Defined below.
            xml_classifier.classification: '- (Required) An identifier of the data format that the classifier matches.'
            xml_classifier.row_tag: '- (Required) The XML tag designating the element that contains each record in an XML document being parsed. Note that this cannot identify a self-closing element (closed by />). An empty row element that contains only attributes can be parsed as long as it ends with a closing tag (for example, <row item_a="A" item_b="B"></row> is okay, but <row item_a="A" item_b="B" /> is not).'
        importStatements: []
    aws_glue_connection:
        subCategory: Glue
        description: Provides an Glue Connection resource.
        name: aws_glue_connection
        title: aws_glue_connection
        examples:
            - name: example
              manifest: |-
                {
                  "connection_properties": {
                    "JDBC_CONNECTION_URL": "jdbc:mysql://example.com/exampledatabase",
                    "PASSWORD": "examplepassword",
                    "USERNAME": "exampleusername"
                  },
                  "name": "example"
                }
            - name: example
              manifest: |-
                {
                  "connection_properties": {
                    "JDBC_CONNECTION_URL": "jdbc:mysql://${aws_rds_cluster.example.endpoint}/exampledatabase",
                    "PASSWORD": "examplepassword",
                    "USERNAME": "exampleusername"
                  },
                  "name": "example",
                  "physical_connection_requirements": [
                    {
                      "availability_zone": "${aws_subnet.example.availability_zone}",
                      "security_group_id_list": [
                        "${aws_security_group.example.id}"
                      ],
                      "subnet_id": "${aws_subnet.example.id}"
                    }
                  ]
                }
              references:
                physical_connection_requirements.availability_zone: aws_subnet.example.availability_zone
                physical_connection_requirements.subnet_id: aws_subnet.example.id
        argumentDocs:
            arn: '- The ARN of the Glue Connection.'
            catalog_id: – (Optional) The ID of the Data Catalog in which to create the connection. If none is supplied, the AWS account ID is used by default.
            connection_properties: – (Optional) A map of key-value pairs used as parameters for this connection.
            connection_type: '– (Optional) The type of the connection. Supported are: JDBC, MONGODB, KAFKA, and NETWORK. Defaults to JBDC.'
            description: – (Optional) Description of the connection.
            id: '- Catalog ID and name of the connection'
            match_criteria: – (Optional) A list of criteria that can be used in selecting this connection.
            name: – (Required) The name of the connection.
            physical_connection_requirements: '- (Optional) A map of physical connection requirements, such as VPC and SecurityGroup. Defined below.'
            physical_connection_requirements.availability_zone: '- (Optional) The availability zone of the connection. This field is redundant and implied by subnet_id, but is currently an api requirement.'
            physical_connection_requirements.security_group_id_list: '- (Optional) The security group ID list used by the connection.'
            physical_connection_requirements.subnet_id: '- (Optional) The subnet ID used by the connection.'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_glue_crawler:
        subCategory: Glue
        description: Manages a Glue Crawler
        name: aws_glue_crawler
        title: aws_glue_crawler
        examples:
            - name: example
              manifest: |-
                {
                  "database_name": "${aws_glue_catalog_database.example.name}",
                  "dynamodb_target": [
                    {
                      "path": "table-name"
                    }
                  ],
                  "name": "example",
                  "role": "${aws_iam_role.example.arn}"
                }
              references:
                database_name: aws_glue_catalog_database.example.name
                role: aws_iam_role.example.arn
            - name: example
              manifest: |-
                {
                  "database_name": "${aws_glue_catalog_database.example.name}",
                  "jdbc_target": [
                    {
                      "connection_name": "${aws_glue_connection.example.name}",
                      "path": "database-name/%"
                    }
                  ],
                  "name": "example",
                  "role": "${aws_iam_role.example.arn}"
                }
              references:
                database_name: aws_glue_catalog_database.example.name
                jdbc_target.connection_name: aws_glue_connection.example.name
                role: aws_iam_role.example.arn
            - name: example
              manifest: |-
                {
                  "database_name": "${aws_glue_catalog_database.example.name}",
                  "name": "example",
                  "role": "${aws_iam_role.example.arn}",
                  "s3_target": [
                    {
                      "path": "s3://${aws_s3_bucket.example.bucket}"
                    }
                  ]
                }
              references:
                database_name: aws_glue_catalog_database.example.name
                role: aws_iam_role.example.arn
            - name: example
              manifest: |-
                {
                  "catalog_target": [
                    {
                      "database_name": "${aws_glue_catalog_database.example.name}",
                      "tables": [
                        "${aws_glue_catalog_table.example.name}"
                      ]
                    }
                  ],
                  "configuration": "{\n  \"Version\":1.0,\n  \"Grouping\": {\n    \"TableGroupingPolicy\": \"CombineCompatibleSchemas\"\n  }\n}\n",
                  "database_name": "${aws_glue_catalog_database.example.name}",
                  "name": "example",
                  "role": "${aws_iam_role.example.arn}",
                  "schema_change_policy": [
                    {
                      "delete_behavior": "LOG"
                    }
                  ]
                }
              references:
                catalog_target.database_name: aws_glue_catalog_database.example.name
                database_name: aws_glue_catalog_database.example.name
                role: aws_iam_role.example.arn
            - name: example
              manifest: |-
                {
                  "database_name": "${aws_glue_catalog_database.example.name}",
                  "mongodb_target": [
                    {
                      "connection_name": "${aws_glue_connection.example.name}",
                      "path": "database-name/%"
                    }
                  ],
                  "name": "example",
                  "role": "${aws_iam_role.example.arn}"
                }
              references:
                database_name: aws_glue_catalog_database.example.name
                mongodb_target.connection_name: aws_glue_connection.example.name
                role: aws_iam_role.example.arn
            - name: events_crawler
              manifest: |-
                {
                  "configuration": "${jsonencode(\n    {\n      Grouping = {\n        TableGroupingPolicy = \"CombineCompatibleSchemas\"\n      }\n      CrawlerOutput = {\n        Partitions = { AddOrUpdateBehavior = \"InheritFromTable\" }\n      }\n      Version = 1\n    }\n  )}",
                  "database_name": "${aws_glue_catalog_database.glue_database.name}",
                  "name": "events_crawler_${var.environment_name}",
                  "role": "${aws_iam_role.glue_role.arn}",
                  "s3_target": [
                    {
                      "path": "s3://${aws_s3_bucket.data_lake_bucket.bucket}"
                    }
                  ],
                  "schedule": "cron(0 1 * * ? *)",
                  "tags": "${var.tags}"
                }
              references:
                database_name: aws_glue_catalog_database.glue_database.name
                role: aws_iam_role.glue_role.arn
                tags: var.tags
        argumentDocs:
            arn: '- The ARN of the crawler'
            classifiers: (Optional) List of custom classifiers. By default, all AWS classifiers are included in a crawl, but these custom classifiers always override the default classifiers for a given classification.
            configuration: (Optional) JSON string of configuration information. For more details see Setting Crawler Configuration Options.
            connection_name: '- (Required) The name of the connection to use to connect to the JDBC target.'
            crawler_lineage_settings: '- (Optional) Specifies whether data lineage is enabled for the crawler. Valid values are: ENABLE and DISABLE. Default value is Disable.'
            database_name: (Required) Glue database where results are written.
            delete_behavior: '- (Optional) The deletion behavior when the crawler finds a deleted object. Valid values: LOG, DELETE_FROM_DATABASE, or DEPRECATE_IN_DATABASE. Defaults to DEPRECATE_IN_DATABASE.'
            delta_tables: '- (Required) A list of the Amazon S3 paths to the Delta tables.'
            description: (Optional) Description of the crawler.
            dlq_event_queue_arn: '- (Optional) The ARN of the dead-letter SQS queue.'
            dynamodb_target: (Optional) List of nested DynamoDB target arguments. See Dynamodb Target below.
            event_queue_arn: '- (Optional) The ARN of the SQS queue to receive S3 notifications from.'
            exclusions: '- (Optional) A list of glob patterns used to exclude from the crawl.'
            id: '- Crawler name'
            jdbc_target: (Optional) List of nested JBDC target arguments. See JDBC Target below.
            lineage_configuration: (Optional) Specifies data lineage configuration settings for the crawler. See Lineage Configuration below.
            mongodb_target: (Optional) List nested MongoDB target arguments. See MongoDB Target below.
            name: (Required) Name of the crawler.
            path: '- (Required) The name of the DynamoDB table to crawl.'
            recrawl_behavior: '- (Optional) Specifies whether to crawl the entire dataset again, crawl only folders that were added since the last crawler run, or crawl what S3 notifies the crawler of via SQS. Valid Values are: CRAWL_EVENT_MODE, CRAWL_EVERYTHING and CRAWL_NEW_FOLDERS_ONLY. Default value is CRAWL_EVERYTHING.'
            recrawl_policy: (Optional)  A policy that specifies whether to crawl the entire dataset again, or to crawl only folders that were added since the last crawler run.. See Recrawl Policy below.
            role: (Required) The IAM role friendly name (including path without leading slash), or ARN of an IAM role, used by the crawler to access other resources.
            s3_target: (Optional) List nested Amazon S3 target arguments. See S3 Target below.
            sample_size: '- (Optional) Sets the number of files in each leaf folder to be crawled when crawling sample files in a dataset. If not set, all the files are crawled. A valid value is an integer between 1 and 249.'
            scan_all: '- (Optional) Indicates whether to scan all the records, or to sample rows from the table. Scanning all the records can take a long time when the table is not a high throughput table.  defaults to true.'
            scan_rate: '- (Optional) The percentage of the configured read capacity units to use by the AWS Glue crawler. The valid values are null or a value between 0.1 to 1.5.'
            schedule: '(Optional) A cron expression used to specify the schedule. For more information, see Time-Based Schedules for Jobs and Crawlers. For example, to run something every day at 12:15 UTC, you would specify: cron(15 12 * * ? *).'
            schema_change_policy: (Optional) Policy for the crawler's update and deletion behavior. See Schema Change Policy below.
            security_configuration: (Optional) The name of Security Configuration to be used by the crawler
            table_prefix: (Optional) The table prefix used for catalog tables that are created.
            tables: '- (Required) A list of catalog tables to be synchronized.'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            update_behavior: '- (Optional) The update behavior when the crawler finds a changed schema. Valid values: LOG or UPDATE_IN_DATABASE. Defaults to UPDATE_IN_DATABASE.'
            write_manifest: '- (Required) Specifies whether to write the manifest files to the Delta table path.'
        importStatements: []
    aws_glue_data_catalog_encryption_settings:
        subCategory: Glue
        description: Provides a Glue Data Catalog Encryption Settings resource.
        name: aws_glue_data_catalog_encryption_settings
        title: aws_glue_data_catalog_encryption_settings
        examples:
            - name: example
              manifest: |-
                {
                  "data_catalog_encryption_settings": [
                    {
                      "connection_password_encryption": [
                        {
                          "aws_kms_key_id": "${aws_kms_key.test.arn}",
                          "return_connection_password_encrypted": true
                        }
                      ],
                      "encryption_at_rest": [
                        {
                          "catalog_encryption_mode": "SSE-KMS",
                          "sse_aws_kms_key_id": "${aws_kms_key.test.arn}"
                        }
                      ]
                    }
                  ]
                }
              references:
                data_catalog_encryption_settings.connection_password_encryption.aws_kms_key_id: aws_kms_key.test.arn
                data_catalog_encryption_settings.encryption_at_rest.sse_aws_kms_key_id: aws_kms_key.test.arn
        argumentDocs:
            catalog_id: – (Optional) The ID of the Data Catalog to set the security configuration for. If none is provided, the AWS account ID is used by default.
            data_catalog_encryption_settings: – (Required) The security configuration to set. see Data Catalog Encryption Settings.
            data_catalog_encryption_settings.connection_password_encryption: '- (Required) When connection password protection is enabled, the Data Catalog uses a customer-provided key to encrypt the password as part of CreateConnection or UpdateConnection and store it in the ENCRYPTED_PASSWORD field in the connection properties. You can enable catalog encryption or only password encryption. see Connection Password Encryption.'
            data_catalog_encryption_settings.connection_password_encryption.aws_kms_key_id: '- (Optional) A KMS key ARN that is used to encrypt the connection password. If connection password protection is enabled, the caller of CreateConnection and UpdateConnection needs at least kms:Encrypt permission on the specified AWS KMS key, to encrypt passwords before storing them in the Data Catalog.'
            data_catalog_encryption_settings.connection_password_encryption.return_connection_password_encrypted: '- (Required) When set to true, passwords remain encrypted in the responses of GetConnection and GetConnections. This encryption takes effect independently of the catalog encryption.'
            data_catalog_encryption_settings.encryption_at_rest: '- (Required) Specifies the encryption-at-rest configuration for the Data Catalog. see Encryption At Rest.'
            data_catalog_encryption_settings.encryption_at_rest.catalog_encryption_mode: '- (Required) The encryption-at-rest mode for encrypting Data Catalog data. Valid values are DISABLED and SSE-KMS.'
            data_catalog_encryption_settings.encryption_at_rest.sse_aws_kms_key_id: '- (Optional) The ARN of the AWS KMS key to use for encryption at rest.'
            id: '- The ID of the Data Catalog to set the security configuration for.'
        importStatements: []
    aws_glue_dev_endpoint:
        subCategory: Glue
        description: Provides a Glue Development Endpoint resource.
        name: aws_glue_dev_endpoint
        title: aws_glue_dev_endpoint
        examples:
            - name: example
              manifest: |-
                {
                  "name": "foo",
                  "role_arn": "${aws_iam_role.example.arn}"
                }
              references:
                role_arn: aws_iam_role.example.arn
              dependencies:
                aws_iam_role.example: |-
                    {
                      "assume_role_policy": "${data.aws_iam_policy_document.example.json}",
                      "name": "AWSGlueServiceRole-foo"
                    }
                aws_iam_role_policy_attachment.example-AWSGlueServiceRole: |-
                    {
                      "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSGlueServiceRole",
                      "role": "${aws_iam_role.example.name}"
                    }
        argumentDocs:
            arguments: '- (Optional) A map of arguments used to configure the endpoint.'
            arn: '- The ARN of the endpoint.'
            availability_zone: '- The AWS availability zone where this endpoint is located.'
            extra_jars_s3_path: '- (Optional) Path to one or more Java Jars in an S3 bucket that should be loaded in this endpoint.'
            extra_python_libs_s3_path: '- (Optional) Path(s) to one or more Python libraries in an S3 bucket that should be loaded in this endpoint. Multiple values must be complete paths separated by a comma.'
            failure_reason: '- The reason for a current failure in this endpoint.'
            glue_version: '- (Optional) -  Specifies the versions of Python and Apache Spark to use. Defaults to AWS Glue version 0.9.'
            name: '- (Required) The name of this endpoint. It must be unique in your account.'
            number_of_nodes: '- (Optional) The number of AWS Glue Data Processing Units (DPUs) to allocate to this endpoint. Conflicts with worker_type.'
            number_of_workers: '- (Optional) The number of workers of a defined worker type that are allocated to this endpoint. This field is available only when you choose worker type G.1X or G.2X.'
            private_address: '- A private IP address to access the endpoint within a VPC, if this endpoint is created within one.'
            public_address: '- The public IP address used by this endpoint. The PublicAddress field is present only when you create a non-VPC endpoint.'
            public_key: '- (Optional) The public key to be used by this endpoint for authentication.'
            public_keys: '- (Optional) A list of public keys to be used by this endpoint for authentication.'
            role_arn: '- (Required) The IAM role for this endpoint.'
            security_configuration: '- (Optional) The name of the Security Configuration structure to be used with this endpoint.'
            security_group_ids: '- (Optional) Security group IDs for the security groups to be used by this endpoint.'
            status: '- The current status of this endpoint.'
            subnet_id: '- (Optional) The subnet ID for the new endpoint to use.'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            vpc_id: '- he ID of the VPC used by this endpoint.'
            worker_type: '- (Optional) The type of predefined worker that is allocated to this endpoint. Accepts a value of Standard, G.1X, or G.2X.'
            yarn_endpoint_address: '- The YARN endpoint address used by this endpoint.'
            zeppelin_remote_spark_interpreter_port: '- The Apache Zeppelin port for the remote Apache Spark interpreter.'
        importStatements: []
    aws_glue_job:
        subCategory: Glue
        description: Provides an Glue Job resource.
        name: aws_glue_job
        title: aws_glue_job
        examples:
            - name: example
              manifest: |-
                {
                  "command": [
                    {
                      "script_location": "s3://${aws_s3_bucket.example.bucket}/example.py"
                    }
                  ],
                  "name": "example",
                  "role_arn": "${aws_iam_role.example.arn}"
                }
              references:
                role_arn: aws_iam_role.example.arn
            - name: example
              manifest: |-
                {
                  "command": [
                    {
                      "script_location": "s3://${aws_s3_bucket.example.bucket}/example.scala"
                    }
                  ],
                  "default_arguments": {
                    "--job-language": "scala"
                  },
                  "name": "example",
                  "role_arn": "${aws_iam_role.example.arn}"
                }
              references:
                role_arn: aws_iam_role.example.arn
            - name: example
              manifest: |-
                {
                  "command": [
                    {
                      "name": "gluestreaming",
                      "script_location": "s3://${aws_s3_bucket.example.bucket}/example.script"
                    }
                  ],
                  "name": "example streaming job",
                  "role_arn": "${aws_iam_role.example.arn}"
                }
              references:
                role_arn: aws_iam_role.example.arn
            - name: example
              manifest: |-
                {
                  "default_arguments": {
                    "--continuous-log-logGroup": "${aws_cloudwatch_log_group.example.name}",
                    "--enable-continuous-cloudwatch-log": "true",
                    "--enable-continuous-log-filter": "true",
                    "--enable-metrics": ""
                  }
                }
              dependencies:
                aws_cloudwatch_log_group.example: |-
                    {
                      "name": "example",
                      "retention_in_days": 14
                    }
        argumentDocs:
            arn: '- Amazon Resource Name (ARN) of Glue Job'
            command: – (Required) The command of the job. Defined below.
            connections: – (Optional) The list of connections used for this job.
            default_arguments: – (Optional) The map of default arguments for this job. You can specify arguments here that your own job-execution script consumes, as well as arguments that AWS Glue itself consumes. For information about how to specify and consume your own Job arguments, see the Calling AWS Glue APIs in Python topic in the developer guide. For information about the key-value pairs that AWS Glue consumes to set up your job, see the Special Parameters Used by AWS Glue topic in the developer guide.
            description: – (Optional) Description of the job.
            execution_property: – (Optional) Execution property of the job. Defined below.
            glue_version: '- (Optional) The version of glue to use, for example "1.0". For information about available versions, see the AWS Glue Release Notes.'
            id: '- Job name'
            max_capacity: – (Optional) The maximum number of AWS Glue data processing units (DPUs) that can be allocated when this job runs. Required when pythonshell is set, accept either 0.0625 or 1.0. Use number_of_workers and worker_type arguments instead with glue_version 2.0 and above.
            max_concurrent_runs: '- (Optional) The maximum number of concurrent runs allowed for a job. The default is 1.'
            max_retries: – (Optional) The maximum number of times to retry this job if it fails.
            name: – (Required) The name you assign to this job. It must be unique in your account.
            non_overridable_arguments: – (Optional) Non-overridable arguments for this job, specified as name-value pairs.
            notification_property: '- (Optional) Notification property of the job. Defined below.'
            notify_delay_after: '- (Optional) After a job run starts, the number of minutes to wait before sending a job run delay notification.'
            number_of_workers: '- (Optional) The number of workers of a defined workerType that are allocated when a job runs.'
            python_version: '- (Optional) The Python version being used to execute a Python shell job. Allowed values are 2 or 3.'
            role_arn: – (Required) The ARN of the IAM role associated with this job.
            script_location: '- (Required) Specifies the S3 path to a script that executes a job.'
            security_configuration: '- (Optional) The name of the Security Configuration to be associated with the job.'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            timeout: – (Optional) The job timeout in minutes. The default is 2880 minutes (48 hours) for glueetl and pythonshell jobs, and null (unlimted) for gluestreaming jobs.
            worker_type: '- (Optional) The type of predefined worker that is allocated when a job runs. Accepts a value of Standard, G.1X, or G.2X.'
        importStatements: []
    aws_glue_ml_transform:
        subCategory: Glue
        description: Provides a Glue ML Transform resource.
        name: aws_glue_ml_transform
        title: aws_glue_ml_transform
        examples:
            - name: test
              manifest: |-
                {
                  "depends_on": [
                    "${aws_iam_role_policy_attachment.test}"
                  ],
                  "input_record_tables": [
                    {
                      "database_name": "${aws_glue_catalog_table.test.database_name}",
                      "table_name": "${aws_glue_catalog_table.test.name}"
                    }
                  ],
                  "name": "example",
                  "parameters": [
                    {
                      "find_matches_parameters": [
                        {
                          "primary_key_column_name": "my_column_1"
                        }
                      ],
                      "transform_type": "FIND_MATCHES"
                    }
                  ],
                  "role_arn": "${aws_iam_role.test.arn}"
                }
              references:
                input_record_tables.database_name: aws_glue_catalog_table.test.database_name
                input_record_tables.table_name: aws_glue_catalog_table.test.name
                role_arn: aws_iam_role.test.arn
              dependencies:
                aws_glue_catalog_database.test: |-
                    {
                      "name": "example"
                    }
                aws_glue_catalog_table.test: |-
                    {
                      "database_name": "${aws_glue_catalog_database.test.name}",
                      "name": "example",
                      "owner": "my_owner",
                      "parameters": {
                        "param1": "param1_val"
                      },
                      "partition_keys": [
                        {
                          "comment": "my_column_1_comment",
                          "name": "my_column_1",
                          "type": "int"
                        },
                        {
                          "comment": "my_column_2_comment",
                          "name": "my_column_2",
                          "type": "string"
                        }
                      ],
                      "retention": 1,
                      "storage_descriptor": [
                        {
                          "bucket_columns": [
                            "bucket_column_1"
                          ],
                          "columns": [
                            {
                              "comment": "my_column1_comment",
                              "name": "my_column_1",
                              "type": "int"
                            },
                            {
                              "comment": "my_column2_comment",
                              "name": "my_column_2",
                              "type": "string"
                            }
                          ],
                          "compressed": false,
                          "input_format": "SequenceFileInputFormat",
                          "location": "my_location",
                          "number_of_buckets": 1,
                          "output_format": "SequenceFileInputFormat",
                          "parameters": {
                            "param1": "param1_val"
                          },
                          "ser_de_info": [
                            {
                              "name": "ser_de_name",
                              "parameters": {
                                "param1": "param_val_1"
                              },
                              "serialization_library": "org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe"
                            }
                          ],
                          "skewed_info": [
                            {
                              "skewed_column_names": [
                                "my_column_1"
                              ],
                              "skewed_column_value_location_maps": {
                                "my_column_1": "my_column_1_val_loc_map"
                              },
                              "skewed_column_values": [
                                "skewed_val_1"
                              ]
                            }
                          ],
                          "sort_columns": [
                            {
                              "column": "my_column_1",
                              "sort_order": 1
                            }
                          ],
                          "stored_as_sub_directories": false
                        }
                      ],
                      "table_type": "VIRTUAL_VIEW",
                      "view_expanded_text": "view_expanded_text_1",
                      "view_original_text": "view_original_text_1"
                    }
        argumentDocs:
            arn: '- Amazon Resource Name (ARN) of Glue ML Transform.'
            description: – (Optional) Description of the ML Transform.
            glue_version: '- (Optional) The version of glue to use, for example "1.0". For information about available versions, see the AWS Glue Release Notes.'
            id: '- Glue ML Transform ID.'
            input_record_tables: '- (Required)  A list of AWS Glue table definitions used by the transform. see Input Record Tables.'
            input_record_tables.catalog_id: '- (Optional) A unique identifier for the AWS Glue Data Catalog.'
            input_record_tables.connection_name: '- (Optional) The name of the connection to the AWS Glue Data Catalog.'
            input_record_tables.database_name: '- (Required) A database name in the AWS Glue Data Catalog.'
            input_record_tables.table_name: '- (Required) A table name in the AWS Glue Data Catalog.'
            label_count: '- The number of labels available for this transform.'
            max_capacity: – (Optional) The number of AWS Glue data processing units (DPUs) that are allocated to task runs for this transform. You can allocate from 2 to 100 DPUs; the default is 10. max_capacity is a mutually exclusive option with number_of_workers and worker_type.
            max_retries: – (Optional) The maximum number of times to retry this ML Transform if it fails.
            name: – (Required) The name you assign to this ML Transform. It must be unique in your account.
            number_of_workers: '- (Optional) The number of workers of a defined worker_type that are allocated when an ML Transform runs. Required with worker_type.'
            parameters: '- (Required) The algorithmic parameters that are specific to the transform type used. Conditionally dependent on the transform type. see Parameters.'
            parameters.find_matches_parameters: '- (Required) The parameters for the find matches algorithm. see Find Matches Parameters.'
            parameters.find_matches_parameters.accuracy_cost_trade_off: '- (Optional) The value that is selected when tuning your transform for a balance between accuracy and cost.'
            parameters.find_matches_parameters.enforce_provided_labels: '- (Optional) The value to switch on or off to force the output to match the provided labels from users.'
            parameters.find_matches_parameters.precision_recall_trade_off: '- (Optional) The value selected when tuning your transform for a balance between precision and recall.'
            parameters.find_matches_parameters.primary_key_column_name: '- (Optional) The name of a column that uniquely identifies rows in the source table.'
            parameters.transform_type: '- (Required) The type of machine learning transform. For information about the types of machine learning transforms, see Creating Machine Learning Transforms.'
            role_arn: – (Required) The ARN of the IAM role associated with this ML Transform.
            schema: '- The object that represents the schema that this transform accepts. see Schema.'
            schema.data_type: '- The type of data in the column.'
            schema.name: '- The name of the column.'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            timeout: – (Optional) The ML Transform timeout in minutes. The default is 2880 minutes (48 hours).
            worker_type: '- (Optional) The type of predefined worker that is allocated when an ML Transform runs. Accepts a value of Standard, G.1X, or G.2X. Required with number_of_workers.'
        importStatements: []
    aws_glue_partition:
        subCategory: Glue
        description: Provides a Glue Partition.
        name: aws_glue_partition
        title: aws_glue_partition
        examples:
            - name: example
              manifest: |-
                {
                  "database_name": "some-database",
                  "table_name": "some-table",
                  "values": [
                    "some-value"
                  ]
                }
        argumentDocs:
            catalog_id: '- (Optional) ID of the Glue Catalog and database to create the table in. If omitted, this defaults to the AWS Account ID plus the database name.'
            comment: '- (Optional) Free-form text comment.'
            creation_time: '- The time at which the partition was created.'
            database_name: '- (Required) Name of the metadata database where the table metadata resides. For Hive compatibility, this must be all lowercase.'
            id: '- partition id.'
            last_accessed_time: '- The last time at which the partition was accessed.'
            last_analyzed_time: '- The last time at which column statistics were computed for this partition.'
            name: '- (Required) The name of the Column.'
            parameters: '- (Optional) Properties associated with this table, as a list of key-value pairs.'
            partition_values: '- (Required) The values that define the partition.'
            storage_descriptor: '- (Optional) A storage descriptor object containing information about the physical storage of this table. You can refer to the Glue Developer Guide for a full explanation of this object.'
            storage_descriptor.bucket_columns: '- (Optional) A list of reducer grouping columns, clustering columns, and bucketing columns in the table.'
            storage_descriptor.columns: '- (Optional) A list of the Columns in the table.'
            storage_descriptor.compressed: '- (Optional) True if the data in the table is compressed, or False if not.'
            storage_descriptor.input_format: '- (Optional) The input format: SequenceFileInputFormat (binary), or TextInputFormat, or a custom format.'
            storage_descriptor.location: '- (Optional) The physical location of the table. By default this takes the form of the warehouse location, followed by the database location in the warehouse, followed by the table name.'
            storage_descriptor.number_of_buckets: '- (Optional) Must be specified if the table contains any dimension columns.'
            storage_descriptor.output_format: '- (Optional) The output format: SequenceFileOutputFormat (binary), or IgnoreKeyTextOutputFormat, or a custom format.'
            storage_descriptor.parameters: '- (Optional) User-supplied properties in key-value form.'
            storage_descriptor.ser_de_info: '- (Optional) Serialization/deserialization (SerDe) information.'
            storage_descriptor.ser_de_info.name: '- (Optional) Name of the SerDe.'
            storage_descriptor.ser_de_info.parameters: '- (Optional) A map of initialization parameters for the SerDe, in key-value form.'
            storage_descriptor.ser_de_info.serialization_library: '- (Optional) Usually the class that implements the SerDe. An example is: org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe.'
            storage_descriptor.skewed_info: '- (Optional) Information about values that appear very frequently in a column (skewed values).'
            storage_descriptor.skewed_info.skewed_column_names: '- (Optional) A list of names of columns that contain skewed values.'
            storage_descriptor.skewed_info.skewed_column_value_location_maps: '- (Optional) A list of values that appear so frequently as to be considered skewed.'
            storage_descriptor.skewed_info.skewed_column_values: '- (Optional) A map of skewed values to the columns that contain them.'
            storage_descriptor.sort_columns: '- (Optional) A list of Order objects specifying the sort order of each bucket in the table.'
            storage_descriptor.sort_columns.column: '- (Required) The name of the column.'
            storage_descriptor.sort_columns.sort_order: '- (Required) Indicates that the column is sorted in ascending order (== 1), or in descending order (==0).'
            storage_descriptor.stored_as_sub_directories: '- (Optional) True if the table data is stored in subdirectories, or False if not.'
            type: '- (Optional) The datatype of data in the Column.'
        importStatements: []
    aws_glue_partition_index:
        subCategory: Glue
        description: Provides a Glue Partition Index.
        name: aws_glue_partition_index
        title: aws_glue_partition_index
        examples:
            - name: example
              manifest: |-
                {
                  "database_name": "${aws_glue_catalog_database.example.name}",
                  "partition_index": [
                    {
                      "index_name": "example",
                      "keys": [
                        "my_column_1",
                        "my_column_2"
                      ]
                    }
                  ],
                  "table_name": "${aws_glue_catalog_table.example.name}"
                }
              references:
                database_name: aws_glue_catalog_database.example.name
                table_name: aws_glue_catalog_table.example.name
              dependencies:
                aws_glue_catalog_database.example: |-
                    {
                      "name": "example"
                    }
                aws_glue_catalog_table.example: |-
                    {
                      "database_name": "${aws_glue_catalog_database.example.name}",
                      "name": "example",
                      "owner": "my_owner",
                      "parameters": {
                        "param1": "param1_val"
                      },
                      "partition_keys": [
                        {
                          "comment": "my_column_1_comment",
                          "name": "my_column_1",
                          "type": "int"
                        },
                        {
                          "comment": "my_column_2_comment",
                          "name": "my_column_2",
                          "type": "string"
                        }
                      ],
                      "retention": 1,
                      "storage_descriptor": [
                        {
                          "bucket_columns": [
                            "bucket_column_1"
                          ],
                          "columns": [
                            {
                              "comment": "my_column1_comment",
                              "name": "my_column_1",
                              "type": "int"
                            },
                            {
                              "comment": "my_column2_comment",
                              "name": "my_column_2",
                              "type": "string"
                            }
                          ],
                          "compressed": false,
                          "input_format": "SequenceFileInputFormat",
                          "location": "my_location",
                          "number_of_buckets": 1,
                          "output_format": "SequenceFileInputFormat",
                          "parameters": {
                            "param1": "param1_val"
                          },
                          "ser_de_info": [
                            {
                              "name": "ser_de_name",
                              "parameters": {
                                "param1": "param_val_1"
                              },
                              "serialization_library": "org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe"
                            }
                          ],
                          "skewed_info": [
                            {
                              "skewed_column_names": [
                                "my_column_1"
                              ],
                              "skewed_column_value_location_maps": {
                                "my_column_1": "my_column_1_val_loc_map"
                              },
                              "skewed_column_values": [
                                "skewed_val_1"
                              ]
                            }
                          ],
                          "sort_columns": [
                            {
                              "column": "my_column_1",
                              "sort_order": 1
                            }
                          ],
                          "stored_as_sub_directories": false
                        }
                      ],
                      "table_type": "VIRTUAL_VIEW",
                      "view_expanded_text": "view_expanded_text_1",
                      "view_original_text": "view_original_text_1"
                    }
        argumentDocs:
            catalog_id: '- (Optional) The catalog ID where the table resides.'
            database_name: '- (Required) Name of the metadata database where the table metadata resides. For Hive compatibility, this must be all lowercase.'
            id: '- Catalog ID, Database name, table name, and index name.'
            partition_index: '- (Required) Configuration block for a partition index. See partition_index below.'
            partition_index.index_name: '- (Required) Name of the partition index.'
            partition_index.keys: '- (Required) Keys for the partition index.'
            table_name: '- (Required) Name of the table. For Hive compatibility, this must be entirely lowercase.'
            timeouts.create: '- (Defaults to 10 mins) Used when creating the partition index.'
            timeouts.delete: '- (Defaults to 10 mins) Used when deleting the partition index.'
        importStatements: []
    aws_glue_registry:
        subCategory: Glue
        description: Provides a Glue Registry resource.
        name: aws_glue_registry
        title: aws_glue_registry
        examples:
            - name: example
              manifest: |-
                {
                  "registry_name": "example"
                }
        argumentDocs:
            arn: '- Amazon Resource Name (ARN) of Glue Registry.'
            description: – (Optional) A description of the registry.
            id: '- Amazon Resource Name (ARN) of Glue Registry.'
            registry_name: – (Required) The Name of the registry.
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_glue_resource_policy:
        subCategory: Glue
        description: Provides a resource to configure the aws glue resource policy.
        name: aws_glue_resource_policy
        title: aws_glue_resource_policy
        examples:
            - name: example
              manifest: |-
                {
                  "policy": "${data.aws_iam_policy_document.glue-example-policy.json}"
                }
              references:
                policy: data.aws_iam_policy_document.glue-example-policy.json
        argumentDocs:
            enable_hybrid: '- (Optional) Indicates that you are using both methods to grant cross-account. Valid values are TRUE and FALSE. Note the terraform will not perform drift detetction on this field as its not return on read.'
            policy: – (Required) The policy to be applied to the aws glue data catalog.
        importStatements: []
    aws_glue_schema:
        subCategory: Glue
        description: Provides a Glue Schema resource.
        name: aws_glue_schema
        title: aws_glue_schema
        examples:
            - name: example
              manifest: |-
                {
                  "compatibility": "NONE",
                  "data_format": "AVRO",
                  "registry_arn": "${aws_glue_registry.test.arn}",
                  "schema_definition": "{\"type\": \"record\", \"name\": \"r1\", \"fields\": [ {\"name\": \"f1\", \"type\": \"int\"}, {\"name\": \"f2\", \"type\": \"string\"} ]}",
                  "schema_name": "example"
                }
              references:
                registry_arn: aws_glue_registry.test.arn
        argumentDocs:
            arn: '- Amazon Resource Name (ARN) of the schema.'
            compatibility: '- (Required) The compatibility mode of the schema. Values values are: NONE, DISABLED, BACKWARD, BACKWARD_ALL, FORWARD, FORWARD_ALL, FULL, and FULL_ALL.'
            data_format: '- (Required) The data format of the schema definition. Valid values are AVRO, JSON and PROTOBUF.'
            description: – (Optional) A description of the schema.
            id: '- Amazon Resource Name (ARN) of the schema.'
            latest_schema_version: '- The latest version of the schema associated with the returned schema definition.'
            next_schema_version: '- The next version of the schema associated with the returned schema definition.'
            registry_arn: '- (Required) The ARN of the Glue Registry to create the schema in.'
            registry_name: '- The name of the Glue Registry.'
            schema_checkpoint: '- The version number of the checkpoint (the last time the compatibility mode was changed).'
            schema_definition: '- (Required) The schema definition using the data_format setting for schema_name.'
            schema_name: – (Required) The Name of the schema.
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_glue_security_configuration:
        subCategory: Glue
        description: Manages a Glue Security Configuration
        name: aws_glue_security_configuration
        title: aws_glue_security_configuration
        examples:
            - name: example
              manifest: |-
                {
                  "encryption_configuration": [
                    {
                      "cloudwatch_encryption": [
                        {
                          "cloudwatch_encryption_mode": "DISABLED"
                        }
                      ],
                      "job_bookmarks_encryption": [
                        {
                          "job_bookmarks_encryption_mode": "DISABLED"
                        }
                      ],
                      "s3_encryption": [
                        {
                          "kms_key_arn": "${data.aws_kms_key.example.arn}",
                          "s3_encryption_mode": "SSE-KMS"
                        }
                      ]
                    }
                  ],
                  "name": "example"
                }
              references:
                encryption_configuration.s3_encryption.kms_key_arn: data.aws_kms_key.example.arn
        argumentDocs:
            'cloudwatch_encryption ': '- (Required) A cloudwatch_encryption  block as described below, which contains encryption configuration for CloudWatch.'
            cloudwatch_encryption_mode: '- (Optional) Encryption mode to use for CloudWatch data. Valid values: DISABLED, SSE-KMS. Default value: DISABLED.'
            encryption_configuration: – (Required) Configuration block containing encryption configuration. Detailed below.
            id: '- Glue security configuration name'
            'job_bookmarks_encryption ': '- (Required) A job_bookmarks_encryption  block as described below, which contains encryption configuration for job bookmarks.'
            job_bookmarks_encryption_mode: '- (Optional) Encryption mode to use for job bookmarks data. Valid values: CSE-KMS, DISABLED. Default value: DISABLED.'
            kms_key_arn: '- (Optional) Amazon Resource Name (ARN) of the KMS key to be used to encrypt the data.'
            name: – (Required) Name of the security configuration.
            s3_encryption: '- (Required) A s3_encryption  block as described below, which contains encryption configuration for S3 data.'
            s3_encryption_mode: '- (Optional) Encryption mode to use for S3 data. Valid values: DISABLED, SSE-KMS, SSE-S3. Default value: DISABLED.'
        importStatements: []
    aws_glue_trigger:
        subCategory: Glue
        description: Manages a Glue Trigger resource.
        name: aws_glue_trigger
        title: aws_glue_trigger
        examples:
            - name: example
              manifest: |-
                {
                  "actions": [
                    {
                      "job_name": "${aws_glue_job.example1.name}"
                    }
                  ],
                  "name": "example",
                  "predicate": [
                    {
                      "conditions": [
                        {
                          "job_name": "${aws_glue_job.example2.name}",
                          "state": "SUCCEEDED"
                        }
                      ]
                    }
                  ],
                  "type": "CONDITIONAL"
                }
              references:
                actions.job_name: aws_glue_job.example1.name
                predicate.conditions.job_name: aws_glue_job.example2.name
            - name: example
              manifest: |-
                {
                  "actions": [
                    {
                      "job_name": "${aws_glue_job.example.name}"
                    }
                  ],
                  "name": "example",
                  "type": "ON_DEMAND"
                }
              references:
                actions.job_name: aws_glue_job.example.name
            - name: example
              manifest: |-
                {
                  "actions": [
                    {
                      "job_name": "${aws_glue_job.example.name}"
                    }
                  ],
                  "name": "example",
                  "schedule": "cron(15 12 * * ? *)",
                  "type": "SCHEDULED"
                }
              references:
                actions.job_name: aws_glue_job.example.name
            - name: example
              manifest: |-
                {
                  "actions": [
                    {
                      "crawler_name": "${aws_glue_crawler.example1.name}"
                    }
                  ],
                  "name": "example",
                  "predicate": [
                    {
                      "conditions": [
                        {
                          "job_name": "${aws_glue_job.example2.name}",
                          "state": "SUCCEEDED"
                        }
                      ]
                    }
                  ],
                  "type": "CONDITIONAL"
                }
              references:
                actions.crawler_name: aws_glue_crawler.example1.name
                predicate.conditions.job_name: aws_glue_job.example2.name
            - name: example
              manifest: |-
                {
                  "actions": [
                    {
                      "job_name": "${aws_glue_job.example1.name}"
                    }
                  ],
                  "name": "example",
                  "predicate": [
                    {
                      "conditions": [
                        {
                          "crawl_state": "SUCCEEDED",
                          "crawler_name": "${aws_glue_crawler.example2.name}"
                        }
                      ]
                    }
                  ],
                  "type": "CONDITIONAL"
                }
              references:
                actions.job_name: aws_glue_job.example1.name
                predicate.conditions.crawler_name: aws_glue_crawler.example2.name
        argumentDocs:
            actions: – (Required) List of actions initiated by this trigger when it fires. See Actions Below.
            arguments: '- (Optional) Arguments to be passed to the job. You can specify arguments here that your own job-execution script consumes, as well as arguments that AWS Glue itself consumes.'
            arn: '- Amazon Resource Name (ARN) of Glue Trigger'
            batch_size: '- (Required)Number of events that must be received from Amazon EventBridge before EventBridge  event trigger fires.'
            batch_window: '- (Optional) Window of time in seconds after which EventBridge event trigger fires. Window starts when first event is received. Default value is 900.'
            conditions: '- (Required) A list of the conditions that determine when the trigger will fire. See Conditions.'
            crawl_state: '- (Optional) The condition crawl state. Currently, the values supported are RUNNING, SUCCEEDED, CANCELLED, and FAILED. If this is specified, crawler_name must also be specified. Conflicts with state.'
            crawler_name: '- (Optional) The name of the crawler to be executed. Conflicts with job_name.'
            create: '- (Default 5m) How long to wait for a trigger to be created.'
            delete: '- (Default 5m) How long to wait for a trigger to be deleted.'
            description: – (Optional) A description of the new trigger.
            enabled: – (Optional) Start the trigger. Defaults to true.
            event_batching_condition: '- (Optional) Batch condition that must be met (specified number of events received or batch time window expired) before EventBridge event trigger fires. See Event Batching Condition.'
            id: '- Trigger name'
            job_name: '- (Optional) The name of a job to be executed. Conflicts with crawler_name.'
            logical: '- (Optional) How to handle multiple conditions. Defaults to AND. Valid values are AND or ANY.'
            logical_operator: '- (Optional) A logical operator. Defaults to EQUALS.'
            name: – (Required) The name of the trigger.
            notification_property: '- (Optional) Specifies configuration properties of a job run notification. See Notification Property details below.'
            notify_delay_after: '- (Optional) After a job run starts, the number of minutes to wait before sending a job run delay notification.'
            predicate: – (Optional) A predicate to specify when the new trigger should fire. Required when trigger type is CONDITIONAL. See Predicate Below.
            schedule: – (Optional) A cron expression used to specify the schedule. Time-Based Schedules for Jobs and Crawlers
            security_configuration: '- (Optional) The name of the Security Configuration structure to be used with this action.'
            start_on_creation: – (Optional) Set to true to start SCHEDULED and CONDITIONAL triggers when created. True is not supported for ON_DEMAND triggers.
            state: '- (Optional) The condition job state. Currently, the values supported are SUCCEEDED, STOPPED, TIMEOUT and FAILED. If this is specified, job_name must also be specified. Conflicts with crawler_state.'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            timeout: '- (Optional) The job run timeout in minutes. It overrides the timeout value of the job.'
            type: – (Required) The type of trigger. Valid values are CONDITIONAL, ON_DEMAND, and SCHEDULED.
            workflow_name: '- (Optional) A workflow to which the trigger should be associated to. Every workflow graph (DAG) needs a starting trigger (ON_DEMAND or SCHEDULED type) and can contain multiple additional CONDITIONAL triggers.'
        importStatements: []
    aws_glue_user_defined_function:
        subCategory: Glue
        description: Provides a Glue User Defined Function.
        name: aws_glue_user_defined_function
        title: aws_glue_user_defined_function
        examples:
            - name: example
              manifest: |-
                {
                  "catalog_id": "${aws_glue_catalog_database.example.catalog_id}",
                  "class_name": "class",
                  "database_name": "${aws_glue_catalog_database.example.name}",
                  "name": "my_func",
                  "owner_name": "owner",
                  "owner_type": "GROUP",
                  "resource_uris": [
                    {
                      "resource_type": "ARCHIVE",
                      "uri": "uri"
                    }
                  ]
                }
              references:
                catalog_id: aws_glue_catalog_database.example.catalog_id
                database_name: aws_glue_catalog_database.example.name
              dependencies:
                aws_glue_catalog_database.example: |-
                    {
                      "name": "my_database"
                    }
        argumentDocs:
            arn: '- The ARN of the Glue User Defined Function.'
            catalog_id: '- (Optional) ID of the Glue Catalog to create the function in. If omitted, this defaults to the AWS Account ID.'
            class_name: '- (Required) The Java class that contains the function code.'
            create_time: '- The time at which the function was created.'
            database_name: '- (Required) The name of the Database to create the Function.'
            id: '- The id of the Glue User Defined Function.'
            name: '- (Required) The name of the function.'
            owner_name: '- (Required) The owner of the function.'
            owner_type: '- (Required) The owner type. can be one of USER, ROLE, and GROUP.'
            resource_type: '- (Required) The type of the resource. can be one of JAR, FILE, and ARCHIVE.'
            resource_uris: '- (Optional) The configuration block for Resource URIs. See resource uris below for more details.'
            uri: '- (Required) The URI for accessing the resource.'
        importStatements: []
    aws_glue_workflow:
        subCategory: Glue
        description: Provides a Glue Workflow resource.
        name: aws_glue_workflow
        title: aws_glue_workflow
        examples:
            - name: example
              manifest: |-
                {
                  "name": "example"
                }
              dependencies:
                aws_glue_trigger.example-inner: |-
                    {
                      "actions": [
                        {
                          "job_name": "another-example-job"
                        }
                      ],
                      "name": "trigger-inner",
                      "predicate": [
                        {
                          "conditions": [
                            {
                              "job_name": "example-job",
                              "state": "SUCCEEDED"
                            }
                          ]
                        }
                      ],
                      "type": "CONDITIONAL",
                      "workflow_name": "${aws_glue_workflow.example.name}"
                    }
                aws_glue_trigger.example-start: |-
                    {
                      "actions": [
                        {
                          "job_name": "example-job"
                        }
                      ],
                      "name": "trigger-start",
                      "type": "ON_DEMAND",
                      "workflow_name": "${aws_glue_workflow.example.name}"
                    }
        argumentDocs:
            arn: '- Amazon Resource Name (ARN) of Glue Workflow'
            default_run_properties: – (Optional) A map of default run properties for this workflow. These properties are passed to all jobs associated to the workflow.
            description: – (Optional) Description of the workflow.
            id: '- Workflow name'
            max_concurrent_runs: '- (Optional) Prevents exceeding the maximum number of concurrent runs of any of the component jobs. If you leave this parameter blank, there is no limit to the number of concurrent workflow runs.'
            name: – (Required) The name you assign to this workflow.
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_grafana_license_association:
        subCategory: Managed Grafana
        description: Provides an Amazon Managed Grafana workspace license association resource.
        name: aws_grafana_license_association
        title: aws_grafana_license_association
        examples:
            - name: example
              manifest: |-
                {
                  "license_type": "ENTERPRISE_FREE_TRIAL",
                  "workspace_id": "${aws_grafana_workspace.example.id}"
                }
              references:
                workspace_id: aws_grafana_workspace.example.id
              dependencies:
                aws_grafana_workspace.example: |-
                    {
                      "account_access_type": "CURRENT_ACCOUNT",
                      "authentication_providers": [
                        "SAML"
                      ],
                      "permission_type": "SERVICE_MANAGED",
                      "role_arn": "${aws_iam_role.assume.arn}"
                    }
                aws_iam_role.assume: |-
                    {
                      "assume_role_policy": "${jsonencode({\n    Version = \"2012-10-17\"\n    Statement = [\n      {\n        Action = \"sts:AssumeRole\"\n        Effect = \"Allow\"\n        Sid    = \"\"\n        Principal = {\n          Service = \"grafana.amazonaws.com\"\n        }\n      },\n    ]\n  })}",
                      "name": "grafana-assume"
                    }
        argumentDocs:
            free_trial_expiration: '- If license_type is set to ENTERPRISE_FREE_TRIAL, this is the expiration date of the free trial.'
            license_expiration: '- If license_type is set to ENTERPRISE, this is the expiration date of the enterprise license.'
            license_type: '- (Required) The type of license for the workspace license association. Valid values are ENTERPRISE and ENTERPRISE_FREE_TRIAL.'
            workspace_id: '- (Required) The workspace id.'
        importStatements: []
    aws_grafana_role_association:
        subCategory: Managed Grafana
        description: Provides an Amazon Managed Grafana workspace role association resource.
        name: aws_grafana_role_association
        title: aws_grafana_role_association
        examples:
            - name: example
              manifest: |-
                {
                  "role": "ADMIN",
                  "user_ids": [
                    "USER_ID_1",
                    "USER_ID_2"
                  ],
                  "workspace_id": "${aws_grafana_workspace.example.id}"
                }
              references:
                workspace_id: aws_grafana_workspace.example.id
              dependencies:
                aws_grafana_workspace.example: |-
                    {
                      "account_access_type": "CURRENT_ACCOUNT",
                      "authentication_providers": [
                        "SAML"
                      ],
                      "permission_type": "SERVICE_MANAGED",
                      "role_arn": "${aws_iam_role.assume.arn}"
                    }
                aws_iam_role.assume: |-
                    {
                      "assume_role_policy": "${jsonencode({\n    Version = \"2012-10-17\"\n    Statement = [\n      {\n        Action = \"sts:AssumeRole\"\n        Effect = \"Allow\"\n        Sid    = \"\"\n        Principal = {\n          Service = \"grafana.amazonaws.com\"\n        }\n      },\n    ]\n  })}",
                      "name": "grafana-assume"
                    }
        argumentDocs:
            group_ids: '- (Optional) The AWS SSO group ids to be assigned the role given in role.'
            role: '- (Required) The grafana role. Valid values can be found here.'
            user_ids: '- (Optional) The AWS SSO user ids to be assigned the role given in role.'
            workspace_id: '- (Required) The workspace id.'
        importStatements: []
    aws_grafana_workspace:
        subCategory: Managed Grafana
        description: Provides an Amazon Managed Grafana workspace resource.
        name: aws_grafana_workspace
        title: aws_grafana_workspace
        examples:
            - name: example
              manifest: |-
                {
                  "account_access_type": "CURRENT_ACCOUNT",
                  "authentication_providers": [
                    "SAML"
                  ],
                  "permission_type": "SERVICE_MANAGED",
                  "role_arn": "${aws_iam_role.assume.arn}"
                }
              references:
                role_arn: aws_iam_role.assume.arn
              dependencies:
                aws_iam_role.assume: |-
                    {
                      "assume_role_policy": "${jsonencode({\n    Version = \"2012-10-17\"\n    Statement = [\n      {\n        Action = \"sts:AssumeRole\"\n        Effect = \"Allow\"\n        Sid    = \"\"\n        Principal = {\n          Service = \"grafana.amazonaws.com\"\n        }\n      },\n    ]\n  })}",
                      "name": "grafana-assume"
                    }
        argumentDocs:
            account_access_type: '- (Required) The type of account access for the workspace. Valid values are CURRENT_ACCOUNT and ORGANIZATION. If ORGANIZATION is specified, then organizational_units must also be present.'
            arn: '- The Amazon Resource Name (ARN) of the Grafana workspace.'
            authentication_providers: '- (Required) The authentication providers for the workspace. Valid values are AWS_SSO, SAML, or both.'
            data_sources: '- (Optional) The data sources for the workspace. Valid values are AMAZON_OPENSEARCH_SERVICE, ATHENA, CLOUDWATCH, PROMETHEUS, REDSHIFT, SITEWISE, TIMESTREAM, XRAY'
            description: '- (Optional) The workspace description.'
            endpoint: '- The endpoint of the Grafana workspace.'
            grafana_version: '- The version of Grafana running on the workspace.'
            name: '- (Optional) The Grafana workspace name.'
            notification_destinations: '- (Optional) The notification destinations. If a data source is specified here, Amazon Managed Grafana will create IAM roles and permissions needed to use these destinations. Must be set to SNS.'
            organization_role_name: '- (Optional) The role name that the workspace uses to access resources through Amazon Organizations.'
            organizational_units: '- (Optional) The Amazon Organizations organizational units that the workspace is authorized to use data sources from.'
            permission_type: '- (Required) The permission type of the workspace. If SERVICE_MANAGED is specified, the IAM roles and IAM policy attachments are generated automatically. If CUSTOMER_MANAGED is specified, the IAM roles and IAM policy attachments will not be created.'
            role_arn: '- (Optional) The IAM role ARN that the workspace assumes.'
            stack_set_name: '- (Optional) The AWS CloudFormation stack set name that provisions IAM roles to be used by the workspace.'
            tags: '- (Optional) Key-value mapping of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_grafana_workspace_saml_configuration:
        subCategory: Managed Grafana
        description: Provides an Amazon Managed Grafana workspace SAML configuration resource.
        name: aws_grafana_workspace_saml_configuration
        title: aws_grafana_workspace_saml_configuration
        examples:
            - name: example
              manifest: |-
                {
                  "editor_role_values": [
                    "editor"
                  ],
                  "idp_metadata_url": "https://my_idp_metadata.url",
                  "workspace_id": "${aws_grafana_workspace.example.id}"
                }
              references:
                workspace_id: aws_grafana_workspace.example.id
              dependencies:
                aws_grafana_workspace.example: |-
                    {
                      "account_access_type": "CURRENT_ACCOUNT",
                      "authentication_providers": [
                        "SAML"
                      ],
                      "permission_type": "SERVICE_MANAGED",
                      "role_arn": "${aws_iam_role.assume.arn}"
                    }
                aws_iam_role.assume: |-
                    {
                      "assume_role_policy": "${jsonencode({\n    Version = \"2012-10-17\"\n    Statement = [\n      {\n        Action = \"sts:AssumeRole\"\n        Effect = \"Allow\"\n        Sid    = \"\"\n        Principal = {\n          Service = \"grafana.amazonaws.com\"\n        }\n      },\n    ]\n  })}",
                      "name": "grafana-assume"
                    }
        argumentDocs:
            admin_role_values: '- (Optional) The admin role values.'
            allowed_organizations: '- (Optional) The allowed organizations.'
            editor_role_values: '- (Required) The editor role values.'
            email_assertion: '- (Optional) The email assertion.'
            groups_assertion: '- (Optional) The groups assertion.'
            idp_metadata_url: '- (Optional) The IDP Metadata URL. Note that either idp_metadata_url or idp_metadata_xml (but not both) must be specified.'
            idp_metadata_xml: '- (Optional) The IDP Metadata XML. Note that either idp_metadata_url or idp_metadata_xml (but not both) must be specified.'
            login_assertion: '- (Optional) The login assertion.'
            login_validity_duration: '- (Optional) The login validity duration.'
            name_assertion: '- (Optional) The name assertion.'
            org_assertion: '- (Optional) The org assertion.'
            role_assertion: '- (Optional) The role assertion.'
            status: '- The status of the SAML configuration.'
            workspace_id: '- (Required) The workspace id.'
        importStatements: []
    aws_guardduty_detector:
        subCategory: GuardDuty
        description: Provides a resource to manage a GuardDuty detector
        name: aws_guardduty_detector
        title: aws_guardduty_detector
        examples:
            - name: MyDetector
              manifest: |-
                {
                  "datasources": [
                    {
                      "kubernetes": [
                        {
                          "audit_logs": [
                            {
                              "enable": false
                            }
                          ]
                        }
                      ],
                      "s3_logs": [
                        {
                          "enable": true
                        }
                      ]
                    }
                  ],
                  "enable": true
                }
        argumentDocs:
            account_id: '- The AWS account ID of the GuardDuty detector'
            arn: '- Amazon Resource Name (ARN) of the GuardDuty detector'
            datasources: '- (Optional) Describes which data sources will be enabled for the detector. See Data Sources below for more details.'
            datasources.kubernetes: |-
                - (Optional) Configures Kubernetes protection.
                See Kubernetes and Kubernetes Audit Logs below for more details.
            datasources.s3_logs: |-
                - (Optional) Configures S3 protection.
                See S3 Logs below for more details.
            datasources.s3_logs.enable: |-
                - (Required) If true, enables S3 protection.
                Defaults to true.
            enable: '- (Optional) Enable monitoring and feedback reporting. Setting to false is equivalent to "suspending" GuardDuty. Defaults to true.'
            finding_publishing_frequency: '- (Optional) Specifies the frequency of notifications sent for subsequent finding occurrences. If the detector is a GuardDuty member account, the value is determined by the GuardDuty primary account and cannot be modified, otherwise defaults to SIX_HOURS. For standalone and GuardDuty primary accounts, it must be configured in Terraform to enable drift detection. Valid values for standalone and primary accounts: FIFTEEN_MINUTES, ONE_HOUR, SIX_HOURS. See AWS Documentation for more information.'
            id: '- The ID of the GuardDuty detector'
            kubernetes.audit_logs: |-
                - (Required) Configures Kubernetes audit logs as a data source for Kubernetes protection.
                See Kubernetes Audit Logs below for more details.
            kubernetes.audit_logs.enable: |-
                - (Required) If true, enables Kubernetes audit logs as a data source for Kubernetes protection.
                Defaults to true.
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_guardduty_filter:
        subCategory: GuardDuty
        description: Provides a resource to manage a GuardDuty filter
        name: aws_guardduty_filter
        title: aws_guardduty_filter
        examples:
            - name: MyFilter
              manifest: |-
                {
                  "action": "ARCHIVE",
                  "detector_id": "${aws_guardduty_detector.example.id}",
                  "finding_criteria": [
                    {
                      "criterion": [
                        {
                          "equals": [
                            "eu-west-1"
                          ],
                          "field": "region"
                        },
                        {
                          "field": "service.additionalInfo.threatListName",
                          "not_equals": [
                            "some-threat",
                            "another-threat"
                          ]
                        },
                        {
                          "field": "updatedAt",
                          "greater_than": "2020-01-01T00:00:00Z",
                          "less_than": "2020-02-01T00:00:00Z"
                        },
                        {
                          "field": "severity",
                          "greater_than_or_equal": "4"
                        }
                      ]
                    }
                  ],
                  "name": "MyFilter",
                  "rank": 1
                }
              references:
                detector_id: aws_guardduty_detector.example.id
        argumentDocs:
            action: '- (Required) Specifies the action that is to be applied to the findings that match the filter. Can be one of ARCHIVE or NOOP.'
            arn: '- The ARN of the GuardDuty filter.'
            criterion.equals: '- (Optional) List of string values to be evaluated.'
            criterion.field: '- (Required) The name of the field to be evaluated. The full list of field names can be found in AWS documentation.'
            criterion.greater_than: '- (Optional) A value to be evaluated. Accepts either an integer or a date in RFC 3339 format.'
            criterion.greater_than_or_equal: '- (Optional) A value to be evaluated. Accepts either an integer or a date in RFC 3339 format.'
            criterion.less_than: '- (Optional) A value to be evaluated. Accepts either an integer or a date in RFC 3339 format.'
            criterion.less_than_or_equal: '- (Optional) A value to be evaluated. Accepts either an integer or a date in RFC 3339 format.'
            criterion.not_equals: '- (Optional) List of string values to be evaluated.'
            description: '- (Optional) Description of the filter.'
            detector_id: '- (Required) ID of a GuardDuty detector, attached to your account.'
            finding_criteria: (Required) - Represents the criteria to be used in the filter for querying findings. Contains one or more criterion blocks, documented below.
            id: '- A compound field, consisting of the ID of the GuardDuty detector and the name of the filter.'
            name: '- (Required) The name of your filter.'
            rank: '- (Required) Specifies the position of the filter in the list of current filters. Also specifies the order in which this filter is applied to the findings.'
            tags: (Optional) - The tags that you want to add to the Filter resource. A tag consists of a key and a value. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_guardduty_invite_accepter:
        subCategory: GuardDuty
        description: Provides a resource to accept a pending GuardDuty invite on creation, ensure the detector has the correct primary account on read, and disassociate with the primary account upon removal.
        name: aws_guardduty_invite_accepter
        title: aws_guardduty_invite_accepter
        examples:
            - name: member
              manifest: |-
                {
                  "depends_on": [
                    "${aws_guardduty_member.member}"
                  ],
                  "detector_id": "${aws_guardduty_detector.member.id}",
                  "master_account_id": "${aws_guardduty_detector.primary.account_id}",
                  "provider": "${aws.member}"
                }
              references:
                detector_id: aws_guardduty_detector.member.id
                master_account_id: aws_guardduty_detector.primary.account_id
                provider: aws.member
              dependencies:
                aws_guardduty_detector.member: |-
                    {
                      "provider": "${aws.member}"
                    }
                aws_guardduty_detector.primary: |-
                    {
                      "provider": "${aws.primary}"
                    }
                aws_guardduty_member.member: |-
                    {
                      "account_id": "${aws_guardduty_detector.member.account_id}",
                      "detector_id": "${aws_guardduty_detector.primary.id}",
                      "email": "required@example.com",
                      "invite": true,
                      "provider": "${aws.primary}"
                    }
        argumentDocs:
            create: '- (Default 1m) How long to wait for an invite to accept.'
            detector_id: '- (Required) The detector ID of the member GuardDuty account.'
            id: '- GuardDuty member detector ID'
            master_account_id: '- (Required) AWS account ID for primary account.'
        importStatements: []
    aws_guardduty_ipset':
        subCategory: GuardDuty
        description: Provides a resource to manage a GuardDuty IPSet
        name: aws_guardduty_ipset'
        title: aws_guardduty_ipset'
        argumentDocs:
            activate: '- (Required) Specifies whether GuardDuty is to start using the uploaded IPSet.'
            arn: '- Amazon Resource Name (ARN) of the GuardDuty IPSet.'
            detector_id: '- (Required) The detector ID of the GuardDuty.'
            format: '- (Required) The format of the file that contains the IPSet. Valid values: TXT | STIX | OTX_CSV | ALIEN_VAULT | PROOF_POINT | FIRE_EYE'
            id: '- The ID of the GuardDuty IPSet.'
            location: '- (Required) The URI of the file that contains the IPSet.'
            name: '- (Required) The friendly name to identify the IPSet.'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_guardduty_member:
        subCategory: GuardDuty
        description: Provides a resource to manage a GuardDuty member
        name: aws_guardduty_member
        title: aws_guardduty_member
        examples:
            - name: member
              manifest: |-
                {
                  "account_id": "${aws_guardduty_detector.member.account_id}",
                  "detector_id": "${aws_guardduty_detector.primary.id}",
                  "email": "required@example.com",
                  "invitation_message": "please accept guardduty invitation",
                  "invite": true
                }
              references:
                account_id: aws_guardduty_detector.member.account_id
                detector_id: aws_guardduty_detector.primary.id
              dependencies:
                aws_guardduty_detector.member: |-
                    {
                      "enable": true,
                      "provider": "${aws.dev}"
                    }
                aws_guardduty_detector.primary: |-
                    {
                      "enable": true
                    }
        argumentDocs:
            account_id: '- (Required) AWS account ID for member account.'
            create: '- (Default 60s) How long to wait for a verification to be done against inviting GuardDuty member account.'
            detector_id: '- (Required) The detector ID of the GuardDuty account where you want to create member accounts.'
            disable_email_notification: '- (Optional) Boolean whether an email notification is sent to the accounts. Defaults to false.'
            email: '- (Required) Email address for member account.'
            id: '- The ID of the GuardDuty member'
            invitation_message: '- (Optional) Message for invitation.'
            invite: '- (Optional) Boolean whether to invite the account to GuardDuty as a member. Defaults to false. To detect if an invitation needs to be (re-)sent, the Terraform state value is true based on a relationship_status of Disabled, Enabled, Invited, or EmailVerificationInProgress.'
            relationship_status: '- The status of the relationship between the member account and its primary account. More information can be found in Amazon GuardDuty API Reference.'
            update: '- (Default 60s) How long to wait for a verification to be done against inviting GuardDuty member account.'
        importStatements: []
    aws_guardduty_organization_admin_account:
        subCategory: GuardDuty
        description: Manages a GuardDuty Organization Admin Account
        name: aws_guardduty_organization_admin_account
        title: aws_guardduty_organization_admin_account
        examples:
            - name: example
              manifest: |-
                {
                  "admin_account_id": "123456789012",
                  "depends_on": [
                    "${aws_organizations_organization.example}"
                  ]
                }
              dependencies:
                aws_guardduty_detector.example: '{}'
                aws_organizations_organization.example: |-
                    {
                      "aws_service_access_principals": [
                        "guardduty.amazonaws.com"
                      ],
                      "feature_set": "ALL"
                    }
        argumentDocs:
            admin_account_id: '- (Required) AWS account identifier to designate as a delegated administrator for GuardDuty.'
            id: '- AWS account identifier.'
        importStatements: []
    aws_guardduty_organization_configuration:
        subCategory: GuardDuty
        description: Manages the GuardDuty Organization Configuration
        name: aws_guardduty_organization_configuration
        title: aws_guardduty_organization_configuration
        examples:
            - name: example
              manifest: |-
                {
                  "auto_enable": true,
                  "datasources": [
                    {
                      "s3_logs": [
                        {
                          "auto_enable": true
                        }
                      ]
                    }
                  ],
                  "detector_id": "${aws_guardduty_detector.example.id}"
                }
              references:
                detector_id: aws_guardduty_detector.example.id
              dependencies:
                aws_guardduty_detector.example: |-
                    {
                      "enable": true
                    }
        argumentDocs:
            auto_enable: '- (Required) When this setting is enabled, all new accounts that are created in, or added to, the organization are added as a member accounts of the organization’s GuardDuty delegated administrator and GuardDuty is enabled in that AWS Region.'
            datasources: '- (Optional) Configuration for the collected datasources.'
            detector_id: '- (Required) The detector ID of the GuardDuty account.'
            id: '- Identifier of the GuardDuty Detector.'
            s3_logs: '- (Optional) Configuration for the builds to store logs to S3.'
        importStatements: []
    aws_guardduty_publishing_destination':
        subCategory: GuardDuty
        description: Provides a resource to manage a GuardDuty PublishingDestination
        name: aws_guardduty_publishing_destination'
        title: aws_guardduty_publishing_destination'
        argumentDocs:
            destination_arn: '- (Required) The bucket arn and prefix under which the findings get exported. Bucket-ARN is required, the prefix is optional and will be AWSLogs/[Account-ID]/GuardDuty/[Region]/ if not provided'
            destination_type: '- (Optional) Currently there is only "S3" available as destination type which is also the default value'
            detector_id: '- (Required) The detector ID of the GuardDuty.'
            id: '- The ID of the GuardDuty PublishingDestination and the detector ID. Format: <DetectorID>:<PublishingDestinationID>'
            kms_key_arn: '- (Required) The ARN of the KMS key used to encrypt GuardDuty findings. GuardDuty enforces this to be encrypted.'
        importStatements: []
    aws_guardduty_threatintelset':
        subCategory: GuardDuty
        description: Provides a resource to manage a GuardDuty ThreatIntelSet
        name: aws_guardduty_threatintelset'
        title: aws_guardduty_threatintelset'
        argumentDocs:
            activate: '- (Required) Specifies whether GuardDuty is to start using the uploaded ThreatIntelSet.'
            arn: '- Amazon Resource Name (ARN) of the GuardDuty ThreatIntelSet.'
            detector_id: '- (Required) The detector ID of the GuardDuty.'
            format: '- (Required) The format of the file that contains the ThreatIntelSet. Valid values: TXT | STIX | OTX_CSV | ALIEN_VAULT | PROOF_POINT | FIRE_EYE'
            id: '- The ID of the GuardDuty ThreatIntelSet and the detector ID. Format: <DetectorID>:<ThreatIntelSetID>'
            location: '- (Required) The URI of the file that contains the ThreatIntelSet.'
            name: '- (Required) The friendly name to identify the ThreatIntelSet.'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_iam_access_key:
        subCategory: IAM (Identity & Access Management)
        description: Provides an IAM access key. This is a set of credentials that allow API requests to be made as an IAM user.
        name: aws_iam_access_key
        title: aws_iam_access_key
        examples:
            - name: lb
              manifest: |-
                {
                  "pgp_key": "keybase:some_person_that_exists",
                  "user": "${aws_iam_user.lb.name}"
                }
              references:
                user: aws_iam_user.lb.name
              dependencies:
                aws_iam_user.lb: |-
                    {
                      "name": "loadbalancer",
                      "path": "/system/"
                    }
                aws_iam_user_policy.lb_ro: |-
                    {
                      "name": "test",
                      "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": [\n        \"ec2:Describe*\"\n      ],\n      \"Effect\": \"Allow\",\n      \"Resource\": \"*\"\n    }\n  ]\n}\n",
                      "user": "${aws_iam_user.lb.name}"
                    }
            - name: test
              manifest: |-
                {
                  "user": "${aws_iam_user.test.name}"
                }
              references:
                user: aws_iam_user.test.name
              dependencies:
                aws_iam_user.test: |-
                    {
                      "name": "test",
                      "path": "/test/"
                    }
        argumentDocs:
            create_date: '- Date and time in RFC3339 format that the access key was created.'
            encrypted_secret: '- Encrypted secret, base64 encoded, if pgp_key was specified. This attribute is not available for imported resources. The encrypted secret may be decrypted using the command line, for example: terraform output -raw encrypted_secret | base64 --decode | keybase pgp decrypt.'
            encrypted_ses_smtp_password_v4: '- Encrypted SES SMTP password, base64 encoded, if pgp_key was specified. This attribute is not available for imported resources. The encrypted password may be decrypted using the command line, for example: terraform output -raw encrypted_ses_smtp_password_v4 | base64 --decode | keybase pgp decrypt.'
            id: '- Access key ID.'
            key_fingerprint: '- Fingerprint of the PGP key used to encrypt the secret. This attribute is not available for imported resources.'
            pgp_key: '- (Optional) Either a base-64 encoded PGP public key, or a keybase username in the form keybase:some_person_that_exists, for use in the encrypted_secret output attribute.'
            secret: '- Secret access key. This attribute is not available for imported resources. Note that this will be written to the state file. If you use this, please protect your backend state file judiciously. Alternatively, you may supply a pgp_key instead, which will prevent the secret from being stored in plaintext, at the cost of preventing the use of the secret key in automation.'
            ses_smtp_password_v4: '- Secret access key converted into an SES SMTP password by applying AWS''s documented Sigv4 conversion algorithm. This attribute is not available for imported resources. As SigV4 is region specific, valid Provider regions are ap-south-1, ap-southeast-2, eu-central-1, eu-west-1, us-east-1 and us-west-2. See current AWS SES regions.'
            status: '- (Optional) Access key status to apply. Defaults to Active. Valid values are Active and Inactive.'
            user: '- (Required) IAM user to associate with this access key.'
        importStatements: []
    aws_iam_account_alias:
        subCategory: IAM (Identity & Access Management)
        description: Manages the account alias for the AWS Account.
        name: aws_iam_account_alias
        title: aws_iam_account_alias
        examples:
            - name: alias
              manifest: |-
                {
                  "account_alias": "my-account-alias"
                }
        argumentDocs:
            account_alias: '- (Required) The account alias'
        importStatements: []
    aws_iam_account_password_policy:
        subCategory: IAM (Identity & Access Management)
        description: Manages Password Policy for the AWS Account.
        name: aws_iam_account_password_policy
        title: aws_iam_account_password_policy
        examples:
            - name: strict
              manifest: |-
                {
                  "allow_users_to_change_password": true,
                  "minimum_password_length": 8,
                  "require_lowercase_characters": true,
                  "require_numbers": true,
                  "require_symbols": true,
                  "require_uppercase_characters": true
                }
        argumentDocs:
            allow_users_to_change_password: '- (Optional) Whether to allow users to change their own password'
            expire_passwords: '- Indicates whether passwords in the account expire. Returns true if max_password_age contains a value greater than 0. Returns false if it is 0 or not present.'
            hard_expiry: '- (Optional) Whether users are prevented from setting a new password after their password has expired (i.e., require administrator reset)'
            max_password_age: '- (Optional) The number of days that an user password is valid.'
            minimum_password_length: '- (Optional) Minimum length to require for user passwords.'
            password_reuse_prevention: '- (Optional) The number of previous passwords that users are prevented from reusing.'
            require_lowercase_characters: '- (Optional) Whether to require lowercase characters for user passwords.'
            require_numbers: '- (Optional) Whether to require numbers for user passwords.'
            require_symbols: '- (Optional) Whether to require symbols for user passwords.'
            require_uppercase_characters: '- (Optional) Whether to require uppercase characters for user passwords.'
        importStatements: []
    aws_iam_group:
        subCategory: IAM (Identity & Access Management)
        description: Provides an IAM group.
        name: aws_iam_group
        title: aws_iam_group
        examples:
            - name: developers
              manifest: |-
                {
                  "name": "developers",
                  "path": "/users/"
                }
        argumentDocs:
            arn: '- The ARN assigned by AWS for this group.'
            id: '- The group''s ID.'
            name: '- (Required) The group''s name. The name must consist of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: =,.@-_.. Group names are not distinguished by case. For example, you cannot create groups named both "ADMINS" and "admins".'
            path: '- (Optional, default "/") Path in which to create the group.'
            unique_id: '- The unique ID assigned by AWS.'
        importStatements: []
    aws_iam_group_membership:
        subCategory: IAM (Identity & Access Management)
        description: Provides a top level resource to manage IAM Group membership for IAM Users.
        name: aws_iam_group_membership
        title: aws_iam_group_membership
        examples:
            - name: team
              manifest: |-
                {
                  "group": "${aws_iam_group.group.name}",
                  "name": "tf-testing-group-membership",
                  "users": [
                    "${aws_iam_user.user_one.name}",
                    "${aws_iam_user.user_two.name}"
                  ]
                }
              references:
                group: aws_iam_group.group.name
              dependencies:
                aws_iam_group.group: |-
                    {
                      "name": "test-group"
                    }
                aws_iam_user.user_one: |-
                    {
                      "name": "test-user"
                    }
                aws_iam_user.user_two: |-
                    {
                      "name": "test-user-two"
                    }
        argumentDocs:
            group: – (Required) The IAM Group name to attach the list of users to
            name: '- (Required) The name to identify the Group Membership'
            users: '- (Required) A list of IAM User names to associate with the Group'
        importStatements: []
    aws_iam_group_policy:
        subCategory: IAM (Identity & Access Management)
        description: Provides an IAM policy attached to a group.
        name: aws_iam_group_policy
        title: aws_group_policy
        examples:
            - name: my_developer_policy
              manifest: |-
                {
                  "group": "${aws_iam_group.my_developers.name}",
                  "name": "my_developer_policy",
                  "policy": "${jsonencode({\n    Version = \"2012-10-17\"\n    Statement = [\n      {\n        Action = [\n          \"ec2:Describe*\",\n        ]\n        Effect   = \"Allow\"\n        Resource = \"*\"\n      },\n    ]\n  })}"
                }
              references:
                group: aws_iam_group.my_developers.name
              dependencies:
                aws_iam_group.my_developers: |-
                    {
                      "name": "developers",
                      "path": "/users/"
                    }
        argumentDocs:
            group: '- (Required) The IAM group to attach to the policy.'
            id: '- The group policy ID.'
            name: |-
                - (Optional) The name of the policy. If omitted, Terraform will
                assign a random, unique name.
            name_prefix: |-
                - (Optional) Creates a unique name beginning with the specified
                prefix. Conflicts with name.
            policy: '- (Required) The policy document. This is a JSON formatted string. For more information about building IAM policy documents with Terraform, see the AWS IAM Policy Document Guide'
        importStatements: []
    aws_iam_group_policy_attachment:
        subCategory: IAM (Identity & Access Management)
        description: Attaches a Managed IAM Policy to an IAM group
        name: aws_iam_group_policy_attachment
        title: aws_iam_group_policy_attachment
        examples:
            - name: test-attach
              manifest: |-
                {
                  "group": "${aws_iam_group.group.name}",
                  "policy_arn": "${aws_iam_policy.policy.arn}"
                }
              references:
                group: aws_iam_group.group.name
                policy_arn: aws_iam_policy.policy.arn
              dependencies:
                aws_iam_group.group: |-
                    {
                      "name": "test-group"
                    }
                aws_iam_policy.policy: |-
                    {
                      "description": "A test policy",
                      "name": "test-policy",
                      "policy": "{ ... policy JSON ... }"
                    }
        argumentDocs:
            group: (Required) - The group the policy should be applied to
            policy_arn: (Required) - The ARN of the policy you want to apply
        importStatements: []
    aws_iam_instance_profile:
        subCategory: IAM (Identity & Access Management)
        description: Provides an IAM instance profile.
        name: aws_iam_instance_profile
        title: aws_iam_instance_profile
        examples:
            - name: test_profile
              manifest: |-
                {
                  "name": "test_profile",
                  "role": "${aws_iam_role.role.name}"
                }
              references:
                role: aws_iam_role.role.name
              dependencies:
                aws_iam_role.role: |-
                    {
                      "assume_role_policy": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Action\": \"sts:AssumeRole\",\n            \"Principal\": {\n               \"Service\": \"ec2.amazonaws.com\"\n            },\n            \"Effect\": \"Allow\",\n            \"Sid\": \"\"\n        }\n    ]\n}\n",
                      "name": "test_role",
                      "path": "/"
                    }
        argumentDocs:
            arn: '- ARN assigned by AWS to the instance profile.'
            create_date: '- Creation timestamp of the instance profile.'
            id: '- Instance profile''s ID.'
            name: '- (Optional, Forces new resource) Name of the instance profile. If omitted, Terraform will assign a random, unique name. Conflicts with name_prefix. Can be a string of characters consisting of upper and lowercase alphanumeric characters and these special characters: _, +, =, ,, ., @, -. Spaces are not allowed.'
            name_prefix: '- (Optional, Forces new resource) Creates a unique name beginning with the specified prefix. Conflicts with name.'
            path: '- (Optional, default "/") Path to the instance profile. For more information about paths, see IAM Identifiers in the IAM User Guide. Can be a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. Can include any ASCII character from the ! (\u0021) through the DEL character (\u007F), including most punctuation characters, digits, and upper and lowercase letters.'
            role: '- (Optional) Name of the role to add to the profile.'
            tags: '- (Optional) Map of resource tags for the IAM Instance Profile. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            unique_id: '- Unique ID assigned by AWS.'
        importStatements: []
    aws_iam_openid_connect_provider:
        subCategory: IAM (Identity & Access Management)
        description: Provides an IAM OpenID Connect provider.
        name: aws_iam_openid_connect_provider
        title: aws_iam_openid_connect_provider
        examples:
            - name: default
              manifest: |-
                {
                  "client_id_list": [
                    "266362248691-342342xasdasdasda-apps.googleusercontent.com"
                  ],
                  "thumbprint_list": [],
                  "url": "https://accounts.google.com"
                }
        argumentDocs:
            arn: '- The ARN assigned by AWS for this provider.'
            client_id_list: '- (Required) A list of client IDs (also known as audiences). When a mobile or web app registers with an OpenID Connect provider, they establish a value that identifies the application. (This is the value that''s sent as the client_id parameter on OAuth requests.)'
            tags: '- (Optional) Map of resource tags for the IAM OIDC provider. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            thumbprint_list: '- (Required) A list of server certificate thumbprints for the OpenID Connect (OIDC) identity provider''s server certificate(s).'
            url: '- (Required) The URL of the identity provider. Corresponds to the iss claim.'
        importStatements: []
    aws_iam_policy:
        subCategory: IAM (Identity & Access Management)
        description: Provides an IAM policy.
        name: aws_iam_policy
        title: aws_iam_policy
        examples:
            - name: policy
              manifest: |-
                {
                  "description": "My test policy",
                  "name": "test_policy",
                  "path": "/",
                  "policy": "${jsonencode({\n    Version = \"2012-10-17\"\n    Statement = [\n      {\n        Action = [\n          \"ec2:Describe*\",\n        ]\n        Effect   = \"Allow\"\n        Resource = \"*\"\n      },\n    ]\n  })}"
                }
        argumentDocs:
            arn: '- The ARN assigned by AWS to this policy.'
            description: '- (Optional, Forces new resource) Description of the IAM policy.'
            id: '- The ARN assigned by AWS to this policy.'
            name: '- (Optional, Forces new resource) The name of the policy. If omitted, Terraform will assign a random, unique name.'
            name_prefix: '- (Optional, Forces new resource) Creates a unique name beginning with the specified prefix. Conflicts with name.'
            path: |-
                - (Optional, default "/") Path in which to create the policy.
                See IAM Identifiers for more information.
            policy: '- (Required) The policy document. This is a JSON formatted string. For more information about building AWS IAM policy documents with Terraform, see the AWS IAM Policy Document Guide'
            policy_id: '- The policy''s ID.'
            tags: '- (Optional) Map of resource tags for the IAM Policy. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_iam_policy_attachment:
        subCategory: IAM (Identity & Access Management)
        description: Attaches a Managed IAM Policy to user(s), role(s), and/or group(s)
        name: aws_iam_policy_attachment
        title: aws_iam_policy_attachment
        examples:
            - name: test-attach
              manifest: |-
                {
                  "groups": [
                    "${aws_iam_group.group.name}"
                  ],
                  "name": "test-attachment",
                  "policy_arn": "${aws_iam_policy.policy.arn}",
                  "roles": [
                    "${aws_iam_role.role.name}"
                  ],
                  "users": [
                    "${aws_iam_user.user.name}"
                  ]
                }
              references:
                policy_arn: aws_iam_policy.policy.arn
              dependencies:
                aws_iam_group.group: |-
                    {
                      "name": "test-group"
                    }
                aws_iam_policy.policy: |-
                    {
                      "description": "A test policy",
                      "name": "test-policy",
                      "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": [\n        \"ec2:Describe*\"\n      ],\n      \"Effect\": \"Allow\",\n      \"Resource\": \"*\"\n    }\n  ]\n}\n"
                    }
                aws_iam_role.role: |-
                    {
                      "assume_role_policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      },\n      \"Effect\": \"Allow\",\n      \"Sid\": \"\"\n    }\n  ]\n}\n",
                      "name": "test-role"
                    }
                aws_iam_user.user: |-
                    {
                      "name": "test-user"
                    }
        argumentDocs:
            groups: (Optional) - The group(s) the policy should be applied to
            id: '- The policy''s ID.'
            name: (Required) - The name of the attachment. This cannot be an empty string.
            policy_arn: (Required) - The ARN of the policy you want to apply
            roles: (Optional) - The role(s) the policy should be applied to
            users: (Optional) - The user(s) the policy should be applied to
        importStatements: []
    aws_iam_role:
        subCategory: IAM (Identity & Access Management)
        description: Provides an IAM role.
        name: aws_iam_role
        title: aws_iam_role
        examples:
            - name: test_role
              manifest: |-
                {
                  "assume_role_policy": "${jsonencode({\n    Version = \"2012-10-17\"\n    Statement = [\n      {\n        Action = \"sts:AssumeRole\"\n        Effect = \"Allow\"\n        Sid    = \"\"\n        Principal = {\n          Service = \"ec2.amazonaws.com\"\n        }\n      },\n    ]\n  })}",
                  "name": "test_role",
                  "tags": {
                    "tag-key": "tag-value"
                  }
                }
            - name: instance
              manifest: |-
                {
                  "assume_role_policy": "${data.aws_iam_policy_document.instance-assume-role-policy.json}",
                  "name": "instance_role",
                  "path": "/system/"
                }
              references:
                assume_role_policy: data.aws_iam_policy_document.instance-assume-role-policy.json
            - name: example
              manifest: |-
                {
                  "assume_role_policy": "${data.aws_iam_policy_document.instance_assume_role_policy.json}",
                  "inline_policy": [
                    {
                      "name": "my_inline_policy",
                      "policy": "${jsonencode({\n      Version = \"2012-10-17\"\n      Statement = [\n        {\n          Action   = [\"ec2:Describe*\"]\n          Effect   = \"Allow\"\n          Resource = \"*\"\n        },\n      ]\n    })}"
                    },
                    {
                      "name": "policy-8675309",
                      "policy": "${data.aws_iam_policy_document.inline_policy.json}"
                    }
                  ],
                  "name": "yak_role"
                }
              references:
                assume_role_policy: data.aws_iam_policy_document.instance_assume_role_policy.json
                inline_policy.policy: data.aws_iam_policy_document.inline_policy.json
            - name: example
              manifest: |-
                {
                  "assume_role_policy": "${data.aws_iam_policy_document.instance_assume_role_policy.json}",
                  "inline_policy": [
                    {}
                  ],
                  "name": "yak_role"
                }
              references:
                assume_role_policy: data.aws_iam_policy_document.instance_assume_role_policy.json
            - name: example
              manifest: |-
                {
                  "assume_role_policy": "${data.aws_iam_policy_document.instance_assume_role_policy.json}",
                  "managed_policy_arns": [
                    "${aws_iam_policy.policy_one.arn}",
                    "${aws_iam_policy.policy_two.arn}"
                  ],
                  "name": "yak_role"
                }
              references:
                assume_role_policy: data.aws_iam_policy_document.instance_assume_role_policy.json
              dependencies:
                aws_iam_policy.policy_one: |-
                    {
                      "name": "policy-618033",
                      "policy": "${jsonencode({\n    Version = \"2012-10-17\"\n    Statement = [\n      {\n        Action   = [\"ec2:Describe*\"]\n        Effect   = \"Allow\"\n        Resource = \"*\"\n      },\n    ]\n  })}"
                    }
                aws_iam_policy.policy_two: |-
                    {
                      "name": "policy-381966",
                      "policy": "${jsonencode({\n    Version = \"2012-10-17\"\n    Statement = [\n      {\n        Action   = [\"s3:ListAllMyBuckets\", \"s3:ListBucket\", \"s3:HeadBucket\"]\n        Effect   = \"Allow\"\n        Resource = \"*\"\n      },\n    ]\n  })}"
                    }
            - name: example
              manifest: |-
                {
                  "assume_role_policy": "${data.aws_iam_policy_document.instance_assume_role_policy.json}",
                  "managed_policy_arns": [],
                  "name": "yak_role"
                }
              references:
                assume_role_policy: data.aws_iam_policy_document.instance_assume_role_policy.json
        argumentDocs:
            arn: '- Amazon Resource Name (ARN) specifying the role.'
            assume_role_policy: '- (Required) Policy that grants an entity permission to assume the role.'
            create_date: '- Creation date of the IAM role.'
            description: '- (Optional) Description of the role.'
            force_detach_policies: '- (Optional) Whether to force detaching any policies the role has before destroying it. Defaults to false.'
            id: '- Name of the role.'
            inline_policy: '- (Optional) Configuration block defining an exclusive set of IAM inline policies associated with the IAM role. See below. If no blocks are configured, Terraform will not manage any inline policies in this resource. Configuring one empty block (i.e., inline_policy {}) will cause Terraform to remove all inline policies added out of band on apply.'
            inline_policy {}.name: '- (Required) Name of the role policy.'
            inline_policy {}.policy: '- (Required) Policy document as a JSON formatted string. For more information about building IAM policy documents with Terraform, see the AWS IAM Policy Document Guide.'
            managed_policy_arns: '- (Optional) Set of exclusive IAM managed policy ARNs to attach to the IAM role. If this attribute is not configured, Terraform will ignore policy attachments to this resource. When configured, Terraform will align the role''s managed policy attachments with this set by attaching or detaching managed policies. Configuring an empty set (i.e., managed_policy_arns = []) will cause Terraform to remove all managed policy attachments.'
            max_session_duration: '- (Optional) Maximum session duration (in seconds) that you want to set for the specified role. If you do not specify a value for this setting, the default maximum of one hour is applied. This setting can have a value from 1 hour to 12 hours.'
            name: '- (Optional, Forces new resource) Friendly name of the role. If omitted, Terraform will assign a random, unique name. See IAM Identifiers for more information.'
            name_prefix: '- (Optional, Forces new resource) Creates a unique friendly name beginning with the specified prefix. Conflicts with name.'
            path: '- (Optional) Path to the role. See IAM Identifiers for more information.'
            permissions_boundary: '- (Optional) ARN of the policy that is used to set the permissions boundary for the role.'
            tags: '- Key-value mapping of tags for the IAM role. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            unique_id: '- Stable and unique string identifying the role.'
        importStatements: []
    aws_iam_role_policy:
        subCategory: IAM (Identity & Access Management)
        description: Provides an IAM role policy.
        name: aws_iam_role_policy
        title: aws_iam_role_policy
        examples:
            - name: test_policy
              manifest: |-
                {
                  "name": "test_policy",
                  "policy": "${jsonencode({\n    Version = \"2012-10-17\"\n    Statement = [\n      {\n        Action = [\n          \"ec2:Describe*\",\n        ]\n        Effect   = \"Allow\"\n        Resource = \"*\"\n      },\n    ]\n  })}",
                  "role": "${aws_iam_role.test_role.id}"
                }
              references:
                role: aws_iam_role.test_role.id
              dependencies:
                aws_iam_role.test_role: |-
                    {
                      "assume_role_policy": "${jsonencode({\n    Version = \"2012-10-17\"\n    Statement = [\n      {\n        Action = \"sts:AssumeRole\"\n        Effect = \"Allow\"\n        Sid    = \"\"\n        Principal = {\n          Service = \"ec2.amazonaws.com\"\n        }\n      },\n    ]\n  })}",
                      "name": "test_role"
                    }
        argumentDocs:
            id: '- The role policy ID, in the form of role_name:role_policy_name.'
            name: |-
                - (Optional) The name of the role policy. If omitted, Terraform will
                assign a random, unique name.
            name_prefix: |-
                - (Optional) Creates a unique name beginning with the specified
                prefix. Conflicts with name.
            policy: '- (Required) The inline policy document. This is a JSON formatted string. For more information about building IAM policy documents with Terraform, see the AWS IAM Policy Document Guide'
            role: '- (Required) The IAM role to attach to the policy.'
        importStatements: []
    aws_iam_role_policy_attachment:
        subCategory: IAM (Identity & Access Management)
        description: Attaches a Managed IAM Policy to an IAM role
        name: aws_iam_role_policy_attachment
        title: aws_iam_role_policy_attachment
        examples:
            - name: test-attach
              manifest: |-
                {
                  "policy_arn": "${aws_iam_policy.policy.arn}",
                  "role": "${aws_iam_role.role.name}"
                }
              references:
                policy_arn: aws_iam_policy.policy.arn
                role: aws_iam_role.role.name
              dependencies:
                aws_iam_policy.policy: |-
                    {
                      "description": "A test policy",
                      "name": "test-policy",
                      "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": [\n        \"ec2:Describe*\"\n      ],\n      \"Effect\": \"Allow\",\n      \"Resource\": \"*\"\n    }\n  ]\n}\n"
                    }
                aws_iam_role.role: |-
                    {
                      "assume_role_policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      },\n      \"Effect\": \"Allow\",\n      \"Sid\": \"\"\n    }\n  ]\n}\n",
                      "name": "test-role"
                    }
        argumentDocs:
            policy_arn: (Required) - The ARN of the policy you want to apply
            role: (Required) - The name of the IAM role to which the policy should be applied
        importStatements: []
    aws_iam_saml_provider:
        subCategory: IAM (Identity & Access Management)
        description: Provides an IAM SAML provider.
        name: aws_iam_saml_provider
        title: aws_iam_saml_provider
        examples:
            - name: default
              manifest: |-
                {
                  "name": "myprovider",
                  "saml_metadata_document": "${file(\"saml-metadata.xml\")}"
                }
        argumentDocs:
            arn: '- The ARN assigned by AWS for this provider.'
            name: '- (Required) The name of the provider to create.'
            saml_metadata_document: '- (Required) An XML document generated by an identity provider that supports SAML 2.0.'
            tags: '- (Optional) Map of resource tags for the IAM SAML provider. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            valid_until: '- The expiration date and time for the SAML provider in RFC1123 format, e.g., Mon, 02 Jan 2006 15:04:05 MST.'
        importStatements: []
    aws_iam_server_certificate:
        subCategory: IAM (Identity & Access Management)
        description: Provides an IAM Server Certificate
        name: aws_iam_server_certificate
        title: aws_iam_server_certificate
        examples:
            - name: test_cert
              manifest: |-
                {
                  "certificate_body": "${file(\"self-ca-cert.pem\")}",
                  "name": "some_test_cert",
                  "private_key": "${file(\"test-key.pem\")}"
                }
            - name: test_cert_alt
              manifest: |-
                {
                  "certificate_body": "-----BEGIN CERTIFICATE-----\n[......] # cert contents\n-----END CERTIFICATE-----\n",
                  "name": "alt_test_cert",
                  "private_key": "-----BEGIN RSA PRIVATE KEY-----\n[......] # cert contents\n-----END RSA PRIVATE KEY-----\n"
                }
            - name: test_cert
              manifest: |-
                {
                  "certificate_body": "${file(\"self-ca-cert.pem\")}",
                  "lifecycle": [
                    {
                      "create_before_destroy": true
                    }
                  ],
                  "name_prefix": "example-cert",
                  "private_key": "${file(\"test-key.pem\")}"
                }
              dependencies:
                aws_elb.ourapp: |-
                    {
                      "availability_zones": [
                        "us-west-2a"
                      ],
                      "cross_zone_load_balancing": true,
                      "listener": [
                        {
                          "instance_port": 8000,
                          "instance_protocol": "http",
                          "lb_port": 443,
                          "lb_protocol": "https",
                          "ssl_certificate_id": "${aws_iam_server_certificate.test_cert.arn}"
                        }
                      ],
                      "name": "terraform-asg-deployment-example"
                    }
        argumentDocs:
            arn: '- The Amazon Resource Name (ARN) specifying the server certificate.'
            certificate_body: |-
                – (Required) The contents of the public key certificate in
                PEM-encoded format.
            certificate_chain: |-
                – (Optional) The contents of the certificate chain.
                This is typically a concatenation of the PEM-encoded public key certificates
                of the chain.
            expiration: '- Date and time in RFC3339 format on which the certificate is set to expire.'
            id: '- The unique Server Certificate name'
            name: |-
                - (Optional) The name of the Server Certificate. Do not include the
                path in this value. If omitted, Terraform will assign a random, unique name.
            name_prefix: |-
                - (Optional) Creates a unique name beginning with the specified
                prefix. Conflicts with name.
            path: |-
                - (Optional) The IAM path for the server certificate.  If it is not
                included, it defaults to a slash (/). If this certificate is for use with
                AWS CloudFront, the path must be in format /cloudfront/your_path_here.
                See IAM Identifiers for more details on IAM Paths.
            private_key: – (Required) The contents of the private key in PEM-encoded format.
            tags: '- (Optional) Map of resource tags for the server certificate. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            upload_date: '- Date and time in RFC3339 format when the server certificate was uploaded.'
        importStatements: []
    aws_iam_service_linked_role:
        subCategory: IAM (Identity & Access Management)
        description: Provides an IAM service-linked role.
        name: aws_iam_service_linked_role
        title: aws_iam_service_linked_role
        examples:
            - name: elasticbeanstalk
              manifest: |-
                {
                  "aws_service_name": "elasticbeanstalk.amazonaws.com"
                }
        argumentDocs:
            arn: '- The Amazon Resource Name (ARN) specifying the role.'
            aws_service_name: '- (Required, Forces new resource) The AWS service to which this role is attached. You use a string similar to a URL but without the http:// in front. For example: elasticbeanstalk.amazonaws.com. To find the full list of services that support service-linked roles, check the docs.'
            create_date: '- The creation date of the IAM role.'
            custom_suffix: '- (Optional, forces new resource) Additional string appended to the role name. Not all AWS services support custom suffixes.'
            description: '- (Optional) The description of the role.'
            id: '- The Amazon Resource Name (ARN) of the role.'
            name: '- The name of the role.'
            path: '- The path of the role.'
            tags: '- Key-value mapping of tags for the IAM role. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            unique_id: '- The stable and unique string identifying the role.'
        importStatements: []
    aws_iam_service_specific_credential:
        subCategory: IAM (Identity & Access Management)
        description: Provides an IAM Service Specific Credential.
        name: aws_iam_service_specific_credential
        title: aws_iam_service_specific_credential
        examples:
            - name: example
              manifest: |-
                {
                  "service_name": "codecommit.amazonaws.com",
                  "user_name": "${aws_iam_user.example.name}"
                }
              references:
                user_name: aws_iam_user.example.name
              dependencies:
                aws_iam_user.example: |-
                    {
                      "name": "example"
                    }
        argumentDocs:
            id: '- The combination of service_name and user_name as such: service_name:user_name:service_specific_credential_id.'
            service_name: '- (Required) The name of the AWS service that is to be associated with the credentials. The service you specify here is the only service that can be accessed using these credentials.'
            service_password: '- The generated password for the service-specific credential.'
            service_specific_credential_id: '- The unique identifier for the service-specific credential.'
            service_user_name: '- The generated user name for the service-specific credential. This value is generated by combining the IAM user''s name combined with the ID number of the AWS account, as in jane-at-123456789012, for example.'
            status: '- (Optional) The status to be assigned to the service-specific credential. Valid values are Active and Inactive. Default value is Active.'
            user_name: '- (Required) The name of the IAM user that is to be associated with the credentials. The new service-specific credentials have the same permissions as the associated user except that they can be used only to access the specified service.'
        importStatements: []
    aws_iam_signing_certificate:
        subCategory: IAM (Identity & Access Management)
        description: Provides an IAM Signing Certificate
        name: aws_iam_signing_certificate
        title: aws_iam_signing_certificate
        examples:
            - name: test_cert
              manifest: |-
                {
                  "certificate_body": "${file(\"self-ca-cert.pem\")}",
                  "username": "some_test_cert"
                }
            - name: test_cert_alt
              manifest: |-
                {
                  "certificate_body": "-----BEGIN CERTIFICATE-----\n[......] # cert contents\n-----END CERTIFICATE-----\n",
                  "username": "some_test_cert"
                }
        argumentDocs:
            certificate_body: – (Required) The contents of the signing certificate in PEM-encoded format.
            certificate_id: '- The ID for the signing certificate.'
            id: '- The certificate_id:user_name'
            status: – (Optional)  The status you want to assign to the certificate. Active means that the certificate can be used for programmatic calls to Amazon Web Services Inactive means that the certificate cannot be used.
            user_name: – (Required) The name of the user the signing certificate is for.
        importStatements: []
    aws_iam_user:
        subCategory: IAM (Identity & Access Management)
        description: Provides an IAM user.
        name: aws_iam_user
        title: aws_iam_user
        examples:
            - name: lb
              manifest: |-
                {
                  "name": "loadbalancer",
                  "path": "/system/",
                  "tags": {
                    "tag-key": "tag-value"
                  }
                }
              dependencies:
                aws_iam_access_key.lb: |-
                    {
                      "user": "${aws_iam_user.lb.name}"
                    }
                aws_iam_user_policy.lb_ro: |-
                    {
                      "name": "test",
                      "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": [\n        \"ec2:Describe*\"\n      ],\n      \"Effect\": \"Allow\",\n      \"Resource\": \"*\"\n    }\n  ]\n}\n",
                      "user": "${aws_iam_user.lb.name}"
                    }
        argumentDocs:
            arn: '- The ARN assigned by AWS for this user.'
            force_destroy: |-
                - (Optional, default false) When destroying this user, destroy even if it
                has non-Terraform-managed IAM access keys, login profile or MFA devices. Without force_destroy
                a user with non-Terraform-managed access keys and login profile will fail to be destroyed.
            name: '- (Required) The user''s name. The name must consist of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: =,.@-_.. User names are not distinguished by case. For example, you cannot create users named both "TESTUSER" and "testuser".'
            path: '- (Optional, default "/") Path in which to create the user.'
            permissions_boundary: '- (Optional) The ARN of the policy that is used to set the permissions boundary for the user.'
            tags: '- Key-value map of tags for the IAM user. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            unique_id: '- The unique ID assigned by AWS.'
        importStatements: []
    aws_iam_user_group_membership:
        subCategory: IAM (Identity & Access Management)
        description: Provides a resource for adding an IAM User to IAM Groups without conflicting with itself.
        name: aws_iam_user_group_membership
        title: aws_iam_user_group_membership
        examples:
            - name: example1
              manifest: |-
                {
                  "groups": [
                    "${aws_iam_group.group1.name}",
                    "${aws_iam_group.group2.name}"
                  ],
                  "user": "${aws_iam_user.user1.name}"
                }
              references:
                user: aws_iam_user.user1.name
              dependencies:
                aws_iam_group.group1: |-
                    {
                      "name": "group1"
                    }
                aws_iam_group.group2: |-
                    {
                      "name": "group2"
                    }
                aws_iam_group.group3: |-
                    {
                      "name": "group3"
                    }
                aws_iam_user.user1: |-
                    {
                      "name": "user1"
                    }
            - name: example2
              manifest: |-
                {
                  "groups": [
                    "${aws_iam_group.group3.name}"
                  ],
                  "user": "${aws_iam_user.user1.name}"
                }
              references:
                user: aws_iam_user.user1.name
              dependencies:
                aws_iam_group.group1: |-
                    {
                      "name": "group1"
                    }
                aws_iam_group.group2: |-
                    {
                      "name": "group2"
                    }
                aws_iam_group.group3: |-
                    {
                      "name": "group3"
                    }
                aws_iam_user.user1: |-
                    {
                      "name": "user1"
                    }
        argumentDocs:
            groups: '- (Required) A list of IAM Groups to add the user to'
            user: '- (Required) The name of the IAM User to add to groups'
        importStatements: []
    aws_iam_user_login_profile:
        subCategory: IAM (Identity & Access Management)
        description: Manages an IAM User Login Profile
        name: aws_iam_user_login_profile
        title: aws_iam_user_login_profile
        examples:
            - name: example
              manifest: |-
                {
                  "pgp_key": "keybase:some_person_that_exists",
                  "user": "${aws_iam_user.example.name}"
                }
              references:
                user: aws_iam_user.example.name
              dependencies:
                aws_iam_user.example: |-
                    {
                      "force_destroy": true,
                      "name": "example",
                      "path": "/"
                    }
            - name: example
              manifest: |-
                {
                  "lifecycle": [
                    {
                      "ignore_changes": [
                        "${password_length}",
                        "${password_reset_required}",
                        "${pgp_key}"
                      ]
                    }
                  ]
                }
        argumentDocs:
            encrypted_password: '- The encrypted password, base64 encoded. Only available if password was handled on Terraform resource creation, not import.'
            key_fingerprint: '- The fingerprint of the PGP key used to encrypt the password. Only available if password was handled on Terraform resource creation, not import.'
            password: '- The plain text password, only available when pgp_key is not provided.'
            password_length: '- (Optional) The length of the generated password on resource creation. Only applies on resource creation. Drift detection is not possible with this argument. Default value is 20.'
            password_reset_required: '- (Optional) Whether the user should be forced to reset the generated password on resource creation. Only applies on resource creation.'
            pgp_key: '- (Optional) Either a base-64 encoded PGP public key, or a keybase username in the form keybase:username. Only applies on resource creation. Drift detection is not possible with this argument.'
            user: '- (Required) The IAM user''s name.'
        importStatements: []
    aws_iam_user_policy:
        subCategory: IAM (Identity & Access Management)
        description: Provides an IAM policy attached to a user.
        name: aws_iam_user_policy
        title: aws_iam_user_policy
        examples:
            - name: lb_ro
              manifest: |-
                {
                  "name": "test",
                  "policy": "${jsonencode({\n    Version = \"2012-10-17\"\n    Statement = [\n      {\n        Action = [\n          \"ec2:Describe*\",\n        ]\n        Effect   = \"Allow\"\n        Resource = \"*\"\n      },\n    ]\n  })}",
                  "user": "${aws_iam_user.lb.name}"
                }
              references:
                user: aws_iam_user.lb.name
              dependencies:
                aws_iam_access_key.lb: |-
                    {
                      "user": "${aws_iam_user.lb.name}"
                    }
                aws_iam_user.lb: |-
                    {
                      "name": "loadbalancer",
                      "path": "/system/"
                    }
        argumentDocs:
            id: '- The user policy ID, in the form of user_name:user_policy_name.'
            name: '- (Optional) The name of the policy. If omitted, Terraform will assign a random, unique name.'
            name_prefix: '- (Optional, Forces new resource) Creates a unique name beginning with the specified prefix. Conflicts with name.'
            policy: '- (Required) The policy document. This is a JSON formatted string. For more information about building AWS IAM policy documents with Terraform, see the AWS IAM Policy Document Guide.'
            user: '- (Required) IAM user to which to attach this policy.'
        importStatements: []
    aws_iam_user_policy_attachment:
        subCategory: IAM (Identity & Access Management)
        description: Attaches a Managed IAM Policy to an IAM user
        name: aws_iam_user_policy_attachment
        title: aws_iam_user_policy_attachment
        examples:
            - name: test-attach
              manifest: |-
                {
                  "policy_arn": "${aws_iam_policy.policy.arn}",
                  "user": "${aws_iam_user.user.name}"
                }
              references:
                policy_arn: aws_iam_policy.policy.arn
                user: aws_iam_user.user.name
              dependencies:
                aws_iam_policy.policy: |-
                    {
                      "description": "A test policy",
                      "name": "test-policy",
                      "policy": "{ ... policy JSON ... }"
                    }
                aws_iam_user.user: |-
                    {
                      "name": "test-user"
                    }
        argumentDocs:
            policy_arn: (Required) - The ARN of the policy you want to apply
            user: (Required) - The user the policy should be applied to
        importStatements: []
    aws_iam_user_ssh_key:
        subCategory: IAM (Identity & Access Management)
        description: Uploads an SSH public key and associates it with the specified IAM user.
        name: aws_iam_user_ssh_key
        title: aws_iam_user_ssh_key
        examples:
            - name: user
              manifest: |-
                {
                  "encoding": "SSH",
                  "public_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQD3F6tyPEFEzV0LX3X8BsXdMsQz1x2cEikKDEY0aIj41qgxMCP/iteneqXSIFZBp5vizPvaoIR3Um9xK7PGoW8giupGn+EPuxIA4cDM4vzOqOkiMPhz5XK0whEjkVzTo4+S0puvDZuwIsdiW9mxhJc7tgBNL0cYlWSYVkz4G/fslNfRPW5mYAM49f4fhtxPb5ok4Q2Lg9dPKVHO/Bgeu5woMc7RY0p1ej6D4CKFE6lymSDJpW0YHX/wqE9+cfEauh7xZcG0q9t2ta6F6fmX0agvpFyZo8aFbXeUBr7osSCJNgvavWbM/06niWrOvYX2xwWdhXmXSrbX8ZbabVohBK41 mytest@mydomain.com",
                  "username": "${aws_iam_user.user.name}"
                }
              references:
                username: aws_iam_user.user.name
              dependencies:
                aws_iam_user.user: |-
                    {
                      "name": "test-user",
                      "path": "/"
                    }
        argumentDocs:
            encoding: '- (Required) Specifies the public key encoding format to use in the response. To retrieve the public key in ssh-rsa format, use SSH. To retrieve the public key in PEM format, use PEM.'
            fingerprint: '- The MD5 message digest of the SSH public key.'
            public_key: '- (Required) The SSH public key. The public key must be encoded in ssh-rsa format or PEM format.'
            ssh_public_key_id: '- The unique identifier for the SSH public key.'
            status: '- (Optional) The status to assign to the SSH public key. Active means the key can be used for authentication with an AWS CodeCommit repository. Inactive means the key cannot be used. Default is active.'
            username: '- (Required) The name of the IAM user to associate the SSH public key with.'
        importStatements: []
    aws_iam_virtual_mfa_device:
        subCategory: IAM (Identity & Access Management)
        description: Provides an IAM Virtual MFA Device
        name: aws_iam_virtual_mfa_device
        title: aws_iam_virtual_mfa_device
        examples:
            - name: example
              manifest: |-
                {
                  "virtual_mfa_device_name": "example"
                }
        argumentDocs:
            arn: '- The Amazon Resource Name (ARN) specifying the virtual mfa device.'
            base_32_string_seed: '- The base32 seed defined as specified in RFC3548. The base_32_string_seed is base64-encoded.'
            path: – (Optional) The path for the virtual MFA device.
            qr_code_png: '-  A QR code PNG image that encodes otpauth://totp/$virtualMFADeviceName@$AccountName?secret=$Base32String where $virtualMFADeviceName is one of the create call arguments. AccountName is the user name if set (otherwise, the account ID otherwise), and Base32String is the seed in base32 format.'
            tags: '- (Optional) Map of resource tags for the virtual mfa device. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            virtual_mfa_device_name: '- (Required) The name of the virtual MFA device. Use with path to uniquely identify a virtual MFA device.'
        importStatements: []
    aws_imagebuilder_component:
        subCategory: EC2 Image Builder
        description: Manage an Image Builder Component
        name: aws_imagebuilder_component
        title: aws_imagebuilder_component
        examples:
            - name: example
              manifest: |-
                {
                  "data": "${yamlencode({\n    phases = [{\n      name = \"build\"\n      steps = [{\n        action = \"ExecuteBash\"\n        inputs = {\n          commands = [\"echo 'hello world'\"]\n        }\n        name      = \"example\"\n        onFailure = \"Continue\"\n      }]\n    }]\n    schemaVersion = 1.0\n  })}",
                  "name": "example",
                  "platform": "Linux",
                  "version": "1.0.0"
                }
            - name: example
              manifest: |-
                {
                  "name": "example",
                  "platform": "Linux",
                  "uri": "s3://${aws_s3_object.example.bucket}/${aws_s3_object.example.key}",
                  "version": "1.0.0"
                }
        argumentDocs:
            arn: '- (Required) Amazon Resource Name (ARN) of the component.'
            change_description: '- (Optional) Change description of the component.'
            data: '- (Optional) Inline YAML string with data of the component. Exactly one of data and uri can be specified. Terraform will only perform drift detection of its value when present in a configuration.'
            date_created: '- Date the component was created.'
            description: '- (Optional) Description of the component.'
            encrypted: '- Encryption status of the component.'
            kms_key_id: '- (Optional) Amazon Resource Name (ARN) of the Key Management Service (KMS) Key used to encrypt the component.'
            name: '- (Required) Name of the component.'
            owner: '- Owner of the component.'
            platform: '- (Required) Platform of the component.'
            supported_os_versions: '- (Optional) Set of Operating Systems (OS) supported by the component.'
            tags: '- (Optional) Key-value map of resource tags for the component. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            type: '- Type of the component.'
            uri: '- (Optional) S3 URI with data of the component. Exactly one of data and uri can be specified.'
            version: '- (Required) Version of the component.'
        importStatements: []
    aws_imagebuilder_container_recipe:
        subCategory: EC2 Image Builder
        description: Manage an Image Builder Container Recipe
        name: aws_imagebuilder_container_recipe
        title: aws_imagebuilder_container_recipe
        examples:
            - name: example
              manifest: |-
                {
                  "component": [
                    {
                      "component_arn": "${aws_imagebuilder_component.example.arn}",
                      "parameter": [
                        {
                          "name": "Parameter1",
                          "value": "Value1"
                        },
                        {
                          "name": "Parameter2",
                          "value": "Value2"
                        }
                      ]
                    }
                  ],
                  "container_type": "DOCKER",
                  "dockerfile_template_data": "FROM {{{ imagebuilder:parentImage }}}\n{{{ imagebuilder:environments }}}\n{{{ imagebuilder:components }}}\n",
                  "name": "example",
                  "parent_image": "arn:aws:imagebuilder:eu-central-1:aws:image/amazon-linux-x86-latest/x.x.x",
                  "target_repository": [
                    {
                      "repository_name": "${aws_ecr_repository.example.name}",
                      "service": "ECR"
                    }
                  ],
                  "version": "1.0.0"
                }
              references:
                component.component_arn: aws_imagebuilder_component.example.arn
                target_repository.repository_name: aws_ecr_repository.example.name
        argumentDocs:
            arn: '- (Required) Amazon Resource Name (ARN) of the container recipe.'
            component: '- (Required) Ordered configuration block(s) with components for the container recipe. Detailed below.'
            component.component_arn: '- (Required) Amazon Resource Name (ARN) of the Image Builder Component to associate.'
            component.parameter: '- (Optional) Configuration block(s) for parameters to configure the component. Detailed below.'
            component.parameter.name: '- (Required) The name of the component parameter.'
            component.parameter.value: '- (Required) The value for the named component parameter.'
            container_type: '- (Required) The type of the container to create. Valid values: DOCKER.'
            date_created: '- Date the container recipe was created.'
            description: '- (Optional) The description of the container recipe.'
            dockerfile_template_data: '- (Optional) The Dockerfile template used to build the image as an inline data blob.'
            dockerfile_template_uri: '- (Optional) The Amazon S3 URI for the Dockerfile that will be used to build the container image.'
            encrypted: '- A flag that indicates if the target container is encrypted.'
            instance_configuration: '- (Optional) Configuration block used to configure an instance for building and testing container images. Detailed below.'
            instance_configuration.block_device_mapping: '- (Optional) Configuration block(s) with block device mappings for the the container recipe. Detailed below.'
            instance_configuration.block_device_mapping.device_name: '- (Optional) Name of the device. For example, /dev/sda or /dev/xvdb.'
            instance_configuration.block_device_mapping.ebs: '- (Optional) Configuration block with Elastic Block Storage (EBS) block device mapping settings. Detailed below.'
            instance_configuration.block_device_mapping.ebs.delete_on_termination: '- (Optional) Whether to delete the volume on termination. Defaults to unset, which is the value inherited from the parent image.'
            instance_configuration.block_device_mapping.ebs.encrypted: '- (Optional) Whether to encrypt the volume. Defaults to unset, which is the value inherited from the parent image.'
            instance_configuration.block_device_mapping.ebs.iops: '- (Optional) Number of Input/Output (I/O) operations per second to provision for an io1 or io2 volume.'
            instance_configuration.block_device_mapping.ebs.kms_key_id: '- (Optional) Amazon Resource Name (ARN) of the Key Management Service (KMS) Key for encryption.'
            instance_configuration.block_device_mapping.ebs.snapshot_id: '- (Optional) Identifier of the EC2 Volume Snapshot.'
            instance_configuration.block_device_mapping.ebs.volume_size: '- (Optional) Size of the volume, in GiB.'
            instance_configuration.block_device_mapping.ebs.volume_type: '- (Optional) Type of the volume. For example, gp2 or io2.'
            instance_configuration.block_device_mapping.no_device: '- (Optional) Set to true to remove a mapping from the parent image.'
            instance_configuration.block_device_mapping.virtual_name: '- (Optional) Virtual device name. For example, ephemeral0. Instance store volumes are numbered starting from 0.'
            instance_configuration.image: '- (Optional) The AMI ID to use as the base image for a container build and test instance. If not specified, Image Builder will use the appropriate ECS-optimized AMI as a base image.'
            kms_key_id: '- (Optional) The KMS key used to encrypt the container image.'
            name: '- (Required) The name of the container recipe.'
            owner: '- Owner of the container recipe.'
            parent_image: (Required) The base image for the container recipe.
            platform: '- Platform of the container recipe.'
            tags: '- (Optional) Key-value map of resource tags for the container recipe. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            target_repository: (Required) The destination repository for the container image. Detailed below.
            target_repository.repository_name: '- (Required) The name of the container repository where the output container image is stored. This name is prefixed by the repository location.'
            target_repository.service: '- (Required) The service in which this image is registered. Valid values: ECR.'
            version: (Required) Version of the container recipe.
            working_directory: '- (Optional) The working directory to be used during build and test workflows.'
        importStatements: []
    aws_imagebuilder_distribution_configuration:
        subCategory: EC2 Image Builder
        description: Manage an Image Builder Distribution Configuration
        name: aws_imagebuilder_distribution_configuration
        title: aws_imagebuilder_distribution_configuration
        examples:
            - name: example
              manifest: |-
                {
                  "distribution": [
                    {
                      "ami_distribution_configuration": [
                        {
                          "ami_tags": {
                            "CostCenter": "IT"
                          },
                          "launch_permission": [
                            {
                              "user_ids": [
                                "123456789012"
                              ]
                            }
                          ],
                          "name": "example-{{ imagebuilder:buildDate }}"
                        }
                      ],
                      "launch_template_configuration": [
                        {
                          "launch_template_id": "lt-0aaa1bcde2ff3456"
                        }
                      ],
                      "region": "us-east-1"
                    }
                  ],
                  "name": "example"
                }
        argumentDocs:
            arn: '- (Required) Amazon Resource Name (ARN) of the distribution configuration.'
            date_created: '- Date the distribution configuration was created.'
            date_updated: '- Date the distribution configuration was updated.'
            description: '- (Optional) Description of the distribution configuration.'
            distribution: '- (Required) One or more configuration blocks with distribution settings. Detailed below.'
            distribution.ami_distribution_configuration: '- (Optional) Configuration block with Amazon Machine Image (AMI) distribution settings. Detailed below.'
            distribution.ami_distribution_configuration.ami_tags: '- (Optional) Key-value map of tags to apply to the distributed AMI.'
            distribution.ami_distribution_configuration.description: '- (Optional) Description to apply to the distributed AMI.'
            distribution.ami_distribution_configuration.kms_key_id: '- (Optional) Amazon Resource Name (ARN) of the Key Management Service (KMS) Key to encrypt the distributed AMI.'
            distribution.ami_distribution_configuration.launch_permission: '- (Optional) Configuration block of EC2 launch permissions to apply to the distributed AMI. Detailed below.'
            distribution.ami_distribution_configuration.launch_permission.organization_arns: '- (Optional) Set of AWS Organization ARNs to assign.'
            distribution.ami_distribution_configuration.launch_permission.organizational_unit_arns: '- (Optional) Set of AWS Organizational Unit ARNs to assign.'
            distribution.ami_distribution_configuration.launch_permission.user_groups: '- (Optional) Set of EC2 launch permission user groups to assign. Use all to distribute a public AMI.'
            distribution.ami_distribution_configuration.launch_permission.user_ids: '- (Optional) Set of AWS Account identifiers to assign.'
            distribution.ami_distribution_configuration.name: '- (Optional) Name to apply to the distributed AMI.'
            distribution.ami_distribution_configuration.target_account_ids: '- (Optional) Set of AWS Account identifiers to distribute the AMI.'
            distribution.container_distribution_configuration: '- (Optional) Configuration block with container distribution settings. Detailed below.'
            distribution.container_distribution_configuration.container_tags: '- (Optional) Set of tags that are attached to the container distribution configuration.'
            distribution.container_distribution_configuration.description: '- (Optional) Description of the container distribution configuration.'
            distribution.container_distribution_configuration.target_repository: (Required) Configuration block with the destination repository for the container distribution configuration.
            distribution.container_distribution_configuration.target_repository.repository_name: '- (Required) The name of the container repository where the output container image is stored. This name is prefixed by the repository location.'
            distribution.container_distribution_configuration.target_repository.service: '- (Required) The service in which this image is registered. Valid values: ECR.'
            distribution.fast_launch_configuration: '- (Optional) Set of Windows faster-launching configurations to use for AMI distribution. Detailed below.'
            distribution.fast_launch_configuration.account_id: '- (Required) The owner account ID for the fast-launch enabled Windows AMI.'
            distribution.fast_launch_configuration.enabled: '- (Required) A Boolean that represents the current state of faster launching for the Windows AMI. Set to true to start using Windows faster launching, or false to stop using it.'
            distribution.fast_launch_configuration.launch_template: '- (Optional) Configuration block for the launch template that the fast-launch enabled Windows AMI uses when it launches Windows instances to create pre-provisioned snapshots. Detailed below.'
            distribution.fast_launch_configuration.launch_template.launch_template_id: '- (Optional) The ID of the launch template to use for faster launching for a Windows AMI.'
            distribution.fast_launch_configuration.launch_template.launch_template_name: '- (Optional) The name of the launch template to use for faster launching for a Windows AMI.'
            distribution.fast_launch_configuration.launch_template.launch_template_version: '- (Optional) The version of the launch template to use for faster launching for a Windows AMI.'
            distribution.fast_launch_configuration.max_parallel_launches: '- (Optional) The maximum number of parallel instances that are launched for creating resources.'
            distribution.fast_launch_configuration.snapshot_configuration: '- (Optional) Configuration block for managing the number of snapshots that are created from pre-provisioned instances for the Windows AMI when faster launching is enabled. Detailed below.'
            distribution.fast_launch_configuration.snapshot_configuration.target_resource_count: '- (Optional) The number of pre-provisioned snapshots to keep on hand for a fast-launch enabled Windows AMI.'
            distribution.launch_template_configuration: '- (Optional) Set of launch template configuration settings that apply to image distribution. Detailed below.'
            distribution.launch_template_configuration.account_id: '- The account ID that this configuration applies to.'
            distribution.launch_template_configuration.default: '- (Optional) Indicates whether to set the specified Amazon EC2 launch template as the default launch template. Defaults to true.'
            distribution.launch_template_configuration.launch_template_id: '- (Required) The ID of the Amazon EC2 launch template to use.'
            distribution.license_configuration_arns: '- (Optional) Set of Amazon Resource Names (ARNs) of License Manager License Configurations.'
            distribution.region: '- (Required) AWS Region for the distribution.'
            kms_key_id: '- (Optional) Amazon Resource Name (ARN) of the Key Management Service (KMS) Key used to encrypt the distribution configuration.'
            name: '- (Required) Name of the distribution configuration.'
            tags: '- (Optional) Key-value map of resource tags for the distribution configuration. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_imagebuilder_image:
        subCategory: EC2 Image Builder
        description: Manages an Image Builder Image
        name: aws_imagebuilder_image
        title: aws_imagebuilder_image
        examples:
            - name: example
              manifest: |-
                {
                  "distribution_configuration_arn": "${aws_imagebuilder_distribution_configuration.example.arn}",
                  "image_recipe_arn": "${aws_imagebuilder_image_recipe.example.arn}",
                  "infrastructure_configuration_arn": "${aws_imagebuilder_infrastructure_configuration.example.arn}"
                }
              references:
                distribution_configuration_arn: aws_imagebuilder_distribution_configuration.example.arn
                image_recipe_arn: aws_imagebuilder_image_recipe.example.arn
                infrastructure_configuration_arn: aws_imagebuilder_infrastructure_configuration.example.arn
        argumentDocs:
            account_id: '- Account identifier of the AMI.'
            amis: '- Set of objects with each Amazon Machine Image (AMI) created.'
            arn: '- Amazon Resource Name (ARN) of the image.'
            container_recipe_arn: '- (Optional) - Amazon Resource Name (ARN) of the container recipe.'
            create: '- (Default 60m) How long to wait for the image to be built, tested, and distributed.'
            date_created: '- Date the image was created.'
            description: '- Description of the AMI.'
            distribution_configuration_arn: '- (Optional) Amazon Resource Name (ARN) of the Image Builder Distribution Configuration.'
            enhanced_image_metadata_enabled: '- (Optional) Whether additional information about the image being created is collected. Defaults to true.'
            image: '- Identifier of the AMI.'
            image_recipe_arn: '- (Optional) Amazon Resource Name (ARN) of the image recipe.'
            image_tests_configuration: '- (Optional) Configuration block with image tests configuration. Detailed below.'
            image_tests_configuration.image_tests_enabled: '- (Optional) Whether image tests are enabled. Defaults to true.'
            image_tests_configuration.timeout_minutes: '- (Optional) Number of minutes before image tests time out. Valid values are between 60 and 1440. Defaults to 720.'
            infrastructure_configuration_arn: '- (Required) Amazon Resource Name (ARN) of the Image Builder Infrastructure Configuration.'
            name: '- Name of the AMI.'
            os_version: '- Operating System version of the image.'
            output_resources: '- List of objects with resources created by the image.'
            platform: '- Platform of the image.'
            region: '- Region of the AMI.'
            tags: '- (Optional) Key-value map of resource tags for the Image Builder Image. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            version: '- Version of the image.'
        importStatements: []
    aws_imagebuilder_image_pipeline:
        subCategory: EC2 Image Builder
        description: Manages an Image Builder Image Pipeline
        name: aws_imagebuilder_image_pipeline
        title: aws_imagebuilder_image_pipeline
        examples:
            - name: example
              manifest: |-
                {
                  "image_recipe_arn": "${aws_imagebuilder_image_recipe.example.arn}",
                  "infrastructure_configuration_arn": "${aws_imagebuilder_infrastructure_configuration.example.arn}",
                  "name": "example",
                  "schedule": [
                    {
                      "schedule_expression": "cron(0 0 * * ? *)"
                    }
                  ]
                }
              references:
                image_recipe_arn: aws_imagebuilder_image_recipe.example.arn
                infrastructure_configuration_arn: aws_imagebuilder_infrastructure_configuration.example.arn
        argumentDocs:
            arn: '- Amazon Resource Name (ARN) of the image pipeline.'
            container_recipe_arn: '- (Optional) Amazon Resource Name (ARN) of the container recipe.'
            date_created: '- Date the image pipeline was created.'
            date_last_run: '- Date the image pipeline was last run.'
            date_next_run: '- Date the image pipeline will run next.'
            date_updated: '- Date the image pipeline was updated.'
            description: '- (Optional) Description of the image pipeline.'
            distribution_configuration_arn: '- (Optional) Amazon Resource Name (ARN) of the Image Builder Distribution Configuration.'
            enhanced_image_metadata_enabled: '- (Optional) Whether additional information about the image being created is collected. Defaults to true.'
            image_recipe_arn: '- (Optional) Amazon Resource Name (ARN) of the image recipe.'
            image_tests_configuration: '- (Optional) Configuration block with image tests configuration. Detailed below.'
            image_tests_configuration.image_tests_enabled: '- (Optional) Whether image tests are enabled. Defaults to true.'
            image_tests_configuration.timeout_minutes: '- (Optional) Number of minutes before image tests time out. Valid values are between 60 and 1440. Defaults to 720.'
            infrastructure_configuration_arn: '- (Required) Amazon Resource Name (ARN) of the Image Builder Infrastructure Configuration.'
            name: '- (Required) Name of the image pipeline.'
            platform: '- Platform of the image pipeline.'
            schedule: '- (Optional) Configuration block with schedule settings. Detailed below.'
            schedule.pipeline_execution_start_condition: '- (Optional) Condition when the pipeline should trigger a new image build. Valid values are EXPRESSION_MATCH_AND_DEPENDENCY_UPDATES_AVAILABLE and EXPRESSION_MATCH_ONLY. Defaults to EXPRESSION_MATCH_AND_DEPENDENCY_UPDATES_AVAILABLE.'
            schedule.schedule_expression: '- (Required) Cron expression of how often the pipeline start condition is evaluated. For example, cron(0 0 * * ? *) is evaluated every day at midnight UTC. Configurations using the five field syntax that was previously accepted by the API, such as cron(0 0 * * *), must be updated to the six field syntax. For more information, see the Image Builder User Guide.'
            schedule.timezone: '- (Optional) The timezone that applies to the scheduling expression. For example, "Etc/UTC", "America/Los_Angeles" in the IANA timezone format. If not specified this defaults to UTC.'
            status: '- (Optional) Status of the image pipeline. Valid values are DISABLED and ENABLED. Defaults to ENABLED.'
            tags: '- (Optional) Key-value map of resource tags for the image pipeline. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_imagebuilder_image_recipe:
        subCategory: EC2 Image Builder
        description: Manage an Image Builder Image Recipe
        name: aws_imagebuilder_image_recipe
        title: aws_imagebuilder_image_recipe
        examples:
            - name: example
              manifest: |-
                {
                  "block_device_mapping": [
                    {
                      "device_name": "/dev/xvdb",
                      "ebs": [
                        {
                          "delete_on_termination": true,
                          "volume_size": 100,
                          "volume_type": "gp2"
                        }
                      ]
                    }
                  ],
                  "component": [
                    {
                      "component_arn": "${aws_imagebuilder_component.example.arn}",
                      "parameter": [
                        {
                          "name": "Parameter1",
                          "value": "Value1"
                        },
                        {
                          "name": "Parameter2",
                          "value": "Value2"
                        }
                      ]
                    }
                  ],
                  "name": "example",
                  "parent_image": "arn:${data.aws_partition.current.partition}:imagebuilder:${data.aws_region.current.name}:aws:image/amazon-linux-2-x86/x.x.x",
                  "version": "1.0.0"
                }
              references:
                component.component_arn: aws_imagebuilder_component.example.arn
        argumentDocs:
            arn: '- (Required) Amazon Resource Name (ARN) of the image recipe.'
            block_device_mapping: '- (Optional) Configuration block(s) with block device mappings for the image recipe. Detailed below.'
            block_device_mapping.device_name: '- (Optional) Name of the device. For example, /dev/sda or /dev/xvdb.'
            block_device_mapping.ebs: '- (Optional) Configuration block with Elastic Block Storage (EBS) block device mapping settings. Detailed below.'
            block_device_mapping.ebs.delete_on_termination: '- (Optional) Whether to delete the volume on termination. Defaults to unset, which is the value inherited from the parent image.'
            block_device_mapping.ebs.encrypted: '- (Optional) Whether to encrypt the volume. Defaults to unset, which is the value inherited from the parent image.'
            block_device_mapping.ebs.iops: '- (Optional) Number of Input/Output (I/O) operations per second to provision for an io1 or io2 volume.'
            block_device_mapping.ebs.kms_key_id: '- (Optional) Amazon Resource Name (ARN) of the Key Management Service (KMS) Key for encryption.'
            block_device_mapping.ebs.snapshot_id: '- (Optional) Identifier of the EC2 Volume Snapshot.'
            block_device_mapping.ebs.volume_size: '- (Optional) Size of the volume, in GiB.'
            block_device_mapping.ebs.volume_type: '- (Optional) Type of the volume. For example, gp2 or io2.'
            block_device_mapping.no_device: '- (Optional) Set to true to remove a mapping from the parent image.'
            block_device_mapping.virtual_name: '- (Optional) Virtual device name. For example, ephemeral0. Instance store volumes are numbered starting from 0.'
            component: '- (Required) Ordered configuration block(s) with components for the image recipe. Detailed below.'
            component.component_arn: '- (Required) Amazon Resource Name (ARN) of the Image Builder Component to associate.'
            component.parameter: '- (Optional) Configuration block(s) for parameters to configure the component. Detailed below.'
            component.parameter.name: '- (Required) The name of the component parameter.'
            component.parameter.value: '- (Required) The value for the named component parameter.'
            date_created: '- Date the image recipe was created.'
            description: '- (Optional) Description of the image recipe.'
            name: '- (Required) Name of the image recipe.'
            owner: '- Owner of the image recipe.'
            parent_image: '- (Required) Platform of the image recipe.'
            platform: '- Platform of the image recipe.'
            systems_manager_agent: '- (Optional) Configuration block for the Systems Manager Agent installed by default by Image Builder. Detailed below.'
            systems_manager_agent.uninstall_after_build: '- (Required) Whether to remove the Systems Manager Agent after the image has been built. Defaults to false.'
            tags: '- (Optional) Key-value map of resource tags for the image recipe. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            user_data_base64: (Optional) Base64 encoded user data. Use this to provide commands or a command script to run when you launch your build instance.
            version: '- (Required) Version of the image recipe.'
            working_directory: '- (Optional) The working directory to be used during build and test workflows.'
        importStatements: []
    aws_imagebuilder_infrastructure_configuration:
        subCategory: EC2 Image Builder
        description: Manages an Image Builder Infrastructure Configuration
        name: aws_imagebuilder_infrastructure_configuration
        title: aws_imagebuilder_infrastructure_configuration
        examples:
            - name: example
              manifest: |-
                {
                  "description": "example description",
                  "instance_profile_name": "${aws_iam_instance_profile.example.name}",
                  "instance_types": [
                    "t2.nano",
                    "t3.micro"
                  ],
                  "key_pair": "${aws_key_pair.example.key_name}",
                  "logging": [
                    {
                      "s3_logs": [
                        {
                          "s3_bucket_name": "${aws_s3_bucket.example.bucket}",
                          "s3_key_prefix": "logs"
                        }
                      ]
                    }
                  ],
                  "name": "example",
                  "security_group_ids": [
                    "${aws_security_group.example.id}"
                  ],
                  "sns_topic_arn": "${aws_sns_topic.example.arn}",
                  "subnet_id": "${aws_subnet.main.id}",
                  "tags": {
                    "foo": "bar"
                  },
                  "terminate_instance_on_failure": true
                }
              references:
                instance_profile_name: aws_iam_instance_profile.example.name
                key_pair: aws_key_pair.example.key_name
                logging.s3_logs.s3_bucket_name: aws_s3_bucket.example.bucket
                sns_topic_arn: aws_sns_topic.example.arn
                subnet_id: aws_subnet.main.id
        argumentDocs:
            arn: '- Amazon Resource Name (ARN) of the configuration.'
            date_created: '- Date when the configuration was created.'
            date_updated: '- Date when the configuration was updated.'
            description: '- (Optional) Description for the configuration.'
            id: '- Amazon Resource Name (ARN) of the configuration.'
            instance_metadata_options: '- (Optional) Configuration block with instance metadata options for the HTTP requests that pipeline builds use to launch EC2 build and test instances. Detailed below.'
            instance_metadata_options.http_put_response_hop_limit: '- The number of hops that an instance can traverse to reach its destonation.'
            instance_metadata_options.http_tokens: '- Whether a signed token is required for instance metadata retrieval requests. Valid values: required, optional.'
            instance_profile_name: '- (Required) Name of IAM Instance Profile.'
            instance_types: '- (Optional) Set of EC2 Instance Types.'
            key_pair: '- (Optional) Name of EC2 Key Pair.'
            logging: '- (Optional) Configuration block with logging settings. Detailed below.'
            logging.s3_logs: '- (Required) Configuration block with S3 logging settings. Detailed below.'
            logging.s3_logs.s3_bucket_name: '- (Required) Name of the S3 Bucket.'
            logging.s3_logs.s3_key_prefix: '- (Optional) Prefix to use for S3 logs. Defaults to /.'
            name: '- (Required) Name for the configuration.'
            resource_tags: '- (Optional) Key-value map of resource tags to assign to infrastructure created by the configuration.'
            security_group_ids: '- (Optional) Set of EC2 Security Group identifiers.'
            sns_topic_arn: '- (Optional) Amazon Resource Name (ARN) of SNS Topic.'
            subnet_id: '- (Optional) EC2 Subnet identifier. Also requires security_group_ids argument.'
            tags: '- (Optional) Key-value map of resource tags to assign to the configuration. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            terminate_instance_on_failure: '- (Optional) Enable if the instance should be terminated when the pipeline fails. Defaults to false.'
        importStatements: []
    aws_inspector_assessment_target:
        subCategory: Inspector
        description: Provides a Inspector assessment target.
        name: aws_inspector_assessment_target
        title: aws_inspector_assessment_target
        examples:
            - name: foo
              manifest: |-
                {
                  "name": "assessment target",
                  "resource_group_arn": "${aws_inspector_resource_group.bar.arn}"
                }
              references:
                resource_group_arn: aws_inspector_resource_group.bar.arn
              dependencies:
                aws_inspector_resource_group.bar: |-
                    {
                      "tags": {
                        "Env": "bar",
                        "Name": "foo"
                      }
                    }
        argumentDocs:
            arn: '- The target assessment ARN.'
            name: '- (Required) The name of the assessment target.'
            resource_group_arn: (Optional) Inspector Resource Group Amazon Resource Name (ARN) stating tags for instance matching. If not specified, all EC2 instances in the current AWS account and region are included in the assessment target.
        importStatements: []
    aws_inspector_assessment_template:
        subCategory: Inspector
        description: Provides a Inspector assessment template.
        name: aws_inspector_assessment_template
        title: aws_inspector_assessment_template
        examples:
            - name: example
              manifest: |-
                {
                  "duration": 3600,
                  "name": "example",
                  "rules_package_arns": [
                    "arn:aws:inspector:us-west-2:758058086616:rulespackage/0-9hgA516p",
                    "arn:aws:inspector:us-west-2:758058086616:rulespackage/0-H5hpSawc",
                    "arn:aws:inspector:us-west-2:758058086616:rulespackage/0-JJOtZiqQ",
                    "arn:aws:inspector:us-west-2:758058086616:rulespackage/0-vg5GGHSD"
                  ],
                  "target_arn": "${aws_inspector_assessment_target.example.arn}"
                }
              references:
                target_arn: aws_inspector_assessment_target.example.arn
        argumentDocs:
            arn: '- The template assessment ARN.'
            duration: '- (Required) The duration of the inspector run.'
            name: '- (Required) The name of the assessment template.'
            rules_package_arns: '- (Required) The rules to be used during the run.'
            tags: '- (Optional) Key-value map of tags for the Inspector assessment template. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            target_arn: '- (Required) The assessment target ARN to attach the template to.'
        importStatements: []
    aws_inspector_resource_group:
        subCategory: Inspector
        description: Provides an Amazon Inspector resource group resource.
        name: aws_inspector_resource_group
        title: aws_inspector_resource_group
        examples:
            - name: example
              manifest: |-
                {
                  "tags": {
                    "Env": "bar",
                    "Name": "foo"
                  }
                }
        argumentDocs:
            arn: '- The resource group ARN.'
            tags: '- (Required) Key-value map of tags that are used to select the EC2 instances to be included in an Amazon Inspector assessment target.'
        importStatements: []
    aws_instance:
        subCategory: EC2 (Elastic Compute Cloud)
        description: Provides an EC2 instance resource. This allows instances to be created, updated, and deleted. Instances also support provisioning.
        name: aws_instance
        title: aws_instance
        examples:
            - name: web
              manifest: |-
                {
                  "ami": "${data.aws_ami.ubuntu.id}",
                  "instance_type": "t3.micro",
                  "tags": {
                    "Name": "HelloWorld"
                  }
                }
              references:
                ami: data.aws_ami.ubuntu.id
            - name: foo
              manifest: |-
                {
                  "ami": "ami-005e54dee72cc1d00",
                  "credit_specification": [
                    {
                      "cpu_credits": "unlimited"
                    }
                  ],
                  "instance_type": "t2.micro",
                  "network_interface": [
                    {
                      "device_index": 0,
                      "network_interface_id": "${aws_network_interface.foo.id}"
                    }
                  ]
                }
              references:
                network_interface.network_interface_id: aws_network_interface.foo.id
              dependencies:
                aws_network_interface.foo: |-
                    {
                      "private_ips": [
                        "172.16.10.100"
                      ],
                      "subnet_id": "${aws_subnet.my_subnet.id}",
                      "tags": {
                        "Name": "primary_network_interface"
                      }
                    }
                aws_subnet.my_subnet: |-
                    {
                      "availability_zone": "us-west-2a",
                      "cidr_block": "172.16.10.0/24",
                      "tags": {
                        "Name": "tf-example"
                      },
                      "vpc_id": "${aws_vpc.my_vpc.id}"
                    }
                aws_vpc.my_vpc: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "tags": {
                        "Name": "tf-example"
                      }
                    }
        argumentDocs:
            ami: '- (Optional) AMI to use for the instance. Required unless launch_template is specified and the Launch Template specifes an AMI. If an AMI is specified in the Launch Template, setting ami will override the AMI specified in the Launch Template.'
            arn: '- The ARN of the instance.'
            associate_public_ip_address: '- (Optional) Whether to associate a public IP address with an instance in a VPC.'
            availability_zone: '- (Optional) AZ to start the instance in.'
            aws_key_pair: resource
            aws_placement_group: resource's
            capacity_reservation_specification: '- (Optional) Describes an instance''s Capacity Reservation targeting option. See Capacity Reservation Specification below for more details.'
            capacity_reservation_specification.capacity_reservation_preference: '- (Optional) Indicates the instance''s Capacity Reservation preferences. Can be "open" or "none". (Default: "open").'
            capacity_reservation_specification.capacity_reservation_target: '- (Optional) Information about the target Capacity Reservation. See Capacity Reservation Target below for more details.'
            capacity_reservation_specification.capacity_reservation_target.capacity_reservation_id: '- (Optional) The ID of the Capacity Reservation in which to run the instance.'
            capacity_reservation_specification.capacity_reservation_target.capacity_reservation_resource_group_arn: '- (Optional) The ARN of the Capacity Reservation resource group in which to run the instance.'
            cpu_core_count: '- (Optional) Sets the number of CPU cores for an instance. This option is only supported on creation of instance type that support CPU Options CPU Cores and Threads Per CPU Core Per Instance Type - specifying this option for unsupported instance types will return an error from the EC2 API.'
            cpu_threads_per_core: '- (Optional - has no effect unless cpu_core_count is also set)  If set to to 1, hyperthreading is disabled on the launched instance. Defaults to 2 if not set. See Optimizing CPU Options for more information.'
            credit_specification: '- (Optional) Configuration block for customizing the credit specification of the instance. See Credit Specification below for more details. Terraform will only perform drift detection of its value when present in a configuration. Removing this configuration on existing instances will only stop managing it. It will not change the configuration back to the default for the instance type.'
            credit_specification.cpu_credits: '- (Optional) Credit option for CPU usage. Valid values include standard or unlimited. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.'
            disable_api_stop: '- (Optional) If true, enables EC2 Instance Stop Protection.'
            disable_api_termination: '- (Optional) If true, enables EC2 Instance Termination Protection.'
            ebs_block_device: '- (Optional) One or more configuration blocks with additional EBS block devices to attach to the instance. Block device configurations only apply on resource creation. See Block Devices below for details on attributes and drift detection. When accessing this as an attribute reference, it is a set of objects.'
            ebs_block_device.delete_on_termination: '- (Optional) Whether the volume should be destroyed on instance termination. Defaults to true.'
            ebs_block_device.device_name: '- (Required) Name of the device to mount.'
            ebs_block_device.encrypted: '- (Optional) Enables EBS encryption on the volume. Defaults to false. Cannot be used with snapshot_id. Must be configured to perform drift detection.'
            ebs_block_device.iops: '- (Optional) Amount of provisioned IOPS. Only valid for volume_type of io1, io2 or gp3.'
            ebs_block_device.kms_key_id: '- (Optional) Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.'
            ebs_block_device.snapshot_id: '- (Optional) Snapshot ID to mount.'
            ebs_block_device.tags: '- (Optional) A map of tags to assign to the device.'
            ebs_block_device.throughput: '- (Optional) Throughput to provision for a volume in mebibytes per second (MiB/s). This is only valid for volume_type of gp3.'
            ebs_block_device.volume_id: '- ID of the volume. For example, the ID can be accessed like this, aws_instance.web.ebs_block_device.2.volume_id.'
            ebs_block_device.volume_size: '- (Optional) Size of the volume in gibibytes (GiB).'
            ebs_block_device.volume_type: '- (Optional) Type of volume. Valid values include standard, gp2, gp3, io1, io2, sc1, or st1. Defaults to gp2.'
            ebs_optimized: '- (Optional) If true, the launched EC2 instance will be EBS-optimized. Note that if this is not set on an instance type that is optimized by default then this will show as disabled but if the instance type is optimized by default then there is no need to set this and there is no effect to disabling it. See the EBS Optimized section of the AWS User Guide for more information.'
            enclave_options: '- (Optional) Enable Nitro Enclaves on launched instances. See Enclave Options below for more details.'
            enclave_options.enabled: '- (Optional) Whether Nitro Enclaves will be enabled on the instance. Defaults to false.'
            ephemeral_block_device: '- (Optional) One or more configuration blocks to customize Ephemeral (also known as "Instance Store") volumes on the instance. See Block Devices below for details. When accessing this as an attribute reference, it is a set of objects.'
            ephemeral_block_device.device_name: '- The name of the block device to mount on the instance.'
            ephemeral_block_device.no_device: '- (Optional) Suppresses the specified device included in the AMI''s block device mapping.'
            ephemeral_block_device.virtual_name: '- (Optional) Instance Store Device Name (e.g., ephemeral0).'
            get_password_data: '- (Optional) If true, wait for password data to become available and retrieve it. Useful for getting the administrator password for instances running Microsoft Windows. The password data is exported to the password_data attribute. See GetPasswordData for more information.'
            hibernation: '- (Optional) If true, the launched EC2 instance will support hibernation.'
            host_id: '- (Optional) ID of a dedicated host that the instance will be assigned to. Use when an instance is to be launched on a specific dedicated host.'
            iam_instance_profile: '- (Optional) IAM Instance Profile to launch the instance with. Specified as the name of the Instance Profile. Ensure your credentials have the correct permission to assign the instance profile according to the EC2 documentation, notably iam:PassRole.'
            instance_initiated_shutdown_behavior: '- (Optional) Shutdown behavior for the instance. Amazon defaults this to stop for EBS-backed instances and terminate for instance-store instances. Cannot be set on instance-store instances. See Shutdown Behavior for more information.'
            instance_state: '- The state of the instance. One of: pending, running, shutting-down, terminated, stopping, stopped. See Instance Lifecycle for more information.'
            instance_type: '- (Optional) The instance type to use for the instance. Updates to this field will trigger a stop/start of the EC2 instance.'
            ipv6_address_count: '- (Optional) A number of IPv6 addresses to associate with the primary network interface. Amazon EC2 chooses the IPv6 addresses from the range of your subnet.'
            ipv6_addresses: '- (Optional) Specify one or more IPv6 addresses from the range of the subnet to associate with the primary network interface'
            key_name: '- (Optional) Key name of the Key Pair to use for the instance; which can be managed using the .'
            launch_template: |-
                - (Optional) Specifies a Launch Template to configure the instance. Parameters configured on this resource will override the corresponding parameters in the Launch Template.
                See Launch Template Specification below for more details.
            launch_template.id: '- The ID of the launch template. Conflicts with name.'
            launch_template.name: '- The name of the launch template. Conflicts with id.'
            launch_template.version: '- Template version. Can be a specific version number, $Latest or $Default. The default value is $Default.'
            maintenance_options: '- (Optional) The maintenance and recovery options for the instance. See Maintenance Options below for more details.'
            maintenance_options.auto_recovery: '- (Optional) The automatic recovery behavior of the Instance. Can be "default" or "disabled". See Recover your instance for more details.'
            metadata_options: '- (Optional) Customize the metadata options of the instance. See Metadata Options below for more details.'
            metadata_options.http_endpoint: '- (Optional) Whether the metadata service is available. Valid values include enabled or disabled. Defaults to enabled.'
            metadata_options.http_put_response_hop_limit: '- (Optional) Desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Valid values are integer from 1 to 64. Defaults to 1.'
            metadata_options.http_tokens: '- (Optional) Whether or not the metadata service requires session tokens, also referred to as Instance Metadata Service Version 2 (IMDSv2). Valid values include optional or required. Defaults to optional.'
            metadata_options.instance_metadata_tags: '- (optional) Enables or disables access to instance tags from the instance metadata service. Valid values include enabled or disabled. Defaults to disabled.'
            monitoring: '- (Optional) If true, the launched EC2 instance will have detailed monitoring enabled. (Available since v0.6.0)'
            network_interface: '- (Optional) Customize network interfaces to be attached at instance boot time. See Network Interfaces below for more details.'
            network_interface.delete_on_termination: '- (Optional) Whether or not to delete the network interface on instance termination. Defaults to false. Currently, the only valid value is false, as this is only supported when creating new network interfaces when launching an instance.'
            network_interface.device_index: '- (Required) Integer index of the network interface attachment. Limited by instance type.'
            network_interface.network_card_index: '- (Optional) Integer index of the network card. Limited by instance type. The default index is 0.'
            network_interface.network_interface_id: '- (Required) ID of the network interface to attach.'
            outpost_arn: '- The ARN of the Outpost the instance is assigned to.'
            password_data: '- Base-64 encoded encrypted password data for the instance. Useful for getting the administrator password for instances running Microsoft Windows. This attribute is only exported if get_password_data is true. Note that this encrypted value will be stored in the state file, as with all exported attributes. See GetPasswordData for more information.'
            placement_group: '- (Optional) Placement Group to start the instance in.'
            placement_partition_number: '- (Optional) The number of the partition the instance is in. Valid only if the  strategy argument is set to "partition".'
            primary_network_interface_id: '- The ID of the instance''s primary network interface.'
            private_dns: '- The private DNS name assigned to the instance. Can only be used inside the Amazon EC2, and only available if you''ve enabled DNS hostnames for your VPC.'
            private_dns_name_options: '- (Optional) The options for the instance hostname. The default values are inherited from the subnet. See Private DNS Name Options below for more details.'
            private_dns_name_options.enable_resource_name_dns_a_record: '- Indicates whether to respond to DNS queries for instance hostnames with DNS A records.'
            private_dns_name_options.enable_resource_name_dns_aaaa_record: '- Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records.'
            private_dns_name_options.hostname_type: '- The type of hostname for Amazon EC2 instances. For IPv4 only subnets, an instance DNS name must be based on the instance IPv4 address. For IPv6 native subnets, an instance DNS name must be based on the instance ID. For dual-stack subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: ip-name and resource-name.'
            private_ip: '- (Optional) Private IP address to associate with the instance in a VPC.'
            public_dns: '- The public DNS name assigned to the instance. For EC2-VPC, this is only available if you''ve enabled DNS hostnames for your VPC.'
            public_ip: '- The public IP address assigned to the instance, if applicable. NOTE: If you are using an aws_eip with your instance, you should refer to the EIP''s address directly and not use public_ip as this field will change after the EIP is attached.'
            root_block_device: '- (Optional) Configuration block to customize details about the root block device of the instance. See Block Devices below for details. When accessing this as an attribute reference, it is a list containing one object.'
            root_block_device.delete_on_termination: '- (Optional) Whether the volume should be destroyed on instance termination. Defaults to true.'
            root_block_device.device_name: '- Device name, e.g., /dev/sdh or xvdh.'
            root_block_device.encrypted: '- (Optional) Whether to enable volume encryption. Defaults to false. Must be configured to perform drift detection.'
            root_block_device.iops: '- (Optional) Amount of provisioned IOPS. Only valid for volume_type of io1, io2 or gp3.'
            root_block_device.kms_key_id: '- (Optional) Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.'
            root_block_device.tags: '- (Optional) A map of tags to assign to the device.'
            root_block_device.throughput: '- (Optional) Throughput to provision for a volume in mebibytes per second (MiB/s). This is only valid for volume_type of gp3.'
            root_block_device.volume_id: '- ID of the volume. For example, the ID can be accessed like this, aws_instance.web.root_block_device.0.volume_id.'
            root_block_device.volume_size: '- (Optional) Size of the volume in gibibytes (GiB).'
            root_block_device.volume_type: '- (Optional) Type of volume. Valid values include standard, gp2, gp3, io1, io2, sc1, or st1. Defaults to gp2.'
            secondary_private_ips: '- (Optional) A list of secondary private IPv4 addresses to assign to the instance''s primary network interface (eth0) in a VPC. Can only be assigned to the primary network interface (eth0) attached at instance creation, not a pre-existing network interface i.e., referenced in a network_interface block. Refer to the Elastic network interfaces documentation to see the maximum number of private IP addresses allowed per instance type.'
            security_groups: '- (Optional, EC2-Classic and default VPC only) A list of security group names to associate with.'
            source_dest_check: '- (Optional) Controls if traffic is routed to the instance when the destination address does not match the instance. Used for NAT or VPNs. Defaults true.'
            subnet_id: '- (Optional) VPC Subnet ID to launch in.'
            tags: '- (Optional) A map of tags to assign to the resource. Note that these tags apply to the instance and not block storage devices. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            tenancy: '- (Optional) Tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of dedicated runs on single-tenant hardware. The host tenancy is not supported for the import-instance command.'
            timeouts.create: '- (Defaults to 10 mins) Used when launching the instance (until it reaches the initial running state)'
            timeouts.delete: '- (Defaults to 20 mins) Used when terminating the instance'
            timeouts.update: '- (Defaults to 10 mins) Used when stopping and starting the instance when necessary during update - e.g., when changing instance type'
            user_data: '- (Optional) User data to provide when launching the instance. Do not pass gzip-compressed data via this argument; see user_data_base64 instead. Updates to this field will trigger a stop/start of the EC2 instance by default. If the user_data_replace_on_change is set then updates to this field will trigger a destroy and recreate.'
            user_data_base64: '- (Optional) Can be used instead of user_data to pass base64-encoded binary data directly. Use this instead of user_data whenever the value is not a valid UTF-8 string. For example, gzip-encoded user data must be base64-encoded and passed via this argument to avoid corruption. Updates to this field will trigger a stop/start of the EC2 instance by default. If the user_data_replace_on_change is set then updates to this field will trigger a destroy and recreate.'
            user_data_replace_on_change: '- (Optional) When used in combination with user_data or user_data_base64 will trigger a destroy and recreate when set to true. Defaults to false if not set.'
            volume_tags: '- (Optional) A map of tags to assign, at instance-creation time, to root and EBS volumes.'
            volume_tags.vpc_security_group_ids: '- (Optional, VPC only) A list of security group IDs to associate with.'
        importStatements: []
    aws_internet_gateway:
        subCategory: VPC (Virtual Private Cloud)
        description: Provides a resource to create a VPC Internet Gateway.
        name: aws_internet_gateway
        title: aws_internet_gateway
        examples:
            - name: gw
              manifest: |-
                {
                  "tags": {
                    "Name": "main"
                  },
                  "vpc_id": "${aws_vpc.main.id}"
                }
              references:
                vpc_id: aws_vpc.main.id
            - name: gw
              manifest: |-
                {
                  "vpc_id": "${aws_vpc.main.id}"
                }
              references:
                vpc_id: aws_vpc.main.id
              dependencies:
                aws_instance.foo: |-
                    {
                      "depends_on": [
                        "${aws_internet_gateway.gw}"
                      ]
                    }
        argumentDocs:
            arn: '- The ARN of the Internet Gateway.'
            id: '- The ID of the Internet Gateway.'
            owner_id: '- The ID of the AWS account that owns the internet gateway.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            vpc_id: '- (Optional) The VPC ID to create in.  See the aws_internet_gateway_attachment resource for an alternate way to attach an Internet Gateway to a VPC.'
        importStatements: []
    aws_internet_gateway_attachment:
        subCategory: VPC (Virtual Private Cloud)
        description: Provides a resource to create a VPC Internet Gateway Attachment.
        name: aws_internet_gateway_attachment
        title: aws_internet_gateway_attachment
        examples:
            - name: example
              manifest: |-
                {
                  "internet_gateway_id": "${aws_internet_gateway.example.id}",
                  "vpc_id": "${aws_vpc.example.id}"
                }
              references:
                internet_gateway_id: aws_internet_gateway.example.id
                vpc_id: aws_vpc.example.id
              dependencies:
                aws_internet_gateway.example: '{}'
                aws_vpc.example: |-
                    {
                      "cidr_block": "10.1.0.0/16"
                    }
        argumentDocs:
            id: '- The ID of the VPC and Internet Gateway separated by a colon.'
            internet_gateway_id: '- (Required) The ID of the internet gateway.'
            vpc_id: '- (Required) The ID of the VPC.'
        importStatements: []
    aws_iot_authorizer:
        subCategory: IoT Core
        description: Creates and manages an AWS IoT Authorizer.
        name: aws_iot_authorizer
        title: aws_iot_authorizer
        examples:
            - name: example
              manifest: |-
                {
                  "authorizer_function_arn": "${aws_lambda_function.example.arn}",
                  "name": "example",
                  "signing_disabled": false,
                  "status": "ACTIVE",
                  "token_key_name": "Token-Header",
                  "token_signing_public_keys": {
                    "Key1": "${file(\"test-fixtures/iot-authorizer-signing-key.pem\")}"
                  }
                }
              references:
                authorizer_function_arn: aws_lambda_function.example.arn
        argumentDocs:
            arn: '- The ARN of the authorizer.'
            authorizer_function_arn: '- (Required) The ARN of the authorizer''s Lambda function.'
            enable_caching_for_http: '- (Optional) Specifies whether the HTTP caching is enabled or not. Default: false.'
            name: '- (Required) The name of the authorizer.'
            signing_disabled: '- (Optional) Specifies whether AWS IoT validates the token signature in an authorization request. Default: false.'
            status: '- (Optional) The status of Authorizer request at creation. Valid values: ACTIVE, INACTIVE. Default: ACTIVE.'
            token_key_name: '- (Optional) The name of the token key used to extract the token from the HTTP headers. This value is required if signing is enabled in your authorizer.'
            token_signing_public_keys: '- (Optional) The public keys used to verify the digital signature returned by your custom authentication service. This value is required if signing is enabled in your authorizer.'
        importStatements: []
    aws_iot_certificate:
        subCategory: IoT Core
        description: Creates and manages an AWS IoT certificate.
        name: aws_iot_certificate
        title: aws_iot_certificate
        examples:
            - name: cert
              manifest: |-
                {
                  "active": true,
                  "csr": "${file(\"/my/csr.pem\")}"
                }
            - name: cert
              manifest: |-
                {
                  "active": true
                }
            - name: cert
              manifest: |-
                {
                  "active": true,
                  "certificate_pem": "${file(\"/my/cert.pem\")}"
                }
        argumentDocs:
            active: '- (Required)  Boolean flag to indicate if the certificate should be active'
            arn: '- The ARN of the created certificate.'
            ca_pem: '- (Optional) The CA certificate for the certificate to be registered. If this is set, the CA needs to be registered with AWS IoT beforehand.'
            certificate_pem: |-
                - (Optional) The certificate to be registered. If ca_pem is unspecified, review
                RegisterCertificateWithoutCA.
                If ca_pem is specified, review
                RegisterCertificate
                for more information on registering a certificate.
            csr: |-
                - (Optional) The certificate signing request. Review
                CreateCertificateFromCsr
                for more information on generating a certificate from a certificate signing request (CSR).
                If none is specified both the certificate and keys will be generated, review CreateKeysAndCertificate
                for more information on generating keys and a certificate.
            id: '- The internal ID assigned to this certificate.'
            private_key: '- When neither CSR nor certificate is provided, the private key.'
            public_key: '- When neither CSR nor certificate is provided, the public key.'
        importStatements: []
    aws_iot_indexing_configuration:
        subCategory: IoT Core
        description: Managing IoT Thing indexing.
        name: aws_iot_indexing_configuration
        title: aws_iot_indexing_configuration
        examples:
            - name: example
              manifest: |-
                {
                  "thing_indexing_configuration": [
                    {
                      "custom_field": [
                        {
                          "name": "shadow.desired.power",
                          "type": "Boolean"
                        },
                        {
                          "name": "attributes.version",
                          "type": "Number"
                        },
                        {
                          "name": "shadow.name.thing1shadow.desired.DefaultDesired",
                          "type": "String"
                        },
                        {
                          "name": "deviceDefender.securityProfile1.NUMBER_VALUE_BEHAVIOR.lastViolationValue.number",
                          "type": "Number"
                        }
                      ],
                      "device_defender_indexing_mode": "VIOLATIONS",
                      "named_shadow_indexing_mode": "ON",
                      "thing_connectivity_indexing_mode": "STATUS",
                      "thing_indexing_mode": "REGISTRY_AND_SHADOW"
                    }
                  ]
                }
        argumentDocs:
            thing_group_indexing_configuration: '- (Optional) Thing group indexing configuration. See below.'
            thing_group_indexing_configuration.custom_field: '- (Optional) A list of thing group fields to index. This list cannot contain any managed fields. See below.'
            thing_group_indexing_configuration.managed_field: '- (Optional) Contains fields that are indexed and whose types are already known by the Fleet Indexing service. See below.'
            thing_group_indexing_configuration.thing_group_indexing_mode: '- (Required) Thing group indexing mode. Valid values: OFF, ON.'
            thing_indexing_configuration: '- (Optional) Thing indexing configuration. See below.'
            thing_indexing_configuration.custom_field: '- (Optional) Contains custom field names and their data type. See below.'
            thing_indexing_configuration.custom_field.name: '- (Optional) The name of the field.'
            thing_indexing_configuration.custom_field.type: '- (Optional) The data type of the field. Valid values: Number, String, Boolean.'
            thing_indexing_configuration.device_defender_indexing_mode: '- (Optional) Device Defender indexing mode. Valid values: VIOLATIONS, OFF. Default: OFF.'
            thing_indexing_configuration.managed_field: '- (Optional) Contains fields that are indexed and whose types are already known by the Fleet Indexing service. See below.'
            thing_indexing_configuration.named_shadow_indexing_mode: '- (Optional) Named shadow indexing mode. Valid values: ON, OFF. Default: OFF.'
            thing_indexing_configuration.thing_connectivity_indexing_mode: '- (Optional) Thing connectivity indexing mode. Valid values: STATUS, OFF. Default: OFF.'
            thing_indexing_configuration.thing_indexing_mode: '- (Required) Thing indexing mode. Valid values: REGISTRY, REGISTRY_AND_SHADOW, OFF.'
        importStatements: []
    aws_iot_logging_options:
        subCategory: IoT Core
        description: Provides a resource to manage default logging options.
        name: aws_iot_logging_options
        title: aws_iot_logging_options
        examples:
            - name: example
              manifest: |-
                {
                  "default_log_level": "WARN",
                  "role_arn": "${aws_iam_role.example.arn}"
                }
              references:
                role_arn: aws_iam_role.example.arn
        argumentDocs:
            default_log_level: '- (Optional) The default logging level. Valid Values: "DEBUG", "INFO", "ERROR", "WARN", "DISABLED".'
            disable_all_logs: '- (Optional) If true all logs are disabled. The default is false.'
            role_arn: '- (Required) The ARN of the role that allows IoT to write to Cloudwatch logs.'
        importStatements: []
    aws_iot_policy:
        subCategory: IoT Core
        description: Provides an IoT policy.
        name: aws_iot_policy
        title: aws_iot_policy
        examples:
            - name: pubsub
              manifest: |-
                {
                  "name": "PubSubToAnyTopic",
                  "policy": "${jsonencode({\n    Version = \"2012-10-17\"\n    Statement = [\n      {\n        Action = [\n          \"iot:*\",\n        ]\n        Effect   = \"Allow\"\n        Resource = \"*\"\n      },\n    ]\n  })}"
                }
        argumentDocs:
            arn: '- The ARN assigned by AWS to this policy.'
            default_version_id: '- The default version of this policy.'
            name: '- (Required) The name of the policy.'
            policy: '- (Required) The policy document. This is a JSON formatted string. Use the IoT Developer Guide for more information on IoT Policies. For more information about building AWS IAM policy documents with Terraform, see the AWS IAM Policy Document Guide.'
        importStatements: []
    aws_iot_policy_attachment:
        subCategory: IoT Core
        description: Provides an IoT policy attachment.
        name: aws_iot_policy_attachment
        title: aws_iot_policy_attachment
        examples:
            - name: att
              manifest: |-
                {
                  "policy": "${aws_iot_policy.pubsub.name}",
                  "target": "${aws_iot_certificate.cert.arn}"
                }
              references:
                policy: aws_iot_policy.pubsub.name
                target: aws_iot_certificate.cert.arn
              dependencies:
                aws_iot_certificate.cert: |-
                    {
                      "active": true,
                      "csr": "${file(\"csr.pem\")}"
                    }
                aws_iot_policy.pubsub: |-
                    {
                      "name": "PubSubToAnyTopic",
                      "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": [\n        \"iot:*\"\n      ],\n      \"Effect\": \"Allow\",\n      \"Resource\": \"*\"\n    }\n  ]\n}\n"
                    }
        argumentDocs:
            policy: '- (Required) The name of the policy to attach.'
            target: '- (Required) The identity to which the policy is attached.'
        importStatements: []
    aws_iot_provisioning_template:
        subCategory: IoT Core
        description: Manages an IoT fleet provisioning template.
        name: aws_iot_provisioning_template
        title: aws_iot_provisioning_template
        examples:
            - name: fleet
              manifest: |-
                {
                  "description": "My provisioning template",
                  "name": "FleetTemplate",
                  "provisioning_role_arn": "${aws_iam_role.iot_fleet_provisioning.arn}",
                  "template_body": "${jsonencode({\n    Parameters = {\n      SerialNumber = { Type = \"String\" }\n    }\n\n    Resources = {\n      certificate = {\n        Properties = {\n          CertificateId = { Ref = \"AWS::IoT::Certificate::Id\" }\n          Status        = \"Active\"\n        }\n        Type = \"AWS::IoT::Certificate\"\n      }\n\n      policy = {\n        Properties = {\n          PolicyName = aws_iot_policy.device_policy.name\n        }\n        Type = \"AWS::IoT::Policy\"\n      }\n    }\n  })}"
                }
              references:
                provisioning_role_arn: aws_iam_role.iot_fleet_provisioning.arn
              dependencies:
                aws_iam_role.iot_fleet_provisioning: |-
                    {
                      "assume_role_policy": "${data.aws_iam_policy_document.iot_assume_role_policy.json}",
                      "name": "IoTProvisioningServiceRole",
                      "path": "/service-role/"
                    }
                aws_iam_role_policy_attachment.iot_fleet_provisioning_registration: |-
                    {
                      "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSIoTThingsRegistration",
                      "role": "${aws_iam_role.iot_fleet_provisioning.name}"
                    }
                aws_iot_policy.device_policy: |-
                    {
                      "name": "DevicePolicy",
                      "policy": "${data.aws_iam_policy_document.device_policy.json}"
                    }
        argumentDocs:
            arn: '- The ARN that identifies the provisioning template.'
            default_version_id: '- The default version of the fleet provisioning template.'
            description: '- (Optional) The description of the fleet provisioning template.'
            enabled: '- (Optional) True to enable the fleet provisioning template, otherwise false.'
            name: '- (Required) The name of the fleet provisioning template.'
            pre_provisioning_hook: '- (Optional) Creates a pre-provisioning hook template. Details below.'
            pre_provisioning_hook.payload_version: '- (Optional) The version of the payload that was sent to the target function. The only valid (and the default) payload version is "2020-04-01".'
            pre_provisioning_hook.target_arb: '- (Optional) The ARN of the target function.'
            provisioning_role_arn: '- (Required) The role ARN for the role associated with the fleet provisioning template. This IoT role grants permission to provision a device.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            template_body: '- (Required) The JSON formatted contents of the fleet provisioning template.'
        importStatements: []
    aws_iot_role_alias:
        subCategory: IoT Core
        description: Provides an IoT role alias.
        name: aws_iot_role_alias
        title: aws_iot_role_alias
        examples:
            - name: alias
              manifest: |-
                {
                  "alias": "Thermostat-dynamodb-access-role-alias",
                  "role_arn": "${aws_iam_role.role.arn}"
                }
              references:
                role_arn: aws_iam_role.role.arn
              dependencies:
                aws_iam_role.role: |-
                    {
                      "assume_role_policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Principal\": {\"Service\": \"credentials.iot.amazonaws.com\",\n      \"Action\": \"sts:AssumeRole\"\n    }\n  ]\n}\n",
                      "name": "dynamodb-access-role"
                    }
        argumentDocs:
            alias: '- (Required) The name of the role alias.'
            arn: '- The ARN assigned by AWS to this role alias.'
            credential_duration: '- (Optional) The duration of the credential, in seconds. If you do not specify a value for this setting, the default maximum of one hour is applied. This setting can have a value from 900 seconds (15 minutes) to 43200 seconds (12 hours).'
            role_arn: '- (Required) The identity of the role to which the alias refers.'
        importStatements: []
    aws_iot_thing:
        subCategory: IoT Core
        description: Creates and manages an AWS IoT Thing.
        name: aws_iot_thing
        title: aws_iot_thing
        examples:
            - name: example
              manifest: |-
                {
                  "attributes": {
                    "First": "examplevalue"
                  },
                  "name": "example"
                }
        argumentDocs:
            arn: '- The ARN of the thing.'
            attributes: '- (Optional) Map of attributes of the thing.'
            default_client_id: '- The default client ID.'
            name: '- (Required) The name of the thing.'
            thing_type_name: '- (Optional) The thing type name.'
            version: '- The current version of the thing record in the registry.'
        importStatements: []
    aws_iot_thing_group:
        subCategory: IoT Core
        description: Manages an AWS IoT Thing Group.
        name: aws_iot_thing_group
        title: aws_iot_thing_group
        examples:
            - name: parent
              manifest: |-
                {
                  "name": "parent"
                }
            - name: example
              manifest: |-
                {
                  "name": "example",
                  "parent_group_name": "${aws_iot_thing_group.parent.name}",
                  "properties": [
                    {
                      "attribute_payload": [
                        {
                          "attributes": {
                            "One": "11111",
                            "Two": "TwoTwo"
                          }
                        }
                      ],
                      "description": "This is my thing group"
                    }
                  ],
                  "tags": {
                    "terraform": "true"
                  }
                }
              references:
                parent_group_name: aws_iot_thing_group.parent.name
        argumentDocs:
            arn: '- The ARN of the Thing Group.'
            attribute_payload: '- (Optional) The Thing Group attributes. Defined below.'
            attributes: '- (Optional) Key-value map.'
            description: '- (Optional) A description of the Thing Group.'
            id: '- The Thing Group ID.'
            name: '- (Required) The name of the Thing Group.'
            parent_group_name: '- (Optional) The name of the parent Thing Group.'
            properties: '- (Optional) The Thing Group properties. Defined below.'
            tags: '- (Optional) Key-value mapping of resource tags'
            version: '- The current version of the Thing Group record in the registry.'
        importStatements: []
    aws_iot_thing_group_membership:
        subCategory: IoT Core
        description: Adds an IoT Thing to an IoT Thing Group.
        name: aws_iot_thing_group_membership
        title: aws_iot_thing_group_membership
        examples:
            - name: example
              manifest: |-
                {
                  "override_dynamic_group": true,
                  "thing_group_name": "example-group",
                  "thing_name": "example-thing"
                }
        argumentDocs:
            id: '- The membership ID.'
            override_dynamic_group: '- (Optional) Override dynamic thing groups with static thing groups when 10-group limit is reached. If a thing belongs to 10 thing groups, and one or more of those groups are dynamic thing groups, adding a thing to a static group removes the thing from the last dynamic group.'
            thing_group_name: '- (Required) The name of the group to which you are adding a thing.'
            thing_name: '- (Required) The name of the thing to add to a group.'
        importStatements: []
    aws_iot_thing_principal_attachment:
        subCategory: IoT Core
        description: Provides AWS IoT Thing Principal attachment.
        name: aws_iot_thing_principal_attachment
        title: aws_iot_thing_principal_attachment
        examples:
            - name: att
              manifest: |-
                {
                  "principal": "${aws_iot_certificate.cert.arn}",
                  "thing": "${aws_iot_thing.example.name}"
                }
              references:
                principal: aws_iot_certificate.cert.arn
                thing: aws_iot_thing.example.name
              dependencies:
                aws_iot_certificate.cert: |-
                    {
                      "active": true,
                      "csr": "${file(\"csr.pem\")}"
                    }
                aws_iot_thing.example: |-
                    {
                      "name": "example"
                    }
        argumentDocs:
            principal: '- (Required) The AWS IoT Certificate ARN or Amazon Cognito Identity ID.'
            thing: '- (Required) The name of the thing.'
        importStatements: []
    aws_iot_thing_type:
        subCategory: IoT Core
        description: Creates and manages an AWS IoT Thing Type.
        name: aws_iot_thing_type
        title: aws_iot_thing_type
        examples:
            - name: foo
              manifest: |-
                {
                  "name": "my_iot_thing"
                }
        argumentDocs:
            arn: '- The ARN of the created AWS IoT Thing Type.'
            deprecated: '- (Optional, Defaults to false) Whether the thing type is deprecated. If true, no new things could be associated with this type.'
            description: '- (Optional, Forces New Resource) The description of the thing type.'
            name: '- (Required, Forces New Resource) The name of the thing type.'
            properties: '- (Optional), Configuration block that can contain the following properties of the thing type:'
            searchable_attributes: '- (Optional, Forces New Resource) A list of searchable thing attribute names.'
            tags: '- (Optional) Key-value mapping of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_iot_topic_rule:
        subCategory: IoT Core
        description: Creates and manages an AWS IoT topic rule
        name: aws_iot_topic_rule
        title: aws_iot_topic_rule
        examples:
            - name: rule
              manifest: |-
                {
                  "description": "Example rule",
                  "enabled": true,
                  "error_action": [
                    {
                      "sns": [
                        {
                          "message_format": "RAW",
                          "role_arn": "${aws_iam_role.role.arn}",
                          "target_arn": "${aws_sns_topic.myerrortopic.arn}"
                        }
                      ]
                    }
                  ],
                  "name": "MyRule",
                  "sns": [
                    {
                      "message_format": "RAW",
                      "role_arn": "${aws_iam_role.role.arn}",
                      "target_arn": "${aws_sns_topic.mytopic.arn}"
                    }
                  ],
                  "sql": "SELECT * FROM 'topic/test'",
                  "sql_version": "2016-03-23"
                }
              references:
                error_action.sns.role_arn: aws_iam_role.role.arn
                error_action.sns.target_arn: aws_sns_topic.myerrortopic.arn
                sns.role_arn: aws_iam_role.role.arn
                sns.target_arn: aws_sns_topic.mytopic.arn
              dependencies:
                aws_iam_role.role: |-
                    {
                      "assume_role_policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Principal\": {\n        \"Service\": \"iot.amazonaws.com\"\n      },\n      \"Action\": \"sts:AssumeRole\"\n    }\n  ]\n}\n",
                      "name": "myrole"
                    }
                aws_iam_role_policy.iam_policy_for_lambda: |-
                    {
                      "name": "mypolicy",
                      "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n        \"Effect\": \"Allow\",\n        \"Action\": [\n            \"sns:Publish\"\n        ],\n        \"Resource\": \"${aws_sns_topic.mytopic.arn}\"\n    }\n  ]\n}\n",
                      "role": "${aws_iam_role.role.id}"
                    }
                aws_sns_topic.myerrortopic: |-
                    {
                      "name": "myerrortopic"
                    }
                aws_sns_topic.mytopic: |-
                    {
                      "name": "mytopic"
                    }
        argumentDocs:
            alarm_name: '- (Required) The CloudWatch alarm name.'
            arn: '- The ARN of the topic rule'
            bucket_name: '- (Required) The Amazon S3 bucket name.'
            canned_acl: '- (Optional) The Amazon S3 canned ACL that controls access to the object identified by the object key. Valid values.'
            channel_name: '- (Required) Name of AWS IOT Analytics channel.'
            client_properties: '- (Required) Properties of the Apache Kafka producer client. For more info, see the AWS documentation.'
            confirmation_url: '- (Optional) The HTTPS URL used to verify ownership of url.'
            database_name: '- (Required) The name of an Amazon Timestream database.'
            delivery_stream_name: '- (Required) The delivery stream name.'
            description: '- (Optional) The description of the rule.'
            destination_arn: '- (Required) The ARN of Kafka action''s VPC aws_iot_topic_rule_destination .'
            dimension: '- (Required) Configuration blocks with metadata attributes of the time series that are written in each measure record. Nested arguments below.'
            enabled: '- (Required) Specifies whether the rule is enabled.'
            endpoint: '- (Required) The endpoint of your Elasticsearch domain.'
            error_action: '- (Optional) Configuration block with error action to be associated with the rule. See the documentation for cloudwatch_alarm, cloudwatch_logs, cloudwatch_metric, dynamodb, dynamodbv2, elasticsearch, firehose, http, iot_analytics, iot_events, kafka, kinesis, lambda, republish, s3, sns, sqs, step_functions, timestream configuration blocks for further configuration details.'
            execution_name_prefix: '- (Optional) The prefix used to generate, along with a UUID, the unique state machine execution name.'
            function_arn: '- (Required) The ARN of the Lambda function.'
            hash_key_field: '- (Required) The hash key name.'
            hash_key_type: '- (Optional) The hash key type. Valid values are "STRING" or "NUMBER".'
            hash_key_value: '- (Required) The hash key value.'
            http_header: '- (Optional) Custom HTTP header IoT Core should send. It is possible to define more than one custom header.'
            id: '- (Required) The unique identifier for the document you are storing.'
            index: '- (Required) The Elasticsearch index where you want to store your data.'
            input_name: '- (Required) The name of the AWS IoT Events input.'
            key: '- (Required) The name of the HTTP header.'
            log_group_name: '- (Required) The CloudWatch log group name.'
            message_format: '- (Required) The message format of the message to publish. Accepted values are "JSON" and "RAW".'
            message_id: '- (Optional) Use this to ensure that only one input (message) with a given messageId is processed by an AWS IoT Events detector.'
            metric_name: '- (Required) The CloudWatch metric name.'
            metric_namespace: '- (Required) The CloudWatch metric namespace name.'
            metric_timestamp: '- (Optional) An optional Unix timestamp (http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp).'
            metric_unit: '- (Required) The metric unit (supported units can be found here: http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit)'
            metric_value: '- (Required) The CloudWatch metric value.'
            name: '- (Required) The name of the rule.'
            operation: '- (Optional) The operation. Valid values are "INSERT", "UPDATE", or "DELETE".'
            partition: '- (Optional) The Kafka message partition.'
            partition_key: '- (Optional) The partition key.'
            payload_field: '- (Optional) The action payload.'
            put_item: '- (Required) Configuration block with DynamoDB Table to which the message will be written. Nested arguments below.'
            qos: '- (Optional) The Quality of Service (QoS) level to use when republishing messages. Valid values are 0 or 1. The default value is 0.'
            queue_url: '- (Required) The URL of the Amazon SQS queue.'
            range_key_field: '- (Optional) The range key name.'
            range_key_type: '- (Optional) The range key type. Valid values are "STRING" or "NUMBER".'
            range_key_value: '- (Optional) The range key value.'
            role_arn: '- (Required) The IAM role ARN that allows access to the CloudWatch alarm.'
            separator: '- (Optional) A character separator that is used to separate records written to the Firehose stream. Valid values are: ''\n'' (newline), ''\t'' (tab), ''\r\n'' (Windows newline), '','' (comma).'
            sql: '- (Required) The SQL statement used to query the topic. For more information, see AWS IoT SQL Reference (http://docs.aws.amazon.com/iot/latest/developerguide/iot-rules.html#aws-iot-sql-reference) in the AWS IoT Developer Guide.'
            sql_version: '- (Required) The version of the SQL rules engine to use when evaluating the rule.'
            state_machine_name: '- (Required) The name of the Step Functions state machine whose execution will be started.'
            state_reason: '- (Required) The reason for the alarm change.'
            state_value: '- (Required) The value of the alarm state. Acceptable values are: OK, ALARM, INSUFFICIENT_DATA.'
            stream_name: '- (Required) The name of the Amazon Kinesis stream.'
            table_name: '- (Required) The name of the DynamoDB table.'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            target_arn: '- (Required) The ARN of the SNS topic.'
            timestamp: '- (Optional) Configuration block specifying an application-defined value to replace the default value assigned to the Timestream record''s timestamp in the time column. Nested arguments below.'
            topic: '- (Optional) The Kafka topic for messages to be sent to the Kafka broker.'
            type: '- (Required) The type of document you are storing.'
            unit: '- (Required) The precision of the timestamp value that results from the expression described in value. Valid values: SECONDS, MILLISECONDS, MICROSECONDS, NANOSECONDS.'
            url: '- (Required) The HTTPS URL.'
            use_base64: '- (Required) Specifies whether to use Base64 encoding.'
            value: '- (Required) The value of the HTTP header.'
        importStatements: []
    aws_iot_topic_rule_destination:
        subCategory: IoT Core
        description: Creates and manages an AWS IoT topic rule destination
        name: aws_iot_topic_rule_destination
        title: aws_iot_topic_rule_destination
        examples:
            - name: example
              manifest: |-
                {
                  "vpc_configuration": [
                    {
                      "role_arn": "${aws_iam_role.example.arn}",
                      "security_groups": [
                        "${aws_security_group.example.id}"
                      ],
                      "subnet_ids": "${aws_subnet.example[*].id}",
                      "vpc_id": "${aws_vpc.example.id}"
                    }
                  ]
                }
              references:
                vpc_configuration.role_arn: aws_iam_role.example.arn
                vpc_configuration.vpc_id: aws_vpc.example.id
        argumentDocs:
            arn: '- The ARN of the topic rule destination'
            enabled: '- (Optional) Whether or not to enable the destination. Default: true.'
            role_arn: '- (Required) The ARN of a role that has permission to create and attach to elastic network interfaces (ENIs).'
            security_groups: '- (Optional) The security groups of the VPC destination.'
            subnet_ids: '- (Required) The subnet IDs of the VPC destination.'
            vpc_configuration: '- (Required) Configuration of the virtual private cloud (VPC) connection. For more info, see the AWS documentation.'
            vpc_id: '- (Required) The ID of the VPC.'
        importStatements: []
    aws_kendra_experience:
        subCategory: Kendra
        description: Terraform resource for managing an AWS Kendra Experience.
        name: aws_kendra_experience
        title: aws_kendra_experience
        examples:
            - name: example
              manifest: |-
                {
                  "configuration": [
                    {
                      "content_source_configuration": [
                        {
                          "direct_put_content": true,
                          "faq_ids": [
                            "${aws_kendra_faq.example.faq_id}"
                          ]
                        }
                      ],
                      "user_identity_configuration": [
                        {
                          "identity_attribute_name": "12345ec453-1546651e-79c4-4554-91fa-00b43ccfa245"
                        }
                      ]
                    }
                  ],
                  "description": "My Kendra Experience",
                  "index_id": "${aws_kendra_index.example.id}",
                  "name": "example",
                  "role_arn": "${aws_iam_role.example.arn}"
                }
              references:
                index_id: aws_kendra_index.example.id
                role_arn: aws_iam_role.example.arn
        argumentDocs:
            arn: '- ARN of the Experience.'
            configuration: '- (Optional) Configuration information for your Amazon Kendra experience. Terraform will only perform drift detection of its value when present in a configuration. Detailed below.'
            configuration.content_source_configuration: '- (Optional, Required if user_identity_configuration not provided) The identifiers of your data sources and FAQs. Or, you can specify that you want to use documents indexed via the BatchPutDocument API. Terraform will only perform drift detection of its value when present in a configuration. Detailed below.'
            configuration.content_source_configuration.data_source_ids: '- (Optional) The identifiers of the data sources you want to use for your Amazon Kendra experience. Maximum number of 100 items.'
            configuration.content_source_configuration.direct_put_content: '- (Optional) Whether to use documents you indexed directly using the BatchPutDocument API. Defaults to false.'
            configuration.content_source_configuration.faq_ids: '- (Optional) The identifier of the FAQs that you want to use for your Amazon Kendra experience. Maximum number of 100 items.'
            configuration.user_identity_configuration: '- (Optional, Required if content_source_configuration not provided) The AWS SSO field name that contains the identifiers of your users, such as their emails. Detailed below.'
            create: '- (Optional, Default: 30m)'
            delete: '- (Optional, Default: 30m)'
            description: '- (Optional, Forces new resource if removed) A description for your Amazon Kendra experience.'
            endpoint: '- The endpoint of your Amazon Kendra experience.'
            endpoint_type: '- The type of endpoint for your Amazon Kendra experience.'
            endpoints: '- Shows the endpoint URLs for your Amazon Kendra experiences. The URLs are unique and fully hosted by AWS.'
            experience_id: '- The unique identifier of the experience.'
            id: '- The unique identifiers of the experience and index separated by a slash (/).'
            index_id: '- (Required, Forces new resource) The identifier of the index for your Amazon Kendra experience.'
            name: '- (Required) A name for your Amazon Kendra experience.'
            role_arn: '- (Required) The Amazon Resource Name (ARN) of a role with permission to access Query API, QuerySuggestions API, SubmitFeedback API, and AWS SSO that stores your user and group information. For more information, see IAM roles for Amazon Kendra.'
            status: '- The current processing status of your Amazon Kendra experience.'
            update: '- (Optional, Default: 30m)'
            user_identity_configuration.identity_attribute_name: '- (Required) The AWS SSO field name that contains the identifiers of your users, such as their emails.'
        importStatements: []
    aws_kendra_faq:
        subCategory: Kendra
        description: Terraform resource for managing an AWS Kendra FAQ.
        name: aws_kendra_faq
        title: aws_kendra_faq
        examples:
            - name: example
              manifest: |-
                {
                  "index_id": "${aws_kendra_index.example.id}",
                  "name": "Example",
                  "role_arn": "${aws_iam_role.example.arn}",
                  "source_s3_path": [
                    {
                      "bucket": "${aws_s3_bucket.example.id}",
                      "key": "${aws_s3_object.example.key}"
                    }
                  ],
                  "tags": {
                    "Name": "Example Kendra Faq"
                  }
                }
              references:
                index_id: aws_kendra_index.example.id
                role_arn: aws_iam_role.example.arn
                source_s3_path.bucket: aws_s3_bucket.example.id
                source_s3_path.key: aws_s3_object.example.key
            - name: example
              manifest: |-
                {
                  "file_format": "CSV",
                  "index_id": "${aws_kendra_index.example.id}",
                  "name": "Example",
                  "role_arn": "${aws_iam_role.example.arn}",
                  "source_s3_path": [
                    {
                      "bucket": "${aws_s3_bucket.example.id}",
                      "key": "${aws_s3_object.example.key}"
                    }
                  ]
                }
              references:
                index_id: aws_kendra_index.example.id
                role_arn: aws_iam_role.example.arn
                source_s3_path.bucket: aws_s3_bucket.example.id
                source_s3_path.key: aws_s3_object.example.key
            - name: example
              manifest: |-
                {
                  "index_id": "${aws_kendra_index.example.id}",
                  "language_code": "en",
                  "name": "Example",
                  "role_arn": "${aws_iam_role.example.arn}",
                  "source_s3_path": [
                    {
                      "bucket": "${aws_s3_bucket.example.id}",
                      "key": "${aws_s3_object.example.key}"
                    }
                  ]
                }
              references:
                index_id: aws_kendra_index.example.id
                role_arn: aws_iam_role.example.arn
                source_s3_path.bucket: aws_s3_bucket.example.id
                source_s3_path.key: aws_s3_object.example.key
        argumentDocs:
            arn: '- ARN of the FAQ.'
            create: '- (Optional, Default: 30m)'
            created_at: '- The Unix datetime that the FAQ was created.'
            delete: '- (Optional, Default: 30m)'
            error_message: '- When the Status field value is FAILED, this contains a message that explains why.'
            faq_id: '- The identifier of the FAQ.'
            id: '- The unique identifiers of the FAQ and index separated by a slash (/)'
            index_id: '- (Required, Forces new resource) The identifier of the index for a FAQ.'
            name: '- (Required, Forces new resource) The name that should be associated with the FAQ.'
            role_arn: '- (Required, Forces new resource) The Amazon Resource Name (ARN) of a role with permission to access the S3 bucket that contains the FAQs. For more information, see IAM Roles for Amazon Kendra.'
            s3_path: '- (Required, Forces new resource) The S3 location of the FAQ input data. Detailed below.'
            s3_path.bucket: '- (Required, Forces new resource) The name of the S3 bucket that contains the file.'
            s3_path.description: '- (Optional, Forces new resource) The description for a FAQ.'
            s3_path.file_format: '- (Optional, Forces new resource) The file format used by the input files for the FAQ. Valid Values are CSV, CSV_WITH_HEADER, JSON.'
            s3_path.key: '- (Required, Forces new resource) The name of the file.'
            s3_path.language_code: '- (Optional, Forces new resource) The code for a language. This shows a supported language for the FAQ document. English is supported by default. For more information on supported languages, including their codes, see Adding documents in languages other than English.'
            s3_path.tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            status: '- The status of the FAQ. It is ready to use when the status is ACTIVE.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            updated_at: '- The date and time that the FAQ was last updated.'
        importStatements: []
    aws_kendra_index:
        subCategory: Kendra
        description: Provides an Amazon Kendra Index resource.
        name: aws_kendra_index
        title: aws_kendra_index
        examples:
            - name: example
              manifest: |-
                {
                  "description": "example",
                  "edition": "DEVELOPER_EDITION",
                  "name": "example",
                  "role_arn": "${aws_iam_role.this.arn}",
                  "tags": {
                    "Key1": "Value1"
                  }
                }
              references:
                role_arn: aws_iam_role.this.arn
            - name: example
              manifest: |-
                {
                  "capacity_units": [
                    {
                      "query_capacity_units": 2,
                      "storage_capacity_units": 2
                    }
                  ],
                  "edition": "DEVELOPER_EDITION",
                  "name": "example",
                  "role_arn": "${aws_iam_role.this.arn}"
                }
              references:
                role_arn: aws_iam_role.this.arn
            - name: example
              manifest: |-
                {
                  "name": "example",
                  "role_arn": "${aws_iam_role.this.arn}",
                  "server_side_encryption_configuration": [
                    {
                      "kms_key_id": "${data.aws_kms_key.this.arn}"
                    }
                  ]
                }
              references:
                role_arn: aws_iam_role.this.arn
                server_side_encryption_configuration.kms_key_id: data.aws_kms_key.this.arn
            - name: example
              manifest: |-
                {
                  "name": "example",
                  "role_arn": "${aws_iam_role.this.arn}",
                  "user_token_configurations": [
                    {
                      "json_token_type_configuration": [
                        {
                          "group_attribute_field": "groups",
                          "user_name_attribute_field": "username"
                        }
                      ]
                    }
                  ]
                }
              references:
                role_arn: aws_iam_role.this.arn
        argumentDocs:
            arn: '- The Amazon Resource Name (ARN) of the Index.'
            capacity_units: '- (Optional) A block that sets the number of additional document storage and query capacity units that should be used by the index.'
            capacity_units.query_capacity_units: '- (Required) The amount of extra query capacity for an index and GetQuerySuggestions capacity. For more information, refer to QueryCapacityUnits.'
            capacity_units.storage_capacity_units: '- (Required) The amount of extra storage capacity for an index. A single capacity unit provides 30 GB of storage space or 100,000 documents, whichever is reached first. Minimum value of 0.'
            created_at: '- The Unix datetime that the index was created.'
            description: '- (Optional) The description of the Index.'
            document_metadata_configuration_updates: '- One or more blocks that specify the configuration settings for any metadata applied to the documents in the index. Documented below.'
            document_metadata_configuration_updates.name: '- The name of the index field. Minimum length of 1. Maximum length of 30.'
            document_metadata_configuration_updates.relevance: '- A block that provides manual tuning parameters to determine how the field affects the search results. Documented below.'
            document_metadata_configuration_updates.relevance.duration: '- Specifies the time period that the boost applies to. For more information, refer to Duration.'
            document_metadata_configuration_updates.relevance.freshness: '- Indicates that this field determines how "fresh" a document is. For more information, refer to Freshness.'
            document_metadata_configuration_updates.relevance.importance: '- The relative importance of the field in the search. Larger numbers provide more of a boost than smaller numbers. Minimum value of 1. Maximum value of 10.'
            document_metadata_configuration_updates.relevance.rank_order: '- Determines how values should be interpreted. For more information, refer to RankOrder.'
            document_metadata_configuration_updates.relevance.values_importance_map: '- A list of values that should be given a different boost when they appear in the result list. For more information, refer to ValueImportanceMap.'
            document_metadata_configuration_updates.search: '- A block that provides information about how the field is used during a search. Documented below.'
            document_metadata_configuration_updates.type: '- The data type of the index field. Valid values are STRING_VALUE, STRING_LIST_VALUE, LONG_VALUE, DATE_VALUE.'
            edition: '- (Optional) The Amazon Kendra edition to use for the index. Choose DEVELOPER_EDITION for indexes intended for development, testing, or proof of concept. Use ENTERPRISE_EDITION for your production databases. Once you set the edition for an index, it can''t be changed. Defaults to ENTERPRISE_EDITION'
            error_message: '- When the Status field value is FAILED, this contains a message that explains why.'
            id: '- The identifier of the Index.'
            index_statistics: '- A block that provides information about the number of FAQ questions and answers and the number of text documents indexed. Documented below.'
            index_statistics.faq_statistics: '- A block that specifies the number of question and answer topics in the index. Documented below.'
            index_statistics.faq_statistics.indexed_question_answers_count: '- The total number of FAQ questions and answers contained in the index.'
            index_statistics.text_document_statistics: '- A block that specifies the number of text documents indexed.'
            jwt_token_type_configuration.claim_regex: '- (Optional) The regular expression that identifies the claim. Minimum length of 1. Maximum length of 100.'
            jwt_token_type_configuration.group_attribute_field: '- (Optional) The group attribute field. Minimum length of 1. Maximum length of 100.'
            jwt_token_type_configuration.issuer: '- (Optional) The issuer of the token. Minimum length of 1. Maximum length of 65.'
            jwt_token_type_configuration.key_location: '- (Required) The location of the key. Valid values are URL or SECRET_MANAGER'
            jwt_token_type_configuration.secrets_manager_arn: '- (Optional) The Amazon Resource Name (ARN) of the secret.'
            jwt_token_type_configuration.url: '- (Optional) The signing key URL. Valid pattern is ^(https?|ftp|file):\/\/([^\s]*)'
            jwt_token_type_configuration.user_name_attribute_field: '- (Optional) The user name attribute field. Minimum length of 1. Maximum length of 100.'
            name: '- (Required) Specifies the name of the Index.'
            role_arn: '- (Required) An AWS Identity and Access Management (IAM) role that gives Amazon Kendra permissions to access your Amazon CloudWatch logs and metrics. This is also the role you use when you call the BatchPutDocument API to index documents from an Amazon S3 bucket.'
            search.displayable: '- Determines whether the field is returned in the query response. The default is true.'
            search.facetable: '- Indicates that the field can be used to create search facets, a count of results for each value in the field. The default is false.'
            search.searchable: '- Determines whether the field is used in the search. If the Searchable field is true, you can use relevance tuning to manually tune how Amazon Kendra weights the field in the search. The default is true for string fields and false for number and date fields.'
            search.sortable: '- Determines whether the field can be used to sort the results of a query. If you specify sorting on a field that does not have Sortable set to true, Amazon Kendra returns an exception. The default is false.'
            server_side_encryption_configuration: '- (Optional) A block that specifies the identifier of the AWS KMS customer managed key (CMK) that''s used to encrypt data indexed by Amazon Kendra. Amazon Kendra doesn''t support asymmetric CMKs. Documented below.'
            server_side_encryption_configuration.kms_key_id: '- (Optional) The identifier of the AWS KMScustomer master key (CMK). Amazon Kendra doesn''t support asymmetric CMKs.'
            status: '- The current status of the index. When the value is ACTIVE, the index is ready for use. If the Status field value is FAILED, the error_message field contains a message that explains why.'
            tags: |-
                - (Optional) Tags to apply to the Index. If configured with a provider
                default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            text_document_statistics.indexed_text_bytes: '- The total size, in bytes, of the indexed documents.'
            text_document_statistics.indexed_text_documents_count: '- The number of text documents indexed.'
            timeouts.create: '- (Defaults to 40 mins) Used when creating the index.'
            timeouts.delete: '- (Defaults to 40 mins) Used when deleting the index.'
            timeouts.update: '- (Defaults to 40 mins) Used when updating the index.'
            updated_at: '- The Unix datetime that the index was last updated.'
            user_context_policy: '- (Optional) The user context policy. Valid values are ATTRIBUTE_FILTER or USER_TOKEN. For more information, refer to UserContextPolicy. Defaults to ATTRIBUTE_FILTER.'
            user_group_resolution_configuration: '- (Optional) A block that enables fetching access levels of groups and users from an AWS Single Sign-On identity source. To configure this, see UserGroupResolutionConfiguration. Documented below.'
            user_group_resolution_configuration.user_group_resolution_mode: '- (Required) The identity store provider (mode) you want to use to fetch access levels of groups and users. AWS Single Sign-On is currently the only available mode. Your users and groups must exist in an AWS SSO identity source in order to use this mode. Valid Values are AWS_SSO or NONE.'
            user_token_configurations: '- (Optional) A block that specifies the user token configuration. Documented below.'
            user_token_configurations.json_token_type_configuration: '- (Optional) A block that specifies the information about the JSON token type configuration.'
            user_token_configurations.json_token_type_configuration.group_attribute_field: '- (Required) The group attribute field. Minimum length of 1. Maximum length of 2048.'
            user_token_configurations.json_token_type_configuration.user_name_attribute_field: '- (Required) The user name attribute field. Minimum length of 1. Maximum length of 2048.'
            user_token_configurations.jwt_token_type_configuration: '- (Optional) A block that specifies the information about the JWT token type configuration.'
        importStatements: []
    aws_kendra_query_suggestions_block_list:
        subCategory: Kendra
        description: Terraform resource for managing an AWS Kendra block list used for query suggestions for an index
        name: aws_kendra_query_suggestions_block_list
        title: aws_kendra_query_suggestions_block_list
        examples:
            - name: example
              manifest: |-
                {
                  "index_id": "${aws_kendra_index.example.id}",
                  "name": "Example",
                  "role_arn": "${aws_iam_role.example.arn}",
                  "source_s3_path": [
                    {
                      "bucket": "${aws_s3_bucket.example.id}",
                      "key": "example/suggestions.txt"
                    }
                  ],
                  "tags": {
                    "Name": "Example Kendra Index"
                  }
                }
              references:
                index_id: aws_kendra_index.example.id
                role_arn: aws_iam_role.example.arn
                source_s3_path.bucket: aws_s3_bucket.example.id
        argumentDocs:
            arn: '- ARN of the block list.'
            aws_kendra_query_suggestions_block_list.create: '- (Optional, Default: 30m)'
            aws_kendra_query_suggestions_block_list.delete: '- (Optional, Default: 30m)'
            aws_kendra_query_suggestions_block_list.update: '- (Optional, Default: 30m)'
            index_id: '- (Required, Forces new resource) The identifier of the index for a block list.'
            name: '- (Required) The name for the block list.'
            query_suggestions_block_list_id: '- The unique indentifier of the block list.'
            role_arn: '- (Required) The IAM (Identity and Access Management) role used to access the block list text file in S3.'
            source_s3_path: '- (Required) The S3 path where your block list text file sits in S3. Detailed below.'
            source_s3_path.bucket: '- (Required) The name of the S3 bucket that contains the file.'
            source_s3_path.description: '- (Optional) The description for a block list.'
            source_s3_path.key: '- (Required) The name of the file.'
            source_s3_path.tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_kendra_thesaurus:
        subCategory: Kendra
        description: Terraform resource for managing an AWS Kendra Thesaurus.
        name: aws_kendra_thesaurus
        title: aws_kendra_thesaurus
        examples:
            - name: example
              manifest: |-
                {
                  "index_id": "${aws_kendra_index.example.id}",
                  "name": "Example",
                  "role_arn": "${aws_iam_role.example.arn}",
                  "source_s3_path": [
                    {
                      "bucket": "${aws_s3_bucket.example.id}",
                      "key": "${aws_s3_object.example.key}"
                    }
                  ],
                  "tags": {
                    "Name": "Example Kendra Thesaurus"
                  }
                }
              references:
                index_id: aws_kendra_index.example.id
                role_arn: aws_iam_role.example.arn
                source_s3_path.bucket: aws_s3_bucket.example.id
                source_s3_path.key: aws_s3_object.example.key
        argumentDocs:
            arn: '- ARN of the thesaurus.'
            create: '- (Optional, Default: 30m)'
            delete: '- (Optional, Default: 30m)'
            id: '- The unique identifiers of the thesaurus and index separated by a slash (/).'
            index_id: '- (Required, Forces new resource) The identifier of the index for a thesaurus.'
            name: '- (Required) The name for the thesaurus.'
            role_arn: '- (Required) The IAM (Identity and Access Management) role used to access the thesaurus file in S3.'
            source_s3_path: '- (Required) The S3 path where your thesaurus file sits in S3. Detailed below.'
            source_s3_path.bucket: '- (Required) The name of the S3 bucket that contains the file.'
            source_s3_path.description: '- (Optional) The description for a thesaurus.'
            source_s3_path.key: '- (Required) The name of the file.'
            source_s3_path.tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            status: '- The current status of the thesaurus.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            update: '- (Optional, Default: 30m)'
        importStatements: []
    aws_key_pair:
        subCategory: EC2 (Elastic Compute Cloud)
        description: Provides a Key Pair resource. Currently this supports importing an existing key pair but not creating a new key pair.
        name: aws_key_pair
        title: aws_key_pair
        examples:
            - name: deployer
              manifest: |-
                {
                  "key_name": "deployer-key",
                  "public_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQD3F6tyPEFEzV0LX3X8BsXdMsQz1x2cEikKDEY0aIj41qgxMCP/iteneqXSIFZBp5vizPvaoIR3Um9xK7PGoW8giupGn+EPuxIA4cDM4vzOqOkiMPhz5XK0whEjkVzTo4+S0puvDZuwIsdiW9mxhJc7tgBNL0cYlWSYVkz4G/fslNfRPW5mYAM49f4fhtxPb5ok4Q2Lg9dPKVHO/Bgeu5woMc7RY0p1ej6D4CKFE6lymSDJpW0YHX/wqE9+cfEauh7xZcG0q9t2ta6F6fmX0agvpFyZo8aFbXeUBr7osSCJNgvavWbM/06niWrOvYX2xwWdhXmXSrbX8ZbabVohBK41 email@example.com"
                }
        argumentDocs:
            arn: '- The key pair ARN.'
            fingerprint: '- The MD5 public key fingerprint as specified in section 4 of RFC 4716.'
            id: '- The key pair name.'
            key_name: '- (Optional) The name for the key pair. If neither key_name nor key_name_prefix is provided, Terraform will create a unique key name using the prefix terraform-.'
            key_name_prefix: '- (Optional) Creates a unique name beginning with the specified prefix. Conflicts with key_name. If neither key_name nor key_name_prefix is provided, Terraform will create a unique key name using the prefix terraform-.'
            key_pair_id: '- The key pair ID.'
            key_type: '- The type of key pair.'
            public_key: '- (Required) The public key material.'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_keyspaces_keyspace:
        subCategory: Keyspaces (for Apache Cassandra)
        description: Provides a Keyspaces Keyspace.
        name: aws_keyspaces_keyspace
        title: aws_keyspaces_keyspace
        examples:
            - name: example
              manifest: |-
                {
                  "name": "my_keyspace"
                }
        argumentDocs:
            arn: '- The ARN of the keyspace.'
            create: '- (Default 1 minute) Used for keyspace creation'
            delete: '- (Default 1 minute) Used for keyspace deletion'
            id: '- The name of the keyspace.'
            name: '- (Required, Forces new resource) The name of the keyspace to be created.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_keyspaces_table:
        subCategory: Keyspaces (for Apache Cassandra)
        description: Provides a Keyspaces Table.
        name: aws_keyspaces_table
        title: aws_keyspaces_table
        examples:
            - name: example
              manifest: |-
                {
                  "keyspace_name": "${aws_keyspaces_keyspace.example.name}",
                  "schema_definition": [
                    {
                      "column": [
                        {
                          "name": "Message",
                          "type": "ASCII"
                        }
                      ],
                      "partition_key": [
                        {
                          "name": "Message"
                        }
                      ]
                    }
                  ],
                  "table_name": "my_table"
                }
              references:
                keyspace_name: aws_keyspaces_keyspace.example.name
        argumentDocs:
            arn: '- The ARN of the table.'
            capacity_specification: '- (Optional) Specifies the read/write throughput capacity mode for the table.'
            clustering_key: '- (Required) The columns that are part of the clustering key of the table.'
            column: '- (Required) The regular columns of the table.'
            comment: '- (Optional) A description of the table.'
            create: '- (Default 10 minutes) Used for table creation'
            default_time_to_live: '- (Optional) The default Time to Live setting in seconds for the table. More information can be found in the Developer Guide.'
            delete: '- (Default 10 minutes) Used for table deletion'
            encryption_specification: '- (Optional) Specifies how the encryption key for encryption at rest is managed for the table. More information can be found in the Developer Guide.'
            keyspace_name: '- (Required) The name of the keyspace that the table is going to be created in.'
            kms_key_identifier: '- (Optional) The Amazon Resource Name (ARN) of the customer managed KMS key.'
            message: '- (Required) A description of the table.'
            name: '- (Required) The name of the column.'
            order_by: '- (Required) The order modifier. Valid values: ASC, DESC.'
            partition_key: '- (Required) The columns that are part of the partition key of the table .'
            point_in_time_recovery: '- (Optional) Specifies if point-in-time recovery is enabled or disabled for the table. More information can be found in the Developer Guide.'
            read_capacity_units: '- (Optional) The throughput capacity specified for read operations defined in read capacity units (RCUs).'
            schema_definition: '- (Optional) Describes the schema of the table.'
            static_column: '- (Required) The columns that have been defined as STATIC. Static columns store values that are shared by all rows in the same partition.'
            status: '- (Optional) Valid values: ENABLED, DISABLED. The default value is DISABLED.'
            table_name: '- (Required) The name of the table.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            throughput_mode: '- (Optional) The read/write throughput capacity mode for a table. Valid values: PAY_PER_REQUEST, PROVISIONED. The default value is PAY_PER_REQUEST.'
            ttl: '- (Optional) Enables Time to Live custom settings for the table. More information can be found in the Developer Guide.'
            type: '- (Optional) The encryption option specified for the table. Valid values: AWS_OWNED_KMS_KEY, CUSTOMER_MANAGED_KMS_KEY. The default value is AWS_OWNED_KMS_KEY.'
            update: '- (Default 30 minutes) Used for table modification'
            write_capacity_units: '- (Optional) The throughput capacity specified for write operations defined in write capacity units (WCUs).'
        importStatements: []
    aws_kinesis_analytics_application:
        subCategory: Kinesis Analytics
        description: Provides a AWS Kinesis Analytics Application
        name: aws_kinesis_analytics_application
        title: aws_kinesis_analytics_application
        examples:
            - name: test_application
              manifest: |-
                {
                  "inputs": [
                    {
                      "kinesis_stream": [
                        {
                          "resource_arn": "${aws_kinesis_stream.test_stream.arn}",
                          "role_arn": "${aws_iam_role.test.arn}"
                        }
                      ],
                      "name_prefix": "test_prefix",
                      "parallelism": [
                        {
                          "count": 1
                        }
                      ],
                      "schema": [
                        {
                          "record_columns": [
                            {
                              "mapping": "$.test",
                              "name": "test",
                              "sql_type": "VARCHAR(8)"
                            }
                          ],
                          "record_encoding": "UTF-8",
                          "record_format": [
                            {
                              "mapping_parameters": [
                                {
                                  "json": [
                                    {
                                      "record_row_path": "$"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "name": "kinesis-analytics-application-test"
                }
              references:
                inputs.kinesis_stream.resource_arn: aws_kinesis_stream.test_stream.arn
                inputs.kinesis_stream.role_arn: aws_iam_role.test.arn
              dependencies:
                aws_kinesis_stream.test_stream: |-
                    {
                      "name": "terraform-kinesis-test",
                      "shard_count": 1
                    }
            - name: test
              manifest: |-
                {
                  "cloudwatch_logging_options": [
                    {
                      "log_stream_arn": "${aws_cloudwatch_log_stream.example.arn}",
                      "role_arn": "${aws_iam_role.example.arn}"
                    }
                  ],
                  "inputs": [
                    {
                      "kinesis_stream": [
                        {
                          "resource_arn": "${aws_kinesis_stream.example.arn}",
                          "role_arn": "${aws_iam_role.example.arn}"
                        }
                      ],
                      "name_prefix": "example_prefix",
                      "schema": [
                        {
                          "record_columns": [
                            {
                              "name": "COLUMN_1",
                              "sql_type": "INTEGER"
                            }
                          ],
                          "record_format": [
                            {
                              "mapping_parameters": [
                                {
                                  "csv": [
                                    {
                                      "record_column_delimiter": ",",
                                      "record_row_delimiter": "|"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "starting_position_configuration": [
                        {
                          "starting_position": "NOW"
                        }
                      ]
                    }
                  ],
                  "name": "example-application",
                  "outputs": [
                    {
                      "kinesis_firehose": [
                        {
                          "resource_arn": "${aws_kinesis_firehose_delivery_stream.example.arn}",
                          "role_arn": "${aws_iam_role.example.arn}"
                        }
                      ],
                      "name": "OUTPUT_1",
                      "schema": [
                        {
                          "record_format_type": "CSV"
                        }
                      ]
                    }
                  ],
                  "start_application": true
                }
              references:
                cloudwatch_logging_options.log_stream_arn: aws_cloudwatch_log_stream.example.arn
                cloudwatch_logging_options.role_arn: aws_iam_role.example.arn
                inputs.kinesis_stream.resource_arn: aws_kinesis_stream.example.arn
                inputs.kinesis_stream.role_arn: aws_iam_role.example.arn
                outputs.kinesis_firehose.resource_arn: aws_kinesis_firehose_delivery_stream.example.arn
                outputs.kinesis_firehose.role_arn: aws_iam_role.example.arn
              dependencies:
                aws_cloudwatch_log_group.example: |-
                    {
                      "name": "analytics"
                    }
                aws_cloudwatch_log_stream.example: |-
                    {
                      "log_group_name": "${aws_cloudwatch_log_group.example.name}",
                      "name": "example-kinesis-application"
                    }
                aws_kinesis_firehose_delivery_stream.example: |-
                    {
                      "destination": "extended_s3",
                      "extended_s3_configuration": [
                        {
                          "bucket_arn": "${aws_s3_bucket.example.arn}",
                          "role_arn": "${aws_iam_role.example.arn}"
                        }
                      ],
                      "name": "example-kinesis-delivery-stream"
                    }
                aws_kinesis_stream.example: |-
                    {
                      "name": "example-kinesis-stream",
                      "shard_count": 1
                    }
        argumentDocs:
            arn: '- The ARN of the Kinesis Analytics Appliation.'
            bucket_arn: '- (Required) The S3 Bucket ARN.'
            cloudwatch_logging_options: |-
                - (Optional) The CloudWatch log stream options to monitor application errors.
                See CloudWatch Logging Options below for more details.
            cloudwatch_logging_options.log_stream_arn: '- (Required) The ARN of the CloudWatch Log Stream.'
            cloudwatch_logging_options.role_arn: '- (Required) The ARN of the IAM Role used to send application messages.'
            code: '- (Optional) SQL Code to transform input data, and generate output.'
            create_timestamp: '- The Timestamp when the application version was created.'
            description: '- (Optional) Description of the application.'
            file_key: '- (Required) The File Key name containing reference data.'
            id: '- The ARN of the Kinesis Analytics Application.'
            inputs: '- (Optional) Input configuration of the application. See Inputs below for more details.'
            inputs.kinesis_firehose: |-
                - (Optional) The Kinesis Firehose configuration for the streaming source. Conflicts with kinesis_stream.
                See Kinesis Firehose below for more details.
            inputs.kinesis_stream: |-
                - (Optional) The Kinesis Stream configuration for the streaming source. Conflicts with kinesis_firehose.
                See Kinesis Stream below for more details.
            inputs.name_prefix: '- (Required) The Name Prefix to use when creating an in-application stream.'
            inputs.parallelism: |-
                - (Optional) The number of Parallel in-application streams to create.
                See Parallelism below for more details.
            inputs.processing_configuration: |-
                - (Optional) The Processing Configuration to transform records as they are received from the stream.
                See Processing Configuration below for more details.
            inputs.schema: '- (Required) The Schema format of the data in the streaming source. See Source Schema below for more details.'
            inputs.starting_position_configuration: |-
                (Optional) The point at which the application starts processing records from the streaming source.
                See Starting Position Configuration below for more details.
            json.record_row_path: '- (Required) Path to the top-level parent that contains the records.'
            kinesis_firehose.resource_arn: '- (Required) The ARN of the Kinesis Firehose delivery stream.'
            kinesis_firehose.role_arn: '- (Required) The ARN of the IAM Role used to access the stream.'
            kinesis_stream.resource_arn: '- (Required) The ARN of the Kinesis Stream.'
            kinesis_stream.role_arn: '- (Required) The ARN of the IAM Role used to access the stream.'
            last_update_timestamp: '- The Timestamp when the application was last updated.'
            name: '- (Required) Name of the Kinesis Analytics Application.'
            outputs: '- (Optional) Output destination configuration of the application. See Outputs below for more details.'
            outputs.kinesis_firehose: |-
                - (Optional) The Kinesis Firehose configuration for the destination stream. Conflicts with kinesis_stream.
                See Kinesis Firehose below for more details.
            outputs.kinesis_stream: |-
                - (Optional) The Kinesis Stream configuration for the destination stream. Conflicts with kinesis_firehose.
                See Kinesis Stream below for more details.
            outputs.lambda: '- (Optional) The Lambda function destination. See Lambda below for more details.'
            outputs.name: '- (Required) The Name of the in-application stream.'
            outputs.schema: '- (Required) The Schema format of the data written to the destination. See Destination Schema below for more details.'
            parallelism.count: '- (Required) The Count of streams.'
            processing_configuration.lambda: '- (Required) The Lambda function configuration. See Lambda below for more details.'
            processing_configuration.lambda.resource_arn: '- (Required) The ARN of the Lambda function.'
            processing_configuration.lambda.role_arn: '- (Required) The ARN of the IAM Role used to access the Lambda function.'
            record_columns.mapping: '- (Optional) The Mapping reference to the data element.'
            record_columns.name: '- (Required) Name of the column.'
            record_columns.sql_type: '- (Required) The SQL Type of the column.'
            record_format.mapping_parameters: |-
                - (Optional) The Mapping Information for the record format.
                See Mapping Parameters below for more details.
            record_format.mapping_parameters.csv: |-
                - (Optional) Mapping information when the record format uses delimiters.
                See CSV Mapping Parameters below for more details.
            record_format.mapping_parameters.csv.record_column_delimiter: '- (Required) The Column Delimiter.'
            record_format.mapping_parameters.csv.record_row_delimiter: '- (Required) The Row Delimiter.'
            record_format.mapping_parameters.json: |-
                - (Optional) Mapping information when JSON is the record format on the streaming source.
                See JSON Mapping Parameters below for more details.
            record_format.record_format_type: '- (Required) The type of Record Format. Can be CSV or JSON.'
            reference_data_sources: |-
                - (Optional) An S3 Reference Data Source for the application.
                See Reference Data Sources below for more details.
            reference_data_sources.s3: '- (Optional) The S3 configuration for the reference data source. See S3 Reference below for more details.'
            reference_data_sources.schema: '- (Required) The Schema format of the data in the streaming source. See Source Schema below for more details.'
            reference_data_sources.table_name: '- (Required) The in-application Table Name.'
            role_arn: '- (Required) The IAM Role ARN to read the data.'
            schema.record_columns: |-
                - (Required) The Record Column mapping for the streaming source data element.
                See Record Columns below for more details.
            schema.record_encoding: '- (Optional) The Encoding of the record in the streaming source.'
            schema.record_format: |-
                - (Required) The Record Format and mapping information to schematize a record.
                See Record Format below for more details.
            schema.record_format_type: '- (Required) The Format Type of the records on the output stream. Can be CSV or JSON.'
            start_application: |-
                - (Optional) Whether to start or stop the Kinesis Analytics Application. To start an application, an input with a defined starting_position must be configured.
                To modify an application's starting position, first stop the application by setting start_application = false, then update starting_position and set start_application = true.
            starting_position_configuration.starting_position: '- (Required) The starting position on the stream. Valid values: LAST_STOPPED_POINT, NOW, TRIM_HORIZON.'
            status: '- The Status of the application.'
            tags: '- Key-value map of tags for the Kinesis Analytics Application. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            version: '- The Version of the application.'
        importStatements: []
    aws_kinesis_firehose_delivery_stream:
        subCategory: Kinesis Firehose
        description: Provides a AWS Kinesis Firehose Delivery Stream
        name: aws_kinesis_firehose_delivery_stream
        title: aws_kinesis_firehose_delivery_stream
        examples:
            - name: extended_s3_stream
              manifest: |-
                {
                  "destination": "extended_s3",
                  "extended_s3_configuration": [
                    {
                      "bucket_arn": "${aws_s3_bucket.bucket.arn}",
                      "processing_configuration": [
                        {
                          "enabled": "true",
                          "processors": [
                            {
                              "parameters": [
                                {
                                  "parameter_name": "LambdaArn",
                                  "parameter_value": "${aws_lambda_function.lambda_processor.arn}:$LATEST"
                                }
                              ],
                              "type": "Lambda"
                            }
                          ]
                        }
                      ],
                      "role_arn": "${aws_iam_role.firehose_role.arn}"
                    }
                  ],
                  "name": "terraform-kinesis-firehose-extended-s3-test-stream"
                }
              references:
                extended_s3_configuration.bucket_arn: aws_s3_bucket.bucket.arn
                extended_s3_configuration.role_arn: aws_iam_role.firehose_role.arn
              dependencies:
                aws_iam_role.firehose_role: |-
                    {
                      "assume_role_policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"firehose.amazonaws.com\"\n      },\n      \"Effect\": \"Allow\",\n      \"Sid\": \"\"\n    }\n  ]\n}\n",
                      "name": "firehose_test_role"
                    }
                aws_iam_role.lambda_iam: |-
                    {
                      "assume_role_policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"lambda.amazonaws.com\"\n      },\n      \"Effect\": \"Allow\",\n      \"Sid\": \"\"\n    }\n  ]\n}\n",
                      "name": "lambda_iam"
                    }
                aws_lambda_function.lambda_processor: |-
                    {
                      "filename": "lambda.zip",
                      "function_name": "firehose_lambda_processor",
                      "handler": "exports.handler",
                      "role": "${aws_iam_role.lambda_iam.arn}",
                      "runtime": "nodejs12.x"
                    }
                aws_s3_bucket.bucket: |-
                    {
                      "bucket": "tf-test-bucket"
                    }
                aws_s3_bucket_acl.bucket_acl: |-
                    {
                      "acl": "private",
                      "bucket": "${aws_s3_bucket.bucket.id}"
                    }
            - name: extended_s3_stream
              manifest: |-
                {
                  "destination": "extended_s3",
                  "extended_s3_configuration": [
                    {
                      "bucket_arn": "${aws_s3_bucket.bucket.arn}",
                      "buffer_size": 64,
                      "error_output_prefix": "errors/year=!{timestamp:yyyy}/month=!{timestamp:MM}/day=!{timestamp:dd}/hour=!{timestamp:HH}/!{firehose:error-output-type}/",
                      "prefix": "data/customer_id=!{partitionKeyFromQuery:customer_id}/year=!{timestamp:yyyy}/month=!{timestamp:MM}/day=!{timestamp:dd}/hour=!{timestamp:HH}/",
                      "processing_configuration": [
                        {
                          "enabled": "true",
                          "processors": [
                            {
                              "parameters": [
                                {
                                  "parameter_name": "SubRecordType",
                                  "parameter_value": "JSON"
                                }
                              ],
                              "type": "RecordDeAggregation"
                            },
                            {
                              "type": "AppendDelimiterToRecord"
                            },
                            {
                              "parameters": [
                                {
                                  "parameter_name": "JsonParsingEngine",
                                  "parameter_value": "JQ-1.6"
                                },
                                {
                                  "parameter_name": "MetadataExtractionQuery",
                                  "parameter_value": "{customer_id:.customer_id}"
                                }
                              ],
                              "type": "MetadataExtraction"
                            }
                          ]
                        }
                      ],
                      "role_arn": "${aws_iam_role.firehose_role.arn}"
                    }
                  ],
                  "name": "terraform-kinesis-firehose-extended-s3-test-stream"
                }
              references:
                extended_s3_configuration.bucket_arn: aws_s3_bucket.bucket.arn
                extended_s3_configuration.role_arn: aws_iam_role.firehose_role.arn
            - name: test_stream
              manifest: |-
                {
                  "destination": "s3",
                  "name": "terraform-kinesis-firehose-test-stream",
                  "s3_configuration": [
                    {
                      "bucket_arn": "${aws_s3_bucket.bucket.arn}",
                      "role_arn": "${aws_iam_role.firehose_role.arn}"
                    }
                  ]
                }
              references:
                s3_configuration.bucket_arn: aws_s3_bucket.bucket.arn
                s3_configuration.role_arn: aws_iam_role.firehose_role.arn
              dependencies:
                aws_iam_role.firehose_role: |-
                    {
                      "assume_role_policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"firehose.amazonaws.com\"\n      },\n      \"Effect\": \"Allow\",\n      \"Sid\": \"\"\n    }\n  ]\n}\n",
                      "name": "firehose_test_role"
                    }
                aws_s3_bucket.bucket: |-
                    {
                      "bucket": "tf-test-bucket"
                    }
                aws_s3_bucket_acl.bucket_acl: |-
                    {
                      "acl": "private",
                      "bucket": "${aws_s3_bucket.bucket.id}"
                    }
            - name: test_stream
              manifest: |-
                {
                  "destination": "redshift",
                  "name": "terraform-kinesis-firehose-test-stream",
                  "redshift_configuration": [
                    {
                      "cluster_jdbcurl": "jdbc:redshift://${aws_redshift_cluster.test_cluster.endpoint}/${aws_redshift_cluster.test_cluster.database_name}",
                      "copy_options": "delimiter '|'",
                      "data_table_columns": "test-col",
                      "data_table_name": "test-table",
                      "password": "T3stPass",
                      "role_arn": "${aws_iam_role.firehose_role.arn}",
                      "s3_backup_configuration": [
                        {
                          "bucket_arn": "${aws_s3_bucket.bucket.arn}",
                          "buffer_interval": 300,
                          "buffer_size": 15,
                          "compression_format": "GZIP",
                          "role_arn": "${aws_iam_role.firehose_role.arn}"
                        }
                      ],
                      "s3_backup_mode": "Enabled",
                      "username": "testuser"
                    }
                  ],
                  "s3_configuration": [
                    {
                      "bucket_arn": "${aws_s3_bucket.bucket.arn}",
                      "buffer_interval": 400,
                      "buffer_size": 10,
                      "compression_format": "GZIP",
                      "role_arn": "${aws_iam_role.firehose_role.arn}"
                    }
                  ]
                }
              references:
                redshift_configuration.role_arn: aws_iam_role.firehose_role.arn
                redshift_configuration.s3_backup_configuration.bucket_arn: aws_s3_bucket.bucket.arn
                redshift_configuration.s3_backup_configuration.role_arn: aws_iam_role.firehose_role.arn
                s3_configuration.bucket_arn: aws_s3_bucket.bucket.arn
                s3_configuration.role_arn: aws_iam_role.firehose_role.arn
              dependencies:
                aws_redshift_cluster.test_cluster: |-
                    {
                      "cluster_identifier": "tf-redshift-cluster",
                      "cluster_type": "single-node",
                      "database_name": "test",
                      "master_password": "T3stPass",
                      "master_username": "testuser",
                      "node_type": "dc1.large"
                    }
            - name: test_stream
              manifest: |-
                {
                  "destination": "elasticsearch",
                  "elasticsearch_configuration": [
                    {
                      "domain_arn": "${aws_elasticsearch_domain.test_cluster.arn}",
                      "index_name": "test",
                      "processing_configuration": [
                        {
                          "enabled": "true",
                          "processors": [
                            {
                              "parameters": [
                                {
                                  "parameter_name": "LambdaArn",
                                  "parameter_value": "${aws_lambda_function.lambda_processor.arn}:$LATEST"
                                }
                              ],
                              "type": "Lambda"
                            }
                          ]
                        }
                      ],
                      "role_arn": "${aws_iam_role.firehose_role.arn}",
                      "type_name": "test"
                    }
                  ],
                  "name": "terraform-kinesis-firehose-test-stream",
                  "s3_configuration": [
                    {
                      "bucket_arn": "${aws_s3_bucket.bucket.arn}",
                      "buffer_interval": 400,
                      "buffer_size": 10,
                      "compression_format": "GZIP",
                      "role_arn": "${aws_iam_role.firehose_role.arn}"
                    }
                  ]
                }
              references:
                elasticsearch_configuration.domain_arn: aws_elasticsearch_domain.test_cluster.arn
                elasticsearch_configuration.role_arn: aws_iam_role.firehose_role.arn
                s3_configuration.bucket_arn: aws_s3_bucket.bucket.arn
                s3_configuration.role_arn: aws_iam_role.firehose_role.arn
              dependencies:
                aws_elasticsearch_domain.test_cluster: |-
                    {
                      "domain_name": "firehose-es-test"
                    }
            - name: test
              manifest: |-
                {
                  "depends_on": [
                    "${aws_iam_role_policy.firehose-elasticsearch}"
                  ],
                  "destination": "elasticsearch",
                  "elasticsearch_configuration": [
                    {
                      "domain_arn": "${aws_elasticsearch_domain.test_cluster.arn}",
                      "index_name": "test",
                      "role_arn": "${aws_iam_role.firehose.arn}",
                      "type_name": "test",
                      "vpc_config": [
                        {
                          "role_arn": "${aws_iam_role.firehose.arn}",
                          "security_group_ids": [
                            "${aws_security_group.first.id}"
                          ],
                          "subnet_ids": [
                            "${aws_subnet.first.id}",
                            "${aws_subnet.second.id}"
                          ]
                        }
                      ]
                    }
                  ],
                  "name": "terraform-kinesis-firehose-es",
                  "s3_configuration": [
                    {
                      "bucket_arn": "${aws_s3_bucket.bucket.arn}",
                      "role_arn": "${aws_iam_role.firehose.arn}"
                    }
                  ]
                }
              references:
                elasticsearch_configuration.domain_arn: aws_elasticsearch_domain.test_cluster.arn
                elasticsearch_configuration.role_arn: aws_iam_role.firehose.arn
                elasticsearch_configuration.vpc_config.role_arn: aws_iam_role.firehose.arn
                s3_configuration.bucket_arn: aws_s3_bucket.bucket.arn
                s3_configuration.role_arn: aws_iam_role.firehose.arn
              dependencies:
                aws_elasticsearch_domain.test_cluster: |-
                    {
                      "cluster_config": [
                        {
                          "instance_count": 2,
                          "instance_type": "t2.small.elasticsearch",
                          "zone_awareness_enabled": true
                        }
                      ],
                      "domain_name": "es-test",
                      "ebs_options": [
                        {
                          "ebs_enabled": true,
                          "volume_size": 10
                        }
                      ],
                      "vpc_options": [
                        {
                          "security_group_ids": [
                            "${aws_security_group.first.id}"
                          ],
                          "subnet_ids": [
                            "${aws_subnet.first.id}",
                            "${aws_subnet.second.id}"
                          ]
                        }
                      ]
                    }
                aws_iam_role_policy.firehose-elasticsearch: |-
                    {
                      "name": "elasticsearch",
                      "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"es:*\"\n      ],\n      \"Resource\": [\n        \"${aws_elasticsearch_domain.test_cluster.arn}\",\n        \"${aws_elasticsearch_domain.test_cluster.arn}/*\"\n      ]\n        },\n        {\n          \"Effect\": \"Allow\",\n          \"Action\": [\n            \"ec2:DescribeVpcs\",\n            \"ec2:DescribeVpcAttribute\",\n            \"ec2:DescribeSubnets\",\n            \"ec2:DescribeSecurityGroups\",\n            \"ec2:DescribeNetworkInterfaces\",\n            \"ec2:CreateNetworkInterface\",\n            \"ec2:CreateNetworkInterfacePermission\",\n            \"ec2:DeleteNetworkInterface\"\n          ],\n          \"Resource\": [\n            \"*\"\n          ]\n        }\n  ]\n}\n",
                      "role": "${aws_iam_role.firehose.id}"
                    }
            - name: test_stream
              manifest: |-
                {
                  "destination": "splunk",
                  "name": "terraform-kinesis-firehose-test-stream",
                  "s3_configuration": [
                    {
                      "bucket_arn": "${aws_s3_bucket.bucket.arn}",
                      "buffer_interval": 400,
                      "buffer_size": 10,
                      "compression_format": "GZIP",
                      "role_arn": "${aws_iam_role.firehose.arn}"
                    }
                  ],
                  "splunk_configuration": [
                    {
                      "hec_acknowledgment_timeout": 600,
                      "hec_endpoint": "https://http-inputs-mydomain.splunkcloud.com:443",
                      "hec_endpoint_type": "Event",
                      "hec_token": "51D4DA16-C61B-4F5F-8EC7-ED4301342A4A",
                      "s3_backup_mode": "FailedEventsOnly"
                    }
                  ]
                }
              references:
                s3_configuration.bucket_arn: aws_s3_bucket.bucket.arn
                s3_configuration.role_arn: aws_iam_role.firehose.arn
            - name: test_stream
              manifest: |-
                {
                  "destination": "http_endpoint",
                  "http_endpoint_configuration": [
                    {
                      "access_key": "my-key",
                      "buffering_interval": 600,
                      "buffering_size": 15,
                      "name": "New Relic",
                      "request_configuration": [
                        {
                          "common_attributes": [
                            {
                              "name": "testname",
                              "value": "testvalue"
                            },
                            {
                              "name": "testname2",
                              "value": "testvalue2"
                            }
                          ],
                          "content_encoding": "GZIP"
                        }
                      ],
                      "role_arn": "${aws_iam_role.firehose.arn}",
                      "s3_backup_mode": "FailedDataOnly",
                      "url": "https://aws-api.newrelic.com/firehose/v1"
                    }
                  ],
                  "name": "terraform-kinesis-firehose-test-stream",
                  "s3_configuration": [
                    {
                      "bucket_arn": "${aws_s3_bucket.bucket.arn}",
                      "buffer_interval": 400,
                      "buffer_size": 10,
                      "compression_format": "GZIP",
                      "role_arn": "${aws_iam_role.firehose.arn}"
                    }
                  ]
                }
              references:
                http_endpoint_configuration.role_arn: aws_iam_role.firehose.arn
                s3_configuration.bucket_arn: aws_s3_bucket.bucket.arn
                s3_configuration.role_arn: aws_iam_role.firehose.arn
            - name: example
              manifest: |-
                {
                  "extended_s3_configuration": [
                    {
                      "buffer_size": 128,
                      "data_format_conversion_configuration": [
                        {
                          "input_format_configuration": [
                            {
                              "deserializer": [
                                {
                                  "hive_json_ser_de": [
                                    {}
                                  ]
                                }
                              ]
                            }
                          ],
                          "output_format_configuration": [
                            {
                              "serializer": [
                                {
                                  "orc_ser_de": [
                                    {}
                                  ]
                                }
                              ]
                            }
                          ],
                          "schema_configuration": [
                            {
                              "database_name": "${aws_glue_catalog_table.example.database_name}",
                              "role_arn": "${aws_iam_role.example.arn}",
                              "table_name": "${aws_glue_catalog_table.example.name}"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              references:
                extended_s3_configuration.data_format_conversion_configuration.schema_configuration.database_name: aws_glue_catalog_table.example.database_name
                extended_s3_configuration.data_format_conversion_configuration.schema_configuration.role_arn: aws_iam_role.example.arn
                extended_s3_configuration.data_format_conversion_configuration.schema_configuration.table_name: aws_glue_catalog_table.example.name
        argumentDocs:
            arn: '- The Amazon Resource Name (ARN) specifying the Stream'
            destination: – (Required) This is the destination to where the data is delivered. The only options are s3 (Deprecated, use extended_s3 instead), extended_s3, redshift, elasticsearch, splunk, and http_endpoint.
            elasticsearch_configuration: '- (Optional) Configuration options if elasticsearch is the destination. More details are given below.'
            enabled: '- (Optional) Whether to enable encryption at rest. Default is false.'
            extended_s3_configuration: '- (Optional, only Required when destination is extended_s3) Enhanced configuration options for the s3 destination. More details are given below.'
            http_endpoint_configuration: '- (Optional) Configuration options if http_endpoint is the destination. requires the user to also specify a s3_configuration block.  More details are given below.'
            key_arn: '- (Optional) Amazon Resource Name (ARN) of the encryption key. Required when key_type is CUSTOMER_MANAGED_CMK.'
            key_type: '- (Optional) Type of encryption key. Default is AWS_OWNED_CMK. Valid values are AWS_OWNED_CMK and CUSTOMER_MANAGED_CMK'
            kinesis_source_configuration: '- (Optional) Allows the ability to specify the kinesis stream that is used as the source of the firehose delivery stream.'
            kinesis_stream_arn: (Required) The kinesis stream used as the source of the firehose delivery stream.
            name: |-
                - (Required) A name to identify the stream. This is unique to the
                AWS account and region the Stream is created in.
            redshift_configuration: |-
                - (Optional) Configuration options if redshift is the destination.
                Using redshift_configuration requires the user to also specify a
                s3_configuration block. More details are given below.
            role_arn: (Required) The ARN of the role that provides access to the source Kinesis stream.
            s3.access_key: '- (Optional) The access key required for Kinesis Firehose to authenticate with the HTTP endpoint selected as the destination.'
            s3.bucket_arn: '- (Required) The ARN of the S3 bucket'
            s3.buffer_interval: '- (Optional) Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.'
            s3.buffer_size: |-
                - (Optional) Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
                We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
            s3.buffering_interval: '- (Optional) Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.'
            s3.buffering_size: '- (Optional) Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.'
            s3.cloudwatch_logging_options: '- (Optional) The CloudWatch Logging Options for the delivery stream. More details are given below'
            s3.cluster_endpoint: '- (Optional) The endpoint to use when communicating with the cluster. Conflicts with domain_arn.'
            s3.cluster_jdbcurl: '- (Required) The jdbcurl of the redshift cluster.'
            s3.common_attributes: '- (Optional) Describes the metadata sent to the HTTP endpoint destination. More details are given below'
            s3.compression_format: '- (Optional) The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP, Snappy, & HADOOP_SNAPPY.'
            s3.content_encoding: '- (Optional) Kinesis Data Firehose uses the content encoding to compress the body of a request before sending the request to the destination. Valid values are NONE and GZIP.  Default value is NONE.'
            s3.copy_options: '- (Optional) Copy options for copying the data from the s3 intermediate bucket into redshift, for example to change the default delimiter. For valid values, see the AWS documentation'
            s3.data_format_conversion_configuration: '- (Optional) Nested argument for the serializer, deserializer, and schema for converting data from the JSON format to the Parquet or ORC format before writing it to Amazon S3. More details given below.'
            s3.data_format_conversion_configuration.enabled: '- (Optional) Defaults to true. Set it to false if you want to disable format conversion while preserving the configuration details.'
            s3.data_format_conversion_configuration.input_format_configuration: '- (Required) Nested argument that specifies the deserializer that you want Kinesis Data Firehose to use to convert the format of your data from JSON. More details below.'
            s3.data_format_conversion_configuration.input_format_configuration.deserializer: '- (Required) Nested argument that specifies which deserializer to use. You can choose either the Apache Hive JSON SerDe or the OpenX JSON SerDe. More details below.'
            s3.data_format_conversion_configuration.input_format_configuration.deserializer.hive_json_ser_de: '- (Optional) Nested argument that specifies the native Hive / HCatalog JsonSerDe. More details below.'
            s3.data_format_conversion_configuration.input_format_configuration.deserializer.hive_json_ser_de.timestamp_formats: '- (Optional) A list of how you want Kinesis Data Firehose to parse the date and time stamps that may be present in your input data JSON. To specify these format strings, follow the pattern syntax of JodaTime''s DateTimeFormat format strings. For more information, see Class DateTimeFormat. You can also use the special value millis to parse time stamps in epoch milliseconds. If you don''t specify a format, Kinesis Data Firehose uses java.sql.Timestamp::valueOf by default.'
            s3.data_format_conversion_configuration.input_format_configuration.deserializer.open_x_json_ser_de: '- (Optional) Nested argument that specifies the OpenX SerDe. More details below.'
            s3.data_format_conversion_configuration.input_format_configuration.deserializer.open_x_json_ser_de.case_insensitive: '- (Optional) When set to true, which is the default, Kinesis Data Firehose converts JSON keys to lowercase before deserializing them.'
            s3.data_format_conversion_configuration.input_format_configuration.deserializer.open_x_json_ser_de.column_to_json_key_mappings: '- (Optional) A map of column names to JSON keys that aren''t identical to the column names. This is useful when the JSON contains keys that are Hive keywords. For example, timestamp is a Hive keyword. If you have a JSON key named timestamp, set this parameter to { ts = "timestamp" } to map this key to a column named ts.'
            ? s3.data_format_conversion_configuration.input_format_configuration.deserializer.open_x_json_ser_de.convert_dots_in_json_keys_to_underscores
            : '- (Optional) When set to true, specifies that the names of the keys include dots and that you want Kinesis Data Firehose to replace them with underscores. This is useful because Apache Hive does not allow dots in column names. For example, if the JSON contains a key whose name is "a.b", you can define the column name to be "a_b" when using this option. Defaults to false.'
            s3.data_format_conversion_configuration.output_format_configuration: '- (Required) Nested argument that specifies the serializer that you want Kinesis Data Firehose to use to convert the format of your data to the Parquet or ORC format. More details below.'
            s3.data_format_conversion_configuration.output_format_configuration.serializer: '- (Required) Nested argument that specifies which serializer to use. You can choose either the ORC SerDe or the Parquet SerDe. More details below.'
            s3.data_format_conversion_configuration.output_format_configuration.serializer.orc_ser_de: '- (Optional) Nested argument that specifies converting data to the ORC format before storing it in Amazon S3. For more information, see Apache ORC. More details below.'
            s3.data_format_conversion_configuration.output_format_configuration.serializer.orc_ser_de.block_size_bytes: '- (Optional) The Hadoop Distributed File System (HDFS) block size. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 256 MiB and the minimum is 64 MiB. Kinesis Data Firehose uses this value for padding calculations.'
            s3.data_format_conversion_configuration.output_format_configuration.serializer.orc_ser_de.bloom_filter_columns: '- (Optional) A list of column names for which you want Kinesis Data Firehose to create bloom filters.'
            ? s3.data_format_conversion_configuration.output_format_configuration.serializer.orc_ser_de.bloom_filter_false_positive_probability
            : '- (Optional) The Bloom filter false positive probability (FPP). The lower the FPP, the bigger the Bloom filter. The default value is 0.05, the minimum is 0, and the maximum is 1.'
            s3.data_format_conversion_configuration.output_format_configuration.serializer.orc_ser_de.compression: '- (Optional) The compression code to use over data blocks. The default is SNAPPY.'
            s3.data_format_conversion_configuration.output_format_configuration.serializer.orc_ser_de.dictionary_key_threshold: '- (Optional) A float that represents the fraction of the total number of non-null rows. To turn off dictionary encoding, set this fraction to a number that is less than the number of distinct keys in a dictionary. To always use dictionary encoding, set this threshold to 1.'
            s3.data_format_conversion_configuration.output_format_configuration.serializer.orc_ser_de.enable_padding: '- (Optional) Set this to true to indicate that you want stripes to be padded to the HDFS block boundaries. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is false.'
            s3.data_format_conversion_configuration.output_format_configuration.serializer.orc_ser_de.format_version: '- (Optional) The version of the file to write. The possible values are V0_11 and V0_12. The default is V0_12.'
            s3.data_format_conversion_configuration.output_format_configuration.serializer.orc_ser_de.padding_tolerance: '- (Optional) A float between 0 and 1 that defines the tolerance for block padding as a decimal fraction of stripe size. The default value is 0.05, which means 5 percent of stripe size. For the default values of 64 MiB ORC stripes and 256 MiB HDFS blocks, the default block padding tolerance of 5 percent reserves a maximum of 3.2 MiB for padding within the 256 MiB block. In such a case, if the available size within the block is more than 3.2 MiB, a new, smaller stripe is inserted to fit within that space. This ensures that no stripe crosses block boundaries and causes remote reads within a node-local task. Kinesis Data Firehose ignores this parameter when enable_padding is false.'
            s3.data_format_conversion_configuration.output_format_configuration.serializer.orc_ser_de.row_index_stride: '- (Optional) The number of rows between index entries. The default is 10000 and the minimum is 1000.'
            s3.data_format_conversion_configuration.output_format_configuration.serializer.orc_ser_de.stripe_size_bytes: '- (Optional) The number of bytes in each stripe. The default is 64 MiB and the minimum is 8 MiB.'
            s3.data_format_conversion_configuration.output_format_configuration.serializer.parquet_ser_de: '- (Optional) Nested argument that specifies converting data to the Parquet format before storing it in Amazon S3. For more information, see Apache Parquet. More details below.'
            s3.data_format_conversion_configuration.output_format_configuration.serializer.parquet_ser_de.block_size_bytes: '- (Optional) The Hadoop Distributed File System (HDFS) block size. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 256 MiB and the minimum is 64 MiB. Kinesis Data Firehose uses this value for padding calculations.'
            s3.data_format_conversion_configuration.output_format_configuration.serializer.parquet_ser_de.compression: '- (Optional) The compression code to use over data blocks. The possible values are UNCOMPRESSED, SNAPPY, and GZIP, with the default being SNAPPY. Use SNAPPY for higher decompression speed. Use GZIP if the compression ratio is more important than speed.'
            s3.data_format_conversion_configuration.output_format_configuration.serializer.parquet_ser_de.enable_dictionary_compression: '- (Optional) Indicates whether to enable dictionary compression.'
            s3.data_format_conversion_configuration.output_format_configuration.serializer.parquet_ser_de.max_padding_bytes: '- (Optional) The maximum amount of padding to apply. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 0.'
            s3.data_format_conversion_configuration.output_format_configuration.serializer.parquet_ser_de.page_size_bytes: '- (Optional) The Parquet page size. Column chunks are divided into pages. A page is conceptually an indivisible unit (in terms of compression and encoding). The minimum value is 64 KiB and the default is 1 MiB.'
            s3.data_format_conversion_configuration.output_format_configuration.serializer.parquet_ser_de.writer_version: '- (Optional) Indicates the version of row format to output. The possible values are V1 and V2. The default is V1.'
            s3.data_format_conversion_configuration.schema_configuration: '- (Required) Nested argument that specifies the AWS Glue Data Catalog table that contains the column information. More details below.'
            s3.data_format_conversion_configuration.schema_configuration.catalog_id: '- (Optional) The ID of the AWS Glue Data Catalog. If you don''t supply this, the AWS account ID is used by default.'
            s3.data_format_conversion_configuration.schema_configuration.database_name: '- (Required) Specifies the name of the AWS Glue database that contains the schema for the output data.'
            s3.data_format_conversion_configuration.schema_configuration.region: '- (Optional) If you don''t specify an AWS Region, the default is the current region.'
            s3.data_format_conversion_configuration.schema_configuration.role_arn: '- (Required) The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren''t allowed.'
            s3.data_format_conversion_configuration.schema_configuration.table_name: '- (Required) Specifies the AWS Glue table that contains the column information that constitutes your data schema.'
            s3.data_format_conversion_configuration.schema_configuration.version_id: '- (Optional) Specifies the table version for the output data schema. Defaults to LATEST.'
            s3.data_table_columns: '- (Optional) The data table columns that will be targeted by the copy command.'
            s3.data_table_name: '- (Required) The name of the table in the redshift cluster that the s3 bucket will copy to.'
            s3.domain_arn: '- (Optional) The ARN of the Amazon ES domain.  The IAM role must have permission for DescribeElasticsearchDomain, DescribeElasticsearchDomains, and DescribeElasticsearchDomainConfig after assuming RoleARN.  The pattern needs to be arn:.*. Conflicts with cluster_endpoint.'
            s3.dynamic_partitioning_configuration: '- (Optional) The configuration for dynamic partitioning. See Dynamic Partitioning Configuration below for more details.'
            s3.dynamic_partitioning_configuration.enabled: '- (Optional) Enables or disables dynamic partitioning. Defaults to false.'
            s3.dynamic_partitioning_configuration.retry_duration: '- (Optional) Total amount of seconds Firehose spends on retries. Valid values between 0 and 7200. Default is 300.'
            s3.enabled: '- (Optional) Enables or disables the logging. Defaults to false.'
            s3.error_output_prefix: '- (Optional) Prefix added to failed records before writing them to S3. Not currently supported for redshift destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see Custom Prefixes for Amazon S3 Objects.'
            s3.hec_acknowledgment_timeout: '- (Optional) The amount of time, in seconds between 180 and 600, that Kinesis Firehose waits to receive an acknowledgment from Splunk after it sends it data.'
            s3.hec_endpoint: '- (Required) The HTTP Event Collector (HEC) endpoint to which Kinesis Firehose sends your data.'
            s3.hec_endpoint_type: '- (Optional) The HEC endpoint type. Valid values are Raw or Event. The default value is Raw.'
            s3.hec_token: '- (Required) The GUID that you obtain from your Splunk cluster when you create a new HEC endpoint.'
            s3.index_name: '- (Required) The Elasticsearch index name.'
            s3.index_rotation_period: '- (Optional) The Elasticsearch index rotation period.  Index rotation appends a timestamp to the IndexName to facilitate expiration of old data.  Valid values are NoRotation, OneHour, OneDay, OneWeek, and OneMonth.  The default value is OneDay.'
            s3.kms_key_arn: |-
                - (Optional) Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
                be used.
            s3.log_group_name: '- (Optional) The CloudWatch group name for logging. This value is required if enabled is true.'
            s3.log_stream_name: '- (Optional) The CloudWatch log stream name for logging. This value is required if enabled is true.'
            s3.name: '- (Optional) The HTTP endpoint name.'
            s3.parameter_name: '- (Required) Parameter name. Valid Values: LambdaArn, NumberOfRetries, MetadataExtractionQuery, JsonParsingEngine, RoleArn, BufferSizeInMBs, BufferIntervalInSeconds, SubRecordType, Delimiter. Validation is done against AWS SDK constants; so that values not explicitly listed may also work.'
            s3.parameter_value: '- (Required) Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.'
            s3.parameters: '- (Optional) Array of processor parameters. More details are given below'
            s3.password: '- (Required) The password for the username above.'
            s3.prefix: '- (Optional) The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket'
            s3.processing_configuration: '- (Optional) The data processing configuration.  More details are given below.'
            s3.processors: '- (Optional) Array of data processors. More details are given below'
            s3.request_configuration: '- (Optional) The request configuration.  More details are given below.'
            s3.retry_duration: '- (Optional) The length of time during which Firehose retries delivery after a failure, starting from the initial request and including the first attempt. The default value is 3600 seconds (60 minutes). Firehose does not retry if the value of DurationInSeconds is 0 (zero) or if the first delivery attempt takes longer than the current value.'
            s3.role_arn: '- (Required) The ARN of the AWS credentials.'
            s3.s3_backup_configuration: '- (Optional) The configuration for backup in Amazon S3. Required if s3_backup_mode is Enabled. Supports the same fields as s3_configuration object.'
            s3.s3_backup_mode: '- (Optional) The Amazon S3 backup mode.  Valid values are Disabled and Enabled.  Default value is Disabled.'
            s3.security_group_ids: '- (Required) A list of security group IDs to associate with Kinesis Firehose.'
            s3.subnet_ids: '- (Required) A list of subnet IDs to associate with Kinesis Firehose.'
            s3.type: '- (Required) The type of processor. Valid Values: RecordDeAggregation, Lambda, MetadataExtraction, AppendDelimiterToRecord. Validation is done against AWS SDK constants; so that values not explicitly listed may also work.'
            s3.type_name: '- (Optional) The Elasticsearch type name with maximum length of 100 characters.'
            s3.url: '- (Required) The HTTP endpoint URL to which Kinesis Firehose sends your data.'
            s3.username: '- (Required) The username that the firehose delivery stream will assume. It is strongly recommended that the username and password provided is used exclusively for Amazon Kinesis Firehose purposes, and that the permissions for the account are restricted for Amazon Redshift INSERT permissions.'
            s3.value: '- (Optional) The value of the HTTP endpoint common attribute.'
            s3.vpc_config: '- (Optional) The VPC configuration for the delivery stream to connect to Elastic Search associated with the VPC. More details are given below'
            s3_configuration: |-
                - (Optional) Required for non-S3 destinations. For S3 destination, use extended_s3_configuration instead. Configuration options for the s3 destination (or the intermediate bucket if the destination
                is redshift). More details are given below.
            server_side_encryption: |-
                - (Optional) Encrypt at rest options.
                Server-side encryption should not be enabled when a kinesis stream is configured as the source of the firehose delivery stream.
            splunk_configuration: '- (Optional) Configuration options if splunk is the destination. More details are given below.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_kinesis_stream:
        subCategory: Kinesis
        description: Provides a AWS Kinesis Stream
        name: aws_kinesis_stream
        title: aws_kinesis_stream
        examples:
            - name: test_stream
              manifest: |-
                {
                  "name": "terraform-kinesis-test",
                  "retention_period": 48,
                  "shard_count": 1,
                  "shard_level_metrics": [
                    "IncomingBytes",
                    "OutgoingBytes"
                  ],
                  "stream_mode_details": [
                    {
                      "stream_mode": "PROVISIONED"
                    }
                  ],
                  "tags": {
                    "Environment": "test"
                  }
                }
        argumentDocs:
            arn: '- The Amazon Resource Name (ARN) specifying the Stream (same as id)'
            create: '- (Default 5 minutes)  Used for Creating a Kinesis Stream'
            delete: '- (Default 120 minutes) Used for Destroying a Kinesis Stream'
            encryption_type: '- (Optional) The encryption type to use. The only acceptable values are NONE or KMS. The default value is NONE.'
            enforce_consumer_deletion: '- (Optional) A boolean that indicates all registered consumers should be deregistered from the stream so that the stream can be destroyed without error. The default value is false.'
            id: '- The unique Stream id'
            kms_key_id: '- (Optional) The GUID for the customer-managed KMS key to use for encryption. You can also use a Kinesis-owned master key by specifying the alias alias/aws/kinesis.'
            name: '- (Required) A name to identify the stream. This is unique to the AWS account and region the Stream is created in.'
            retention_period: '- (Optional) Length of time data records are accessible after they are added to the stream. The maximum value of a stream''s retention period is 8760 hours. Minimum value is 24. Default is 24.'
            shard_count: |-
                – (Optional) The number of shards that the stream will use. If the stream_mode is PROVISIONED, this field is required.
                Amazon has guidelines for specifying the Stream size that should be referenced when creating a Kinesis stream. See Amazon Kinesis Streams for more.
            shard_level_metrics: '- (Optional) A list of shard-level CloudWatch metrics which can be enabled for the stream. See Monitoring with CloudWatch for more. Note that the value ALL should not be used; instead you should provide an explicit list of metrics you wish to enable.'
            stream_mode_details: '- (Optional) Indicates the capacity mode of the data stream. Detailed below.'
            stream_mode_details.stream_mode: '- (Required) Specifies the capacity mode of the stream. Must be either PROVISIONED or ON_DEMAND.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            update: '- (Default 120 minutes) Used for Updating a Kinesis Stream'
        importStatements: []
    aws_kinesis_stream_consumer:
        subCategory: Kinesis
        description: Manages a Kinesis Stream Consumer.
        name: aws_kinesis_stream_consumer
        title: aws_kinesis_stream_consumer
        examples:
            - name: example
              manifest: |-
                {
                  "name": "example-consumer",
                  "stream_arn": "${aws_kinesis_stream.example.arn}"
                }
              references:
                stream_arn: aws_kinesis_stream.example.arn
              dependencies:
                aws_kinesis_stream.example: |-
                    {
                      "name": "example-stream",
                      "shard_count": 1
                    }
        argumentDocs:
            arn: '- Amazon Resource Name (ARN) of the stream consumer.'
            creation_timestamp: '- Approximate timestamp in RFC3339 format of when the stream consumer was created.'
            id: '- Amazon Resource Name (ARN) of the stream consumer.'
            name: '- (Required, Forces new resource) Name of the stream consumer.'
            stream_arn: – (Required, Forces new resource) Amazon Resource Name (ARN) of the data stream the consumer is registered with.
        importStatements: []
    aws_kinesis_video_stream:
        subCategory: Kinesis Video
        description: Provides a AWS Kinesis Video Stream
        name: aws_kinesis_video_stream
        title: aws_kinesis_video_stream
        examples:
            - name: default
              manifest: |-
                {
                  "data_retention_in_hours": 1,
                  "device_name": "kinesis-video-device-name",
                  "media_type": "video/h264",
                  "name": "terraform-kinesis-video-stream",
                  "tags": {
                    "Name": "terraform-kinesis-video-stream"
                  }
                }
        argumentDocs:
            arn: '- The Amazon Resource Name (ARN) specifying the Stream (same as id)'
            create: '- (Default 5 minutes)  Used for Creating a Kinesis Stream'
            creation_time: '- A time stamp that indicates when the stream was created.'
            data_retention_in_hours: – (Optional) The number of hours that you want to retain the data in the stream. Kinesis Video Streams retains the data in a data store that is associated with the stream. The default value is 0, indicating that the stream does not persist data.
            delete: '- (Default 120 minutes) Used for Destroying a Kinesis Stream'
            device_name: '- (Optional) The name of the device that is writing to the stream. In the current implementation, Kinesis Video Streams does not use this name.'
            id: '- The unique Stream id'
            kms_key_id: '- (Optional) The ID of the AWS Key Management Service (AWS KMS) key that you want Kinesis Video Streams to use to encrypt stream data. If no key ID is specified, the default, Kinesis Video-managed key (aws/kinesisvideo) is used.'
            media_type: '- (Optional) The media type of the stream. Consumers of the stream can use this information when processing the stream. For more information about media types, see Media Types. If you choose to specify the MediaType, see Naming Requirements for guidelines.'
            name: |-
                - (Required) A name to identify the stream. This is unique to the
                AWS account and region the Stream is created in.
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            update: '- (Default 120 minutes) Used for Updating a Kinesis Stream'
            version: '- The version of the stream.'
        importStatements: []
    aws_kinesisanalyticsv2_application:
        subCategory: Kinesis Analytics V2
        description: Manages a Kinesis Analytics v2 Application.
        name: aws_kinesisanalyticsv2_application
        title: aws_kinesisanalyticsv2_application
        examples:
            - name: example
              manifest: |-
                {
                  "application_configuration": [
                    {
                      "application_code_configuration": [
                        {
                          "code_content": [
                            {
                              "s3_content_location": [
                                {
                                  "bucket_arn": "${aws_s3_bucket.example.arn}",
                                  "file_key": "${aws_s3_object.example.key}"
                                }
                              ]
                            }
                          ],
                          "code_content_type": "ZIPFILE"
                        }
                      ],
                      "environment_properties": [
                        {
                          "property_group": [
                            {
                              "property_group_id": "PROPERTY-GROUP-1",
                              "property_map": {
                                "Key1": "Value1"
                              }
                            },
                            {
                              "property_group_id": "PROPERTY-GROUP-2",
                              "property_map": {
                                "KeyA": "ValueA",
                                "KeyB": "ValueB"
                              }
                            }
                          ]
                        }
                      ],
                      "flink_application_configuration": [
                        {
                          "checkpoint_configuration": [
                            {
                              "configuration_type": "DEFAULT"
                            }
                          ],
                          "monitoring_configuration": [
                            {
                              "configuration_type": "CUSTOM",
                              "log_level": "DEBUG",
                              "metrics_level": "TASK"
                            }
                          ],
                          "parallelism_configuration": [
                            {
                              "auto_scaling_enabled": true,
                              "configuration_type": "CUSTOM",
                              "parallelism": 10,
                              "parallelism_per_kpu": 4
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "name": "example-flink-application",
                  "runtime_environment": "FLINK-1_8",
                  "service_execution_role": "${aws_iam_role.example.arn}",
                  "tags": {
                    "Environment": "test"
                  }
                }
              references:
                application_configuration.application_code_configuration.code_content.s3_content_location.bucket_arn: aws_s3_bucket.example.arn
                application_configuration.application_code_configuration.code_content.s3_content_location.file_key: aws_s3_object.example.key
                service_execution_role: aws_iam_role.example.arn
              dependencies:
                aws_s3_bucket.example: |-
                    {
                      "bucket": "example-flink-application"
                    }
                aws_s3_object.example: |-
                    {
                      "bucket": "${aws_s3_bucket.example.bucket}",
                      "key": "example-flink-application",
                      "source": "flink-app.jar"
                    }
            - name: example
              manifest: |-
                {
                  "application_configuration": [
                    {
                      "application_code_configuration": [
                        {
                          "code_content": [
                            {
                              "text_content": "SELECT 1;\n"
                            }
                          ],
                          "code_content_type": "PLAINTEXT"
                        }
                      ],
                      "sql_application_configuration": [
                        {
                          "input": [
                            {
                              "input_parallelism": [
                                {
                                  "count": 3
                                }
                              ],
                              "input_schema": [
                                {
                                  "record_column": [
                                    {
                                      "mapping": "MAPPING-1",
                                      "name": "COLUMN_1",
                                      "sql_type": "VARCHAR(8)"
                                    },
                                    {
                                      "name": "COLUMN_2",
                                      "sql_type": "DOUBLE"
                                    }
                                  ],
                                  "record_encoding": "UTF-8",
                                  "record_format": [
                                    {
                                      "mapping_parameters": [
                                        {
                                          "csv_mapping_parameters": [
                                            {
                                              "record_column_delimiter": ",",
                                              "record_row_delimiter": "\n"
                                            }
                                          ]
                                        }
                                      ],
                                      "record_format_type": "CSV"
                                    }
                                  ]
                                }
                              ],
                              "kinesis_streams_input": [
                                {
                                  "resource_arn": "${aws_kinesis_stream.example.arn}"
                                }
                              ],
                              "name_prefix": "PREFIX_1"
                            }
                          ],
                          "output": [
                            {
                              "destination_schema": [
                                {
                                  "record_format_type": "JSON"
                                }
                              ],
                              "lambda_output": [
                                {
                                  "resource_arn": "${aws_lambda_function.example.arn}"
                                }
                              ],
                              "name": "OUTPUT_1"
                            },
                            {
                              "destination_schema": [
                                {
                                  "record_format_type": "CSV"
                                }
                              ],
                              "kinesis_firehose_output": [
                                {
                                  "resource_arn": "${aws_kinesis_firehose_delivery_stream.example.arn}"
                                }
                              ],
                              "name": "OUTPUT_2"
                            }
                          ],
                          "reference_data_source": [
                            {
                              "reference_schema": [
                                {
                                  "record_column": [
                                    {
                                      "name": "COLUMN_1",
                                      "sql_type": "INTEGER"
                                    }
                                  ],
                                  "record_format": [
                                    {
                                      "mapping_parameters": [
                                        {
                                          "json_mapping_parameters": [
                                            {
                                              "record_row_path": "$"
                                            }
                                          ]
                                        }
                                      ],
                                      "record_format_type": "JSON"
                                    }
                                  ]
                                }
                              ],
                              "s3_reference_data_source": [
                                {
                                  "bucket_arn": "${aws_s3_bucket.example.arn}",
                                  "file_key": "KEY-1"
                                }
                              ],
                              "table_name": "TABLE-1"
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "cloudwatch_logging_options": [
                    {
                      "log_stream_arn": "${aws_cloudwatch_log_stream.example.arn}"
                    }
                  ],
                  "name": "example-sql-application",
                  "runtime_environment": "SQL-1_0",
                  "service_execution_role": "${aws_iam_role.example.arn}"
                }
              references:
                application_configuration.sql_application_configuration.input.kinesis_streams_input.resource_arn: aws_kinesis_stream.example.arn
                application_configuration.sql_application_configuration.output.kinesis_firehose_output.resource_arn: aws_kinesis_firehose_delivery_stream.example.arn
                application_configuration.sql_application_configuration.output.lambda_output.resource_arn: aws_lambda_function.example.arn
                application_configuration.sql_application_configuration.reference_data_source.s3_reference_data_source.bucket_arn: aws_s3_bucket.example.arn
                cloudwatch_logging_options.log_stream_arn: aws_cloudwatch_log_stream.example.arn
                service_execution_role: aws_iam_role.example.arn
              dependencies:
                aws_cloudwatch_log_group.example: |-
                    {
                      "name": "example-sql-application"
                    }
                aws_cloudwatch_log_stream.example: |-
                    {
                      "log_group_name": "${aws_cloudwatch_log_group.example.name}",
                      "name": "example-sql-application"
                    }
            - name: example
              manifest: |-
                {
                  "application_configuration": [
                    {
                      "application_code_configuration": [
                        {
                          "code_content": [
                            {
                              "s3_content_location": [
                                {
                                  "bucket_arn": "${aws_s3_bucket.example.arn}",
                                  "file_key": "${aws_s3_object.example.key}"
                                }
                              ]
                            }
                          ],
                          "code_content_type": "ZIPFILE"
                        }
                      ],
                      "vpc_configuration": [
                        {
                          "security_group_ids": [
                            "${aws_security_group.example[0].id}",
                            "${aws_security_group.example[1].id}"
                          ],
                          "subnet_ids": [
                            "${aws_subnet.example.id}"
                          ]
                        }
                      ]
                    }
                  ],
                  "name": "example-flink-application",
                  "runtime_environment": "FLINK-1_8",
                  "service_execution_role": "${aws_iam_role.example.arn}"
                }
              references:
                application_configuration.application_code_configuration.code_content.s3_content_location.bucket_arn: aws_s3_bucket.example.arn
                application_configuration.application_code_configuration.code_content.s3_content_location.file_key: aws_s3_object.example.key
                service_execution_role: aws_iam_role.example.arn
              dependencies:
                aws_s3_bucket.example: |-
                    {
                      "bucket": "example-flink-application"
                    }
                aws_s3_object.example: |-
                    {
                      "bucket": "${aws_s3_bucket.example.bucket}",
                      "key": "example-flink-application",
                      "source": "flink-app.jar"
                    }
        argumentDocs:
            allow_non_restored_state: '- (Optional) When restoring from a snapshot, specifies whether the runtime is allowed to skip a state that cannot be mapped to the new program. Default is false.'
            application_code_configuration: '- (Required) The code location and type parameters for the application.'
            application_configuration: '- (Optional) The application''s configuration'
            application_restore_configuration: '- (Optional) The restore behavior of a restarting application.'
            application_restore_type: '- (Required) Specifies how the application should be restored. Valid values: RESTORE_FROM_CUSTOM_SNAPSHOT, RESTORE_FROM_LATEST_SNAPSHOT, SKIP_RESTORE_FROM_SNAPSHOT.'
            application_snapshot_configuration: '- (Optional) Describes whether snapshots are enabled for a Flink-based application.'
            arn: '- The ARN of the application.'
            auto_scaling_enabled: '- (Optional) Describes whether the Kinesis Data Analytics service can increase the parallelism of the application in response to increased throughput.'
            bucket_arn: '- (Required) The ARN for the S3 bucket containing the application code.'
            checkpoint_configuration: '- (Optional) Describes an application''s checkpointing configuration.'
            checkpoint_interval: '- (Optional) Describes the interval in milliseconds between checkpoint operations.'
            checkpointing_enabled: '- (Optional) Describes whether checkpointing is enabled for a Flink-based Kinesis Data Analytics application.'
            cloudwatch_logging_options: '- (Optional) A CloudWatch log stream to monitor application configuration errors.'
            code_content: '- (Optional) The location and type of the application code.'
            code_content_type: '- (Required) Specifies whether the code content is in text or zip format. Valid values: PLAINTEXT, ZIPFILE.'
            configuration_type: '- (Required) Describes whether the application uses Kinesis Data Analytics'' default checkpointing behavior. Valid values: CUSTOM, DEFAULT. Set this attribute to CUSTOM in order for any specified checkpointing_enabled, checkpoint_interval, or min_pause_between_checkpoints attribute values to be effective. If this attribute is set to DEFAULT, the application will always use the following values:'
            count: '- (Optional) The number of in-application streams to create.'
            create: '- (Default 10 minutes) Used for Application creation'
            create_timestamp: '- The current timestamp when the application was created.'
            csv_mapping_parameters: '- (Optional) Provides additional mapping information when the record format uses delimiters (for example, CSV).'
            delete: '- (Default 10 minutes) Used for Application deletion'
            description: '- (Optional) A summary description of the application.'
            destination_schema: '- (Required) Describes the data format when records are written to the destination.'
            environment_properties: '- (Optional) Describes execution properties for a Flink-based application.'
            file_key: '- (Required) The file key for the object containing the application code.'
            flink_application_configuration: '- (Optional) The configuration of a Flink-based application.'
            flink_run_configuration: '- (Optional) The starting parameters for a Flink-based Kinesis Data Analytics application.'
            force_stop: '- (Optional) Whether to force stop an unresponsive Flink-based application.'
            id: '- The application identifier.'
            input: '- (Optional) The input stream used by the application.'
            input_lambda_processor: '- (Required) Describes the Lambda function that is used to preprocess the records in the stream before being processed by your application code.'
            input_parallelism: '- (Optional) Describes the number of in-application streams to create.'
            input_processing_configuration: |-
                - (Optional) The input processing configuration for the input.
                An input processor transforms records as they are received from the stream, before the application's SQL code executes.
            input_schema: '- (Required) Describes the format of the data in the streaming source, and how each data element maps to corresponding columns in the in-application stream that is being created.'
            input_starting_position: '- (Required) The starting position on the stream. Valid values: LAST_STOPPED_POINT, NOW, TRIM_HORIZON.'
            input_starting_position_configuration: (Optional) The point at which the application starts processing records from the streaming source.
            json_mapping_parameters: '- (Optional) Provides additional mapping information when JSON is the record format on the streaming source.'
            kinesis_firehose_input: '- (Optional) If the streaming source is a Kinesis Data Firehose delivery stream, identifies the delivery stream''s ARN.'
            kinesis_firehose_output: '- (Optional) Identifies a Kinesis Data Firehose delivery stream as the destination.'
            kinesis_streams_input: '- (Optional) If the streaming source is a Kinesis data stream, identifies the stream''s Amazon Resource Name (ARN).'
            kinesis_streams_output: '- (Optional) Identifies a Kinesis data stream as the destination.'
            lambda_output: '- (Optional) Identifies a Lambda function as the destination.'
            last_update_timestamp: '- The current timestamp when the application was last updated.'
            log_level: '- (Optional) Describes the verbosity of the CloudWatch Logs for an application. Valid values: DEBUG, ERROR, INFO, WARN.'
            log_stream_arn: '- (Required) The ARN of the CloudWatch log stream to receive application messages.'
            mapping: '- (Optional) A reference to the data element in the streaming input or the reference data source.'
            mapping_parameters: '- (Required) Provides additional mapping information specific to the record format (such as JSON, CSV, or record fields delimited by some delimiter) on the streaming source.'
            metrics_level: '- (Optional) Describes the granularity of the CloudWatch Logs for an application. Valid values: APPLICATION, OPERATOR, PARALLELISM, TASK.'
            min_pause_between_checkpoints: '- (Optional) Describes the minimum time in milliseconds after a checkpoint operation completes that a new checkpoint operation can start.'
            monitoring_configuration: '- (Optional) Describes configuration parameters for CloudWatch logging for an application.'
            name: '- (Required) The name of the application.'
            name_prefix: '- (Required) The name prefix to use when creating an in-application stream.'
            object_version: '- (Optional) The version of the object containing the application code.'
            output: '- (Optional) The destination streams used by the application.'
            parallelism: '- (Optional) Describes the initial number of parallel tasks that a Flink-based Kinesis Data Analytics application can perform.'
            parallelism_configuration: '- (Optional) Describes parameters for how an application executes multiple tasks simultaneously.'
            parallelism_per_kpu: '- (Optional) Describes the number of parallel tasks that a Flink-based Kinesis Data Analytics application can perform per Kinesis Processing Unit (KPU) used by the application.'
            property_group: '- (Required) Describes the execution property groups.'
            property_group_id: '- (Required) The key of the application execution property key-value map.'
            property_map: '- (Required) Application execution property key-value map.'
            record_column: '- (Required) Describes the mapping of each data element in the streaming source to the corresponding column in the in-application stream.'
            record_column_delimiter: '- (Required) The column delimiter. For example, in a CSV format, a comma (,) is the typical column delimiter.'
            record_encoding: '- (Optional) Specifies the encoding of the records in the streaming source. For example, UTF-8.'
            record_format: '- (Required) Specifies the format of the records on the streaming source.'
            record_format_type: '- (Required) The type of record format. Valid values: CSV, JSON.'
            record_row_delimiter: '- (Required) The row delimiter. For example, in a CSV format, \n is the typical row delimiter.'
            record_row_path: '- (Required) The path to the top-level parent that contains the records.'
            reference_data_source: '- (Optional) The reference data source used by the application.'
            reference_schema: '- (Required) Describes the format of the data in the streaming source, and how each data element maps to corresponding columns created in the in-application stream.'
            resource_arn: '- (Required) The ARN of the Lambda function that operates on records in the stream.'
            run_configuration: '- (Optional) Describes the starting properties for a Flink-based application.'
            runtime_environment: '- (Required) The runtime environment for the application. Valid values: SQL-1_0, FLINK-1_6, FLINK-1_8, FLINK-1_11, FLINK-1_13.'
            s3_content_location: '- (Optional) Information about the Amazon S3 bucket containing the application code.'
            s3_reference_data_source: '- (Required) Identifies the S3 bucket and object that contains the reference data.'
            security_group_ids: '- (Required) The Security Group IDs used by the VPC configuration.'
            service_execution_role: '- (Required) The ARN of the IAM role used by the application to access Kinesis data streams, Kinesis Data Firehose delivery streams, Amazon S3 objects, and other external resources.'
            snapshot_name: '- (Optional) The identifier of an existing snapshot of application state to use to restart an application. The application uses this value if RESTORE_FROM_CUSTOM_SNAPSHOT is specified for application_restore_type.'
            snapshots_enabled: '- (Required) Describes whether snapshots are enabled for a Flink-based Kinesis Data Analytics application.'
            sql_application_configuration: '- (Optional) The configuration of a SQL-based application.'
            sql_type: '- (Required) The type of column created in the in-application input stream or reference table.'
            start_application: '- (Optional) Whether to start or stop the application.'
            status: '- The status of the application.'
            subnet_ids: '- (Required) The Subnet IDs used by the VPC configuration.'
            table_name: '- (Required) The name of the in-application table to create.'
            tags: '- (Optional) A map of tags to assign to the application. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            text_content: '- (Optional) The text-format code for the application.'
            update: '- (Default 10 minutes) Used for Application modifications and snapshotting'
            version_id: '- The current application version. Kinesis Data Analytics updates the version_id each time the application is updated.'
            vpc_configuration: '- (Optional) The VPC configuration of a Flink-based application.'
        importStatements: []
    aws_kinesisanalyticsv2_application_snapshot:
        subCategory: Kinesis Analytics V2
        description: Manages a Kinesis Analytics v2 Application Snapshot.
        name: aws_kinesisanalyticsv2_application_snapshot
        title: aws_kinesisanalyticsv2_application_snapshot
        examples:
            - name: example
              manifest: |-
                {
                  "application_name": "${aws_kinesisanalyticsv2_application.example.name}",
                  "snapshot_name": "example-snapshot"
                }
              references:
                application_name: aws_kinesisanalyticsv2_application.example.name
        argumentDocs:
            application_name: '- (Required) The name of an existing  Kinesis Analytics v2 Application. Note that the application must be running for a snapshot to be created.'
            application_version_id: '- The current application version ID when the snapshot was created.'
            create: '- (Default 10 minutes) Used for Snapshot creation'
            delete: '- (Default 10 minutes) Used for Snapshot destruction'
            id: '- The application snapshot identifier.'
            snapshot_creation_timestamp: '- The timestamp of the application snapshot.'
            snapshot_name: '- (Required) The name of the application snapshot.'
        importStatements: []
    aws_kms_alias:
        subCategory: KMS (Key Management)
        description: Provides a display name for a customer master key.
        name: aws_kms_alias
        title: aws_kms_alias
        examples:
            - name: a
              manifest: |-
                {
                  "name": "alias/my-key-alias",
                  "target_key_id": "${aws_kms_key.a.key_id}"
                }
              references:
                target_key_id: aws_kms_key.a.key_id
              dependencies:
                aws_kms_key.a: '{}'
        argumentDocs:
            arn: '- The Amazon Resource Name (ARN) of the key alias.'
            name: '- (Optional) The display name of the alias. The name must start with the word "alias" followed by a forward slash (alias/)'
            name_prefix: |-
                - (Optional) Creates an unique alias beginning with the specified prefix.
                The name must start with the word "alias" followed by a forward slash (alias/).  Conflicts with name.
            target_key_arn: '- The Amazon Resource Name (ARN) of the target key identifier.'
            target_key_id: '- (Required) Identifier for the key for which the alias is for, can be either an ARN or key_id.'
        importStatements: []
    aws_kms_ciphertext:
        subCategory: KMS (Key Management)
        description: Provides ciphertext encrypted using a KMS key
        name: aws_kms_ciphertext
        title: aws_kms_ciphertext
        examples:
            - name: oauth
              manifest: |-
                {
                  "key_id": "${aws_kms_key.oauth_config.key_id}",
                  "plaintext": "{\n  \"client_id\": \"e587dbae22222f55da22\",\n  \"client_secret\": \"8289575d00000ace55e1815ec13673955721b8a5\"\n}\n"
                }
              references:
                key_id: aws_kms_key.oauth_config.key_id
              dependencies:
                aws_kms_key.oauth_config: |-
                    {
                      "description": "oauth config",
                      "is_enabled": true
                    }
        argumentDocs:
            ciphertext_blob: '- Base64 encoded ciphertext'
            context: '- (Optional) An optional mapping that makes up the encryption context.'
            key_id: '- (Required) Globally unique key ID for the customer master key.'
            plaintext: '- (Required) Data to be encrypted. Note that this may show up in logs, and it will be stored in the state file.'
        importStatements: []
    aws_kms_external_key:
        subCategory: KMS (Key Management)
        description: Manages a single-Region or multi-Region primary KMS key that uses external key material.
        name: aws_kms_external_key
        title: aws_kms_external_key
        examples:
            - name: example
              manifest: |-
                {
                  "description": "KMS EXTERNAL for AMI encryption"
                }
        argumentDocs:
            arn: '- The Amazon Resource Name (ARN) of the key.'
            bypass_policy_lockout_safety_check: '- (Optional) Specifies whether to disable the policy lockout check performed when creating or updating the key''s policy. Setting this value to true increases the risk that the key becomes unmanageable. For more information, refer to the scenario in the Default Key Policy section in the AWS Key Management Service Developer Guide. Defaults to false.'
            deletion_window_in_days: '- (Optional) Duration in days after which the key is deleted after destruction of the resource. Must be between 7 and 30 days. Defaults to 30.'
            description: '- (Optional) Description of the key.'
            enabled: '- (Optional) Specifies whether the key is enabled. Keys pending import can only be false. Imported keys default to true unless expired.'
            expiration_model: '- Whether the key material expires. Empty when pending key material import, otherwise KEY_MATERIAL_EXPIRES or KEY_MATERIAL_DOES_NOT_EXPIRE.'
            id: '- The unique identifier for the key.'
            key_material_base64: '- (Optional) Base64 encoded 256-bit symmetric encryption key material to import. The CMK is permanently associated with this key material. The same key material can be reimported, but you cannot import different key material.'
            key_state: '- The state of the CMK.'
            key_usage: '- The cryptographic operations for which you can use the CMK.'
            multi_region: '- (Optional) Indicates whether the KMS key is a multi-Region (true) or regional (false) key. Defaults to false.'
            policy: '- (Optional) A key policy JSON document. If you do not provide a key policy, AWS KMS attaches a default key policy to the CMK.'
            tags: '- (Optional) A key-value map of tags to assign to the key. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            valid_to: '- (Optional) Time at which the imported key material expires. When the key material expires, AWS KMS deletes the key material and the CMK becomes unusable. If not specified, key material does not expire. Valid values: RFC3339 time string (YYYY-MM-DDTHH:MM:SSZ)'
        importStatements: []
    aws_kms_grant:
        subCategory: KMS (Key Management)
        description: Provides a resource-based access control mechanism for KMS Customer Master Keys.
        name: aws_kms_grant
        title: aws_kms_grant
        examples:
            - name: a
              manifest: |-
                {
                  "constraints": [
                    {
                      "encryption_context_equals": {
                        "Department": "Finance"
                      }
                    }
                  ],
                  "grantee_principal": "${aws_iam_role.a.arn}",
                  "key_id": "${aws_kms_key.a.key_id}",
                  "name": "my-grant",
                  "operations": [
                    "Encrypt",
                    "Decrypt",
                    "GenerateDataKey"
                  ]
                }
              references:
                grantee_principal: aws_iam_role.a.arn
                key_id: aws_kms_key.a.key_id
              dependencies:
                aws_iam_role.a: |-
                    {
                      "assume_role_policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"lambda.amazonaws.com\"\n      },\n      \"Effect\": \"Allow\",\n      \"Sid\": \"\"\n    }\n  ]\n}\n",
                      "name": "iam-role-for-grant"
                    }
                aws_kms_key.a: '{}'
        argumentDocs:
            constraints: '- (Optional, Forces new resources) A structure that you can use to allow certain operations in the grant only when the desired encryption context is present. For more information about encryption context, see Encryption Context.'
            constraints.encryption_context_equals: '- (Optional) A list of key-value pairs that must match the encryption context in subsequent cryptographic operation requests. The grant allows the operation only when the encryption context in the request is the same as the encryption context specified in this constraint. Conflicts with encryption_context_subset.'
            constraints.encryption_context_subset: '- (Optional) A list of key-value pairs that must be included in the encryption context of subsequent cryptographic operation requests. The grant allows the cryptographic operation only when the encryption context in the request includes the key-value pairs specified in this constraint, although it can include additional key-value pairs. Conflicts with encryption_context_equals.'
            grant_creation_tokens: '- (Optional, Forces new resources) A list of grant tokens to be used when creating the grant. See Grant Tokens for more information about grant tokens.'
            grant_id: '- The unique identifier for the grant.'
            grant_token: '- The grant token for the created grant. For more information, see Grant Tokens.'
            grantee_principal: '- (Required, Forces new resources) The principal that is given permission to perform the operations that the grant permits in ARN format. Note that due to eventual consistency issues around IAM principals, terraform''s state may not always be refreshed to reflect what is true in AWS.'
            key_id: '- (Required, Forces new resources) The unique identifier for the customer master key (CMK) that the grant applies to. Specify the key ID or the Amazon Resource Name (ARN) of the CMK. To specify a CMK in a different AWS account, you must use the key ARN.'
            name: '- (Optional, Forces new resources) A friendly name for identifying the grant.'
            operations: '- (Required, Forces new resources) A list of operations that the grant permits. The permitted values are: Decrypt, Encrypt, GenerateDataKey, GenerateDataKeyWithoutPlaintext, ReEncryptFrom, ReEncryptTo, Sign, Verify, GetPublicKey, CreateGrant, RetireGrant, DescribeKey, GenerateDataKeyPair, or GenerateDataKeyPairWithoutPlaintext.'
            retire_on_delete: |-
                -(Defaults to false, Forces new resources) If set to false (the default) the grants will be revoked upon deletion, and if set to true the grants will try to be retired upon deletion. Note that retiring grants requires special permissions, hence why we default to revoking grants.
                See RetireGrant for more information.
            retiring_principal: '- (Optional, Forces new resources) The principal that is given permission to retire the grant by using RetireGrant operation in ARN format. Note that due to eventual consistency issues around IAM principals, terraform''s state may not always be refreshed to reflect what is true in AWS.'
        importStatements: []
    aws_kms_key:
        subCategory: KMS (Key Management)
        description: Manages a single-Region or multi-Region primary KMS key.
        name: aws_kms_key
        title: aws_kms_key
        examples:
            - name: a
              manifest: |-
                {
                  "deletion_window_in_days": 10,
                  "description": "KMS key 1"
                }
        argumentDocs:
            arn: '- The Amazon Resource Name (ARN) of the key.'
            bypass_policy_lockout_safety_check: |-
                - (Optional) A flag to indicate whether to bypass the key policy lockout safety check.
                Setting this value to true increases the risk that the KMS key becomes unmanageable. Do not set this value to true indiscriminately.
                For more information, refer to the scenario in the Default Key Policy section in the AWS Key Management Service Developer Guide.
                The default value is false.
            customer_master_key_spec: |-
                - (Optional) Specifies whether the key contains a symmetric key or an asymmetric key pair and the encryption algorithms or signing algorithms that the key supports.
                Valid values: SYMMETRIC_DEFAULT,  RSA_2048, RSA_3072, RSA_4096, HMAC_256, ECC_NIST_P256, ECC_NIST_P384, ECC_NIST_P521, or ECC_SECG_P256K1. Defaults to SYMMETRIC_DEFAULT. For help with choosing a key spec, see the AWS KMS Developer Guide.
            deletion_window_in_days: |-
                - (Optional) The waiting period, specified in number of days. After the waiting period ends, AWS KMS deletes the KMS key.
                If you specify a value, it must be between 7 and 30, inclusive. If you do not specify a value, it defaults to 30.
                If the KMS key is a multi-Region primary key with replicas, the waiting period begins when the last of its replica keys is deleted. Otherwise, the waiting period begins immediately.
            description: '- (Optional) The description of the key as viewed in AWS console.'
            enable_key_rotation: '- (Optional) Specifies whether key rotation is enabled. Defaults to false.'
            is_enabled: '- (Optional) Specifies whether the key is enabled. Defaults to true.'
            key_id: '- The globally unique identifier for the key.'
            key_usage: |-
                - (Optional) Specifies the intended use of the key. Valid values: ENCRYPT_DECRYPT or SIGN_VERIFY.
                Defaults to ENCRYPT_DECRYPT.
            multi_region: '- (Optional) Indicates whether the KMS key is a multi-Region (true) or regional (false) key. Defaults to false.'
            policy: '- (Optional) A valid policy JSON document. Although this is a key policy, not an IAM policy, an aws_iam_policy_document, in the form that designates a principal, can be used. For more information about building policy documents with Terraform, see the AWS IAM Policy Document Guide.'
            tags: '- (Optional) A map of tags to assign to the object. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_lakeformation_data_lake_settings:
        subCategory: Lake Formation
        description: Manages data lake administrators and default database and table permissions
        name: aws_lakeformation_data_lake_settings
        title: aws_lakeformation_data_lake_settings
        examples:
            - name: example
              manifest: |-
                {
                  "admins": [
                    "${aws_iam_user.test.arn}",
                    "${aws_iam_role.test.arn}"
                  ]
                }
            - name: example
              manifest: |-
                {
                  "admins": [
                    "${aws_iam_user.test.arn}",
                    "${aws_iam_role.test.arn}"
                  ],
                  "create_database_default_permissions": [
                    {
                      "permissions": [
                        "SELECT",
                        "ALTER",
                        "DROP"
                      ],
                      "principal": "${aws_iam_user.test.arn}"
                    }
                  ],
                  "create_table_default_permissions": [
                    {
                      "permissions": [
                        "ALL"
                      ],
                      "principal": "${aws_iam_role.test.arn}"
                    }
                  ]
                }
              references:
                create_database_default_permissions.principal: aws_iam_user.test.arn
                create_table_default_permissions.principal: aws_iam_role.test.arn
        argumentDocs:
            admins: – (Optional) Set of ARNs of AWS Lake Formation principals (IAM users or roles).
            catalog_id: – (Optional) Identifier for the Data Catalog. By default, the account ID.
            create_database_default_permissions: '- (Optional) Up to three configuration blocks of principal permissions for default create database permissions. Detailed below.'
            create_database_default_permissions.permissions: '- (Optional) List of permissions that are granted to the principal. Valid values may include ALL, SELECT, ALTER, DROP, DELETE, INSERT, DESCRIBE, and CREATE_TABLE. For more details, see Lake Formation Permissions Reference.'
            create_database_default_permissions.principal: '- (Optional) Principal who is granted permissions. To enforce metadata and underlying data access control only by IAM on new databases and tables set principal to IAM_ALLOWED_PRINCIPALS and permissions to ["ALL"].'
            create_table_default_permissions: '- (Optional) Up to three configuration blocks of principal permissions for default create table permissions. Detailed below.'
            create_table_default_permissions.permissions: '- (Optional) List of permissions that are granted to the principal. Valid values may include ALL, SELECT, ALTER, DROP, DELETE, INSERT, and DESCRIBE. For more details, see Lake Formation Permissions Reference.'
            create_table_default_permissions.principal: '- (Optional) Principal who is granted permissions. To enforce metadata and underlying data access control only by IAM on new databases and tables set principal to IAM_ALLOWED_PRINCIPALS and permissions to ["ALL"].'
            trusted_resource_owners: – (Optional) List of the resource-owning account IDs that the caller's account can use to share their user access details (user ARNs).
        importStatements: []
    aws_lakeformation_lf_tag:
        subCategory: Lake Formation
        description: Creates a tag with the specified name and values.
        name: aws_lakeformation_lf_tag
        title: aws_lakeformation_lf_tag
        examples:
            - name: example
              manifest: |-
                {
                  "key": "module",
                  "values": [
                    "Orders",
                    "Sales",
                    "Customers"
                  ]
                }
        argumentDocs:
            catalog_id: '- (Optional) ID of the Data Catalog to create the tag in. If omitted, this defaults to the AWS Account ID.'
            id: '- Catalog ID and key-name of the tag'
            key: '- (Required) Key-name for the tag.'
            values: '- (Required) List of possible values an attribute can take.'
        importStatements: []
    aws_lakeformation_permissions:
        subCategory: Lake Formation
        description: Grants permissions to the principal to access metadata in the Data Catalog and data organized in underlying data storage such as Amazon S3.
        name: aws_lakeformation_permissions
        title: aws_lakeformation_permissions
        examples:
            - name: example
              manifest: |-
                {
                  "permissions": [
                    "SELECT"
                  ],
                  "principal": "arn:aws:iam:us-east-1:123456789012:user/SanHolo",
                  "table_with_columns": [
                    {
                      "column_names": [
                        "event"
                      ],
                      "database_name": "${aws_glue_catalog_table.example.database_name}",
                      "name": "${aws_glue_catalog_table.example.name}"
                    }
                  ]
                }
              references:
                table_with_columns.database_name: aws_glue_catalog_table.example.database_name
                table_with_columns.name: aws_glue_catalog_table.example.name
              dependencies:
                aws_glue_catalog_database.example: |-
                    {
                      "name": "sadabate"
                    }
                aws_glue_catalog_table.example: |-
                    {
                      "database_name": "${aws_glue_catalog_database.test.name}",
                      "name": "abelt",
                      "storage_descriptor": [
                        {
                          "columns": [
                            {
                              "name": "event",
                              "type": "string"
                            }
                          ]
                        }
                      ]
                    }
            - name: example
              manifest: |-
                {
                  "data_location": [
                    {
                      "arn": "${aws_lakeformation_resource.example.arn}"
                    }
                  ],
                  "permissions": [
                    "ALL"
                  ],
                  "principal": "${aws_iam_role.workflow_role.arn}"
                }
              references:
                data_location.arn: aws_lakeformation_resource.example.arn
                principal: aws_iam_role.workflow_role.arn
            - name: example
              manifest: |-
                {
                  "database": [
                    {
                      "catalog_id": "110376042874",
                      "name": "${aws_glue_catalog_database.example.name}"
                    }
                  ],
                  "permissions": [
                    "CREATE_TABLE",
                    "ALTER",
                    "DROP"
                  ],
                  "principal": "${aws_iam_role.workflow_role.arn}"
                }
              references:
                database.name: aws_glue_catalog_database.example.name
                principal: aws_iam_role.workflow_role.arn
            - name: test
              manifest: |-
                {
                  "lf_tag_policy": [
                    {
                      "expression": [
                        {
                          "key": "Team",
                          "values": [
                            "Sales"
                          ]
                        },
                        {
                          "key": "Environment",
                          "values": [
                            "Dev",
                            "Production"
                          ]
                        }
                      ],
                      "resource_type": "DATABASE"
                    }
                  ],
                  "permissions": [
                    "CREATE_TABLE",
                    "ALTER",
                    "DROP"
                  ],
                  "principal": "${aws_iam_role.sales_role.arn}"
                }
              references:
                principal: aws_iam_role.sales_role.arn
        argumentDocs:
            Super: permission to IAMAllowedPrincipals on all existing AWS Glue Data Catalog resources.
            catalog_id: – (Optional) Identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment.
            catalog_resource: '- (Optional) Whether the permissions are to be granted for the Data Catalog. Defaults to false.'
            data_location: '- (Optional) Configuration block for a data location resource. Detailed below.'
            data_location.arn: – (Required) Amazon Resource Name (ARN) that uniquely identifies the data location resource.
            data_location.catalog_id: '- (Optional) Identifier for the Data Catalog where the location is registered with Lake Formation. By default, it is the account ID of the caller.'
            database: '- (Optional) Configuration block for a database resource. Detailed below.'
            database.catalog_id: '- (Optional) Identifier for the Data Catalog. By default, it is the account ID of the caller.'
            database.name: – (Required) Name of the database resource. Unique to the Data Catalog.
            lf_tag: '- (Optional) Configuration block for an LF-tag resource. Detailed below.'
            lf_tag.catalog_id: '- (Optional) Identifier for the Data Catalog. By default, it is the account ID of the caller.'
            lf_tag.key: – (Required) The key-name for the tag.
            lf_tag.values: '- (Required) A list of possible values an attribute can take.'
            lf_tag_policy: '- (Optional) Configuration block for an LF-tag policy resource. Detailed below.'
            lf_tag_policy.catalog_id: '- (Optional) Identifier for the Data Catalog. By default, it is the account ID of the caller.'
            lf_tag_policy.expression: '- (Required) A list of tag conditions that apply to the resource''s tag policy. Configuration block for tag conditions that apply to the policy. See expression below.'
            lf_tag_policy.expression.key: – (Required) The key-name of an LF-Tag.
            lf_tag_policy.expression.values: '- (Required) A list of possible values of an LF-Tag.'
            lf_tag_policy.resource_type: – (Required) The resource type for which the tag policy applies. Valid values are DATABASE and TABLE.
            permissions: – (Required) List of permissions granted to the principal. Valid values may include ALL, ALTER, ASSOCIATE, CREATE_DATABASE, CREATE_TABLE, DATA_LOCATION_ACCESS, DELETE, DESCRIBE, DROP, INSERT, and SELECT. For details on each permission, see Lake Formation Permissions Reference.
            permissions_with_grant_option: '- (Optional) Subset of permissions which the principal can pass.'
            principal: – (Required) Principal to be granted the permissions on the resource. Supported principals include IAM_ALLOWED_PRINCIPALS (see Default Behavior and  above), IAM roles, users, groups, SAML groups and users, QuickSight groups, OUs, and organizations as well as AWS account IDs for cross-account permissions. For more information, see Lake Formation Permissions Reference.
            table: '- (Optional) Configuration block for a table resource. Detailed below.'
            table.catalog_id: '- (Optional) Identifier for the Data Catalog. By default, it is the account ID of the caller.'
            table.database_name: – (Required) Name of the database for the table. Unique to a Data Catalog.
            table.name: '- (Required, at least one of name or wildcard) Name of the table.'
            table.wildcard: '- (Required, at least one of name or wildcard) Whether to use a wildcard representing every table under a database. Defaults to false.'
            table_with_columns: '- (Optional) Configuration block for a table with columns resource. Detailed below.'
            table_with_columns.catalog_id: '- (Optional) Identifier for the Data Catalog. By default, it is the account ID of the caller.'
            table_with_columns.column_names: '- (Required, at least one of column_names or wildcard) Set of column names for the table.'
            table_with_columns.database_name: – (Required) Name of the database for the table with columns resource. Unique to the Data Catalog.
            table_with_columns.excluded_column_names: '- (Optional) Set of column names for the table to exclude. If excluded_column_names is included, wildcard must be set to true to avoid Terraform reporting a difference.'
            table_with_columns.name: – (Required) Name of the table resource.
            table_with_columns.wildcard: '- (Required, at least one of column_names or wildcard) Whether to use a column wildcard. If excluded_column_names is included, wildcard must be set to true to avoid Terraform reporting a difference.'
        importStatements: []
    aws_lakeformation_resource:
        subCategory: Lake Formation
        description: Registers a Lake Formation resource as managed by the Data Catalog.
        name: aws_lakeformation_resource
        title: aws_lakeformation_resource
        examples:
            - name: example
              manifest: |-
                {
                  "arn": "${data.aws_s3_bucket.example.arn}"
                }
              references:
                arn: data.aws_s3_bucket.example.arn
        argumentDocs:
            arn: – (Required) Amazon Resource Name (ARN) of the resource, an S3 path.
            last_modified: '- (Optional) The date and time the resource was last modified in RFC 3339 format.'
            role_arn: – (Optional) Role that has read/write access to the resource. If not provided, the Lake Formation service-linked role must exist and is used.
        importStatements: []
    aws_lakeformation_resource_lf_tags:
        subCategory: Lake Formation
        description: Manages an attachment between one or more LF-tags and an existing Lake Formation resource.
        name: aws_lakeformation_resource_lf_tags
        title: aws_lakeformation_resource_lf_tags
        examples:
            - name: example
              manifest: |-
                {
                  "database": [
                    {
                      "name": "${aws_glue_catalog_database.example.name}"
                    }
                  ],
                  "lf_tag": [
                    {
                      "key": "${aws_lakeformation_lf_tag.example.key}",
                      "value": "stowe"
                    }
                  ]
                }
              references:
                database.name: aws_glue_catalog_database.example.name
                lf_tag.key: aws_lakeformation_lf_tag.example.key
              dependencies:
                aws_lakeformation_lf_tag.example: |-
                    {
                      "key": "right",
                      "values": [
                        "abbey",
                        "village",
                        "luffield",
                        "woodcote",
                        "copse",
                        "chapel",
                        "stowe",
                        "club"
                      ]
                    }
            - name: example
              manifest: |-
                {
                  "database": [
                    {
                      "name": "${aws_glue_catalog_database.example.name}"
                    }
                  ],
                  "lf_tag": [
                    {
                      "key": "right",
                      "value": "luffield"
                    },
                    {
                      "key": "left",
                      "value": "aintree"
                    }
                  ]
                }
              references:
                database.name: aws_glue_catalog_database.example.name
              dependencies:
                aws_lakeformation_lf_tag.example: |-
                    {
                      "key": "right",
                      "values": [
                        "abbey",
                        "village",
                        "luffield",
                        "woodcote",
                        "copse",
                        "chapel",
                        "stowe",
                        "club"
                      ]
                    }
                aws_lakeformation_lf_tag.example2: |-
                    {
                      "key": "left",
                      "values": [
                        "farm",
                        "theloop",
                        "aintree",
                        "brooklands",
                        "maggotts",
                        "becketts",
                        "vale"
                      ]
                    }
        argumentDocs:
            catalog_id: – (Optional) Identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment.
            database: '- (Optional) Configuration block for a database resource. See below.'
            database.catalog_id: '- (Optional) Identifier for the Data Catalog. By default, it is the account ID of the caller.'
            database.name: – (Required) Name of the database resource. Unique to the Data Catalog.
            lf_tag: – (Required) Set of LF-tags to attach to the resource. See below.
            lf_tag.catalog_id: '- (Optional) Identifier for the Data Catalog. By default, it is the account ID of the caller.'
            lf_tag.key: – (Required) Key name for an existing LF-tag.
            lf_tag.value: '- (Required) Value from the possible values for the LF-tag.'
            table: '- (Optional) Configuration block for a table resource. See below.'
            table.catalog_id: '- (Optional) Identifier for the Data Catalog. By default, it is the account ID of the caller.'
            table.database_name: – (Required) Name of the database for the table. Unique to a Data Catalog.
            table.name: '- (Required, at least one of name or wildcard) Name of the table.'
            table.wildcard: '- (Required, at least one of name or wildcard) Whether to use a wildcard representing every table under a database. Defaults to false.'
            table_with_columns: '- (Optional) Configuration block for a table with columns resource. See below.'
            table_with_columns.catalog_id: '- (Optional) Identifier for the Data Catalog. By default, it is the account ID of the caller.'
            table_with_columns.column_names: '- (Required, at least one of column_names or wildcard) Set of column names for the table.'
            table_with_columns.database_name: – (Required) Name of the database for the table with columns resource. Unique to the Data Catalog.
            table_with_columns.excluded_column_names: '- (Optional) Set of column names for the table to exclude. If excluded_column_names is included, wildcard must be set to true to avoid Terraform reporting a difference.'
            table_with_columns.name: – (Required) Name of the table resource.
            table_with_columns.wildcard: '- (Required, at least one of column_names or wildcard) Whether to use a column wildcard. If excluded_column_names is included, wildcard must be set to true to avoid Terraform reporting a difference.'
        importStatements: []
    aws_lambda_alias:
        subCategory: Lambda
        description: Creates a Lambda function alias.
        name: aws_lambda_alias
        title: aws_lambda_alias
        examples:
            - name: test_lambda_alias
              manifest: |-
                {
                  "description": "a sample description",
                  "function_name": "${aws_lambda_function.lambda_function_test.arn}",
                  "function_version": "1",
                  "name": "my_alias",
                  "routing_config": [
                    {
                      "additional_version_weights": {
                        "2": 0.5
                      }
                    }
                  ]
                }
              references:
                function_name: aws_lambda_function.lambda_function_test.arn
        argumentDocs:
            additional_version_weights: '- (Optional) A map that defines the proportion of events that should be sent to different versions of a lambda function.'
            arn: '- The Amazon Resource Name (ARN) identifying your Lambda function alias.'
            description: '- (Optional) Description of the alias.'
            function_name: '- (Required) Lambda Function name or ARN.'
            function_version: '- (Required) Lambda function version for which you are creating the alias. Pattern: (\$LATEST|[0-9]+).'
            invoke_arn: '- The ARN to be used for invoking Lambda Function from API Gateway - to be used in aws_api_gateway_integration''s uri'
            name: '- (Required) Name for the alias you are creating. Pattern: (?!^[0-9]+$)([a-zA-Z0-9-_]+)'
            routing_config: '- (Optional) The Lambda alias'' route configuration settings. Fields documented below'
        importStatements: []
    aws_lambda_code_signing_config:
        subCategory: Lambda
        description: Provides a Lambda Code Signing Config resource.
        name: aws_lambda_code_signing_config
        title: aws_lambda_code_signing_config
        examples:
            - name: new_csc
              manifest: |-
                {
                  "allowed_publishers": [
                    {
                      "signing_profile_version_arns": [
                        "${aws_signer_signing_profile.example1.arn}",
                        "${aws_signer_signing_profile.example2.arn}"
                      ]
                    }
                  ],
                  "description": "My awesome code signing config.",
                  "policies": [
                    {
                      "untrusted_artifact_on_deployment": "Warn"
                    }
                  ]
                }
        argumentDocs:
            allowed_publishers: (Required) A configuration block of allowed publishers as signing profiles for this code signing configuration. Detailed below.
            allowed_publishers.signing_profile_version_arns: '- (Required) The Amazon Resource Name (ARN) for each of the signing profiles. A signing profile defines a trusted user who can sign a code package.'
            arn: '- The Amazon Resource Name (ARN) of the code signing configuration.'
            config_id: '- Unique identifier for the code signing configuration.'
            description: '- (Optional) Descriptive name for this code signing configuration.'
            last_modified: '- The date and time that the code signing configuration was last modified.'
            policies: (Optional) A configuration block of code signing policies that define the actions to take if the validation checks fail. Detailed below.
            policies.untrusted_artifact_on_deployment: '- (Required) Code signing configuration policy for deployment validation failure. If you set the policy to Enforce, Lambda blocks the deployment request if code-signing validation checks fail. If you set the policy to Warn, Lambda allows the deployment and creates a CloudWatch log. Valid values: Warn, Enforce. Default value: Warn.'
        importStatements: []
    aws_lambda_event_source_mapping:
        subCategory: Lambda
        description: Provides a Lambda event source mapping. This allows Lambda functions to get events from Kinesis, DynamoDB, SQS, Amazon MQ and Managed Streaming for Apache Kafka (MSK).
        name: aws_lambda_event_source_mapping
        title: aws_lambda_event_source_mapping
        examples:
            - name: example
              manifest: |-
                {
                  "event_source_arn": "${aws_dynamodb_table.example.stream_arn}",
                  "function_name": "${aws_lambda_function.example.arn}",
                  "starting_position": "LATEST"
                }
              references:
                event_source_arn: aws_dynamodb_table.example.stream_arn
                function_name: aws_lambda_function.example.arn
            - name: example
              manifest: |-
                {
                  "event_source_arn": "${aws_kinesis_stream.example.arn}",
                  "function_name": "${aws_lambda_function.example.arn}",
                  "starting_position": "LATEST"
                }
              references:
                event_source_arn: aws_kinesis_stream.example.arn
                function_name: aws_lambda_function.example.arn
            - name: example
              manifest: |-
                {
                  "event_source_arn": "${aws_msk_cluster.example.arn}",
                  "function_name": "${aws_lambda_function.example.arn}",
                  "starting_position": "TRIM_HORIZON",
                  "topics": [
                    "Example"
                  ]
                }
              references:
                event_source_arn: aws_msk_cluster.example.arn
                function_name: aws_lambda_function.example.arn
            - name: example
              manifest: |-
                {
                  "function_name": "${aws_lambda_function.example.arn}",
                  "self_managed_event_source": [
                    {
                      "endpoints": {
                        "KAFKA_BOOTSTRAP_SERVERS": "kafka1.example.com:9092,kafka2.example.com:9092"
                      }
                    }
                  ],
                  "source_access_configuration": [
                    {
                      "type": "VPC_SUBNET",
                      "uri": "subnet:subnet-example1"
                    },
                    {
                      "type": "VPC_SUBNET",
                      "uri": "subnet:subnet-example2"
                    },
                    {
                      "type": "VPC_SECURITY_GROUP",
                      "uri": "security_group:sg-example"
                    }
                  ],
                  "starting_position": "TRIM_HORIZON",
                  "topics": [
                    "Example"
                  ]
                }
              references:
                function_name: aws_lambda_function.example.arn
            - name: example
              manifest: |-
                {
                  "event_source_arn": "${aws_sqs_queue.sqs_queue_test.arn}",
                  "function_name": "${aws_lambda_function.example.arn}"
                }
              references:
                event_source_arn: aws_sqs_queue.sqs_queue_test.arn
                function_name: aws_lambda_function.example.arn
            - name: example
              manifest: |-
                {
                  "event_source_arn": "${aws_sqs_queue.sqs_queue_test.arn}",
                  "filter_criteria": [
                    {
                      "filter": [
                        {
                          "pattern": "${jsonencode({\n        body = {\n          Temperature : [{ numeric : [\"\u003e\", 0, \"\u003c=\", 100] }]\n          Location : [\"New York\"]\n        }\n      })}"
                        }
                      ]
                    }
                  ],
                  "function_name": "${aws_lambda_function.example.arn}"
                }
              references:
                event_source_arn: aws_sqs_queue.sqs_queue_test.arn
                function_name: aws_lambda_function.example.arn
            - name: example
              manifest: |-
                {
                  "batch_size": 10,
                  "enabled": true,
                  "event_source_arn": "${aws_mq_broker.example.arn}",
                  "function_name": "${aws_lambda_function.example.arn}",
                  "queues": [
                    "example"
                  ],
                  "source_access_configuration": [
                    {
                      "type": "BASIC_AUTH",
                      "uri": "${aws_secretsmanager_secret_version.example.arn}"
                    }
                  ]
                }
              references:
                event_source_arn: aws_mq_broker.example.arn
                function_name: aws_lambda_function.example.arn
                source_access_configuration.uri: aws_secretsmanager_secret_version.example.arn
            - name: example
              manifest: |-
                {
                  "batch_size": 1,
                  "enabled": true,
                  "event_source_arn": "${aws_mq_broker.example.arn}",
                  "function_name": "${aws_lambda_function.example.arn}",
                  "queues": [
                    "example"
                  ],
                  "source_access_configuration": [
                    {
                      "type": "VIRTUAL_HOST",
                      "uri": "/example"
                    },
                    {
                      "type": "BASIC_AUTH",
                      "uri": "${aws_secretsmanager_secret_version.example.arn}"
                    }
                  ]
                }
              references:
                event_source_arn: aws_mq_broker.example.arn
                function_name: aws_lambda_function.example.arn
                source_access_configuration.uri: aws_secretsmanager_secret_version.example.arn
        argumentDocs:
            batch_size: '- (Optional) The largest number of records that Lambda will retrieve from your event source at the time of invocation. Defaults to 100 for DynamoDB, Kinesis, MQ and MSK, 10 for SQS.'
            bisect_batch_on_function_error: ': - (Optional) If the function returns an error, split the batch in two and retry. Only available for stream sources (DynamoDB and Kinesis). Defaults to false.'
            destination_config: ': - (Optional) An Amazon SQS queue or Amazon SNS topic destination for failed records. Only available for stream sources (DynamoDB and Kinesis). Detailed below.'
            destination_config.destination_arn: '- (Required) The Amazon Resource Name (ARN) of the destination resource.'
            destination_config.on_failure: '- (Optional) The destination configuration for failed invocations. Detailed below.'
            enabled: '- (Optional) Determines if the mapping will be enabled on creation. Defaults to true.'
            event_source_arn: '- (Optional) The event source ARN - this is required for Kinesis stream, DynamoDB stream, SQS queue, MQ broker or MSK cluster.  It is incompatible with a Self Managed Kafka source.'
            filter_criteria: '- (Optional) The criteria to use for event filtering Kinesis stream, DynamoDB stream, SQS queue event sources. Detailed below.'
            filter_criteria.filter: '- (Optional) A set of up to 5 filter. If an event satisfies at least one, Lambda sends the event to the function or adds it to the next batch. Detailed below.'
            filter_criteria.pattern: '- (Optional) A filter pattern up to 4096 characters. See Filter Rule Syntax.'
            function_arn: '- The the ARN of the Lambda function the event source mapping is sending events to. (Note: this is a computed value that differs from function_name above.)'
            function_name: '- (Required) The name or the ARN of the Lambda function that will be subscribing to events.'
            function_response_types: '- (Optional) A list of current response type enums applied to the event source mapping for AWS Lambda checkpointing. Only available for SQS and stream sources (DynamoDB and Kinesis). Valid values: ReportBatchItemFailures.'
            last_modified: '- The date this resource was last modified.'
            last_processing_result: '- The result of the last AWS Lambda invocation of your Lambda function.'
            maximum_batching_window_in_seconds: '- (Optional) The maximum amount of time to gather records before invoking the function, in seconds (between 0 and 300). Records will continue to buffer (or accumulate in the case of an SQS queue event source) until either maximum_batching_window_in_seconds expires or batch_size has been met. For streaming event sources, defaults to as soon as records are available in the stream. If the batch it reads from the stream/queue only has one record in it, Lambda only sends one record to the function. Only available for stream sources (DynamoDB and Kinesis) and SQS standard queues.'
            maximum_record_age_in_seconds: ': - (Optional) The maximum age of a record that Lambda sends to a function for processing. Only available for stream sources (DynamoDB and Kinesis). Must be either -1 (forever, and the default value) or between 60 and 604800 (inclusive).'
            maximum_retry_attempts: ': - (Optional) The maximum number of times to retry when the function returns an error. Only available for stream sources (DynamoDB and Kinesis). Minimum and default of -1 (forever), maximum of 10000.'
            parallelization_factor: ': - (Optional) The number of batches to process from each shard concurrently. Only available for stream sources (DynamoDB and Kinesis). Minimum and default of 1, maximum of 10.'
            queues: '- (Optional) The name of the Amazon MQ broker destination queue to consume. Only available for MQ sources. A single queue name must be specified.'
            self_managed_event_source: ': - (Optional) For Self Managed Kafka sources, the location of the self managed cluster. If set, configuration must also include source_access_configuration. Detailed below.'
            self_managed_event_source.endpoints: '- (Required) A map of endpoints for the self managed source.  For Kafka self-managed sources, the key should be KAFKA_BOOTSTRAP_SERVERS and the value should be a string with a comma separated list of broker endpoints.'
            source_access_configuration: ': (Optional) For Self Managed Kafka sources, the access configuration for the source. If set, configuration must also include self_managed_event_source. Detailed below.'
            source_access_configuration.type: '- (Required) The type of this configuration.  For Self Managed Kafka you will need to supply blocks for type VPC_SUBNET and VPC_SECURITY_GROUP.'
            source_access_configuration.uri: '- (Required) The URI for this configuration.  For type VPC_SUBNET the value should be subnet:subnet_id where subnet_id is the value you would find in an aws_subnet resource''s id attribute.  For type VPC_SECURITY_GROUP the value should be security_group:security_group_id where security_group_id is the value you would find in an aws_security_group resource''s id attribute.'
            starting_position: '- (Optional) The position in the stream where AWS Lambda should start reading. Must be one of AT_TIMESTAMP (Kinesis only), LATEST or TRIM_HORIZON if getting events from Kinesis, DynamoDB or MSK. Must not be provided if getting events from SQS. More information about these positions can be found in the AWS DynamoDB Streams API Reference and AWS Kinesis API Reference.'
            starting_position_timestamp: '- (Optional) A timestamp in RFC3339 format of the data record which to start reading when using starting_position set to AT_TIMESTAMP. If a record with this exact timestamp does not exist, the next later record is chosen. If the timestamp is older than the current trim horizon, the oldest available record is chosen.'
            state: '- The state of the event source mapping.'
            state_transition_reason: '- The reason the event source mapping is in its current state.'
            topics: '- (Optional) The name of the Kafka topics. Only available for MSK sources. A single topic name must be specified.'
            tumbling_window_in_seconds: '- (Optional) The duration in seconds of a processing window for AWS Lambda streaming analytics. The range is between 1 second up to 900 seconds. Only available for stream sources (DynamoDB and Kinesis).'
            uuid: '- The UUID of the created event source mapping.'
        importStatements: []
    aws_lambda_function:
        subCategory: Lambda
        description: Provides a Lambda Function resource. Lambda allows you to trigger execution of code in response to events in AWS, enabling serverless backend solutions. The Lambda Function itself includes source code and runtime configuration.
        name: aws_lambda_function
        title: aws_lambda_function
        examples:
            - name: test_lambda
              manifest: |-
                {
                  "environment": [
                    {
                      "variables": {
                        "foo": "bar"
                      }
                    }
                  ],
                  "filename": "lambda_function_payload.zip",
                  "function_name": "lambda_function_name",
                  "handler": "index.test",
                  "role": "${aws_iam_role.iam_for_lambda.arn}",
                  "runtime": "nodejs12.x",
                  "source_code_hash": "${filebase64sha256(\"lambda_function_payload.zip\")}"
                }
              references:
                role: aws_iam_role.iam_for_lambda.arn
              dependencies:
                aws_iam_role.iam_for_lambda: |-
                    {
                      "assume_role_policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"lambda.amazonaws.com\"\n      },\n      \"Effect\": \"Allow\",\n      \"Sid\": \"\"\n    }\n  ]\n}\n",
                      "name": "iam_for_lambda"
                    }
            - name: example
              manifest: |-
                {
                  "layers": [
                    "${aws_lambda_layer_version.example.arn}"
                  ]
                }
              dependencies:
                aws_lambda_layer_version.example: '{}'
            - name: test_lambda
              manifest: |-
                {
                  "ephemeral_storage": [
                    {
                      "size": 10240
                    }
                  ],
                  "filename": "lambda_function_payload.zip",
                  "function_name": "lambda_function_name",
                  "handler": "index.test",
                  "role": "${aws_iam_role.iam_for_lambda.arn}",
                  "runtime": "nodejs14.x"
                }
              references:
                role: aws_iam_role.iam_for_lambda.arn
              dependencies:
                aws_iam_role.iam_for_lambda: |-
                    {
                      "assume_role_policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"lambda.amazonaws.com\"\n      },\n      \"Effect\": \"Allow\",\n      \"Sid\": \"\"\n    }\n  ]\n}\n",
                      "name": "iam_for_lambda"
                    }
            - name: example
              manifest: |-
                {
                  "depends_on": [
                    "${aws_efs_mount_target.alpha}"
                  ],
                  "file_system_config": [
                    {
                      "arn": "${aws_efs_access_point.access_point_for_lambda.arn}",
                      "local_mount_path": "/mnt/efs"
                    }
                  ],
                  "vpc_config": [
                    {
                      "security_group_ids": [
                        "${aws_security_group.sg_for_lambda.id}"
                      ],
                      "subnet_ids": [
                        "${aws_subnet.subnet_for_lambda.id}"
                      ]
                    }
                  ]
                }
              references:
                file_system_config.arn: aws_efs_access_point.access_point_for_lambda.arn
              dependencies:
                aws_efs_access_point.access_point_for_lambda: |-
                    {
                      "file_system_id": "${aws_efs_file_system.efs_for_lambda.id}",
                      "posix_user": [
                        {
                          "gid": 1000,
                          "uid": 1000
                        }
                      ],
                      "root_directory": [
                        {
                          "creation_info": [
                            {
                              "owner_gid": 1000,
                              "owner_uid": 1000,
                              "permissions": "777"
                            }
                          ],
                          "path": "/lambda"
                        }
                      ]
                    }
                aws_efs_file_system.efs_for_lambda: |-
                    {
                      "tags": {
                        "Name": "efs_for_lambda"
                      }
                    }
                aws_efs_mount_target.alpha: |-
                    {
                      "file_system_id": "${aws_efs_file_system.efs_for_lambda.id}",
                      "security_groups": [
                        "${aws_security_group.sg_for_lambda.id}"
                      ],
                      "subnet_id": "${aws_subnet.subnet_for_lambda.id}"
                    }
            - name: test_lambda
              manifest: |-
                {
                  "depends_on": [
                    "${aws_iam_role_policy_attachment.lambda_logs}",
                    "${aws_cloudwatch_log_group.example}"
                  ],
                  "function_name": "${var.lambda_function_name}"
                }
              references:
                function_name: var.lambda_function_name
              dependencies:
                aws_cloudwatch_log_group.example: |-
                    {
                      "name": "/aws/lambda/${var.lambda_function_name}",
                      "retention_in_days": 14
                    }
                aws_iam_policy.lambda_logging: |-
                    {
                      "description": "IAM policy for logging from a lambda",
                      "name": "lambda_logging",
                      "path": "/",
                      "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": [\n        \"logs:CreateLogGroup\",\n        \"logs:CreateLogStream\",\n        \"logs:PutLogEvents\"\n      ],\n      \"Resource\": \"arn:aws:logs:*:*:*\",\n      \"Effect\": \"Allow\"\n    }\n  ]\n}\n"
                    }
                aws_iam_role_policy_attachment.lambda_logs: |-
                    {
                      "policy_arn": "${aws_iam_policy.lambda_logging.arn}",
                      "role": "${aws_iam_role.iam_for_lambda.name}"
                    }
        argumentDocs:
            architectures: '- (Optional) Instruction set architecture for your Lambda function. Valid values are ["x86_64"] and ["arm64"]. Default is ["x86_64"]. Removing this attribute, function''s architecture stay the same.'
            arn: '- Amazon Resource Name (ARN) identifying your Lambda Function.'
            code_signing_config_arn: '- (Optional) To enable code signing for this function, specify the ARN of a code-signing configuration. A code-signing configuration includes a set of signing profiles, which define the trusted publishers for this function.'
            create: '- (Default 10m) How long to wait for slow uploads or EC2 throttling errors.'
            dead_letter_config: '- (Optional) Configuration block. Detailed below.'
            dead_letter_config.target_arn: '- (Required) ARN of an SNS topic or SQS queue to notify when an invocation fails. If this option is used, the function''s IAM role must be granted suitable access to write to the target object, which means allowing either the sns:Publish or sqs:SendMessage action on this ARN, depending on which service is targeted.'
            description: '- (Optional) Description of what your Lambda Function does.'
            environment: '- (Optional) Configuration block. Detailed below.'
            environment.variables: '- (Optional) Map of environment variables that are accessible from the function code during execution.'
            ephemeral_storage: '- (Optional) The amount of Ephemeral storage(/tmp) to allocate for the Lambda Function in MB. This parameter is used to expand the total amount of Ephemeral storage available, beyond the default amount of 512MB. Detailed below.'
            ephemeral_storage.size: '- (Required) The size of the Lambda function Ephemeral storage(/tmp) represented in MB. The minimum supported ephemeral_storage value defaults to 512MB and the maximum supported value is 10240MB.'
            file_system_config: '- (Optional) Configuration block. Detailed below.'
            file_system_config.arn: '- (Required) Amazon Resource Name (ARN) of the Amazon EFS Access Point that provides access to the file system.'
            file_system_config.local_mount_path: '- (Required) Path where the function can access the file system, starting with /mnt/.'
            filename: '- (Optional) Path to the function''s deployment package within the local filesystem. Conflicts with image_uri, s3_bucket, s3_key, and s3_object_version.'
            function_name: '- (Required) Unique name for your Lambda Function.'
            handler: '- (Optional) Function entrypoint in your code.'
            image_config: '- (Optional) Configuration block. Detailed below.'
            image_config.command: '- (Optional) Parameters that you want to pass in with entry_point.'
            image_config.entry_point: '- (Optional) Entry point to your application, which is typically the location of the runtime executable.'
            image_config.working_directory: '- (Optional) Working directory.'
            image_uri: '- (Optional) ECR image URI containing the function''s deployment package. Conflicts with filename, s3_bucket, s3_key, and s3_object_version.'
            invoke_arn: '- ARN to be used for invoking Lambda Function from API Gateway - to be used in aws_api_gateway_integration''s uri.'
            kms_key_arn: '- (Optional) Amazon Resource Name (ARN) of the AWS Key Management Service (KMS) key that is used to encrypt environment variables. If this configuration is not provided when environment variables are in use, AWS Lambda uses a default service key. If this configuration is provided when environment variables are not in use, the AWS Lambda API does not save this configuration and Terraform will show a perpetual difference of adding the key. To fix the perpetual difference, remove this configuration.'
            last_modified: '- Date this resource was last modified.'
            layers: '- (Optional) List of Lambda Layer Version ARNs (maximum of 5) to attach to your Lambda Function. See Lambda Layers'
            memory_size: '- (Optional) Amount of memory in MB your Lambda Function can use at runtime. Defaults to 128. See Limits'
            package_type: '- (Optional) Lambda deployment package type. Valid values are Zip and Image. Defaults to Zip.'
            publish: '- (Optional) Whether to publish creation/change as new Lambda Function Version. Defaults to false.'
            qualified_arn: '- ARN identifying your Lambda Function Version (if versioning is enabled via publish = true).'
            reserved_concurrent_executions: '- (Optional) Amount of reserved concurrent executions for this lambda function. A value of 0 disables lambda from being triggered and -1 removes any concurrency limitations. Defaults to Unreserved Concurrency Limits -1. See Managing Concurrency'
            role: '- (Required) Amazon Resource Name (ARN) of the function''s execution role. The role provides the function''s identity and access to AWS services and resources.'
            runtime: '- (Optional) Identifier of the function''s runtime. See Runtimes for valid values.'
            s3_bucket: '- (Optional) S3 bucket location containing the function''s deployment package. Conflicts with filename and image_uri. This bucket must reside in the same AWS region where you are creating the Lambda function.'
            s3_key: '- (Optional) S3 key of an object containing the function''s deployment package. Conflicts with filename and image_uri.'
            s3_object_version: '- (Optional) Object version containing the function''s deployment package. Conflicts with filename and image_uri.'
            signing_job_arn: '- ARN of the signing job.'
            signing_profile_version_arn: '- ARN of the signing profile version.'
            source_code_hash: '- (Optional) Used to trigger updates. Must be set to a base64-encoded SHA256 hash of the package file specified with either filename or s3_key. The usual way to set this is filebase64sha256("file.zip") (Terraform 0.11.12 and later) or base64sha256(file("file.zip")) (Terraform 0.11.11 and earlier), where "file.zip" is the local filename of the lambda function source archive.'
            source_code_size: '- Size in bytes of the function .zip file.'
            tags: '- (Optional) Map of tags to assign to the object. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            timeout: '- (Optional) Amount of time your Lambda Function has to run in seconds. Defaults to 3. See Limits.'
            tracing_config: '- (Optional) Configuration block. Detailed below.'
            tracing_config.mode: '- (Required) Whether to to sample and trace a subset of incoming requests with AWS X-Ray. Valid values are PassThrough and Active. If PassThrough, Lambda will only trace the request from an upstream service if it contains a tracing header with "sampled=1". If Active, Lambda will respect any tracing header it receives from an upstream service. If no tracing header is received, Lambda will call X-Ray for a tracing decision.'
            version: '- Latest published version of your Lambda Function.'
            vpc_config: '- (Optional) Configuration block. Detailed below.'
            vpc_config.security_group_ids: '- (Required) List of security group IDs associated with the Lambda function.'
            vpc_config.subnet_ids: '- (Required) List of subnet IDs associated with the Lambda function.'
            vpc_config.vpc_id: '- ID of the VPC.'
        importStatements: []
    aws_lambda_function_event_invoke_config:
        subCategory: Lambda
        description: Manages an asynchronous invocation configuration for a Lambda Function or Alias.
        name: aws_lambda_function_event_invoke_config
        title: aws_lambda_function_event_invoke_config
        examples:
            - name: example
              manifest: |-
                {
                  "destination_config": [
                    {
                      "on_failure": [
                        {
                          "destination": "${aws_sqs_queue.example.arn}"
                        }
                      ],
                      "on_success": [
                        {
                          "destination": "${aws_sns_topic.example.arn}"
                        }
                      ]
                    }
                  ],
                  "function_name": "${aws_lambda_alias.example.function_name}"
                }
              references:
                destination_config.on_failure.destination: aws_sqs_queue.example.arn
                destination_config.on_success.destination: aws_sns_topic.example.arn
                function_name: aws_lambda_alias.example.function_name
            - name: example
              manifest: |-
                {
                  "function_name": "${aws_lambda_alias.example.function_name}",
                  "maximum_event_age_in_seconds": 60,
                  "maximum_retry_attempts": 0
                }
              references:
                function_name: aws_lambda_alias.example.function_name
            - name: example
              manifest: |-
                {
                  "function_name": "${aws_lambda_alias.example.function_name}",
                  "qualifier": "${aws_lambda_alias.example.name}"
                }
              references:
                function_name: aws_lambda_alias.example.function_name
                qualifier: aws_lambda_alias.example.name
            - name: example
              manifest: |-
                {
                  "function_name": "${aws_lambda_function.example.function_name}",
                  "qualifier": "$LATEST"
                }
              references:
                function_name: aws_lambda_function.example.function_name
            - name: example
              manifest: |-
                {
                  "function_name": "${aws_lambda_function.example.function_name}",
                  "qualifier": "${aws_lambda_function.example.version}"
                }
              references:
                function_name: aws_lambda_function.example.function_name
                qualifier: aws_lambda_function.example.version
        argumentDocs:
            destination_config: '- (Optional) Configuration block with destination configuration. See below for details.'
            destination_config.destination: '- (Required) Amazon Resource Name (ARN) of the destination resource. See the Lambda Developer Guide for acceptable resource types and associated IAM permissions.'
            function_name: '- (Required) Name or Amazon Resource Name (ARN) of the Lambda Function, omitting any version or alias qualifier.'
            id: '- Fully qualified Lambda Function name or Amazon Resource Name (ARN)'
            maximum_event_age_in_seconds: '- (Optional) Maximum age of a request that Lambda sends to a function for processing in seconds. Valid values between 60 and 21600.'
            maximum_retry_attempts: '- (Optional) Maximum number of times to retry when the function returns an error. Valid values between 0 and 2. Defaults to 2.'
            on_failure.on_failure: '- (Optional) Configuration block with destination configuration for failed asynchronous invocations. See below for details.'
            on_failure.on_success: '- (Optional) Configuration block with destination configuration for successful asynchronous invocations. See below for details.'
            qualifier: '- (Optional) Lambda Function published version, $LATEST, or Lambda Alias name.'
        importStatements: []
    aws_lambda_function_url:
        subCategory: Lambda
        description: Provides a Lambda function URL resource.
        name: aws_lambda_function_url
        title: aws_lambda_function_url
        examples:
            - name: test_latest
              manifest: |-
                {
                  "authorization_type": "NONE",
                  "function_name": "${aws_lambda_function.test.function_name}"
                }
              references:
                function_name: aws_lambda_function.test.function_name
            - name: test_live
              manifest: |-
                {
                  "authorization_type": "AWS_IAM",
                  "cors": [
                    {
                      "allow_credentials": true,
                      "allow_headers": [
                        "date",
                        "keep-alive"
                      ],
                      "allow_methods": [
                        "*"
                      ],
                      "allow_origins": [
                        "*"
                      ],
                      "expose_headers": [
                        "keep-alive",
                        "date"
                      ],
                      "max_age": 86400
                    }
                  ],
                  "function_name": "${aws_lambda_function.test.function_name}",
                  "qualifier": "my_alias"
                }
              references:
                function_name: aws_lambda_function.test.function_name
        argumentDocs:
            allow_credentials: '- (Optional) Whether to allow cookies or other credentials in requests to the function URL. The default is false.'
            allow_headers: '- (Optional) The HTTP headers that origins can include in requests to the function URL. For example: ["date", "keep-alive", "x-custom-header"].'
            allow_methods: '- (Optional) The HTTP methods that are allowed when calling the function URL. For example: ["GET", "POST", "DELETE"], or the wildcard character (["*"]).'
            allow_origins: '- (Optional) The origins that can access the function URL. You can list any number of specific origins (or the wildcard character ("*")), separated by a comma. For example: ["https://www.example.com", "http://localhost:60905"].'
            authorization_type: '- (Required) The type of authentication that the function URL uses. Set to "AWS_IAM" to restrict access to authenticated IAM users only. Set to "NONE" to bypass IAM authentication and create a public endpoint. See the AWS documentation for more details.'
            cors: '- (Optional) The cross-origin resource sharing (CORS) settings for the function URL. Documented below.'
            expose_headers: '- (Optional) The HTTP headers in your function response that you want to expose to origins that call the function URL.'
            function_arn: '- The Amazon Resource Name (ARN) of the function.'
            function_name: '- (Required) The name (or ARN) of the Lambda function.'
            function_url: '- The HTTP URL endpoint for the function in the format https://<url_id>.lambda-url.<region>.on.aws.'
            max_age: '- (Optional) The maximum amount of time, in seconds, that web browsers can cache results of a preflight request. By default, this is set to 0, which means that the browser doesn''t cache results. The maximum value is 86400.'
            qualifier: '- (Optional) The alias name or "$LATEST".'
            url_id: '- A generated ID for the endpoint.'
        importStatements: []
    aws_lambda_invocation:
        subCategory: Lambda
        description: Invoke AWS Lambda Function
        name: aws_lambda_invocation
        title: aws_lambda_invocation
        examples:
            - name: example
              manifest: |-
                {
                  "function_name": "${aws_lambda_function.lambda_function_test.function_name}",
                  "input": "${jsonencode({\n    key1 = \"value1\"\n    key2 = \"value2\"\n  })}"
                }
              references:
                function_name: aws_lambda_function.lambda_function_test.function_name
            - name: example
              manifest: |-
                {
                  "function_name": "${aws_lambda_function.lambda_function_test.function_name}",
                  "input": "${jsonencode({\n    key1 = \"value1\"\n    key2 = \"value2\"\n  })}",
                  "triggers": {
                    "redeployment": "${sha1(jsonencode([\n      aws_lambda_function.example.environment\n    ]))}"
                  }
                }
              references:
                function_name: aws_lambda_function.lambda_function_test.function_name
        argumentDocs:
            function_name: '- (Required) Name of the lambda function.'
            input: '- (Required) JSON payload to the lambda function.'
            qualifier: '- (Optional) Qualifier (i.e., version) of the lambda function. Defaults to $LATEST.'
            result: '- String result of the lambda function invocation.'
            triggers: '- (Optional) Map of arbitrary keys and values that, when changed, will trigger a re-invocation. To force a re-invocation without changing these keys/values, use the terraform taint command.'
        importStatements: []
    aws_lambda_layer_version:
        subCategory: Lambda
        description: Provides a Lambda Layer Version resource. Lambda Layers allow you to reuse shared bits of code across multiple lambda functions.
        name: aws_lambda_layer_version
        title: aws_lambda_layer_version
        examples:
            - name: lambda_layer
              manifest: |-
                {
                  "compatible_runtimes": [
                    "nodejs12.x"
                  ],
                  "filename": "lambda_layer_payload.zip",
                  "layer_name": "lambda_layer_name"
                }
        argumentDocs:
            arn: '- ARN of the Lambda Layer with version.'
            compatible_architectures: '- (Optional) List of Architectures this layer is compatible with. Currently x86_64 and arm64 can be specified.'
            compatible_runtimes: '- (Optional) List of Runtimes this layer is compatible with. Up to 5 runtimes can be specified.'
            created_date: '- Date this resource was created.'
            description: '- (Optional) Description of what your Lambda Layer does.'
            filename: (Optional) Path to the function's deployment package within the local filesystem. If defined, The s3_-prefixed options cannot be used.
            layer_arn: '- ARN of the Lambda Layer without version.'
            layer_name: '- (Required) Unique name for your Lambda Layer'
            license_info: '- (Optional) License info for your Lambda Layer. See License Info.'
            s3_bucket: '- (Optional) S3 bucket location containing the function''s deployment package. Conflicts with filename. This bucket must reside in the same AWS region where you are creating the Lambda function.'
            s3_key: '- (Optional) S3 key of an object containing the function''s deployment package. Conflicts with filename.'
            s3_object_version: '- (Optional) Object version containing the function''s deployment package. Conflicts with filename.'
            signing_job_arn: '- ARN of a signing job.'
            signing_profile_version_arn: '- ARN for a signing profile version.'
            skip_destroy: '- (Optional) Whether to retain the old version of a previously deployed Lambda Layer. Default is false. When this is not set to true, changing any of compatible_architectures, compatible_runtimes, description, filename, layer_name, license_info, s3_bucket, s3_key, s3_object_version, or source_code_hash forces deletion of the existing layer version and creation of a new layer version.'
            source_code_hash: '- (Optional) Used to trigger updates. Must be set to a base64-encoded SHA256 hash of the package file specified with either filename or s3_key. The usual way to set this is ${filebase64sha256("file.zip")} (Terraform 0.11.12 or later) or ${base64sha256(file("file.zip"))} (Terraform 0.11.11 and earlier), where "file.zip" is the local filename of the lambda layer source archive.'
            source_code_size: '- Size in bytes of the function .zip file.'
            version: '- Lambda Layer version.'
        importStatements: []
    aws_lambda_layer_version_permission:
        subCategory: Lambda
        description: Provides a Lambda Layer Version Permission resource.
        name: aws_lambda_layer_version_permission
        title: aws_lambda_layer_version_permission
        examples:
            - name: lambda_layer_permission
              manifest: |-
                {
                  "action": "lambda:GetLayerVersion",
                  "layer_name": "arn:aws:lambda:us-west-2:123456654321:layer:test_layer1",
                  "principal": "111111111111",
                  "statement_id": "dev-account",
                  "version_number": 1
                }
        argumentDocs:
            action: '- (Required) Action, which will be allowed. lambda:GetLayerVersion value is suggested by AWS documantation.'
            id: '- The layer_name and version_number, separated by a comma (,).'
            layer_name: (Required) The name or ARN of the Lambda Layer, which you want to grant access to.
            organization_id: '- (Optional) An identifier of AWS Organization, which should be able to use your Lambda Layer. principal should be equal to * if organization_id provided.'
            policy: '- Full Lambda Layer Permission policy.'
            principal: '- (Required) AWS account ID which should be able to use your Lambda Layer. * can be used here, if you want to share your Lambda Layer widely.'
            revision_id: '- A unique identifier for the current revision of the policy.'
            statement_id: '- (Required) The name of Lambda Layer Permission, for example dev-account - human readable note about what is this permission for.'
            version_number: '(Required) Version of Lambda Layer, which you want to grant access to. Note: permissions only apply to a single version of a layer.'
        importStatements: []
    aws_lambda_permission:
        subCategory: Lambda
        description: Creates a Lambda function permission.
        name: aws_lambda_permission
        title: aws_lambda_permission
        examples:
            - name: allow_cloudwatch
              manifest: |-
                {
                  "action": "lambda:InvokeFunction",
                  "function_name": "${aws_lambda_function.test_lambda.function_name}",
                  "principal": "events.amazonaws.com",
                  "qualifier": "${aws_lambda_alias.test_alias.name}",
                  "source_arn": "arn:aws:events:eu-west-1:111122223333:rule/RunDaily",
                  "statement_id": "AllowExecutionFromCloudWatch"
                }
              references:
                function_name: aws_lambda_function.test_lambda.function_name
                qualifier: aws_lambda_alias.test_alias.name
              dependencies:
                aws_iam_role.iam_for_lambda: |-
                    {
                      "assume_role_policy": "${jsonencode({\n    Version = \"2012-10-17\"\n    Statement = [\n      {\n        Action = \"sts:AssumeRole\"\n        Effect = \"Allow\"\n        Sid    = \"\"\n        Principal = {\n          Service = \"lambda.amazonaws.com\"\n        }\n      },\n    ]\n  })}",
                      "name": "iam_for_lambda"
                    }
                aws_lambda_alias.test_alias: |-
                    {
                      "description": "a sample description",
                      "function_name": "${aws_lambda_function.test_lambda.function_name}",
                      "function_version": "$LATEST",
                      "name": "testalias"
                    }
                aws_lambda_function.test_lambda: |-
                    {
                      "filename": "lambdatest.zip",
                      "function_name": "lambda_function_name",
                      "handler": "exports.handler",
                      "role": "${aws_iam_role.iam_for_lambda.arn}",
                      "runtime": "nodejs12.x"
                    }
            - name: with_sns
              manifest: |-
                {
                  "action": "lambda:InvokeFunction",
                  "function_name": "${aws_lambda_function.func.function_name}",
                  "principal": "sns.amazonaws.com",
                  "source_arn": "${aws_sns_topic.default.arn}",
                  "statement_id": "AllowExecutionFromSNS"
                }
              references:
                function_name: aws_lambda_function.func.function_name
                source_arn: aws_sns_topic.default.arn
              dependencies:
                aws_iam_role.default: |-
                    {
                      "assume_role_policy": "${jsonencode({\n    Version = \"2012-10-17\"\n    Statement = [\n      {\n        Action = \"sts:AssumeRole\"\n        Effect = \"Allow\"\n        Sid    = \"\"\n        Principal = {\n          Service = \"lambda.amazonaws.com\"\n        }\n      },\n    ]\n  })}",
                      "name": "iam_for_lambda_with_sns"
                    }
                aws_lambda_function.func: |-
                    {
                      "filename": "lambdatest.zip",
                      "function_name": "lambda_called_from_sns",
                      "handler": "exports.handler",
                      "role": "${aws_iam_role.default.arn}",
                      "runtime": "python3.6"
                    }
                aws_sns_topic.default: |-
                    {
                      "name": "call-lambda-maybe"
                    }
                aws_sns_topic_subscription.lambda: |-
                    {
                      "endpoint": "${aws_lambda_function.func.arn}",
                      "protocol": "lambda",
                      "topic_arn": "${aws_sns_topic.default.arn}"
                    }
            - name: lambda_permission
              manifest: |-
                {
                  "action": "lambda:InvokeFunction",
                  "function_name": "MyDemoFunction",
                  "principal": "apigateway.amazonaws.com",
                  "source_arn": "${aws_api_gateway_rest_api.MyDemoAPI.execution_arn}/*/*/*",
                  "statement_id": "AllowMyDemoAPIInvoke"
                }
              dependencies:
                aws_api_gateway_rest_api.MyDemoAPI: |-
                    {
                      "description": "This is my API for demonstration purposes",
                      "name": "MyDemoAPI"
                    }
            - name: logging
              manifest: |-
                {
                  "action": "lambda:InvokeFunction",
                  "function_name": "${aws_lambda_function.logging.function_name}",
                  "principal": "logs.eu-west-1.amazonaws.com",
                  "source_arn": "${aws_cloudwatch_log_group.default.arn}:*"
                }
              references:
                function_name: aws_lambda_function.logging.function_name
              dependencies:
                aws_cloudwatch_log_group.default: |-
                    {
                      "name": "/default"
                    }
                aws_cloudwatch_log_subscription_filter.logging: |-
                    {
                      "depends_on": [
                        "${aws_lambda_permission.logging}"
                      ],
                      "destination_arn": "${aws_lambda_function.logging.arn}",
                      "filter_pattern": "",
                      "log_group_name": "${aws_cloudwatch_log_group.default.name}",
                      "name": "logging_default"
                    }
                aws_iam_role.default: |-
                    {
                      "assume_role_policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"lambda.amazonaws.com\"\n      },\n      \"Effect\": \"Allow\",\n      \"Sid\": \"\"\n    }\n  ]\n}\n",
                      "name": "iam_for_lambda_called_from_cloudwatch_logs"
                    }
                aws_lambda_function.logging: |-
                    {
                      "filename": "lamba_logging.zip",
                      "function_name": "lambda_called_from_cloudwatch_logs",
                      "handler": "exports.handler",
                      "role": "${aws_iam_role.default.arn}",
                      "runtime": "python3.6"
                    }
        argumentDocs:
            action: '- (Required) The AWS Lambda action you want to allow in this statement. (e.g., lambda:InvokeFunction)'
            event_source_token: '- (Optional) The Event Source Token to validate.  Used with Alexa Skills.'
            function_name: '- (Required) Name of the Lambda function whose resource policy you are updating'
            function_url_auth_type: '- (Optional) Lambda Function URLs authentication type. Valid values are: AWS_IAM or NONE.'
            principal: '- (Required) The principal who is getting this permission e.g., s3.amazonaws.com, an AWS account ID, or any valid AWS service principal such as events.amazonaws.com or sns.amazonaws.com.'
            principal_org_id: '- (Optional) The identifier for your organization in AWS Organizations. Use this to grant permissions to all the AWS accounts under this organization.'
            qualifier: '- (Optional) Query parameter to specify function version or alias name. The permission will then apply to the specific qualified ARN e.g., arn:aws:lambda:aws-region:acct-id:function:function-name:2'
            source_account: '- (Optional) This parameter is used for S3 and SES. The AWS account ID (without a hyphen) of the source owner.'
            source_arn: |-
                - (Optional) When the principal is an AWS service, the ARN of the specific resource within that service to grant permission to.
                Without this, any resource from principal will be granted permission – even if that resource is from another account.
                For S3, this should be the ARN of the S3 Bucket.
                For EventBridge events, this should be the ARN of the EventBridge Rule.
                For API Gateway, this should be the ARN of the API, as described here.
            statement_id: '- (Optional) A unique statement identifier. By default generated by Terraform.'
            statement_id_prefix: '- (Optional) A statement identifier prefix. Terraform will generate a unique suffix. Conflicts with statement_id.'
        importStatements: []
    aws_lambda_provisioned_concurrency_config:
        subCategory: Lambda
        description: Manages a Lambda Provisioned Concurrency Configuration
        name: aws_lambda_provisioned_concurrency_config
        title: aws_lambda_provisioned_concurrency_config
        examples:
            - name: example
              manifest: |-
                {
                  "function_name": "${aws_lambda_alias.example.function_name}",
                  "provisioned_concurrent_executions": 1,
                  "qualifier": "${aws_lambda_alias.example.name}"
                }
              references:
                function_name: aws_lambda_alias.example.function_name
                qualifier: aws_lambda_alias.example.name
            - name: example
              manifest: |-
                {
                  "function_name": "${aws_lambda_function.example.function_name}",
                  "provisioned_concurrent_executions": 1,
                  "qualifier": "${aws_lambda_function.example.version}"
                }
              references:
                function_name: aws_lambda_function.example.function_name
                qualifier: aws_lambda_function.example.version
        argumentDocs:
            create: '- (Default 15 minutes) How long to wait for the Lambda Provisioned Concurrency Config to be ready on creation.'
            function_name: '- (Required) Name or Amazon Resource Name (ARN) of the Lambda Function.'
            id: '- Lambda Function name and qualifier separated by a colon (:).'
            provisioned_concurrent_executions: '- (Required) Amount of capacity to allocate. Must be greater than or equal to 1.'
            qualifier: '- (Required) Lambda Function version or Lambda Alias name.'
            update: '- (Default 15 minutes) How long to wait for the Lambda Provisioned Concurrency Config to be ready on update.'
        importStatements: []
    aws_launch_configuration:
        subCategory: Auto Scaling
        description: Provides a resource to create a new launch configuration, used for autoscaling groups.
        name: aws_launch_configuration
        title: aws_launch_configuration
        examples:
            - name: as_conf
              manifest: |-
                {
                  "image_id": "${data.aws_ami.ubuntu.id}",
                  "instance_type": "t2.micro",
                  "name": "web_config"
                }
              references:
                image_id: data.aws_ami.ubuntu.id
            - name: as_conf
              manifest: |-
                {
                  "image_id": "${data.aws_ami.ubuntu.id}",
                  "instance_type": "t2.micro",
                  "lifecycle": [
                    {
                      "create_before_destroy": true
                    }
                  ],
                  "name_prefix": "terraform-lc-example-"
                }
              references:
                image_id: data.aws_ami.ubuntu.id
              dependencies:
                aws_autoscaling_group.bar: |-
                    {
                      "launch_configuration": "${aws_launch_configuration.as_conf.name}",
                      "lifecycle": [
                        {
                          "create_before_destroy": true
                        }
                      ],
                      "max_size": 2,
                      "min_size": 1,
                      "name": "terraform-asg-example"
                    }
            - name: as_conf
              manifest: |-
                {
                  "image_id": "${data.aws_ami.ubuntu.id}",
                  "instance_type": "m4.large",
                  "lifecycle": [
                    {
                      "create_before_destroy": true
                    }
                  ],
                  "spot_price": "0.001"
                }
              references:
                image_id: data.aws_ami.ubuntu.id
              dependencies:
                aws_autoscaling_group.bar: |-
                    {
                      "launch_configuration": "${aws_launch_configuration.as_conf.name}",
                      "name": "terraform-asg-example"
                    }
        argumentDocs:
            arn: '- The Amazon Resource Name of the launch configuration.'
            associate_public_ip_address: '- (Optional) Associate a public ip address with an instance in a VPC.'
            ebs_block_device: |-
                - (Optional) Additional EBS block devices to attach to the
                instance.  See Block Devices below for details.
            ebs_block_device.delete_on_termination: |-
                - (Optional) Whether the volume should be destroyed
                on instance termination (Default: true).
            ebs_block_device.device_name: '- (Required) The name of the device to mount.'
            ebs_block_device.encrypted: '- (Optional) Whether the volume should be encrypted or not. Do not use this option if you are using snapshot_id as the encrypted flag will be determined by the snapshot. (Default: false).'
            ebs_block_device.iops: |-
                - (Optional) The amount of provisioned
                IOPS.
                This must be set with a volume_type of "io1".
            ebs_block_device.no_device: '- (Optional) Whether the device in the block device mapping of the AMI is suppressed.'
            ebs_block_device.snapshot_id: '- (Optional) The Snapshot ID to mount.'
            ebs_block_device.throughput: '- (Optional) The throughput (MiBps) to provision for a gp3 volume.'
            ebs_block_device.volume_size: '- (Optional) The size of the volume in gigabytes.'
            ebs_block_device.volume_type: |-
                - (Optional) The type of volume. Can be "standard", "gp2", "gp3", "st1", "sc1"
                or "io1". (Default: "standard").
            ebs_optimized: '- (Optional) If true, the launched EC2 instance will be EBS-optimized.'
            enable_monitoring: '- (Optional) Enables/disables detailed monitoring. This is enabled by default.'
            ephemeral_block_device: |-
                - (Optional) Customize Ephemeral (also known as
                "Instance Store") volumes on the instance. See Block Devices below for details.
            ephemeral_block_device.device_name: '- (Required) The name of the block device to mount on the instance.'
            ephemeral_block_device.no_device: '- (Optional) Whether the device in the block device mapping of the AMI is suppressed.'
            ephemeral_block_device.virtual_name: |-
                - (Optional) The Instance Store Device
                Name
                (e.g., "ephemeral0")
            http_endpoint: '- The state of the metadata service: enabled, disabled.'
            http_put_response_hop_limit: '- The desired HTTP PUT response hop limit for instance metadata requests.'
            http_tokens: '- If session tokens are required: optional, required.'
            iam_instance_profile: |-
                - (Optional) The name attribute of the IAM instance profile to associate
                with launched instances.
            id: '- The ID of the launch configuration.'
            image_id: '- (Required) The EC2 image ID to launch.'
            instance_type: '- (Required) The size of instance to launch.'
            key_name: '- (Optional) The key name that should be used for the instance.'
            metadata_options: '- The metadata options for the instance.'
            name: |-
                - (Optional) The name of the launch configuration. If you leave
                this blank, Terraform will auto-generate a unique name. Conflicts with name_prefix.
            name_prefix: |-
                - (Optional) Creates a unique name beginning with the specified
                prefix. Conflicts with name.
            placement_tenancy: |-
                - (Optional) The tenancy of the instance. Valid values are
                "default" or "dedicated", see AWS's Create Launch Configuration
                for more details
            root_block_device: |-
                - (Optional) Customize details about the root block
                device of the instance. See Block Devices below for details.
            root_block_device.delete_on_termination: |-
                - (Optional) Whether the volume should be destroyed
                on instance termination (Default: true).
            root_block_device.encrypted: '- (Optional) Whether the volume should be encrypted or not. (Default: false).'
            root_block_device.iops: |-
                - (Optional) The amount of provisioned
                IOPS.
                This must be set with a volume_type of "io1".
            root_block_device.throughput: '- (Optional) The throughput (MiBps) to provision for a gp3 volume.'
            root_block_device.volume_size: '- (Optional) The size of the volume in gigabytes.'
            root_block_device.volume_type: |-
                - (Optional) The type of volume. Can be "standard", "gp2", "gp3", "st1", "sc1"
                or "io1". (Default: "standard").
            security_groups: '- (Optional) A list of associated security group IDS.'
            spot_price: '- (Optional; Default: On-demand price) The maximum price to use for reserving spot instances.'
            user_data: '- (Optional) The user data to provide when launching the instance. Do not pass gzip-compressed data via this argument; see user_data_base64 instead.'
            user_data_base64: '- (Optional) Can be used instead of user_data to pass base64-encoded binary data directly. Use this instead of user_data whenever the value is not a valid UTF-8 string. For example, gzip-encoded user data must be base64-encoded and passed via this argument to avoid corruption.'
            vpc_classic_link_id: '- (Optional) The ID of a ClassicLink-enabled VPC. Only applies to EC2-Classic instances. (eg. vpc-2730681a)'
            vpc_classic_link_security_groups: '- (Optional) The IDs of one or more security groups for the specified ClassicLink-enabled VPC (eg. sg-46ae3d11).'
        importStatements: []
    aws_launch_template:
        subCategory: EC2 (Elastic Compute Cloud)
        description: Provides an EC2 launch template resource. Can be used to create instances or auto scaling groups.
        name: aws_launch_template
        title: aws_launch_template
        examples:
            - name: foo
              manifest: |-
                {
                  "block_device_mappings": [
                    {
                      "device_name": "/dev/sda1",
                      "ebs": [
                        {
                          "volume_size": 20
                        }
                      ]
                    }
                  ],
                  "capacity_reservation_specification": [
                    {
                      "capacity_reservation_preference": "open"
                    }
                  ],
                  "cpu_options": [
                    {
                      "core_count": 4,
                      "threads_per_core": 2
                    }
                  ],
                  "credit_specification": [
                    {
                      "cpu_credits": "standard"
                    }
                  ],
                  "disable_api_stop": true,
                  "disable_api_termination": true,
                  "ebs_optimized": true,
                  "elastic_gpu_specifications": [
                    {
                      "type": "test"
                    }
                  ],
                  "elastic_inference_accelerator": [
                    {
                      "type": "eia1.medium"
                    }
                  ],
                  "iam_instance_profile": [
                    {
                      "name": "test"
                    }
                  ],
                  "image_id": "ami-test",
                  "instance_initiated_shutdown_behavior": "terminate",
                  "instance_market_options": [
                    {
                      "market_type": "spot"
                    }
                  ],
                  "instance_type": "t2.micro",
                  "kernel_id": "test",
                  "key_name": "test",
                  "license_specification": [
                    {
                      "license_configuration_arn": "arn:aws:license-manager:eu-west-1:123456789012:license-configuration:lic-0123456789abcdef0123456789abcdef"
                    }
                  ],
                  "metadata_options": [
                    {
                      "http_endpoint": "enabled",
                      "http_put_response_hop_limit": 1,
                      "http_tokens": "required",
                      "instance_metadata_tags": "enabled"
                    }
                  ],
                  "monitoring": [
                    {
                      "enabled": true
                    }
                  ],
                  "name": "foo",
                  "network_interfaces": [
                    {
                      "associate_public_ip_address": true
                    }
                  ],
                  "placement": [
                    {
                      "availability_zone": "us-west-2a"
                    }
                  ],
                  "ram_disk_id": "test",
                  "tag_specifications": [
                    {
                      "resource_type": "instance",
                      "tags": {
                        "Name": "test"
                      }
                    }
                  ],
                  "user_data": "${filebase64(\"${path.module}/example.sh\")}",
                  "vpc_security_group_ids": [
                    "sg-12345678"
                  ]
                }
        argumentDocs:
            accelerator_count: '- (Optional) Block describing the minimum and maximum number of accelerators (GPUs, FPGAs, or AWS Inferentia chips). Default is no minimum or maximum.'
            accelerator_count.max: '- (Optional) Maximum. Set to 0 to exclude instance types with accelerators.'
            accelerator_count.min: '- (Optional) Minimum.'
            accelerator_manufacturers: '- (Optional) List of accelerator manufacturer names. Default is any manufacturer.'
            accelerator_names: '- (Optional) List of accelerator names. Default is any acclerator.'
            accelerator_total_memory_mib: '- (Optional) Block describing the minimum and maximum total memory of the accelerators. Default is no minimum or maximum.'
            accelerator_total_memory_mib.max: '- (Optional) Maximum.'
            accelerator_total_memory_mib.min: '- (Optional) Minimum.'
            accelerator_types: '- (Optional) List of accelerator types. Default is any accelerator type.'
            arn: '- Amazon Resource Name (ARN) of the launch template.'
            bare_metal: '- (Optional) Indicate whether bare metal instace types should be included, excluded, or required. Default is excluded.'
            baseline_ebs_bandwidth_mbps: '- (Optional) Block describing the minimum and maximum baseline EBS bandwidth, in Mbps. Default is no minimum or maximum.'
            baseline_ebs_bandwidth_mbps.max: '- (Optional) Maximum.'
            baseline_ebs_bandwidth_mbps.min: '- (Optional) Minimum.'
            block_device_mappings: |-
                - (Optional) Specify volumes to attach to the instance besides the volumes specified by the AMI.
                See Block Devices below for details.
            block_device_mappings.device_name: '- The name of the device to mount.'
            block_device_mappings.ebs: '- Configure EBS volume properties.'
            block_device_mappings.ebs.delete_on_termination: '- Whether the volume should be destroyed on instance termination. Defaults to false if not set. See Preserving Amazon EBS Volumes on Instance Termination for more information.'
            block_device_mappings.ebs.encrypted: |-
                - Enables EBS encryption
                on the volume (Default: false). Cannot be used with snapshot_id.
            block_device_mappings.ebs.iops: |-
                - The amount of provisioned
                IOPS.
                This must be set with a volume_type of "io1/io2".
            block_device_mappings.ebs.kms_key_id: |-
                - The ARN of the AWS Key Management Service (AWS KMS) customer master key (CMK) to use when creating the encrypted volume.
                encrypted must be set to true when this is set.
            block_device_mappings.ebs.snapshot_id: '- The Snapshot ID to mount.'
            block_device_mappings.ebs.throughput: '- The throughput to provision for a gp3 volume in MiB/s (specified as an integer, e.g., 500), with a maximum of 1,000 MiB/s.'
            block_device_mappings.ebs.volume_size: '- The size of the volume in gigabytes.'
            block_device_mappings.ebs.volume_type: '- The volume type. Can be standard, gp2, gp3, io1, io2, sc1 or st1 (Default: gp2).'
            block_device_mappings.no_device: '- Suppresses the specified device included in the AMI''s block device mapping.'
            block_device_mappings.virtual_name: |-
                - The Instance Store Device
                Name
                (e.g., "ephemeral0").
            burstable_performance: '- (Optional) Indicate whether burstable performance instance types should be included, excluded, or required. Default is excluded.'
            capacity_reservation_specification: '- (Optional) Targeting for EC2 capacity reservations. See Capacity Reservation Specification below for more details.'
            capacity_reservation_specification.capacity_reservation_preference: '- Indicates the instance''s Capacity Reservation preferences. Can be open or none. (Default none).'
            capacity_reservation_specification.capacity_reservation_target: '- Used to target a specific Capacity Reservation:'
            capacity_reservation_specification.capacity_reservation_target.capacity_reservation_id: '- The ID of the Capacity Reservation in which to run the instance.'
            capacity_reservation_specification.capacity_reservation_target.capacity_reservation_resource_group_arn: '- The ARN of the Capacity Reservation resource group in which to run the instance.'
            cpu_manufacturers: (Optional) List of CPU manufacturer names. Default is any manufacturer.
            cpu_options: '- (Optional) The CPU options for the instance. See CPU Options below for more details.'
            cpu_options.core_count: '- The number of CPU cores for the instance.'
            cpu_options.threads_per_core: |-
                - The number of threads per CPU core. To disable Intel Hyper-Threading Technology for the instance, specify a value of 1.
                Otherwise, specify the default value of 2.
            credit_specification: |-
                - (Optional) Customize the credit specification of the instance. See Credit
                Specification below for more details.
            credit_specification.cpu_credits: '- The credit option for CPU usage. Can be "standard" or "unlimited". T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.'
            default_version: '- (Optional) Default Version of the launch template.'
            description: '- (Optional) Description of the launch template.'
            disable_api_stop: '- (Optional) If true, enables EC2 Instance Stop Protection.'
            disable_api_termination: |-
                - (Optional) If true, enables EC2 Instance
                Termination Protection
            ebs_optimized: '- (Optional) If true, the launched EC2 instance will be EBS-optimized.'
            elastic_gpu_specifications: |-
                - (Optional) The elastic GPU to attach to the instance. See Elastic GPU
                below for more details.
            elastic_gpu_specifications.type: '- The Elastic GPU Type'
            elastic_inference_accelerator: '- (Optional) Configuration block containing an Elastic Inference Accelerator to attach to the instance. See Elastic Inference Accelerator below for more details.'
            elastic_inference_accelerator.type: '- (Required) Accelerator type.'
            enclave_options: '- (Optional) Enable Nitro Enclaves on launched instances. See Enclave Options below for more details.'
            enclave_options.enabled: '- If set to true, Nitro Enclaves will be enabled on the instance.'
            excluded_instance_types: '- (Optional) List of instance types to exclude. You can use strings with one or more wild cards, represented by an asterisk (*). The following are examples: c5*, m5a.*, r*, *3*. For example, if you specify c5*, you are excluding the entire C5 instance family, which includes all C5a and C5n instance types. If you specify m5a.*, you are excluding all the M5a instance types, but not the M5n instance types. Maximum of 400 entries in the list; each entry is limited to 30 characters. Default is no excluded instance types.'
            hibernation_options: '- (Optional) The hibernation options for the instance. See Hibernation Options below for more details.'
            hibernation_options.configured: '- If set to true, the launched EC2 instance will hibernation enabled.'
            iam_instance_profile: |-
                - (Optional) The IAM Instance Profile to launch the instance with. See Instance Profile
                below for more details.
            iam_instance_profile.arn: '- The Amazon Resource Name (ARN) of the instance profile.'
            iam_instance_profile.name: '- The name of the instance profile.'
            id: '- The ID of the launch template.'
            image_id: '- (Optional) The AMI from which to launch the instance.'
            instance_generations: '- (Optional) List of instance generation names. Default is any generation.'
            instance_initiated_shutdown_behavior: |-
                - (Optional) Shutdown behavior for the instance. Can be stop or terminate.
                (Default: stop).
            instance_market_options: |-
                - (Optional) The market (purchasing) option for the instance. See Market Options
                below for details.
            instance_market_options.market_type: '- The market type. Can be spot.'
            instance_market_options.spot_options: '- The options for Spot Instance'
            instance_market_options.spot_options.block_duration_minutes: '- The required duration in minutes. This value must be a multiple of 60.'
            instance_market_options.spot_options.instance_interruption_behavior: |-
                - The behavior when a Spot Instance is interrupted. Can be hibernate,
                stop, or terminate. (Default: terminate).
            instance_market_options.spot_options.max_price: '- The maximum hourly price you''re willing to pay for the Spot Instances.'
            instance_market_options.spot_options.spot_instance_type: '- The Spot Instance request type. Can be one-time, or persistent.'
            instance_market_options.spot_options.valid_until: '- The end date of the request.'
            instance_requirements: '- (Optional) The attribute requirements for the type of instance. If present then instance_type cannot be present.'
            instance_type: '- (Optional) The type of the instance. If present then instance_requirements cannot be present.'
            kernel_id: '- (Optional) The kernel ID.'
            key_name: '- (Optional) The key name to use for the instance.'
            latest_version: '- The latest version of the launch template.'
            license_specification: '- (Optional) A list of license specifications to associate with. See License Specification below for more details.'
            license_specification.license_configuration_arn: '- (Required) ARN of the license configuration.'
            local_storage: '- (Optional) Indicate whether instance types with local storage volumes are included, excluded, or required. Default is included.'
            local_storage_types: '- (Optional) List of local storage type names. Default any storage type.'
            maintenance_options: '- (Optional) The maintenance options for the instance. See Maintenance Options below for more details.'
            maintenance_options.auto_recovery: '- (Optional) Disables the automatic recovery behavior of your instance or sets it to default. Can be "default" or "disabled". See Recover your instance for more details.'
            memory_gib_per_vcpu: '- (Optional) Block describing the minimum and maximum amount of memory (GiB) per vCPU. Default is no minimum or maximum.'
            memory_gib_per_vcpu.max: '- (Optional) Maximum. May be a decimal number, e.g. 0.5.'
            memory_gib_per_vcpu.min: '- (Optional) Minimum. May be a decimal number, e.g. 0.5.'
            memory_mib: '- (Required) Block describing the minimum and maximum amount of memory (MiB). Default is no maximum.'
            memory_mib.max: '- (Optional) Maximum.'
            memory_mib.min: '- (Required) Minimum.'
            metadata_options: '- (Optional) Customize the metadata options for the instance. See Metadata Options below for more details.'
            metadata_options.http_endpoint: '- (Optional) Whether the metadata service is available. Can be "enabled" or "disabled". (Default: "enabled").'
            metadata_options.http_protocol_ipv6: '- (Optional) Enables or disables the IPv6 endpoint for the instance metadata service. (Default: disabled).'
            metadata_options.http_put_response_hop_limit: '- (Optional) The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from 1 to 64. (Default: 1).'
            metadata_options.http_tokens: '- (Optional) Whether or not the metadata service requires session tokens, also referred to as Instance Metadata Service Version 2 (IMDSv2). Can be "optional" or "required". (Default: "optional").'
            metadata_options.instance_metadata_tags: '- (optional) Enables or disables access to instance tags from the instance metadata service. (Default: disabled).'
            monitoring: '- (Optional) The monitoring option for the instance. See Monitoring below for more details.'
            monitoring.enabled: '- If true, the launched EC2 instance will have detailed monitoring enabled.'
            name: '- (Optional) The name of the launch template. If you leave this blank, Terraform will auto-generate a unique name.'
            name_prefix: '- (Optional) Creates a unique name beginning with the specified prefix. Conflicts with name.'
            network_interface_count: '- (Optional) Block describing the minimum and maximum number of network interfaces. Default is no minimum or maximum.'
            network_interface_count.max: '- (Optional) Maximum.'
            network_interface_count.min: '- (Optional) Minimum.'
            network_interfaces: |-
                - (Optional) Customize network interfaces to be attached at instance boot time. See Network
                Interfaces below for more details.
            network_interfaces.associate_carrier_ip_address: '- Associate a Carrier IP address with eth0 for a new network interface. Use this option when you launch an instance in a Wavelength Zone and want to associate a Carrier IP address with the network interface. Boolean value.'
            network_interfaces.associate_public_ip_address: '- Associate a public ip address with the network interface.  Boolean value.'
            network_interfaces.delete_on_termination: '- Whether the network interface should be destroyed on instance termination. Defaults to false if not set.'
            network_interfaces.description: '- Description of the network interface.'
            network_interfaces.device_index: '- The integer index of the network interface attachment.'
            network_interfaces.interface_type: '- The type of network interface. To create an Elastic Fabric Adapter (EFA), specify efa.'
            network_interfaces.ipv4_address_count: '- The number of secondary private IPv4 addresses to assign to a network interface. Conflicts with ipv4_addresses'
            network_interfaces.ipv4_addresses: '- One or more private IPv4 addresses to associate. Conflicts with ipv4_address_count'
            network_interfaces.ipv4_prefix_count: '- The number of IPv4 prefixes to be automatically assigned to the network interface. Conflicts with ipv4_prefixes'
            network_interfaces.ipv4_prefixes: '- One or more IPv4 prefixes to be assigned to the network interface. Conflicts with ipv4_prefix_count'
            network_interfaces.ipv6_address_count: '- The number of IPv6 addresses to assign to a network interface. Conflicts with ipv6_addresses'
            network_interfaces.ipv6_addresses: '- One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet. Conflicts with ipv6_address_count'
            network_interfaces.ipv6_prefix_count: '- The number of IPv6 prefixes to be automatically assigned to the network interface. Conflicts with ipv6_prefixes'
            network_interfaces.ipv6_prefixes: '- One or more IPv6 prefixes to be assigned to the network interface. Conflicts with ipv6_prefix_count'
            network_interfaces.network_card_index: '- The index of the network card. Some instance types support multiple network cards. The primary network interface must be assigned to network card index 0. The default is network card index 0.'
            network_interfaces.network_interface_id: '- The ID of the network interface to attach.'
            network_interfaces.private_ip_address: '- The primary private IPv4 address.'
            network_interfaces.security_groups: '- A list of security group IDs to associate.'
            network_interfaces.subnet_id: '- The VPC Subnet ID to associate.'
            on_demand_max_price_percentage_over_lowest_price: '- (Optional) The price protection threshold for On-Demand Instances. This is the maximum you’ll pay for an On-Demand Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Default is 20.'
            placement: '- (Optional) The placement of the instance. See Placement below for more details.'
            placement.affinity: '- The affinity setting for an instance on a Dedicated Host.'
            placement.availability_zone: '- The Availability Zone for the instance.'
            placement.group_name: '- The name of the placement group for the instance.'
            placement.host_id: '- The ID of the Dedicated Host for the instance.'
            placement.host_resource_group_arn: '- The ARN of the Host Resource Group in which to launch instances.'
            placement.partition_number: '- The number of the partition the instance should launch in. Valid only if the placement group strategy is set to partition.'
            placement.spread_domain: '- Reserved for future use.'
            placement.tenancy: '- The tenancy of the instance (if the instance is running in a VPC). Can be default, dedicated, or host.'
            private_dns_name_options: '- (Optional) The options for the instance hostname. The default values are inherited from the subnet. See Private DNS Name Options below for more details.'
            private_dns_name_options.enable_resource_name_dns_a_record: '- Indicates whether to respond to DNS queries for instance hostnames with DNS A records.'
            private_dns_name_options.enable_resource_name_dns_aaaa_record: '- Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records.'
            private_dns_name_options.hostname_type: '- The type of hostname for Amazon EC2 instances. For IPv4 only subnets, an instance DNS name must be based on the instance IPv4 address. For IPv6 native subnets, an instance DNS name must be based on the instance ID. For dual-stack subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: ip-name and resource-name.'
            ram_disk_id: '- (Optional) The ID of the RAM disk.'
            require_hibernate_support: '- (Optional) Indicate whether instance types must support On-Demand Instance Hibernation, either true or false. Default is false.'
            security_group_names: |-
                - (Optional) A list of security group names to associate with. If you are creating Instances in a VPC, use
                vpc_security_group_ids instead.
            spot_max_price_percentage_over_lowest_price: '- (Optional) The price protection threshold for Spot Instances. This is the maximum you’ll pay for a Spot Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Default is 100.'
            tag_specifications: '- (Optional) The tags to apply to the resources during launch. See Tag Specifications below for more details.'
            tag_specifications.resource_type: '- The type of resource to tag.'
            tag_specifications.tags: '- A map of tags to assign to the resource.'
            tags: '- (Optional) A map of tags to assign to the launch template. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            total_local_storage_gb: '- (Optional) Block describing the minimum and maximum total local storage (GB). Default is no minimum or maximum.'
            total_local_storage_gb.max: '- (Optional) Maximum. May be a decimal number, e.g. 0.5.'
            total_local_storage_gb.min: '- (Optional) Minimum. May be a decimal number, e.g. 0.5.'
            update_default_version: '- (Optional) Whether to update Default Version each update. Conflicts with default_version.'
            user_data: '- (Optional) The base64-encoded user data to provide when launching the instance.'
            vcpu_count: '- (Required) Block describing the minimum and maximum number of vCPUs. Default is no maximum.'
            vcpu_count.max: '- (Optional) Maximum.'
            vcpu_count.min: '- (Required) Minimum.'
            vpc_security_group_ids: '- (Optional) A list of security group IDs to associate with. Conflicts with network_interfaces.security_groups'
        importStatements: []
    aws_lb:
        subCategory: ELB (Elastic Load Balancing)
        description: Provides a Load Balancer resource.
        name: aws_lb
        title: aws_lb
        examples:
            - name: test
              manifest: |-
                {
                  "access_logs": [
                    {
                      "bucket": "${aws_s3_bucket.lb_logs.bucket}",
                      "enabled": true,
                      "prefix": "test-lb"
                    }
                  ],
                  "enable_deletion_protection": true,
                  "internal": false,
                  "load_balancer_type": "application",
                  "name": "test-lb-tf",
                  "security_groups": [
                    "${aws_security_group.lb_sg.id}"
                  ],
                  "subnets": "${[for subnet in aws_subnet.public : subnet.id]}",
                  "tags": {
                    "Environment": "production"
                  }
                }
              references:
                access_logs.bucket: aws_s3_bucket.lb_logs.bucket
            - name: test
              manifest: |-
                {
                  "enable_deletion_protection": true,
                  "internal": false,
                  "load_balancer_type": "network",
                  "name": "test-lb-tf",
                  "subnets": "${[for subnet in aws_subnet.public : subnet.id]}",
                  "tags": {
                    "Environment": "production"
                  }
                }
            - name: example
              manifest: |-
                {
                  "load_balancer_type": "network",
                  "name": "example",
                  "subnet_mapping": [
                    {
                      "allocation_id": "${aws_eip.example1.id}",
                      "subnet_id": "${aws_subnet.example1.id}"
                    },
                    {
                      "allocation_id": "${aws_eip.example2.id}",
                      "subnet_id": "${aws_subnet.example2.id}"
                    }
                  ]
                }
              references:
                subnet_mapping.allocation_id: aws_eip.example2.id
                subnet_mapping.subnet_id: aws_subnet.example2.id
            - name: example
              manifest: |-
                {
                  "load_balancer_type": "network",
                  "name": "example",
                  "subnet_mapping": [
                    {
                      "private_ipv4_address": "10.0.1.15",
                      "subnet_id": "${aws_subnet.example1.id}"
                    },
                    {
                      "private_ipv4_address": "10.0.2.15",
                      "subnet_id": "${aws_subnet.example2.id}"
                    }
                  ]
                }
              references:
                subnet_mapping.subnet_id: aws_subnet.example2.id
        argumentDocs:
            access_logs: '- (Optional) An Access Logs block. Access Logs documented below.'
            arn: '- The ARN of the load balancer (matches id).'
            arn_suffix: '- The ARN suffix for use with CloudWatch Metrics.'
            bucket: '- (Required) The S3 bucket name to store the logs in.'
            create: '- (Default 10 minutes) Used for Creating LB'
            customer_owned_ipv4_pool: '- (Optional) The ID of the customer owned ipv4 pool to use for this load balancer.'
            delete: '- (Default 10 minutes) Used for destroying LB'
            desync_mitigation_mode: '- (Optional) Determines how the load balancer handles requests that might pose a security risk to an application due to HTTP desync. Valid values are monitor, defensive (default), strictest.'
            dns_name: '- The DNS name of the load balancer.'
            drop_invalid_header_fields: '- (Optional) Indicates whether HTTP headers with header fields that are not valid are removed by the load balancer (true) or routed to targets (false). The default is false. Elastic Load Balancing requires that message header names contain only alphanumeric characters and hyphens. Only valid for Load Balancers of type application.'
            enable_cross_zone_load_balancing: |-
                - (Optional) If true, cross-zone load balancing of the load balancer will be enabled.
                This is a network load balancer feature. Defaults to false.
            enable_deletion_protection: |-
                - (Optional) If true, deletion of the load balancer will be disabled via
                the AWS API. This will prevent Terraform from deleting the load balancer. Defaults to false.
            enable_http2: '- (Optional) Indicates whether HTTP/2 is enabled in application load balancers. Defaults to true.'
            enable_waf_fail_open: '- (Optional) Indicates whether to allow a WAF-enabled load balancer to route requests to targets if it is unable to forward the request to AWS WAF. Defaults to false.'
            enabled: '- (Optional) Boolean to enable / disable access_logs. Defaults to false, even when bucket is specified.'
            id: '- The ARN of the load balancer (matches arn).'
            idle_timeout: '- (Optional) The time in seconds that the connection is allowed to be idle. Only valid for Load Balancers of type application. Default: 60.'
            internal: '- (Optional) If true, the LB will be internal.'
            ip_address_type: '- (Optional) The type of IP addresses used by the subnets for your load balancer. The possible values are ipv4 and dualstack'
            load_balancer_type: '- (Optional) The type of load balancer to create. Possible values are application, gateway, or network. The default value is application.'
            name: |-
                - (Optional) The name of the LB. This name must be unique within your AWS account, can have a maximum of 32 characters,
                must contain only alphanumeric characters or hyphens, and must not begin or end with a hyphen. If not specified,
                Terraform will autogenerate a name beginning with tf-lb.
            name_prefix: '- (Optional) Creates a unique name beginning with the specified prefix. Conflicts with name.'
            prefix: '- (Optional) The S3 bucket prefix. Logs are stored in the root if not configured.'
            security_groups: '- (Optional) A list of security group IDs to assign to the LB. Only valid for Load Balancers of type application.'
            subnet_mapping: '- (Optional) A subnet mapping block as documented below.'
            subnet_mapping.*.outpost_id: '- ID of the Outpost containing the load balancer.'
            subnet_mapping.allocation_id: '- (Optional) The allocation ID of the Elastic IP address.'
            subnet_mapping.ipv6_address: '- (Optional) An ipv6 address within the subnet to assign to the internet-facing load balancer.'
            subnet_mapping.private_ipv4_address: '- (Optional) A private ipv4 address within the subnet to assign to the internal-facing load balancer.'
            subnet_mapping.subnet_id: '- (Required) The id of the subnet of which to attach to the load balancer. You can specify only one subnet per Availability Zone.'
            subnets: |-
                - (Optional) A list of subnet IDs to attach to the LB. Subnets
                cannot be updated for Load Balancers of type network. Changing this value
                for load balancers of type network will force a recreation of the resource.
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            update: '- (Default 10 minutes) Used for LB modifications'
            zone_id: '- The canonical hosted zone ID of the load balancer (to be used in a Route 53 Alias record).'
        importStatements: []
    aws_lb_cookie_stickiness_policy:
        subCategory: ELB Classic
        description: Provides a load balancer cookie stickiness policy, which allows an ELB to control the sticky session lifetime of the browser.
        name: aws_lb_cookie_stickiness_policy
        title: aws_lb_cookie_stickiness_policy
        examples:
            - name: foo
              manifest: |-
                {
                  "cookie_expiration_period": 600,
                  "lb_port": 80,
                  "load_balancer": "${aws_elb.lb.id}",
                  "name": "foo-policy"
                }
              references:
                load_balancer: aws_elb.lb.id
              dependencies:
                aws_elb.lb: |-
                    {
                      "availability_zones": [
                        "us-east-1a"
                      ],
                      "listener": [
                        {
                          "instance_port": 8000,
                          "instance_protocol": "http",
                          "lb_port": 80,
                          "lb_protocol": "http"
                        }
                      ],
                      "name": "test-lb"
                    }
        argumentDocs:
            cookie_expiration_period: |-
                - (Optional) The time period after which
                the session cookie should be considered stale, expressed in seconds.
            id: '- The ID of the policy.'
            lb_port: |-
                - (Required) The load balancer port to which the policy
                should be applied. This must be an active listener on the load
                balancer.
            load_balancer: |-
                - (Required) The load balancer to which the policy
                should be attached.
            name: '- (Required) The name of the stickiness policy.'
        importStatements: []
    aws_lb_listener:
        subCategory: ELB (Elastic Load Balancing)
        description: Provides a Load Balancer Listener resource.
        name: aws_lb_listener
        title: aws_lb_listener
        examples:
            - name: front_end
              manifest: |-
                {
                  "certificate_arn": "arn:aws:iam::187416307283:server-certificate/test_cert_rab3wuqwgja25ct3n4jdj2tzu4",
                  "default_action": [
                    {
                      "target_group_arn": "${aws_lb_target_group.front_end.arn}",
                      "type": "forward"
                    }
                  ],
                  "load_balancer_arn": "${aws_lb.front_end.arn}",
                  "port": "443",
                  "protocol": "HTTPS",
                  "ssl_policy": "ELBSecurityPolicy-2016-08"
                }
              references:
                default_action.target_group_arn: aws_lb_target_group.front_end.arn
                load_balancer_arn: aws_lb.front_end.arn
              dependencies:
                aws_lb.front_end: '{}'
                aws_lb_target_group.front_end: '{}'
            - name: front_end
              manifest: |-
                {
                  "alpn_policy": "HTTP2Preferred",
                  "certificate_arn": "arn:aws:iam::187416307283:server-certificate/test_cert_rab3wuqwgja25ct3n4jdj2tzu4",
                  "default_action": [
                    {
                      "target_group_arn": "${aws_lb_target_group.front_end.arn}",
                      "type": "forward"
                    }
                  ],
                  "load_balancer_arn": "${aws_lb.front_end.arn}",
                  "port": "443",
                  "protocol": "TLS"
                }
              references:
                default_action.target_group_arn: aws_lb_target_group.front_end.arn
                load_balancer_arn: aws_lb.front_end.arn
            - name: front_end
              manifest: |-
                {
                  "default_action": [
                    {
                      "redirect": [
                        {
                          "port": "443",
                          "protocol": "HTTPS",
                          "status_code": "HTTP_301"
                        }
                      ],
                      "type": "redirect"
                    }
                  ],
                  "load_balancer_arn": "${aws_lb.front_end.arn}",
                  "port": "80",
                  "protocol": "HTTP"
                }
              references:
                load_balancer_arn: aws_lb.front_end.arn
              dependencies:
                aws_lb.front_end: '{}'
            - name: front_end
              manifest: |-
                {
                  "default_action": [
                    {
                      "fixed_response": [
                        {
                          "content_type": "text/plain",
                          "message_body": "Fixed response content",
                          "status_code": "200"
                        }
                      ],
                      "type": "fixed-response"
                    }
                  ],
                  "load_balancer_arn": "${aws_lb.front_end.arn}",
                  "port": "80",
                  "protocol": "HTTP"
                }
              references:
                load_balancer_arn: aws_lb.front_end.arn
              dependencies:
                aws_lb.front_end: '{}'
            - name: front_end
              manifest: |-
                {
                  "default_action": [
                    {
                      "authenticate_cognito": [
                        {
                          "user_pool_arn": "${aws_cognito_user_pool.pool.arn}",
                          "user_pool_client_id": "${aws_cognito_user_pool_client.client.id}",
                          "user_pool_domain": "${aws_cognito_user_pool_domain.domain.domain}"
                        }
                      ],
                      "type": "authenticate-cognito"
                    },
                    {
                      "target_group_arn": "${aws_lb_target_group.front_end.arn}",
                      "type": "forward"
                    }
                  ],
                  "load_balancer_arn": "${aws_lb.front_end.arn}",
                  "port": "80",
                  "protocol": "HTTP"
                }
              references:
                default_action.authenticate_cognito.user_pool_arn: aws_cognito_user_pool.pool.arn
                default_action.authenticate_cognito.user_pool_client_id: aws_cognito_user_pool_client.client.id
                default_action.authenticate_cognito.user_pool_domain: aws_cognito_user_pool_domain.domain.domain
                default_action.target_group_arn: aws_lb_target_group.front_end.arn
                load_balancer_arn: aws_lb.front_end.arn
              dependencies:
                aws_cognito_user_pool.pool: '{}'
                aws_cognito_user_pool_client.client: '{}'
                aws_cognito_user_pool_domain.domain: '{}'
                aws_lb.front_end: '{}'
                aws_lb_target_group.front_end: '{}'
            - name: front_end
              manifest: |-
                {
                  "default_action": [
                    {
                      "authenticate_oidc": [
                        {
                          "authorization_endpoint": "https://example.com/authorization_endpoint",
                          "client_id": "client_id",
                          "client_secret": "client_secret",
                          "issuer": "https://example.com",
                          "token_endpoint": "https://example.com/token_endpoint",
                          "user_info_endpoint": "https://example.com/user_info_endpoint"
                        }
                      ],
                      "type": "authenticate-oidc"
                    },
                    {
                      "target_group_arn": "${aws_lb_target_group.front_end.arn}",
                      "type": "forward"
                    }
                  ],
                  "load_balancer_arn": "${aws_lb.front_end.arn}",
                  "port": "80",
                  "protocol": "HTTP"
                }
              references:
                default_action.target_group_arn: aws_lb_target_group.front_end.arn
                load_balancer_arn: aws_lb.front_end.arn
              dependencies:
                aws_lb.front_end: '{}'
                aws_lb_target_group.front_end: '{}'
            - name: example
              manifest: |-
                {
                  "default_action": [
                    {
                      "target_group_arn": "${aws_lb_target_group.example.id}",
                      "type": "forward"
                    }
                  ],
                  "load_balancer_arn": "${aws_lb.example.id}"
                }
              references:
                default_action.target_group_arn: aws_lb_target_group.example.id
                load_balancer_arn: aws_lb.example.id
              dependencies:
                aws_lb.example: |-
                    {
                      "load_balancer_type": "gateway",
                      "name": "example",
                      "subnet_mapping": [
                        {
                          "subnet_id": "${aws_subnet.example.id}"
                        }
                      ]
                    }
                aws_lb_target_group.example: |-
                    {
                      "health_check": [
                        {
                          "port": 80,
                          "protocol": "HTTP"
                        }
                      ],
                      "name": "example",
                      "port": 6081,
                      "protocol": "GENEVE",
                      "vpc_id": "${aws_vpc.example.id}"
                    }
        argumentDocs:
            alpn_policy: '- (Optional)  Name of the Application-Layer Protocol Negotiation (ALPN) policy. Can be set if protocol is TLS. Valid values are HTTP1Only, HTTP2Only, HTTP2Optional, HTTP2Preferred, and None.'
            arn: '- ARN of the listener (matches id).'
            certificate_arn: '- (Optional) ARN of the default SSL server certificate. Exactly one certificate is required if the protocol is HTTPS. For adding additional SSL certificates, see the aws_lb_listener_certificate resource.'
            default_action: '- (Required) Configuration block for default actions. Detailed below.'
            default_action.authenticate_cognito: '- (Optional) Configuration block for using Amazon Cognito to authenticate users. Specify only when type is authenticate-cognito. Detailed below.'
            default_action.authenticate_cognito.authentication_request_extra_params: '- (Optional) Query parameters to include in the redirect request to the authorization endpoint. Max: 10. Detailed below.'
            default_action.authenticate_cognito.authentication_request_extra_params.key: '- (Required) Key of query parameter.'
            default_action.authenticate_cognito.authentication_request_extra_params.value: '- (Required) Value of query parameter.'
            default_action.authenticate_cognito.on_unauthenticated_request: '- (Optional) Behavior if the user is not authenticated. Valid values are deny, allow and authenticate.'
            default_action.authenticate_cognito.scope: '- (Optional) Set of user claims to be requested from the IdP.'
            default_action.authenticate_cognito.session_cookie_name: '- (Optional) Name of the cookie used to maintain session information.'
            default_action.authenticate_cognito.session_timeout: '- (Optional) Maximum duration of the authentication session, in seconds.'
            default_action.authenticate_cognito.user_pool_arn: '- (Required) ARN of the Cognito user pool.'
            default_action.authenticate_cognito.user_pool_client_id: '- (Required) ID of the Cognito user pool client.'
            default_action.authenticate_cognito.user_pool_domain: '- (Required) Domain prefix or fully-qualified domain name of the Cognito user pool.'
            default_action.authenticate_oidc: '- (Optional) Configuration block for an identity provider that is compliant with OpenID Connect (OIDC). Specify only when type is authenticate-oidc. Detailed below.'
            default_action.authenticate_oidc.authentication_request_extra_params: '- (Optional) Query parameters to include in the redirect request to the authorization endpoint. Max: 10.'
            default_action.authenticate_oidc.authorization_endpoint: '- (Required) Authorization endpoint of the IdP.'
            default_action.authenticate_oidc.client_id: '- (Required) OAuth 2.0 client identifier.'
            default_action.authenticate_oidc.client_secret: '- (Required) OAuth 2.0 client secret.'
            default_action.authenticate_oidc.issuer: '- (Required) OIDC issuer identifier of the IdP.'
            default_action.authenticate_oidc.on_unauthenticated_request: '- (Optional) Behavior if the user is not authenticated. Valid values: deny, allow and authenticate'
            default_action.authenticate_oidc.scope: '- (Optional) Set of user claims to be requested from the IdP.'
            default_action.authenticate_oidc.session_cookie_name: '- (Optional) Name of the cookie used to maintain session information.'
            default_action.authenticate_oidc.session_timeout: '- (Optional) Maximum duration of the authentication session, in seconds.'
            default_action.authenticate_oidc.token_endpoint: '- (Required) Token endpoint of the IdP.'
            default_action.authenticate_oidc.user_info_endpoint: '- (Required) User info endpoint of the IdP.'
            default_action.fixed_response: '- (Optional) Information for creating an action that returns a custom HTTP response. Required if type is fixed-response.'
            default_action.fixed_response.content_type: '- (Required) Content type. Valid values are text/plain, text/css, text/html, application/javascript and application/json.'
            default_action.fixed_response.message_body: '- (Optional) Message body.'
            default_action.fixed_response.status_code: '- (Optional) HTTP response code. Valid values are 2XX, 4XX, or 5XX.'
            default_action.forward: '- (Optional) Configuration block for creating an action that distributes requests among one or more target groups. Specify only if type is forward. If you specify both forward block and target_group_arn attribute, you can specify only one target group using forward and it must be the same target group specified in target_group_arn. Detailed below.'
            default_action.forward.stickiness: '- (Optional) Configuration block for target group stickiness for the rule. Detailed below.'
            default_action.forward.stickiness.duration: '- (Required) Time period, in seconds, during which requests from a client should be routed to the same target group. The range is 1-604800 seconds (7 days).'
            default_action.forward.stickiness.enabled: '- (Optional) Whether target group stickiness is enabled. Default is false.'
            default_action.forward.target_group: '- (Required) Set of 1-5 target group blocks. Detailed below.'
            default_action.forward.target_group.arn: '- (Required) ARN of the target group.'
            default_action.forward.target_group.weight: '- (Optional) Weight. The range is 0 to 999.'
            default_action.order: '- (Optional) Order for the action. This value is required for rules with multiple actions. The action with the lowest value for order is performed first. Valid values are between 1 and 50000.'
            default_action.redirect: '- (Optional) Configuration block for creating a redirect action. Required if type is redirect. Detailed below.'
            default_action.redirect.host: '- (Optional) Hostname. This component is not percent-encoded. The hostname can contain #{host}. Defaults to #{host}.'
            default_action.redirect.path: '- (Optional) Absolute path, starting with the leading "/". This component is not percent-encoded. The path can contain #{host}, #{path}, and #{port}. Defaults to /#{path}.'
            default_action.redirect.port: '- (Optional) Port. Specify a value from 1 to 65535 or #{port}. Defaults to #{port}.'
            default_action.redirect.protocol: '- (Optional) Protocol. Valid values are HTTP, HTTPS, or #{protocol}. Defaults to #{protocol}.'
            default_action.redirect.query: '- (Optional) Query parameters, URL-encoded when necessary, but not percent-encoded. Do not include the leading "?". Defaults to #{query}.'
            default_action.redirect.status_code: '- (Required) HTTP redirect code. The redirect is either permanent (HTTP_301) or temporary (HTTP_302).'
            default_action.target_group_arn: '- (Optional) ARN of the Target Group to which to route traffic. Specify only if type is forward and you want to route to a single target group. To route to one or more target groups, use a forward block instead.'
            default_action.type: '- (Required) Type of routing action. Valid values are forward, redirect, fixed-response, authenticate-cognito and authenticate-oidc.'
            id: '- ARN of the listener (matches arn).'
            load_balancer_arn: '- (Required, Forces New Resource) ARN of the load balancer.'
            port: '- (Optional) Port on which the load balancer is listening. Not valid for Gateway Load Balancers.'
            protocol: '- (Optional) Protocol for connections from clients to the load balancer. For Application Load Balancers, valid values are HTTP and HTTPS, with a default of HTTP. For Network Load Balancers, valid values are TCP, TLS, UDP, and TCP_UDP. Not valid to use UDP or TCP_UDP if dual-stack mode is enabled. Not valid for Gateway Load Balancers.'
            ssl_policy: '- (Optional) Name of the SSL Policy for the listener. Required if protocol is HTTPS or TLS.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_lb_listener_certificate:
        subCategory: ELB (Elastic Load Balancing)
        description: Provides a Load Balancer Listener Certificate resource.
        name: aws_lb_listener_certificate
        title: aws_lb_listener_certificate
        examples:
            - name: example
              manifest: |-
                {
                  "certificate_arn": "${aws_acm_certificate.example.arn}",
                  "listener_arn": "${aws_lb_listener.front_end.arn}"
                }
              references:
                certificate_arn: aws_acm_certificate.example.arn
                listener_arn: aws_lb_listener.front_end.arn
              dependencies:
                aws_acm_certificate.example: '{}'
                aws_lb.front_end: '{}'
                aws_lb_listener.front_end: '{}'
        argumentDocs:
            certificate_arn: '- (Required, Forces New Resource) The ARN of the certificate to attach to the listener.'
            id: '- The listener_arn and certificate_arn separated by a _.'
            listener_arn: '- (Required, Forces New Resource) The ARN of the listener to which to attach the certificate.'
        importStatements: []
    aws_lb_listener_rule:
        subCategory: ELB (Elastic Load Balancing)
        description: Provides a Load Balancer Listener Rule resource.
        name: aws_lb_listener_rule
        title: aws_lb_listener_rule
        examples:
            - name: static
              manifest: |-
                {
                  "action": [
                    {
                      "target_group_arn": "${aws_lb_target_group.static.arn}",
                      "type": "forward"
                    }
                  ],
                  "condition": [
                    {
                      "path_pattern": [
                        {
                          "values": [
                            "/static/*"
                          ]
                        }
                      ]
                    },
                    {
                      "host_header": [
                        {
                          "values": [
                            "example.com"
                          ]
                        }
                      ]
                    }
                  ],
                  "listener_arn": "${aws_lb_listener.front_end.arn}",
                  "priority": 100
                }
              references:
                action.target_group_arn: aws_lb_target_group.static.arn
                listener_arn: aws_lb_listener.front_end.arn
              dependencies:
                aws_cognito_user_pool.pool: '{}'
                aws_cognito_user_pool_client.client: '{}'
                aws_cognito_user_pool_domain.domain: '{}'
                aws_lb.front_end: '{}'
                aws_lb_listener.front_end: '{}'
            - name: host_based_weighted_routing
              manifest: |-
                {
                  "action": [
                    {
                      "target_group_arn": "${aws_lb_target_group.static.arn}",
                      "type": "forward"
                    }
                  ],
                  "condition": [
                    {
                      "host_header": [
                        {
                          "values": [
                            "my-service.*.terraform.io"
                          ]
                        }
                      ]
                    }
                  ],
                  "listener_arn": "${aws_lb_listener.front_end.arn}",
                  "priority": 99
                }
              references:
                action.target_group_arn: aws_lb_target_group.static.arn
                listener_arn: aws_lb_listener.front_end.arn
              dependencies:
                aws_cognito_user_pool.pool: '{}'
                aws_cognito_user_pool_client.client: '{}'
                aws_cognito_user_pool_domain.domain: '{}'
                aws_lb.front_end: '{}'
                aws_lb_listener.front_end: '{}'
            - name: host_based_routing
              manifest: |-
                {
                  "action": [
                    {
                      "forward": [
                        {
                          "stickiness": [
                            {
                              "duration": 600,
                              "enabled": true
                            }
                          ],
                          "target_group": [
                            {
                              "arn": "${aws_lb_target_group.main.arn}",
                              "weight": 80
                            },
                            {
                              "arn": "${aws_lb_target_group.canary.arn}",
                              "weight": 20
                            }
                          ]
                        }
                      ],
                      "type": "forward"
                    }
                  ],
                  "condition": [
                    {
                      "host_header": [
                        {
                          "values": [
                            "my-service.*.terraform.io"
                          ]
                        }
                      ]
                    }
                  ],
                  "listener_arn": "${aws_lb_listener.front_end.arn}",
                  "priority": 99
                }
              references:
                action.forward.target_group.arn: aws_lb_target_group.canary.arn
                listener_arn: aws_lb_listener.front_end.arn
              dependencies:
                aws_cognito_user_pool.pool: '{}'
                aws_cognito_user_pool_client.client: '{}'
                aws_cognito_user_pool_domain.domain: '{}'
                aws_lb.front_end: '{}'
                aws_lb_listener.front_end: '{}'
            - name: redirect_http_to_https
              manifest: |-
                {
                  "action": [
                    {
                      "redirect": [
                        {
                          "port": "443",
                          "protocol": "HTTPS",
                          "status_code": "HTTP_301"
                        }
                      ],
                      "type": "redirect"
                    }
                  ],
                  "condition": [
                    {
                      "http_header": [
                        {
                          "http_header_name": "X-Forwarded-For",
                          "values": [
                            "192.168.1.*"
                          ]
                        }
                      ]
                    }
                  ],
                  "listener_arn": "${aws_lb_listener.front_end.arn}"
                }
              references:
                listener_arn: aws_lb_listener.front_end.arn
              dependencies:
                aws_cognito_user_pool.pool: '{}'
                aws_cognito_user_pool_client.client: '{}'
                aws_cognito_user_pool_domain.domain: '{}'
                aws_lb.front_end: '{}'
                aws_lb_listener.front_end: '{}'
            - name: health_check
              manifest: |-
                {
                  "action": [
                    {
                      "fixed_response": [
                        {
                          "content_type": "text/plain",
                          "message_body": "HEALTHY",
                          "status_code": "200"
                        }
                      ],
                      "type": "fixed-response"
                    }
                  ],
                  "condition": [
                    {
                      "query_string": [
                        {
                          "key": "health",
                          "value": "check"
                        },
                        {
                          "value": "bar"
                        }
                      ]
                    }
                  ],
                  "listener_arn": "${aws_lb_listener.front_end.arn}"
                }
              references:
                listener_arn: aws_lb_listener.front_end.arn
              dependencies:
                aws_cognito_user_pool.pool: '{}'
                aws_cognito_user_pool_client.client: '{}'
                aws_cognito_user_pool_domain.domain: '{}'
                aws_lb.front_end: '{}'
                aws_lb_listener.front_end: '{}'
            - name: admin
              manifest: |-
                {
                  "action": [
                    {
                      "authenticate_cognito": [
                        {
                          "user_pool_arn": "${aws_cognito_user_pool.pool.arn}",
                          "user_pool_client_id": "${aws_cognito_user_pool_client.client.id}",
                          "user_pool_domain": "${aws_cognito_user_pool_domain.domain.domain}"
                        }
                      ],
                      "type": "authenticate-cognito"
                    },
                    {
                      "target_group_arn": "${aws_lb_target_group.static.arn}",
                      "type": "forward"
                    }
                  ],
                  "listener_arn": "${aws_lb_listener.front_end.arn}"
                }
              references:
                action.authenticate_cognito.user_pool_arn: aws_cognito_user_pool.pool.arn
                action.authenticate_cognito.user_pool_client_id: aws_cognito_user_pool_client.client.id
                action.authenticate_cognito.user_pool_domain: aws_cognito_user_pool_domain.domain.domain
                action.target_group_arn: aws_lb_target_group.static.arn
                listener_arn: aws_lb_listener.front_end.arn
              dependencies:
                aws_cognito_user_pool.pool: '{}'
                aws_cognito_user_pool_client.client: '{}'
                aws_cognito_user_pool_domain.domain: '{}'
                aws_lb.front_end: '{}'
                aws_lb_listener.front_end: '{}'
            - name: oidc
              manifest: |-
                {
                  "action": [
                    {
                      "authenticate_oidc": [
                        {
                          "authorization_endpoint": "https://example.com/authorization_endpoint",
                          "client_id": "client_id",
                          "client_secret": "client_secret",
                          "issuer": "https://example.com",
                          "token_endpoint": "https://example.com/token_endpoint",
                          "user_info_endpoint": "https://example.com/user_info_endpoint"
                        }
                      ],
                      "type": "authenticate-oidc"
                    },
                    {
                      "target_group_arn": "${aws_lb_target_group.static.arn}",
                      "type": "forward"
                    }
                  ],
                  "listener_arn": "${aws_lb_listener.front_end.arn}"
                }
              references:
                action.target_group_arn: aws_lb_target_group.static.arn
                listener_arn: aws_lb_listener.front_end.arn
              dependencies:
                aws_cognito_user_pool.pool: '{}'
                aws_cognito_user_pool_client.client: '{}'
                aws_cognito_user_pool_domain.domain: '{}'
                aws_lb.front_end: '{}'
                aws_lb_listener.front_end: '{}'
        argumentDocs:
            action: '- (Required) An Action block. Action blocks are documented below.'
            action.authenticate_cognito: '- (Optional) Information for creating an authenticate action using Cognito. Required if type is authenticate-cognito.'
            action.authenticate_oidc: '- (Optional) Information for creating an authenticate action using OIDC. Required if type is authenticate-oidc.'
            action.fixed_response: '- (Optional) Information for creating an action that returns a custom HTTP response. Required if type is fixed-response.'
            action.forward: '- (Optional) Information for creating an action that distributes requests among one or more target groups. Specify only if type is forward. If you specify both forward block and target_group_arn attribute, you can specify only one target group using forward and it must be the same target group specified in target_group_arn.'
            action.forward.stickiness: '- (Optional) The target group stickiness for the rule.'
            action.forward.target_group: '- (Required) One or more target groups block.'
            action.forward.target_group.arn: '- (Required) The Amazon Resource Name (ARN) of the target group.'
            action.forward.target_group.weight: '- (Optional) The weight. The range is 0 to 999.'
            action.redirect: '- (Optional) Information for creating a redirect action. Required if type is redirect.'
            action.target_group_arn: '- (Optional) The ARN of the Target Group to which to route traffic. Specify only if type is forward and you want to route to a single target group. To route to one or more target groups, use a forward block instead.'
            action.type: '- (Required) The type of routing action. Valid values are forward, redirect, fixed-response, authenticate-cognito and authenticate-oidc.'
            arn: '- The ARN of the rule (matches id)'
            authenticate_cognito.authentication_request_extra_params: '- (Optional) The query parameters to include in the redirect request to the authorization endpoint. Max: 10.'
            authenticate_cognito.on_unauthenticated_request: '- (Optional) The behavior if the user is not authenticated. Valid values: deny, allow and authenticate'
            authenticate_cognito.scope: '- (Optional) The set of user claims to be requested from the IdP.'
            authenticate_cognito.session_cookie_name: '- (Optional) The name of the cookie used to maintain session information.'
            authenticate_cognito.session_timeout: '- (Optional) The maximum duration of the authentication session, in seconds.'
            authenticate_cognito.user_pool_arn: '- (Required) The ARN of the Cognito user pool.'
            authenticate_cognito.user_pool_client_id: '- (Required) The ID of the Cognito user pool client.'
            authenticate_cognito.user_pool_domain: '- (Required) The domain prefix or fully-qualified domain name of the Cognito user pool.'
            authenticate_oidc.authentication_request_extra_params: '- (Optional) The query parameters to include in the redirect request to the authorization endpoint. Max: 10.'
            authenticate_oidc.authentication_request_extra_params.key: '- (Required) The key of query parameter'
            authenticate_oidc.authentication_request_extra_params.value: '- (Required) The value of query parameter'
            authenticate_oidc.authorization_endpoint: '- (Required) The authorization endpoint of the IdP.'
            authenticate_oidc.client_id: '- (Required) The OAuth 2.0 client identifier.'
            authenticate_oidc.client_secret: '- (Required) The OAuth 2.0 client secret.'
            authenticate_oidc.issuer: '- (Required) The OIDC issuer identifier of the IdP.'
            authenticate_oidc.on_unauthenticated_request: '- (Optional) The behavior if the user is not authenticated. Valid values: deny, allow and authenticate'
            authenticate_oidc.scope: '- (Optional) The set of user claims to be requested from the IdP.'
            authenticate_oidc.session_cookie_name: '- (Optional) The name of the cookie used to maintain session information.'
            authenticate_oidc.session_timeout: '- (Optional) The maximum duration of the authentication session, in seconds.'
            authenticate_oidc.token_endpoint: '- (Required) The token endpoint of the IdP.'
            authenticate_oidc.user_info_endpoint: '- (Required) The user info endpoint of the IdP.'
            condition: '- (Required) A Condition block. Multiple condition blocks of different types can be set and all must be satisfied for the rule to match. Condition blocks are documented below.'
            condition.host_header: '- (Optional) Contains a single values item which is a list of host header patterns to match. The maximum size of each pattern is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). Only one pattern needs to match for the condition to be satisfied.'
            condition.http_header: '- (Optional) HTTP headers to match. HTTP Header block fields documented below.'
            condition.http_header.http_header_name: '- (Required) Name of HTTP header to search. The maximum size is 40 characters. Comparison is case insensitive. Only RFC7240 characters are supported. Wildcards are not supported. You cannot use HTTP header condition to specify the host header, use a host-header condition instead.'
            condition.http_header.values: '- (Required) List of header value patterns to match. Maximum size of each pattern is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). If the same header appears multiple times in the request they will be searched in order until a match is found. Only one pattern needs to match for the condition to be satisfied. To require that all of the strings are a match, create one condition block per string.'
            condition.http_request_method: '- (Optional) Contains a single values item which is a list of HTTP request methods or verbs to match. Maximum size is 40 characters. Only allowed characters are A-Z, hyphen (-) and underscore (_). Comparison is case sensitive. Wildcards are not supported. Only one needs to match for the condition to be satisfied. AWS recommends that GET and HEAD requests are routed in the same way because the response to a HEAD request may be cached.'
            condition.path_pattern: '- (Optional) Contains a single values item which is a list of path patterns to match against the request URL. Maximum size of each pattern is 128 characters. Comparison is case sensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). Only one pattern needs to match for the condition to be satisfied. Path pattern is compared only to the path of the URL, not to its query string. To compare against the query string, use a query_string condition.'
            condition.query_string: '- (Optional) Query strings to match. Query String block fields documented below.'
            condition.source_ip: '- (Optional) Contains a single values item which is a list of source IP CIDR notations to match. You can use both IPv4 and IPv6 addresses. Wildcards are not supported. Condition is satisfied if the source IP address of the request matches one of the CIDR blocks. Condition is not satisfied by the addresses in the X-Forwarded-For header, use http_header condition instead.'
            fixed_response.content_type: '- (Required) The content type. Valid values are text/plain, text/css, text/html, application/javascript and application/json.'
            fixed_response.message_body: '- (Optional) The message body.'
            fixed_response.status_code: '- (Optional) The HTTP response code. Valid values are 2XX, 4XX, or 5XX.'
            id: '- The ARN of the rule (matches arn)'
            listener_arn: '- (Required, Forces New Resource) The ARN of the listener to which to attach the rule.'
            priority: '- (Optional) The priority for the rule between 1 and 50000. Leaving it unset will automatically set the rule with next available priority after currently existing highest rule. A listener can''t have multiple rules with the same priority.'
            query_string.values: '- (Required) Query string pairs or values to match. Query String Value blocks documented below. Multiple values blocks can be specified, see example above. Maximum size of each string is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). To search for a literal ''*'' or ''?'' character in a query string, escape the character with a backslash (\). Only one pair needs to match for the condition to be satisfied.'
            query_string.values.key: '- (Optional) Query string key pattern to match.'
            query_string.values.value: '- (Required) Query string value pattern to match.'
            redirect.host: '- (Optional) The hostname. This component is not percent-encoded. The hostname can contain #{host}. Defaults to #{host}.'
            redirect.path: '- (Optional) The absolute path, starting with the leading "/". This component is not percent-encoded. The path can contain #{host}, #{path}, and #{port}. Defaults to /#{path}.'
            redirect.port: '- (Optional) The port. Specify a value from 1 to 65535 or #{port}. Defaults to #{port}.'
            redirect.protocol: '- (Optional) The protocol. Valid values are HTTP, HTTPS, or #{protocol}. Defaults to #{protocol}.'
            redirect.query: '- (Optional) The query parameters, URL-encoded when necessary, but not percent-encoded. Do not include the leading "?". Defaults to #{query}.'
            redirect.status_code: '- (Required) The HTTP redirect code. The redirect is either permanent (HTTP_301) or temporary (HTTP_302).'
            stickiness.duration: '- (Optional) The time period, in seconds, during which requests from a client should be routed to the same target group. The range is 1-604800 seconds (7 days).'
            stickiness.enabled: '- (Required) Indicates whether target group stickiness is enabled.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_lb_ssl_negotiation_policy:
        subCategory: ELB Classic
        description: Provides a load balancer SSL negotiation policy, which allows an ELB to control which ciphers and protocols are supported during SSL negotiations between a client and a load balancer.
        name: aws_lb_ssl_negotiation_policy
        title: aws_lb_ssl_negotiation_policy
        examples:
            - name: foo
              manifest: |-
                {
                  "attribute": [
                    {
                      "name": "Protocol-TLSv1",
                      "value": "false"
                    },
                    {
                      "name": "Protocol-TLSv1.1",
                      "value": "false"
                    },
                    {
                      "name": "Protocol-TLSv1.2",
                      "value": "true"
                    },
                    {
                      "name": "Server-Defined-Cipher-Order",
                      "value": "true"
                    },
                    {
                      "name": "ECDHE-RSA-AES128-GCM-SHA256",
                      "value": "true"
                    },
                    {
                      "name": "AES128-GCM-SHA256",
                      "value": "true"
                    },
                    {
                      "name": "EDH-RSA-DES-CBC3-SHA",
                      "value": "false"
                    }
                  ],
                  "lb_port": 443,
                  "load_balancer": "${aws_elb.lb.id}",
                  "name": "foo-policy"
                }
              references:
                load_balancer: aws_elb.lb.id
              dependencies:
                aws_elb.lb: |-
                    {
                      "availability_zones": [
                        "us-east-1a"
                      ],
                      "listener": [
                        {
                          "instance_port": 8000,
                          "instance_protocol": "https",
                          "lb_port": 443,
                          "lb_protocol": "https",
                          "ssl_certificate_id": "arn:aws:iam::123456789012:server-certificate/certName"
                        }
                      ],
                      "name": "test-lb"
                    }
        argumentDocs:
            attribute: '- (Optional) An SSL Negotiation policy attribute. Each has two properties:'
            id: '- The ID of the policy.'
            lb_port: |-
                - (Required) The load balancer port to which the policy
                should be applied. This must be an active listener on the load
                balancer.
            load_balancer: |-
                - (Required) The load balancer to which the policy
                should be attached.
            name: '- (Required) The name of the SSL negotiation policy.'
            value: '- The value of the attribute'
        importStatements: []
    aws_lb_target_group:
        subCategory: ELB (Elastic Load Balancing)
        description: Provides a Target Group resource for use with Load Balancers.
        name: aws_lb_target_group
        title: aws_lb_target_group
        examples:
            - name: test
              manifest: |-
                {
                  "name": "tf-example-lb-tg",
                  "port": 80,
                  "protocol": "HTTP",
                  "vpc_id": "${aws_vpc.main.id}"
                }
              references:
                vpc_id: aws_vpc.main.id
              dependencies:
                aws_vpc.main: |-
                    {
                      "cidr_block": "10.0.0.0/16"
                    }
            - name: ip-example
              manifest: |-
                {
                  "name": "tf-example-lb-tg",
                  "port": 80,
                  "protocol": "HTTP",
                  "target_type": "ip",
                  "vpc_id": "${aws_vpc.main.id}"
                }
              references:
                vpc_id: aws_vpc.main.id
              dependencies:
                aws_vpc.main: |-
                    {
                      "cidr_block": "10.0.0.0/16"
                    }
            - name: lambda-example
              manifest: |-
                {
                  "name": "tf-example-lb-tg",
                  "target_type": "lambda"
                }
            - name: alb-example
              manifest: |-
                {
                  "name": "tf-example-lb-alb-tg",
                  "port": 80,
                  "protocol": "TCP",
                  "target_type": "alb",
                  "vpc_id": "${aws_vpc.main.id}"
                }
              references:
                vpc_id: aws_vpc.main.id
        argumentDocs:
            HTTP.cookie_duration: '- (Optional) Only used when the type is lb_cookie. The time period, in seconds, during which requests from a client should be routed to the same target. After this time period expires, the load balancer-generated cookie is considered stale. The range is 1 second to 1 week (604800 seconds). The default value is 1 day (86400 seconds).'
            HTTP.cookie_name: '- (Optional) Name of the application based cookie. AWSALB, AWSALBAPP, and AWSALBTG prefixes are reserved and cannot be used. Only needed when type is app_cookie.'
            HTTP.enabled: '- (Optional) Boolean to enable / disable stickiness. Default is true.'
            HTTP.type: '- (Required) The type of sticky sessions. The only current possible values are lb_cookie, app_cookie for ALBs, and source_ip for NLBs.'
            alb: target type.
            arn: '- ARN of the Target Group (matches id).'
            arn_suffix: '- ARN suffix for use with CloudWatch Metrics.'
            connection_termination: '- (Optional) Whether to terminate connections at the end of the deregistration timeout on Network Load Balancers. See doc for more information. Default is false.'
            deregistration_delay: '- (Optional) Amount time for Elastic Load Balancing to wait before changing the state of a deregistering target from draining to unused. The range is 0-3600 seconds. The default value is 300 seconds.'
            health_check: '- (Optional, Maximum of 1) Health Check configuration block. Detailed below.'
            health_check.enabled: '- (Optional) Whether health checks are enabled. Defaults to true.'
            health_check.healthy_threshold: '- (Optional) Number of consecutive health checks successes required before considering an unhealthy target healthy. Defaults to 3.'
            health_check.interval: '- (Optional) Approximate amount of time, in seconds, between health checks of an individual target. Minimum value 5 seconds, Maximum value 300 seconds. For lambda target groups, it needs to be greater as the timeout of the underlying lambda. Default 30 seconds.'
            health_check.matcher: (May be required) Response codes to use when checking for a healthy responses from a target. You can specify multiple values (for example, "200,202" for HTTP(s) or "0,12" for GRPC) or a range of values (for example, "200-299" or "0-99"). Required for HTTP/HTTPS/GRPC ALB. Only applies to Application Load Balancers (i.e., HTTP/HTTPS/GRPC) not Network Load Balancers (i.e., TCP).
            health_check.path: '- (May be required) Destination for the health check request. Required for HTTP/HTTPS ALB and HTTP NLB. Only applies to HTTP/HTTPS.'
            health_check.port: '- (Optional) Port to use to connect with the target. Valid values are either ports 1-65535, or traffic-port. Defaults to traffic-port.'
            health_check.protocol: '- (Optional) Protocol to use to connect with the target. Defaults to HTTP. Not applicable when target_type is lambda.'
            health_check.timeout: '- (Optional) Amount of time, in seconds, during which no response means a failed health check. For Application Load Balancers, the range is 2 to 120 seconds, and the default is 5 seconds for the instance target type and 30 seconds for the lambda target type. For Network Load Balancers, you cannot set a custom value, and the default is 10 seconds for TCP and HTTPS health checks and 6 seconds for HTTP health checks.'
            health_check.unhealthy_threshold: '- (Optional) Number of consecutive health check failures required before considering the target unhealthy. For Network Load Balancers, this value must be the same as the healthy_threshold. Defaults to 3.'
            id: '- ARN of the Target Group (matches arn).'
            ip: ', specify IP addresses from the subnets of the virtual private cloud (VPC) for the target group, the RFC 1918 range (10.0.0.0/8, 172.16.0.0/12, and 192.168.0.0/16), and the RFC 6598 range (100.64.0.0/10). You can''t specify publicly routable IP addresses.'
            lambda: target type.
            lambda_multi_value_headers_enabled: '- (Optional) Whether the request and response headers exchanged between the load balancer and the Lambda function include arrays of values or strings. Only applies when target_type is lambda. Default is false.'
            load_balancing_algorithm_type: '- (Optional) Determines how the load balancer selects targets when routing requests. Only applicable for Application Load Balancer Target Groups. The value is round_robin or least_outstanding_requests. The default is round_robin.'
            name: '- (Optional, Forces new resource) Name of the target group. If omitted, Terraform will assign a random, unique name.'
            name_prefix: '- (Optional, Forces new resource) Creates a unique name beginning with the specified prefix. Conflicts with name. Cannot be longer than 6 characters.'
            port: '- (May be required, Forces new resource) Port on which targets receive traffic, unless overridden when registering a specific target. Required when target_type is instance, ip or alb. Does not apply when target_type is lambda.'
            preserve_client_ip: '- (Optional) Whether client IP preservation is enabled. See doc for more information.'
            protocol: '- (May be required, Forces new resource) Protocol to use for routing traffic to the targets. Should be one of GENEVE, HTTP, HTTPS, TCP, TCP_UDP, TLS, or UDP. Required when target_type is instance, ip or alb. Does not apply when target_type is lambda.'
            protocol_version: '- (Optional, Forces new resource) Only applicable when protocol is HTTP or HTTPS. The protocol version. Specify GRPC to send requests to targets using gRPC. Specify HTTP2 to send requests to targets using HTTP/2. The default is HTTP1, which sends requests to targets using HTTP/1.1'
            proxy_protocol_v2: '- (Optional) Whether to enable support for proxy protocol v2 on Network Load Balancers. See doc for more information. Default is false.'
            slow_start: '- (Optional) Amount time for targets to warm up before the load balancer sends them a full share of requests. The range is 30-900 seconds or 0 to disable. The default value is 0 seconds.'
            stickiness: '- (Optional, Maximum of 1) Stickiness configuration block. Detailed below.'
            tags: '- (Optional) Map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            target_type: '- (May be required, Forces new resource) Type of target that you must specify when registering targets with this target group. See doc for supported values. The default is instance.'
            vpc_id: '- (Optional, Forces new resource) Identifier of the VPC in which to create the target group. Required when target_type is instance, ip or alb. Does not apply when target_type is lambda.'
        importStatements: []
    aws_lb_target_group_attachment:
        subCategory: ELB (Elastic Load Balancing)
        description: Provides the ability to register instances and containers with a LB target group
        name: aws_lb_target_group_attachment
        title: aws_lb_target_group_attachment
        examples:
            - name: test
              manifest: |-
                {
                  "port": 80,
                  "target_group_arn": "${aws_lb_target_group.test.arn}",
                  "target_id": "${aws_instance.test.id}"
                }
              references:
                target_group_arn: aws_lb_target_group.test.arn
                target_id: aws_instance.test.id
              dependencies:
                aws_instance.test: '{}'
                aws_lb_target_group.test: '{}'
            - name: test
              manifest: |-
                {
                  "depends_on": [
                    "${aws_lambda_permission.with_lb}"
                  ],
                  "target_group_arn": "${aws_lb_target_group.test.arn}",
                  "target_id": "${aws_lambda_function.test.arn}"
                }
              references:
                target_group_arn: aws_lb_target_group.test.arn
                target_id: aws_lambda_function.test.arn
              dependencies:
                aws_lambda_function.test: '{}'
                aws_lambda_permission.with_lb: |-
                    {
                      "action": "lambda:InvokeFunction",
                      "function_name": "${aws_lambda_function.test.arn}",
                      "principal": "elasticloadbalancing.amazonaws.com",
                      "source_arn": "${aws_lb_target_group.test.arn}",
                      "statement_id": "AllowExecutionFromlb"
                    }
                aws_lb_target_group.test: |-
                    {
                      "name": "test",
                      "target_type": "lambda"
                    }
        argumentDocs:
            availability_zone: '- (Optional) The Availability Zone where the IP address of the target is to be registered. If the private ip address is outside of the VPC scope, this value must be set to ''all''.'
            id: '- A unique identifier for the attachment'
            port: '- (Optional) The port on which targets receive traffic.'
            target_group_arn: '- (Required) The ARN of the target group with which to register targets'
            target_id: (Required) The ID of the target. This is the Instance ID for an instance, or the container ID for an ECS container. If the target type is ip, specify an IP address. If the target type is lambda, specify the arn of lambda. If the target type is alb, specify the arn of alb.
        importStatements: []
    aws_lex_bot:
        subCategory: Lex Model Building
        description: Provides an Amazon Lex bot resource.
        name: aws_lex_bot
        title: aws_lex_bot
        examples:
            - name: order_flowers_bot
              manifest: |-
                {
                  "abort_statement": [
                    {
                      "message": [
                        {
                          "content": "Sorry, I am not able to assist at this time",
                          "content_type": "PlainText"
                        }
                      ]
                    }
                  ],
                  "child_directed": false,
                  "clarification_prompt": [
                    {
                      "max_attempts": 2,
                      "message": [
                        {
                          "content": "I didn't understand you, what would you like to do?",
                          "content_type": "PlainText"
                        }
                      ]
                    }
                  ],
                  "create_version": false,
                  "description": "Bot to order flowers on the behalf of a user",
                  "idle_session_ttl_in_seconds": 600,
                  "intent": [
                    {
                      "intent_name": "OrderFlowers",
                      "intent_version": "1"
                    }
                  ],
                  "locale": "en-US",
                  "name": "OrderFlowers",
                  "process_behavior": "BUILD",
                  "voice_id": "Salli"
                }
        argumentDocs:
            abort_statement: '- (Required) The message that Amazon Lex uses to abort a conversation. Attributes are documented under statement.'
            checksum: |-
                - Checksum identifying the version of the bot that was created. The checksum is not
                included as an argument because the resource will add it automatically when updating the bot.
            child_directed: '- (Required) By specifying true, you confirm that your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. For more information see the Amazon Lex FAQ and the Amazon Lex PutBot API Docs.'
            clarification_prompt: '- (Required) The message that Amazon Lex uses when it doesn''t understand the user''s request. Attributes are documented under prompt.'
            content: '- (Required) The text of the message.'
            content_type: '- (Required) The content type of the message string.'
            create_version: '- (Optional) Determines if a new bot version is created when the initial resource is created and on each update. Defaults to false.'
            created_date: '- The date when the bot version was created.'
            description: '- (Optional) A description of the bot. Must be less than or equal to 200 characters in length.'
            detect_sentiment: '- (Optional) When set to true user utterances are sent to Amazon Comprehend for sentiment analysis. If you don''t specify detectSentiment, the default is false.'
            enable_model_improvements: '- (Optional) Set to true to enable access to natural language understanding improvements. When you set the enable_model_improvements parameter to true you can use the nlu_intent_confidence_threshold parameter to configure confidence scores. For more information, see Confidence Scores. You can only set the enable_model_improvements parameter in certain Regions. If you set the parameter to true, your bot has access to accuracy improvements. For more information see the Amazon Lex Bot PutBot API Docs.'
            failure_reason: '- If status is FAILED, Amazon Lex provides the reason that it failed to build the bot.'
            group_number: |-
                - (Optional) Identifies the message group that the message belongs to. When a group
                is assigned to a message, Amazon Lex returns one message from each group in the response.
            idle_session_ttl_in_seconds: '- (Optional) The maximum time in seconds that Amazon Lex retains the data gathered in a conversation. Default is 300. Must be a number between 60 and 86400 (inclusive).'
            intent: '- (Required) A set of Intent objects. Each intent represents a command that a user can express. Attributes are documented under intent. Can have up to 250 Intent objects.'
            intent.intent_name: '- (Required) The name of the intent. Must be less than or equal to 100 characters in length.'
            intent.intent_version: '- (Required) The version of the intent. Must be less than or equal to 64 characters in length.'
            last_updated_date: '- The date when the $LATEST version of this bot was updated.'
            locale: '- (Optional) Specifies the target locale for the bot. Any intent used in the bot must be compatible with the locale of the bot. For available locales, see Amazon Lex Bot PutBot API Docs. Default is en-US.'
            max_attempts: '- (Required) The number of times to prompt the user for information.'
            message: |-
                - (Required) A set of messages, each of which provides a message string and its type.
                You can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).
                Attributes are documented under message.
            name: '- (Required) The name of the bot that you want to create, case sensitive. Must be between 2 and 50 characters in length.'
            nlu_intent_confidence_threshold: '- (Optional) Determines the threshold where Amazon Lex will insert the AMAZON.FallbackIntent, AMAZON.KendraSearchIntent, or both when returning alternative intents in a PostContent or PostText response. AMAZON.FallbackIntent and AMAZON.KendraSearchIntent are only inserted if they are configured for the bot. For more information see Amazon Lex Bot PutBot API Docs This value requires enable_model_improvements to be set to true and the default is 0. Must be a float between 0 and 1.'
            process_behavior: '- (Optional) If you set the process_behavior element to BUILD, Amazon Lex builds the bot so that it can be run. If you set the element to SAVE Amazon Lex saves the bot, but doesn''t build it. Default is SAVE.'
            response_card: |-
                - (Optional) The response card. Amazon Lex will substitute session attributes and
                slot values into the response card. For more information, see
                Example: Using a Response Card.
            status: |-
                - When you send a request to create or update a bot, Amazon Lex sets the status response
                element to BUILDING. After Amazon Lex builds the bot, it sets status to READY. If Amazon Lex can't
                build the bot, it sets status to FAILED. Amazon Lex returns the reason for the failure in the
                failure_reason response element.
            timeouts.create: '- (Defaults to 5 mins) Used when creating the bot'
            timeouts.delete: '- (Defaults to 5 mins) Used when deleting the bot'
            timeouts.update: '- (Defaults to 5 mins) Used when updating the bot'
            version: '- The version of the bot.'
            voice_id: '- (Optional) The Amazon Polly voice ID that you want Amazon Lex to use for voice interactions with the user. The locale configured for the voice must match the locale of the bot. For more information, see Available Voices in the Amazon Polly Developer Guide.'
        importStatements: []
    aws_lex_bot_alias:
        subCategory: Lex Model Building
        description: Provides an Amazon Lex Bot Alias resource.
        name: aws_lex_bot_alias
        title: aws_lex_bot_alias
        examples:
            - name: order_flowers_prod
              manifest: |-
                {
                  "bot_name": "OrderFlowers",
                  "bot_version": "1",
                  "description": "Production Version of the OrderFlowers Bot.",
                  "name": "OrderFlowersProd"
                }
        argumentDocs:
            arn: '- The ARN of the bot alias.'
            bot_name: '- (Required) The name of the bot.'
            bot_version: '- (Required) The name of the bot.'
            checksum: '- Checksum of the bot alias.'
            conversation_logs: '- (Optional) The settings that determine how Amazon Lex uses conversation logs for the alias. Attributes are documented under conversation_logs.'
            conversation_logs.iam_role_arn: '- (Required) The Amazon Resource Name (ARN) of the IAM role used to write your logs to CloudWatch Logs or an S3 bucket. Must be between 20 and 2048 characters in length.'
            conversation_logs.log_settings: '- (Optional) The settings for your conversation logs. You can log text, audio, or both. Attributes are documented under log_settings.'
            conversation_logs.log_settings.destination: '- (Required) The destination where logs are delivered. Options are CLOUDWATCH_LOGS or S3.'
            conversation_logs.log_settings.kms_key_arn: '- (Optional) The Amazon Resource Name (ARN) of the key used to encrypt audio logs in an S3 bucket. This can only be specified when destination is set to S3. Must be between 20 and 2048 characters in length.'
            conversation_logs.log_settings.log_type: '- (Required) The type of logging that is enabled. Options are AUDIO or TEXT.'
            conversation_logs.log_settings.resource_arn: '- (Required) The Amazon Resource Name (ARN) of the CloudWatch Logs log group or S3 bucket where the logs are delivered. Must be less than or equal to 2048 characters in length.'
            conversation_logs.log_settings.resource_prefix: '- (Computed) The prefix of the S3 object key for AUDIO logs or the log stream name for TEXT logs.'
            created_date: '- The date that the bot alias was created.'
            description: '- (Optional) A description of the alias. Must be less than or equal to 200 characters in length.'
            last_updated_date: '- The date that the bot alias was updated. When you create a resource, the creation date and the last updated date are the same.'
            name: '- (Required) The name of the alias. The name is not case sensitive. Must be less than or equal to 100 characters in length.'
            timeouts.create: '- (Defaults to 1 mins) Used when creating the bot alias'
            timeouts.delete: '- (Defaults to 5 mins) Used when deleting the bot alias'
            timeouts.update: '- (Defaults to 1 mins) Used when updating the bot alias'
        importStatements: []
    aws_lex_intent:
        subCategory: Lex Model Building
        description: Provides an Amazon Lex intent resource.
        name: aws_lex_intent
        title: aws_lex_intent
        examples:
            - name: order_flowers_intent
              manifest: |-
                {
                  "confirmation_prompt": [
                    {
                      "max_attempts": 2,
                      "message": [
                        {
                          "content": "Okay, your {FlowerType} will be ready for pickup by {PickupTime} on {PickupDate}.  Does this sound okay?",
                          "content_type": "PlainText"
                        }
                      ]
                    }
                  ],
                  "create_version": false,
                  "description": "Intent to order a bouquet of flowers for pick up",
                  "fulfillment_activity": [
                    {
                      "type": "ReturnIntent"
                    }
                  ],
                  "name": "OrderFlowers",
                  "rejection_statement": [
                    {
                      "message": [
                        {
                          "content": "Okay, I will not place your order.",
                          "content_type": "PlainText"
                        }
                      ]
                    }
                  ],
                  "sample_utterances": [
                    "I would like to order some flowers",
                    "I would like to pick up flowers"
                  ],
                  "slot": [
                    {
                      "description": "The type of flowers to pick up",
                      "name": "FlowerType",
                      "priority": 1,
                      "sample_utterances": [
                        "I would like to order {FlowerType}"
                      ],
                      "slot_constraint": "Required",
                      "slot_type": "FlowerTypes",
                      "slot_type_version": "$$LATEST",
                      "value_elicitation_prompt": [
                        {
                          "max_attempts": 2,
                          "message": [
                            {
                              "content": "What type of flowers would you like to order?",
                              "content_type": "PlainText"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "description": "The date to pick up the flowers",
                      "name": "PickupDate",
                      "priority": 2,
                      "sample_utterances": [
                        "I would like to order {FlowerType}"
                      ],
                      "slot_constraint": "Required",
                      "slot_type": "AMAZON.DATE",
                      "slot_type_version": "$$LATEST",
                      "value_elicitation_prompt": [
                        {
                          "max_attempts": 2,
                          "message": [
                            {
                              "content": "What day do you want the {FlowerType} to be picked up?",
                              "content_type": "PlainText"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "description": "The time to pick up the flowers",
                      "name": "PickupTime",
                      "priority": 3,
                      "sample_utterances": [
                        "I would like to order {FlowerType}"
                      ],
                      "slot_constraint": "Required",
                      "slot_type": "AMAZON.TIME",
                      "slot_type_version": "$$LATEST",
                      "value_elicitation_prompt": [
                        {
                          "max_attempts": 2,
                          "message": [
                            {
                              "content": "Pick up the {FlowerType} at what time on {PickupDate}?",
                              "content_type": "PlainText"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
        argumentDocs:
            arn: '- The ARN of the Lex intent.'
            checksum: |-
                - Checksum identifying the version of the intent that was created. The checksum is not
                included as an argument because the resource will add it automatically when updating the intent.
            conclusion_statement: |-
                - (Optional) The statement that you want Amazon Lex to convey to the user
                after the intent is successfully fulfilled by the Lambda function. This element is relevant only if
                you provide a Lambda function in the fulfillment_activity. If you return the intent to the client
                application, you can't specify this element. The follow_up_prompt and conclusion_statement are
                mutually exclusive. You can specify only one. Attributes are documented under statement.
            confirmation_prompt: |-
                - (Optional) Prompts the user to confirm the intent. This question should
                have a yes or no answer. You you must provide both the rejection_statement and confirmation_prompt,
                or neither. Attributes are documented under prompt.
            content: '- (Required) The text of the message. Must be less than or equal to 1000 characters in length.'
            content_type: '- (Required) The content type of the message string.'
            create_version: |-
                - (Optional) Determines if a new slot type version is created when the initial
                resource is created and on each update. Defaults to false.
            created_date: '- The date when the intent version was created.'
            description: '- (Optional) A description of the intent. Must be less than or equal to 200 characters in length.'
            dialog_code_hook: |-
                - (Optional) Specifies a Lambda function to invoke for each user input. You can
                invoke this Lambda function to personalize user interaction. Attributes are documented under code_hook.
            follow_up_prompt: |-
                - (Optional) Amazon Lex uses this prompt to solicit additional activity after
                fulfilling an intent. For example, after the OrderPizza intent is fulfilled, you might prompt the
                user to order a drink. The follow_up_prompt field and the conclusion_statement field are mutually
                exclusive. You can specify only one. Attributes are documented under follow_up_prompt.
            follow_up_prompt.prompt: '- (Required) Prompts for information from the user. Attributes are documented under prompt.'
            follow_up_prompt.prompt.max_attempts: '- (Required) The number of times to prompt the user for information. Must be a number between 1 and 5 (inclusive).'
            follow_up_prompt.prompt.message: |-
                - (Required) A set of messages, each of which provides a message string and its type.
                You can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).
                Attributes are documented under message. Must contain between 1 and 15 messages.
            follow_up_prompt.prompt.response_card: |-
                - (Optional) The response card. Amazon Lex will substitute session attributes and
                slot values into the response card. For more information, see
                Example: Using a Response Card. Must be less than or equal to 50000 characters in length.
            follow_up_prompt.rejection_statement: |-
                - (Optional) If the user answers "no" to the question defined in the prompt field,
                Amazon Lex responds with this statement to acknowledge that the intent was canceled. Attributes are
                documented below under statement.
            fulfillment_activity: |-
                - (Required) Describes how the intent is fulfilled. For example, after a
                user provides all of the information for a pizza order, fulfillment_activity defines how the bot
                places an order with a local pizza store. Attributes are documented under fulfillment_activity.
            fulfillment_activity.code_hook: |-
                - (Optional) A description of the Lambda function that is run to fulfill the intent.
                Required if type is CodeHook. Attributes are documented under code_hook.
            fulfillment_activity.type: |-
                - (Required) How the intent should be fulfilled, either by running a Lambda function or by
                returning the slot data to the client application. Type can be either ReturnIntent or CodeHook, as documented here.
            group_number: |-
                - (Optional) Identifies the message group that the message belongs to. When a group
                is assigned to a message, Amazon Lex returns one message from each group in the response. Must be a number between 1 and 5 (inclusive).
            last_updated_date: '- The date when the $LATEST version of this intent was updated.'
            message: |-
                - (Required) A set of messages, each of which provides a message string and its type.
                You can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).
                Attributes are documented under message. Must contain between 1 and 15 messages.
            message_version: |-
                - (Required) The version of the request-response that you want Amazon Lex to use
                to invoke your Lambda function. For more information, see
                Using Lambda Functions. Must be less than or equal to 5 characters in length.
            name: '- (Required) The name of the intent, not case sensitive. Must be less than or equal to 100 characters in length.'
            parent_intent_signature: |-
                - (Optional) A unique identifier for the built-in intent to base this
                intent on. To find the signature for an intent, see
                Standard Built-in Intents
                in the Alexa Skills Kit.
            rejection_statement: |-
                - (Optional) When the user answers "no" to the question defined in
                confirmation_prompt, Amazon Lex responds with this statement to acknowledge that the intent was
                canceled. You must provide both the rejection_statement and the confirmation_prompt, or neither.
                Attributes are documented under statement.
            response_card: |-
                - (Optional) The response card. Amazon Lex will substitute session attributes and
                slot values into the response card. For more information, see
                Example: Using a Response Card. Must be less than or equal to 50000 characters in length.
            sample_utterances: |-
                - (Optional) An array of utterances (strings) that a user might say to signal
                the intent. For example, "I want {PizzaSize} pizza", "Order {Quantity} {PizzaSize} pizzas".
                In each utterance, a slot name is enclosed in curly braces. Must have between 1 and 10 items in the list, and each item must be less than or equal to 200 characters in length.
            slot: |-
                - (Optional) An list of intent slots. At runtime, Amazon Lex elicits required slot values
                from the user using prompts defined in the slots. Attributes are documented under slot.
            slot.description: '- (Optional) A description of the bot. Must be less than or equal to 200 characters in length.'
            slot.name: '- (Required) The name of the intent slot that you want to create. The name is case sensitive. Must be less than or equal to 100 characters in length.'
            slot.priority: |-
                - (Optional) Directs Lex the order in which to elicit this slot value from the user.
                For example, if the intent has two slots with priorities 1 and 2, AWS Lex first elicits a value for
                the slot with priority 1. If multiple slots share the same priority, the order in which Lex elicits
                values is arbitrary. Must be between 1 and 100.
            slot.response_card: |-
                - (Optional) The response card. Amazon Lex will substitute session attributes and
                slot values into the response card. For more information, see
                Example: Using a Response Card. Must be less than or equal to 50000 characters in length.
            slot.sample_utterances: |-
                - (Optional) If you know a specific pattern with which users might respond to
                an Amazon Lex request for a slot value, you can provide those utterances to improve accuracy. This
                is optional. In most cases, Amazon Lex is capable of understanding user utterances. Must have between 1 and 10 items in the list, and each item must be less than or equal to 200 characters in length.
            slot.slot_constraint: '- (Required) Specifies whether the slot is required or optional.'
            slot.slot_type: |-
                - (Optional) The type of the slot, either a custom slot type that you defined or one of
                the built-in slot types. Must be less than or equal to 100 characters in length.
            slot.slot_type_version: '- (Optional) The version of the slot type. Must be less than or equal to 64 characters in length.'
            slot.value_elicitation_prompt: |-
                - (Optional) The prompt that Amazon Lex uses to elicit the slot value
                from the user. Attributes are documented under prompt.
            timeouts.create: '- (Defaults to 1 min) Used when creating the intent'
            timeouts.delete: '- (Defaults to 5 mins) Used when deleting the intent'
            timeouts.update: '- (Defaults to 1 min) Used when updating the intent'
            uri: '- (Required) The Amazon Resource Name (ARN) of the Lambda function.'
            version: '- The version of the bot.'
        importStatements: []
    aws_lex_slot_type:
        subCategory: Lex Model Building
        description: Provides details about a specific Amazon Lex Slot Type
        name: aws_lex_slot_type
        title: aws_lex_slot_type
        examples:
            - name: flower_types
              manifest: |-
                {
                  "create_version": true,
                  "description": "Types of flowers to order",
                  "enumeration_value": [
                    {
                      "synonyms": [
                        "Lirium",
                        "Martagon"
                      ],
                      "value": "lilies"
                    },
                    {
                      "synonyms": [
                        "Eduardoregelia",
                        "Podonix"
                      ],
                      "value": "tulips"
                    }
                  ],
                  "name": "FlowerTypes",
                  "value_selection_strategy": "ORIGINAL_VALUE"
                }
        argumentDocs:
            checksum: |-
                - Checksum identifying the version of the slot type that was created. The checksum is
                not included as an argument because the resource will add it automatically when updating the slot type.
            create_version: |-
                - (Optional)
                Determines if a new slot type version is created when the initial resource is created and on each
                update. Defaults to false.
            created_date: '- The date when the slot type version was created.'
            description: '- (Optional) A description of the slot type. Must be less than or equal to 200 characters in length.'
            enumeration_value: |-
                - (Required) A list of EnumerationValue objects that defines the values that
                the slot type can take. Each value can have a list of synonyms, which are additional values that help
                train the machine learning model about the values that it resolves for a slot. Attributes are
                documented under enumeration_value.
            enumeration_value.synonyms: '- (Optional) Additional values related to the slot type value. Each item must be less than or equal to 140 characters in length.'
            enumeration_value.value: '- (Required) The value of the slot type. Must be less than or equal to 140 characters in length.'
            last_updated_date: '- The date when the $LATEST version of this slot type was updated.'
            name: '- (Required) The name of the slot type. The name is not case sensitive. Must be less than or equal to 100 characters in length.'
            timeouts.create: '- (Defaults to 1 min) Used when creating the slot type'
            timeouts.delete: '- (Defaults to 5 mins) Used when deleting the slot type'
            timeouts.update: '- (Defaults to 1 min) Used when updating the slot type'
            value_selection_strategy: |-
                - (Optional) Determines the slot resolution strategy that Amazon Lex
                uses to return slot type values. ORIGINAL_VALUE returns the value entered by the user if the user
                value is similar to the slot value. TOP_RESOLUTION returns the first value in the resolution list
                if there is a resolution list for the slot, otherwise null is returned. Defaults to ORIGINAL_VALUE.
            version: '- The version of the slot type.'
        importStatements: []
    aws_licensemanager_association:
        subCategory: License Manager
        description: Provides a License Manager association resource.
        name: aws_licensemanager_association
        title: aws_licensemanager_association
        examples:
            - name: example
              manifest: |-
                {
                  "license_configuration_arn": "${aws_licensemanager_license_configuration.example.arn}",
                  "resource_arn": "${aws_instance.example.arn}"
                }
              references:
                license_configuration_arn: aws_licensemanager_license_configuration.example.arn
                resource_arn: aws_instance.example.arn
              dependencies:
                aws_instance.example: |-
                    {
                      "ami": "${data.aws_ami.example.id}",
                      "instance_type": "t2.micro"
                    }
                aws_licensemanager_license_configuration.example: |-
                    {
                      "license_counting_type": "Instance",
                      "name": "Example"
                    }
        argumentDocs:
            id: '- The license configuration ARN.'
            license_configuration_arn: '- (Required) ARN of the license configuration.'
            resource_arn: '- (Required) ARN of the resource associated with the license configuration.'
        importStatements: []
    aws_licensemanager_license_configuration:
        subCategory: License Manager
        description: Provides a License Manager license configuration resource.
        name: aws_licensemanager_license_configuration
        title: aws_licensemanager_license_configuration
        examples:
            - name: example
              manifest: |-
                {
                  "description": "Example",
                  "license_count": 10,
                  "license_count_hard_limit": true,
                  "license_counting_type": "Socket",
                  "license_rules": [
                    "#minimumSockets=2"
                  ],
                  "name": "Example",
                  "tags": {
                    "foo": "barr"
                  }
                }
        argumentDocs:
            allowedTenancy: '- Defines where the license can be used. If set, restricts license usage to selected tenancies. Specify a comma delimited list of EC2-Default, EC2-DedicatedHost, EC2-DedicatedInstance'
            arn: '- The license configuration ARN.'
            description: '- (Optional) Description of the license configuration.'
            id: '- The license configuration ARN.'
            license_count: '- (Optional) Number of licenses managed by the license configuration.'
            license_count_hard_limit: '- (Optional) Sets the number of available licenses as a hard limit.'
            license_counting_type: '- (Required) Dimension to use to track license inventory. Specify either vCPU, Instance, Core or Socket.'
            license_rules: '- (Optional) Array of configured License Manager rules.'
            maximumCores: '- Resource must have maximum core count in order to use the license. Default: unbounded, limit: 10000'
            maximumSockets: '- Resource must have maximum socket count in order to use the license. Default: unbounded, limit: 10000'
            maximumVcpus: '- Resource must have maximum vCPU count in order to use the license. Default: unbounded, limit: 10000'
            minimumCores: '- Resource must have minimum core count in order to use the license. Default: 1'
            minimumSockets: '- Resource must have minimum socket count in order to use the license. Default: 1'
            minimumVcpus: '- Resource must have minimum vCPU count in order to use the license. Default: 1'
            name: '- (Required) Name of the license configuration.'
            owner_account_id: '- Account ID of the owner of the license configuration.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_lightsail_container_service:
        subCategory: Lightsail
        description: Provides a resource to manage Lightsail container service
        name: aws_lightsail_container_service
        title: aws_lightsail_container_service
        examples:
            - name: my_container_service
              manifest: |-
                {
                  "is_disabled": false,
                  "name": "container-service-1",
                  "power": "nano",
                  "scale": 1,
                  "tags": {
                    "foo1": "bar1",
                    "foo2": ""
                  }
                }
            - name: my_container_service
              manifest: |-
                {
                  "public_domain_names": [
                    {
                      "certificate": [
                        {
                          "certificate_name": "example-certificate",
                          "domain_names": [
                            "www.example.com"
                          ]
                        }
                      ]
                    }
                  ]
                }
        argumentDocs:
            arn: '- The Amazon Resource Name (ARN) of the container service.'
            availability_zone: '- The Availability Zone. Follows the format us-east-2a (case-sensitive).'
            create: '- (Optional, Default: 30m)'
            delete: '- (Optional, Default: 30m)'
            id: '- Same as name.'
            is_disabled: '- (Optional) A Boolean value indicating whether the container service is disabled. Defaults to false.'
            name: |-
                - (Required) The name for the container service. Names must be of length 1 to 63, and be
                unique within each AWS Region in your Lightsail account.
            power: |-
                - (Required) The power specification for the container service. The power specifies the amount of memory,
                the number of vCPUs, and the monthly price of each node of the container service.
                Possible values: nano, micro, small, medium, large, xlarge.
            power_id: '- The ID of the power of the container service.'
            principal_arn: |-
                - The principal ARN of the container service. The principal ARN can be used to create a trust
                relationship between your standard AWS account and your Lightsail container service. This allows you to give your
                service permission to access resources in your standard AWS account.
            private_domain_name: |-
                - The private domain name of the container service. The private domain name is accessible only
                by other resources within the default virtual private cloud (VPC) of your Lightsail account.
            public_domain_names: |-
                - (Optional) The public domain names to use with the container service, such as example.com
                and www.example.com. You can specify up to four public domain names for a container service. The domain names that you
                specify are used when you create a deployment with a container configured as the public endpoint of your container
                service. If you don't specify public domain names, then you can use the default domain of the container service.
                Defined below.
            region_name: '- The AWS Region name.'
            resource_type: '- The Lightsail resource type of the container service (i.e., ContainerService).'
            scale: |-
                - (Required) The scale specification for the container service. The scale specifies the allocated compute
                nodes of the container service.
            state: '- The current state of the container service.'
            tags: |-
                - (Optional) Map of container service tags. To tag at launch, specify the tags in the Launch Template. If
                configured with a provider
                default_tags configuration block
                present, tags with matching keys will overwrite those defined at the provider-level.
            tags_all: |-
                - A map of tags assigned to the resource, including those inherited from the provider
                default_tags configuration block.
            update: '- (Optional, Default: 30m)'
            url: |-
                - The publicly accessible URL of the container service. If no public endpoint is specified in the
                currentDeployment, this URL returns a 404 response.
        importStatements:
            - $ terraform import aws_lightsail_container_service.my_container_service container-service-1
    aws_lightsail_container_service_deployment_version:
        subCategory: Lightsail
        description: Provides a resource to manage a deployment version for your Amazon Lightsail container service.
        name: aws_lightsail_container_service_deployment_version
        title: aws_lightsail_container_service_deployment_version
        examples:
            - name: example
              manifest: |-
                {
                  "container": [
                    {
                      "command": [],
                      "container_name": "hello-world",
                      "environment": {
                        "MY_ENVIRONMENT_VARIABLE": "my_value"
                      },
                      "image": "amazon/amazon-lightsail:hello-world",
                      "ports": {
                        "80": "HTTP"
                      }
                    }
                  ],
                  "public_endpoint": [
                    {
                      "container_name": "hello-world",
                      "container_port": 80,
                      "health_check": [
                        {
                          "healthy_threshold": 2,
                          "interval_seconds": 5,
                          "path": "/",
                          "success_codes": "200-499",
                          "timeout_seconds": 2,
                          "unhealthy_threshold": 2
                        }
                      ]
                    }
                  ],
                  "service_name": "${aws_lightsail_container_service.example.name}"
                }
              references:
                service_name: aws_lightsail_container_service.example.name
        argumentDocs:
            container: '- (Required) A set of configuration blocks that describe the settings of the containers that will be launched on the container service. Maximum of 53. Detailed below.'
            container.command: '- (Optional) The launch command for the container. A list of string.'
            container.container_name: '- (Required) The name for the container.'
            container.environment: '- (Optional) A key-value map of the environment variables of the container.'
            container.image: '- (Required) The name of the image used for the container. Container images sourced from your Lightsail container service, that are registered and stored on your service, start with a colon (:). For example, :container-service-1.mystaticwebsite.1. Container images sourced from a public registry like Docker Hub don''t start with a colon. For example, nginx:latest or nginx.'
            container.ports: '- (Optional) A key-value map of the open firewall ports of the container. Valid values: HTTP, HTTPS, TCP, UDP.'
            create: '- (Optional, Default: 30m)'
            created_at: '- The timestamp when the deployment was created.'
            id: '- The service_name and version separation by a slash (/).'
            public_endpoint: '- (Optional) A configuration block that describes the settings of the public endpoint for the container service. Detailed below.'
            public_endpoint.container_name: '- (Required) The name of the container for the endpoint.'
            public_endpoint.container_port: '- (Required) The port of the container to which traffic is forwarded to.'
            public_endpoint.health_check: '- (Required) A configuration block that describes the health check configuration of the container. Detailed below.'
            public_endpoint.health_check.healthy_threshold: '- (Optional) The number of consecutive health checks successes required before moving the container to the Healthy state. Defaults to 2.'
            public_endpoint.health_check.interval_seconds: '- (Optional) The approximate interval, in seconds, between health checks of an individual container. You can specify between 5 and 300 seconds. Defaults to 5.'
            public_endpoint.health_check.path: '- (Optional) The path on the container on which to perform the health check. Defaults to "/".'
            public_endpoint.health_check.success_codes: '- (Optional) The HTTP codes to use when checking for a successful response from a container. You can specify values between 200 and 499. Defaults to "200-499".'
            public_endpoint.health_check.timeout_seconds: '- (Optional) The amount of time, in seconds, during which no response means a failed health check. You can specify between 2 and 60 seconds. Defaults to 2.'
            public_endpoint.health_check.unhealthy_threshold: '- (Optional) The number of consecutive health checks failures required before moving the container to the Unhealthy state. Defaults to 2.'
            service_name: '- (Required) The name for the container service.'
            state: '- The current state of the container service.'
            version: '- The version number of the deployment.'
        importStatements:
            - $ terraform import aws_lightsail_container_service_deployment_version.example container-service-1/1
    aws_lightsail_database:
        subCategory: Lightsail
        description: Provides a Lightsail Database
        name: aws_lightsail_database
        title: aws_lightsail_database
        examples:
            - name: test
              manifest: |-
                {
                  "availability_zone": "us-east-1a",
                  "blueprint_id": "mysql_8_0",
                  "bundle_id": "micro_1_0",
                  "master_database_name": "testdatabasename",
                  "master_password": "testdatabasepassword",
                  "master_username": "test",
                  "name": "test"
                }
            - name: test
              manifest: |-
                {
                  "availability_zone": "us-east-1a",
                  "blueprint_id": "postgres_12",
                  "bundle_id": "micro_1_0",
                  "master_database_name": "testdatabasename",
                  "master_password": "testdatabasepassword",
                  "master_username": "test",
                  "name": "test"
                }
            - name: test
              manifest: |-
                {
                  "availability_zone": "us-east-1a",
                  "blueprint_id": "postgres_12",
                  "bundle_id": "micro_1_0",
                  "master_database_name": "testdatabasename",
                  "master_password": "testdatabasepassword",
                  "master_username": "test",
                  "name": "test",
                  "preferred_backup_window": "16:00-16:30",
                  "preferred_maintenance_window": "Tue:17:00-Tue:17:30"
                }
            - name: test
              manifest: |-
                {
                  "availability_zone": "us-east-1a",
                  "blueprint_id": "postgres_12",
                  "bundle_id": "micro_1_0",
                  "final_snapshot_name": "MyFinalSnapshot",
                  "master_database_name": "testdatabasename",
                  "master_password": "testdatabasepassword",
                  "master_username": "test",
                  "name": "test",
                  "preferred_backup_window": "16:00-16:30",
                  "preferred_maintenance_window": "Tue:17:00-Tue:17:30"
                }
            - name: test
              manifest: |-
                {
                  "apply_immediately": true,
                  "availability_zone": "us-east-1a",
                  "blueprint_id": "postgres_12",
                  "bundle_id": "micro_1_0",
                  "master_database_name": "testdatabasename",
                  "master_password": "testdatabasepassword",
                  "master_username": "test",
                  "name": "test"
                }
        argumentDocs:
            apply_immediately: '- When true , applies changes immediately. When false , applies changes during the preferred maintenance window. Some changes may cause an outage.'
            arn: '- The ARN of the Lightsail instance (matches id).'
            availability_zone: '- (Required) The Availability Zone in which to create your new database. Use the us-east-2a case-sensitive format.'
            backup_retention_enabled: '- When true, enables automated backup retention for your database. When false, disables automated backup retention for your database. Disabling backup retention deletes all automated database backups. Before disabling this, you may want to create a snapshot of your database.'
            blueprint_id: '- (Required) The blueprint ID for your new database. A blueprint describes the major engine version of a database. You can get a list of database blueprints IDs by using the AWS CLI command: aws lightsail get-relational-database-blueprints'
            bundle_id: '- (Required)  The bundle ID for your new database. A bundle describes the performance specifications for your database (see list below). You can get a list of database bundle IDs by using the AWS CLI command: aws lightsail get-relational-database-bundles.'
            ca_certificate_identifier: '- The certificate associated with the database.'
            cpu_count: '- The number of vCPUs for the database.'
            created_at: '- The timestamp when the instance was created.'
            disk_size: '- The size of the disk for the database.'
            engine: '- The database software (for example, MySQL).'
            engine_version: '- The database engine version (for example, 5.7.23).'
            final_snapshot_name: '- (Required unless skip_final_snapshot = true) The name of the database snapshot created if skip final snapshot is false, which is the default value for that parameter.'
            id: '- The ARN of the Lightsail instance (matches arn).'
            master_database_name: '- (Required) The name of the master database created when the Lightsail database resource is created.'
            master_endpoint_address: '- The master endpoint fqdn for the database.'
            master_endpoint_port: '- The master endpoint network port for the database.'
            master_password: '- (Sensitive) The password for the master user of your new database. The password can include any printable ASCII character except "/", """, or "@".'
            master_username: '- The master user name for your new database.'
            name: '- (Required) The name to use for your new Lightsail database resource. Names be unique within each AWS Region in your Lightsail account.'
            preferred_backup_window: '- The daily time range during which automated backups are created for your new database if automated backups are enabled. Must be in the hh24:mi-hh24:mi format. Example: 16:00-16:30. Specified in Coordinated Universal Time (UTC).'
            preferred_maintenance_window: '- The weekly time range during which system maintenance can occur on your new database. Must be in the ddd:hh24:mi-ddd:hh24:mi format. Specified in Coordinated Universal Time (UTC). Example: Tue:17:00-Tue:17:30'
            publicly_accessible: '- Specifies the accessibility options for your new database. A value of true specifies a database that is available to resources outside of your Lightsail account. A value of false specifies a database that is available only to your Lightsail resources in the same region as your database.'
            ram_size: '- The amount of RAM in GB for the database.'
            secondary_availability_zone: '- Describes the secondary Availability Zone of a high availability database. The secondary database is used for failover support of a high availability database.'
            skip_final_snapshot: '- Determines whether a final database snapshot is created before your database is deleted. If true is specified, no database snapshot is created. If false is specified, a database snapshot is created before your database is deleted. You must specify the final relational database snapshot name parameter if the skip final snapshot parameter is false.'
            support_code: '- The support code for the database. Include this code in your email to support when you have questions about a database in Lightsail. This code enables our support team to look up your Lightsail information more easily.'
            tags: '- (Optional) A map of tags to assign to the resource. To create a key-only tag, use an empty string as the value.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_lightsail_domain:
        subCategory: Lightsail
        description: Provides an Lightsail Domain
        name: aws_lightsail_domain
        title: aws_lightsail_domain
        examples:
            - name: domain_test
              manifest: |-
                {
                  "domain_name": "mydomain.com"
                }
        argumentDocs:
            arn: '- The ARN of the Lightsail domain'
            domain_name: '- (Required) The name of the Lightsail domain to manage'
            id: '- The name used for this domain'
        importStatements: []
    aws_lightsail_instance:
        subCategory: Lightsail
        description: Provides an Lightsail Instance
        name: aws_lightsail_instance
        title: aws_lightsail_instance
        examples:
            - name: gitlab_test
              manifest: |-
                {
                  "availability_zone": "us-east-1b",
                  "blueprint_id": "string",
                  "bundle_id": "string",
                  "key_pair_name": "some_key_name",
                  "name": "custom_gitlab",
                  "tags": {
                    "foo": "bar"
                  }
                }
        argumentDocs:
            arn: '- The ARN of the Lightsail instance (matches id).'
            availability_zone: |-
                - (Required) The Availability Zone in which to create your
                instance (see list below)
            blueprint_id: '- (Required) The ID for a virtual private server image. A list of available blueprint IDs can be obtained using the AWS CLI command: aws lightsail get-blueprints'
            bundle_id: '- (Required) The bundle of specification information (see list below)'
            cpu_count: '- The number of vCPUs the instance has.'
            created_at: '- The timestamp when the instance was created.'
            id: '- The ARN of the Lightsail instance (matches arn).'
            ipv6_address: '- (Deprecated) The first IPv6 address of the Lightsail instance. Use ipv6_addresses attribute instead.'
            ipv6_addresses: '- List of IPv6 addresses for the Lightsail instance.'
            is_static_ip: '- A Boolean value indicating whether this instance has a static IP assigned to it.'
            key_pair_name: |-
                - (Optional) The name of your key pair. Created in the
                Lightsail console (cannot use aws_key_pair at this time)
            name: '- (Required) The name of the Lightsail Instance. Names be unique within each AWS Region in your Lightsail account.'
            private_ip_address: '- The private IP address of the instance.'
            public_ip_address: '- The public IP address of the instance.'
            ram_size: '- The amount of RAM in GB on the instance (e.g., 1.0).'
            tags: '- (Optional) A map of tags to assign to the resource. To create a key-only tag, use an empty string as the value. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            user_data: '- (Optional) launch script to configure server with additional user data'
            username: '- The user name for connecting to the instance (e.g., ec2-user).'
        importStatements: []
    aws_lightsail_instance_public_ports:
        subCategory: Lightsail
        description: Provides an Lightsail Instance
        name: aws_lightsail_instance_public_ports
        title: aws_lightsail_instance_public_ports
        examples:
            - name: test
              manifest: |-
                {
                  "instance_name": "${aws_lightsail_instance.test.name}",
                  "port_info": [
                    {
                      "from_port": 80,
                      "protocol": "tcp",
                      "to_port": 80
                    }
                  ]
                }
              references:
                instance_name: aws_lightsail_instance.test.name
              dependencies:
                aws_lightsail_instance.test: |-
                    {
                      "availability_zone": "${data.aws_availability_zones.available.names[0]}",
                      "blueprint_id": "amazon_linux",
                      "bundle_id": "nano_1_0",
                      "name": "yak_sail"
                    }
        argumentDocs:
            id: '- ID of the resource.'
            instance_name: '- (Required) Name of the Lightsail Instance.'
            port_info: '- (Required) Configuration block with port information. AWS closes all currently open ports that are not included in the port_info. Detailed below.'
            port_info.cidrs: '- (Optional) Set of CIDR blocks.'
            port_info.from_port: '- (Required) First port in a range of open ports on an instance.'
            port_info.protocol: '- (Required) IP protocol name. Valid values are tcp, all, udp, and icmp.'
            port_info.to_port: '- (Required) Last port in a range of open ports on an instance.'
        importStatements: []
    aws_lightsail_key_pair:
        subCategory: Lightsail
        description: Provides an Lightsail Key Pair
        name: aws_lightsail_key_pair
        title: aws_lightsail_key_pair
        examples:
            - name: lg_key_pair
              manifest: |-
                {
                  "name": "lg_key_pair"
                }
            - name: lg_key_pair
              manifest: |-
                {
                  "name": "lg_key_pair",
                  "pgp_key": "keybase:keybaseusername"
                }
            - name: lg_key_pair
              manifest: |-
                {
                  "name": "importing",
                  "public_key": "${file(\"~/.ssh/id_rsa.pub\")}"
                }
        argumentDocs:
            arn: '- The ARN of the Lightsail key pair'
            encrypted_fingerprint: |-
                - The MD5 public key fingerprint for the encrypted
                private key
            encrypted_private_key: |-
                – the private key material, base 64 encoded and
                encrypted with the given pgp_key. This is only populated when creating a new
                key and pgp_key is supplied
            fingerprint: '- The MD5 public key fingerprint as specified in section 4 of RFC 4716.'
            id: '- The name used for this key pair'
            name: |-
                - (Optional) The name of the Lightsail Key Pair. If omitted, a unique
                name will be generated by Terraform
            pgp_key: |-
                – (Optional) An optional PGP key to encrypt the resulting private
                key material. Only used when creating a new key pair
            private_key: |-
                - the private key, base64 encoded. This is only populated
                when creating a new key, and when no pgp_key is provided
            public_key: |-
                - (Required) The public key material. This public key will be
                imported into Lightsail
        importStatements: []
    aws_lightsail_static_ip:
        subCategory: Lightsail
        description: Provides an Lightsail Static IP
        name: aws_lightsail_static_ip
        title: aws_lightsail_static_ip
        examples:
            - name: test
              manifest: |-
                {
                  "name": "example"
                }
        argumentDocs:
            arn: '- The ARN of the Lightsail static IP'
            ip_address: '- The allocated static IP address'
            name: '- (Required) The name for the allocated static IP'
            support_code: '- The support code.'
        importStatements: []
    aws_lightsail_static_ip_attachment:
        subCategory: Lightsail
        description: Provides an Lightsail Static IP Attachment
        name: aws_lightsail_static_ip_attachment
        title: aws_lightsail_static_ip_attachment
        examples:
            - name: test
              manifest: |-
                {
                  "instance_name": "${aws_lightsail_instance.test.id}",
                  "static_ip_name": "${aws_lightsail_static_ip.test.id}"
                }
              references:
                instance_name: aws_lightsail_instance.test.id
                static_ip_name: aws_lightsail_static_ip.test.id
              dependencies:
                aws_lightsail_instance.test: |-
                    {
                      "availability_zone": "us-east-1b",
                      "blueprint_id": "string",
                      "bundle_id": "string",
                      "key_pair_name": "some_key_name",
                      "name": "example"
                    }
                aws_lightsail_static_ip.test: |-
                    {
                      "name": "example"
                    }
        argumentDocs:
            instance_name: '- (Required) The name of the Lightsail instance to attach the IP to'
            ip_address: '- The allocated static IP address'
            static_ip_name: '- (Required) The name of the allocated static IP'
        importStatements: []
    aws_load_balancer_backend_server_policy:
        subCategory: ELB Classic
        description: Attaches a load balancer policy to an ELB backend server.
        name: aws_load_balancer_backend_server_policy
        title: aws_load_balancer_backend_server_policy
        examples:
            - name: wu-tang-backend-auth-policies-443
              manifest: |-
                {
                  "instance_port": 443,
                  "load_balancer_name": "${aws_elb.wu-tang.name}",
                  "policy_names": [
                    "${aws_load_balancer_policy.wu-tang-root-ca-backend-auth-policy.policy_name}"
                  ]
                }
              references:
                load_balancer_name: aws_elb.wu-tang.name
              dependencies:
                aws_elb.wu-tang: |-
                    {
                      "availability_zones": [
                        "us-east-1a"
                      ],
                      "listener": [
                        {
                          "instance_port": 443,
                          "instance_protocol": "http",
                          "lb_port": 443,
                          "lb_protocol": "https",
                          "ssl_certificate_id": "arn:aws:iam::000000000000:server-certificate/wu-tang.net"
                        }
                      ],
                      "name": "wu-tang",
                      "tags": {
                        "Name": "wu-tang"
                      }
                    }
                aws_load_balancer_policy.wu-tang-ca-pubkey-policy: |-
                    {
                      "load_balancer_name": "${aws_elb.wu-tang.name}",
                      "policy_attribute": [
                        {
                          "name": "PublicKey",
                          "value": "${file(\"wu-tang-pubkey\")}"
                        }
                      ],
                      "policy_name": "wu-tang-ca-pubkey-policy",
                      "policy_type_name": "PublicKeyPolicyType"
                    }
                aws_load_balancer_policy.wu-tang-root-ca-backend-auth-policy: |-
                    {
                      "load_balancer_name": "${aws_elb.wu-tang.name}",
                      "policy_attribute": [
                        {
                          "name": "PublicKeyPolicyName",
                          "value": "${aws_load_balancer_policy.wu-tang-root-ca-pubkey-policy.policy_name}"
                        }
                      ],
                      "policy_name": "wu-tang-root-ca-backend-auth-policy",
                      "policy_type_name": "BackendServerAuthenticationPolicyType"
                    }
        argumentDocs:
            id: '- The ID of the policy.'
            instance_port: '- (Required) The instance port to apply the policy to.'
            load_balancer_name: '- (Required) The load balancer to attach the policy to.'
            policy_names: '- (Required) List of Policy Names to apply to the backend server.'
        importStatements: []
    aws_load_balancer_listener_policy:
        subCategory: ELB Classic
        description: Attaches a load balancer policy to an ELB Listener.
        name: aws_load_balancer_listener_policy
        title: aws_load_balancer_listener_policy
        examples:
            - name: wu-tang-listener-policies-443
              manifest: |-
                {
                  "load_balancer_name": "${aws_elb.wu-tang.name}",
                  "load_balancer_port": 443,
                  "policy_names": [
                    "${aws_load_balancer_policy.wu-tang-ssl.policy_name}"
                  ]
                }
              references:
                load_balancer_name: aws_elb.wu-tang.name
              dependencies:
                aws_elb.wu-tang: |-
                    {
                      "availability_zones": [
                        "us-east-1a"
                      ],
                      "listener": [
                        {
                          "instance_port": 443,
                          "instance_protocol": "http",
                          "lb_port": 443,
                          "lb_protocol": "https",
                          "ssl_certificate_id": "arn:aws:iam::000000000000:server-certificate/wu-tang.net"
                        }
                      ],
                      "name": "wu-tang",
                      "tags": {
                        "Name": "wu-tang"
                      }
                    }
                aws_load_balancer_policy.wu-tang-ssl: |-
                    {
                      "load_balancer_name": "${aws_elb.wu-tang.name}",
                      "policy_attribute": [
                        {
                          "name": "ECDHE-ECDSA-AES128-GCM-SHA256",
                          "value": "true"
                        },
                        {
                          "name": "Protocol-TLSv1.2",
                          "value": "true"
                        }
                      ],
                      "policy_name": "wu-tang-ssl",
                      "policy_type_name": "SSLNegotiationPolicyType"
                    }
            - name: wu-tang-listener-policies-443
              manifest: |-
                {
                  "load_balancer_name": "${aws_elb.wu-tang.name}",
                  "load_balancer_port": 443,
                  "policy_names": [
                    "${aws_load_balancer_policy.wu-tang-ssl-tls-1-1.policy_name}"
                  ]
                }
              references:
                load_balancer_name: aws_elb.wu-tang.name
              dependencies:
                aws_elb.wu-tang: |-
                    {
                      "availability_zones": [
                        "us-east-1a"
                      ],
                      "listener": [
                        {
                          "instance_port": 443,
                          "instance_protocol": "http",
                          "lb_port": 443,
                          "lb_protocol": "https",
                          "ssl_certificate_id": "arn:aws:iam::000000000000:server-certificate/wu-tang.net"
                        }
                      ],
                      "name": "wu-tang",
                      "tags": {
                        "Name": "wu-tang"
                      }
                    }
                aws_load_balancer_policy.wu-tang-ssl-tls-1-1: |-
                    {
                      "load_balancer_name": "${aws_elb.wu-tang.name}",
                      "policy_attribute": [
                        {
                          "name": "Reference-Security-Policy",
                          "value": "ELBSecurityPolicy-TLS-1-1-2017-01"
                        }
                      ],
                      "policy_name": "wu-tang-ssl",
                      "policy_type_name": "SSLNegotiationPolicyType"
                    }
        argumentDocs:
            id: '- The ID of the policy.'
            load_balancer_name: '- (Required) The load balancer to attach the policy to.'
            load_balancer_port: '- (Required) The load balancer listener port to apply the policy to.'
            policy_names: '- (Required) List of Policy Names to apply to the backend server.'
        importStatements: []
    aws_load_balancer_policy:
        subCategory: ELB Classic
        description: Provides a load balancer policy, which can be attached to an ELB listener or backend server.
        name: aws_load_balancer_policy
        title: aws_load_balancer_policy
        examples:
            - name: wu-tang-ca-pubkey-policy
              manifest: |-
                {
                  "load_balancer_name": "${aws_elb.wu-tang.name}",
                  "policy_attribute": [
                    {
                      "name": "PublicKey",
                      "value": "${file(\"wu-tang-pubkey\")}"
                    }
                  ],
                  "policy_name": "wu-tang-ca-pubkey-policy",
                  "policy_type_name": "PublicKeyPolicyType"
                }
              references:
                load_balancer_name: aws_elb.wu-tang.name
              dependencies:
                aws_elb.wu-tang: |-
                    {
                      "availability_zones": [
                        "us-east-1a"
                      ],
                      "listener": [
                        {
                          "instance_port": 443,
                          "instance_protocol": "http",
                          "lb_port": 443,
                          "lb_protocol": "https",
                          "ssl_certificate_id": "arn:aws:iam::000000000000:server-certificate/wu-tang.net"
                        }
                      ],
                      "name": "wu-tang",
                      "tags": {
                        "Name": "wu-tang"
                      }
                    }
                aws_load_balancer_backend_server_policy.wu-tang-backend-auth-policies-443: |-
                    {
                      "instance_port": 443,
                      "load_balancer_name": "${aws_elb.wu-tang.name}",
                      "policy_names": [
                        "${aws_load_balancer_policy.wu-tang-root-ca-backend-auth-policy.policy_name}"
                      ]
                    }
                aws_load_balancer_listener_policy.wu-tang-listener-policies-443: |-
                    {
                      "load_balancer_name": "${aws_elb.wu-tang.name}",
                      "load_balancer_port": 443,
                      "policy_names": [
                        "${aws_load_balancer_policy.wu-tang-ssl.policy_name}"
                      ]
                    }
            - name: wu-tang-root-ca-backend-auth-policy
              manifest: |-
                {
                  "load_balancer_name": "${aws_elb.wu-tang.name}",
                  "policy_attribute": [
                    {
                      "name": "PublicKeyPolicyName",
                      "value": "${aws_load_balancer_policy.wu-tang-root-ca-pubkey-policy.policy_name}"
                    }
                  ],
                  "policy_name": "wu-tang-root-ca-backend-auth-policy",
                  "policy_type_name": "BackendServerAuthenticationPolicyType"
                }
              references:
                load_balancer_name: aws_elb.wu-tang.name
                policy_attribute.value: aws_load_balancer_policy.wu-tang-root-ca-pubkey-policy.policy_name
              dependencies:
                aws_elb.wu-tang: |-
                    {
                      "availability_zones": [
                        "us-east-1a"
                      ],
                      "listener": [
                        {
                          "instance_port": 443,
                          "instance_protocol": "http",
                          "lb_port": 443,
                          "lb_protocol": "https",
                          "ssl_certificate_id": "arn:aws:iam::000000000000:server-certificate/wu-tang.net"
                        }
                      ],
                      "name": "wu-tang",
                      "tags": {
                        "Name": "wu-tang"
                      }
                    }
                aws_load_balancer_backend_server_policy.wu-tang-backend-auth-policies-443: |-
                    {
                      "instance_port": 443,
                      "load_balancer_name": "${aws_elb.wu-tang.name}",
                      "policy_names": [
                        "${aws_load_balancer_policy.wu-tang-root-ca-backend-auth-policy.policy_name}"
                      ]
                    }
                aws_load_balancer_listener_policy.wu-tang-listener-policies-443: |-
                    {
                      "load_balancer_name": "${aws_elb.wu-tang.name}",
                      "load_balancer_port": 443,
                      "policy_names": [
                        "${aws_load_balancer_policy.wu-tang-ssl.policy_name}"
                      ]
                    }
            - name: wu-tang-ssl
              manifest: |-
                {
                  "load_balancer_name": "${aws_elb.wu-tang.name}",
                  "policy_attribute": [
                    {
                      "name": "ECDHE-ECDSA-AES128-GCM-SHA256",
                      "value": "true"
                    },
                    {
                      "name": "Protocol-TLSv1.2",
                      "value": "true"
                    }
                  ],
                  "policy_name": "wu-tang-ssl",
                  "policy_type_name": "SSLNegotiationPolicyType"
                }
              references:
                load_balancer_name: aws_elb.wu-tang.name
              dependencies:
                aws_elb.wu-tang: |-
                    {
                      "availability_zones": [
                        "us-east-1a"
                      ],
                      "listener": [
                        {
                          "instance_port": 443,
                          "instance_protocol": "http",
                          "lb_port": 443,
                          "lb_protocol": "https",
                          "ssl_certificate_id": "arn:aws:iam::000000000000:server-certificate/wu-tang.net"
                        }
                      ],
                      "name": "wu-tang",
                      "tags": {
                        "Name": "wu-tang"
                      }
                    }
                aws_load_balancer_backend_server_policy.wu-tang-backend-auth-policies-443: |-
                    {
                      "instance_port": 443,
                      "load_balancer_name": "${aws_elb.wu-tang.name}",
                      "policy_names": [
                        "${aws_load_balancer_policy.wu-tang-root-ca-backend-auth-policy.policy_name}"
                      ]
                    }
                aws_load_balancer_listener_policy.wu-tang-listener-policies-443: |-
                    {
                      "load_balancer_name": "${aws_elb.wu-tang.name}",
                      "load_balancer_port": 443,
                      "policy_names": [
                        "${aws_load_balancer_policy.wu-tang-ssl.policy_name}"
                      ]
                    }
            - name: wu-tang-ssl-tls-1-1
              manifest: |-
                {
                  "load_balancer_name": "${aws_elb.wu-tang.name}",
                  "policy_attribute": [
                    {
                      "name": "Reference-Security-Policy",
                      "value": "ELBSecurityPolicy-TLS-1-1-2017-01"
                    }
                  ],
                  "policy_name": "wu-tang-ssl",
                  "policy_type_name": "SSLNegotiationPolicyType"
                }
              references:
                load_balancer_name: aws_elb.wu-tang.name
              dependencies:
                aws_elb.wu-tang: |-
                    {
                      "availability_zones": [
                        "us-east-1a"
                      ],
                      "listener": [
                        {
                          "instance_port": 443,
                          "instance_protocol": "http",
                          "lb_port": 443,
                          "lb_protocol": "https",
                          "ssl_certificate_id": "arn:aws:iam::000000000000:server-certificate/wu-tang.net"
                        }
                      ],
                      "name": "wu-tang",
                      "tags": {
                        "Name": "wu-tang"
                      }
                    }
                aws_load_balancer_backend_server_policy.wu-tang-backend-auth-policies-443: |-
                    {
                      "instance_port": 443,
                      "load_balancer_name": "${aws_elb.wu-tang.name}",
                      "policy_names": [
                        "${aws_load_balancer_policy.wu-tang-root-ca-backend-auth-policy.policy_name}"
                      ]
                    }
                aws_load_balancer_listener_policy.wu-tang-listener-policies-443: |-
                    {
                      "load_balancer_name": "${aws_elb.wu-tang.name}",
                      "load_balancer_port": 443,
                      "policy_names": [
                        "${aws_load_balancer_policy.wu-tang-ssl.policy_name}"
                      ]
                    }
        argumentDocs:
            id: '- The ID of the policy.'
            load_balancer_name: '- (Required) The load balancer on which the policy is defined.'
            policy_attribute: '- (Optional) Policy attribute to apply to the policy.'
            policy_name: '- (Required) The name of the load balancer policy.'
            policy_type_name: '- (Required) The policy type.'
        importStatements: []
    aws_location_map:
        subCategory: Location
        description: Provides a Location Service Map.
        name: aws_location_map
        title: aws_location_map
        examples:
            - name: example
              manifest: |-
                {
                  "configuration": [
                    {
                      "style": "VectorHereBerlin"
                    }
                  ],
                  "map_name": "example"
                }
        argumentDocs:
            configuration: '- (Required) Configuration block with the map style selected from an available data provider. Detailed below.'
            configuration.style: '- (Required) Specifies the map style selected from an available data provider. Valid values can be found in the Location Service CreateMap API Reference.'
            create_time: '- The timestamp for when the map resource was created in ISO 8601 format.'
            description: '- (Optional) An optional description for the map resource.'
            map_arn: '- The Amazon Resource Name (ARN) for the map resource. Used to specify a resource across all AWS.'
            map_name: '- (Required) The name for the map resource.'
            tags: '- (Optional) Key-value tags for the map. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            update_time: '- The timestamp for when the map resource was last updated in ISO 8601 format.'
        importStatements: []
    aws_location_place_index:
        subCategory: Location
        description: Provides a Location Service Place Index.
        name: aws_location_place_index
        title: aws_location_place_index
        examples:
            - name: example
              manifest: |-
                {
                  "data_source": "Here",
                  "index_name": "example"
                }
        argumentDocs:
            create_time: '- The timestamp for when the place index resource was created in ISO 8601 format.'
            data_source: '- (Required) Specifies the geospatial data provider for the new place index.'
            data_source_configuration: '- (Optional) Configuration block with the data storage option chosen for requesting Places. Detailed below.'
            data_source_configuration.intended_use: '- (Optional) Specifies how the results of an operation will be stored by the caller. Valid values: SingleUse, Storage. Default: SingleUse.'
            description: '- (Optional) The optional description for the place index resource.'
            index_arn: '- The Amazon Resource Name (ARN) for the place index resource. Used to specify a resource across AWS.'
            index_name: '- (Required) The name of the place index resource.'
            tags: '- (Optional) Key-value tags for the place index. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            update_time: '- The timestamp for when the place index resource was last update in ISO 8601.'
        importStatements: []
    aws_location_route_calculator:
        subCategory: Location
        description: Provides a Location Service Route Calculator.
        name: aws_location_route_calculator
        title: aws_location_route_calculator
        examples:
            - name: example
              manifest: |-
                {
                  "calculator_name": "example",
                  "data_source": "Here"
                }
        argumentDocs:
            calculator_arn: '- The Amazon Resource Name (ARN) for the Route calculator resource. Use the ARN when you specify a resource across AWS.'
            calculator_name: '- (Required) The name of the route calculator resource.'
            create: '- (Optional, Default: 30m)'
            create_time: '- The timestamp for when the route calculator resource was created in ISO 8601 format.'
            data_source: '- (Required) Specifies the data provider of traffic and road network data.'
            delete: '- (Optional, Default: 30m)'
            description: '- (Optional) The optional description for the route calculator resource.'
            tags: '- (Optional) Key-value tags for the route calculator. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            update: '- (Optional, Default: 30m)'
            update_time: '- The timestamp for when the route calculator resource was last update in ISO 8601.'
        importStatements: []
    aws_location_tracker:
        subCategory: Location
        description: Provides a Location Service Tracker.
        name: aws_location_tracker
        title: aws_location_tracker
        examples:
            - name: example
              manifest: |-
                {
                  "tracker_name": "example"
                }
        argumentDocs:
            create_time: '- The timestamp for when the tracker resource was created in ISO 8601 format.'
            description: '- (Optional) The optional description for the tracker resource.'
            kms_key_id: '- (Optional) A key identifier for an AWS KMS customer managed key assigned to the Amazon Location resource.'
            position_filtering: '- (Optional) The position filtering method of the tracker resource. Valid values: TimeBased, DistanceBased, AccuracyBased. Default: TimeBased.'
            tags: '- (Optional) Key-value tags for the tracker. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            tracker_arn: '- The Amazon Resource Name (ARN) for the tracker resource. Used when you need to specify a resource across all AWS.'
            tracker_name: '- (Required) The name of the tracker resource.'
            update_time: '- The timestamp for when the tracker resource was last update in ISO 8601 format.'
        importStatements: []
    aws_macie_member_account_association:
        subCategory: Macie Classic
        description: Associates an AWS account with Amazon Macie as a member account.
        name: aws_macie_member_account_association
        title: aws_macie_member_account_association
        examples:
            - name: example
              manifest: |-
                {
                  "member_account_id": "123456789012"
                }
        argumentDocs:
            id: '- The ID of the association.'
            member_account_id: '- (Required) The ID of the AWS account that you want to associate with Amazon Macie as a member account.'
        importStatements: []
    aws_macie_s3_bucket_association:
        subCategory: Macie Classic
        description: Associates an S3 resource with Amazon Macie for monitoring and data classification.
        name: aws_macie_s3_bucket_association
        title: aws_macie_s3_bucket_association
        examples:
            - name: example
              manifest: |-
                {
                  "bucket_name": "tf-macie-example",
                  "classification_type": [
                    {
                      "one_time": "FULL"
                    }
                  ],
                  "prefix": "data"
                }
        argumentDocs:
            bucket_name: '- (Required) The name of the S3 bucket that you want to associate with Amazon Macie.'
            classification_type: '- (Optional) The configuration of how Amazon Macie classifies the S3 objects.'
            continuous: |-
                - (Optional) A string value indicating that Macie perform a one-time classification of all of the existing objects in the bucket.
                The only valid value is the default value, FULL.
            id: '- The ID of the association.'
            member_account_id: '- (Optional) The ID of the Amazon Macie member account whose S3 resources you want to associate with Macie. If member_account_id isn''t specified, the action associates specified S3 resources with Macie for the current master account.'
            one_time: |-
                - (Optional) A string value indicating whether or not Macie performs a one-time classification of all of the existing objects in the bucket.
                Valid values are NONE and FULL. Defaults to NONE indicating that Macie only classifies objects that are added after the association was created.
            prefix: '- (Optional) Object key prefix identifying one or more S3 objects to which the association applies.'
        importStatements: []
    aws_macie2_account:
        subCategory: Macie
        description: Provides a resource to manage Amazon Macie on an AWS Account.
        name: aws_macie2_account
        title: aws_macie2_account
        examples:
            - name: test
              manifest: |-
                {
                  "finding_publishing_frequency": "FIFTEEN_MINUTES",
                  "status": "ENABLED"
                }
        argumentDocs:
            created_at: '- The date and time, in UTC and extended RFC 3339 format, when the Amazon Macie account was created.'
            finding_publishing_frequency: '-  (Optional) Specifies how often to publish updates to policy findings for the account. This includes publishing updates to AWS Security Hub and Amazon EventBridge (formerly called Amazon CloudWatch Events). Valid values are FIFTEEN_MINUTES, ONE_HOUR or SIX_HOURS.'
            id: '- The unique identifier (ID) of the macie account.'
            service_role: '- The Amazon Resource Name (ARN) of the service-linked role that allows Macie to monitor and analyze data in AWS resources for the account.'
            status: '- (Optional) Specifies the status for the account. To enable Amazon Macie and start all Macie activities for the account, set this value to ENABLED. Valid values are ENABLED or PAUSED.'
            updated_at: '- The date and time, in UTC and extended RFC 3339 format, of the most recent change to the status of the Macie account.'
        importStatements: []
    aws_macie2_classification_job:
        subCategory: Macie
        description: Provides a resource to manage an AWS Macie Classification Job.
        name: aws_macie2_classification_job
        title: aws_macie2_classification_job
        examples:
            - name: test
              manifest: |-
                {
                  "depends_on": [
                    "${aws_macie2_account.test}"
                  ],
                  "job_type": "ONE_TIME",
                  "name": "NAME OF THE CLASSIFICATION JOB",
                  "s3_job_definition": [
                    {
                      "bucket_definitions": [
                        {
                          "account_id": "ACCOUNT ID",
                          "buckets": [
                            "S3 BUCKET NAME"
                          ]
                        }
                      ]
                    }
                  ]
                }
              dependencies:
                aws_macie2_account.test: '{}'
        argumentDocs:
            account_id: '-  (Required) The unique identifier for the AWS account that owns the buckets.'
            and: '-  (Optional) An array of conditions, one for each condition that determines which objects to include or exclude from the job. (documented below)'
            bucket_definitions: '-  (Optional) An array of objects, one for each AWS account that owns buckets to analyze. Each object specifies the account ID for an account and one or more buckets to analyze for the account. (documented below)'
            buckets: '-  (Required) An array that lists the names of the buckets.'
            comparator: '-  (Optional) The operator to use in a condition. Valid values are: EQ, GT, GTE, LT, LTE, NE, CONTAINS, STARTS_WITH'
            created_at: '-  The date and time, in UTC and extended RFC 3339 format, when the job was created.'
            custom_data_identifier_ids: '-  (Optional) The custom data identifiers to use for data analysis and classification.'
            daily_schedule: '-  (Optional) Specifies a daily recurrence pattern for running the job.'
            description: '-  (Optional) A custom description of the job. The description can contain as many as 200 characters.'
            excludes: '-  (Optional) The property- or tag-based conditions that determine which objects to exclude from the analysis. (documented below)'
            id: '- The unique identifier (ID) of the macie classification job.'
            includes: '-  (Optional) The property- or tag-based conditions that determine which objects to include in the analysis. (documented below)'
            initial_run: '-  (Optional) Specifies whether to analyze all existing, eligible objects immediately after the job is created.'
            job_status: '-  (Optional) The status for the job. Valid values are: CANCELLED, RUNNING and USER_PAUSED'
            job_type: '-  (Required) The schedule for running the job. Valid values are: ONE_TIME - Run the job only once. If you specify this value, don''t specify a value for the schedule_frequency property. SCHEDULED - Run the job on a daily, weekly, or monthly basis. If you specify this value, use the schedule_frequency property to define the recurrence pattern for the job.'
            key: '-  (Optional) The object property to use in the condition.'
            monthly_schedule: '-  (Optional) Specifies a monthly recurrence pattern for running the job.'
            name: '-  (Optional) A custom name for the job. The name can contain as many as 500 characters. If omitted, Terraform will assign a random, unique name. Conflicts with name_prefix.'
            name_prefix: '-  (Optional) Creates a unique name beginning with the specified prefix. Conflicts with name.'
            s3_job_definition: '-  (Optional) The S3 buckets that contain the objects to analyze, and the scope of that analysis. (documented below)'
            sampling_percentage: '-  (Optional) The sampling depth, as a percentage, to apply when processing objects. This value determines the percentage of eligible objects that the job analyzes. If this value is less than 100, Amazon Macie selects the objects to analyze at random, up to the specified percentage, and analyzes all the data in those objects.'
            schedule_frequency: '-  (Optional) The recurrence pattern for running the job. To run the job only once, don''t specify a value for this property and set the value for the job_type property to ONE_TIME. (documented below)'
            scoping: '-  (Optional) The property- and tag-based conditions that determine which objects to include or exclude from the analysis. (documented below)'
            simple_scope_term: '-  (Optional) A property-based condition that defines a property, operator, and one or more values for including or excluding an object from the job.  (documented below)'
            tag_scope_term: '-  (Optional) A tag-based condition that defines the operator and tag keys or tag key and value pairs for including or excluding an object from the job.  (documented below)'
            tag_values: '-  (Optional) The tag keys or tag key and value pairs to use in the condition.'
            tags: '-  (Optional) A map of key-value pairs that specifies the tags to associate with the job. A job can have a maximum of 50 tags. Each tag consists of a tag key and an associated tag value. The maximum length of a tag key is 128 characters. The maximum length of a tag value is 256 characters.'
            target: '-  (Optional) The type of object to apply the condition to.'
            user_paused_details: '- If the current status of the job is USER_PAUSED, specifies when the job was paused and when the job or job run will expire and be cancelled if it isn''t resumed. This value is present only if the value for job-status is USER_PAUSED.'
            values: '-  (Optional) An array that lists the values to use in the condition.'
            weekly_schedule: '-  (Optional) Specifies a weekly recurrence pattern for running the job.'
        importStatements: []
    aws_macie2_custom_data_identifier:
        subCategory: Macie
        description: Provides a resource to manage an AWS Macie Custom Data Identifier.
        name: aws_macie2_custom_data_identifier
        title: aws_macie2_custom_data_identifier
        examples:
            - name: example
              manifest: |-
                {
                  "depends_on": [
                    "${aws_macie2_account.test}"
                  ],
                  "description": "DESCRIPTION",
                  "ignore_words": [
                    "ignore"
                  ],
                  "keywords": [
                    "keyword"
                  ],
                  "maximum_match_distance": 10,
                  "name": "NAME OF CUSTOM DATA IDENTIFIER",
                  "regex": "[0-9]{3}-[0-9]{2}-[0-9]{4}"
                }
              dependencies:
                aws_macie2_account.example: '{}'
        argumentDocs:
            arn: '- The Amazon Resource Name (ARN) of the custom data identifier.'
            created_at: '- The date and time, in UTC and extended RFC 3339 format, when the Amazon Macie account was created.'
            deleted: '- Specifies whether the custom data identifier was deleted. If you delete a custom data identifier, Amazon Macie doesn''t delete it permanently. Instead, it soft deletes the identifier.'
            description: '- (Optional) A custom description of the custom data identifier. The description can contain as many as 512 characters.'
            id: '- The unique identifier (ID) of the macie custom data identifier.'
            ignore_words: '- (Optional) An array that lists specific character sequences (ignore words) to exclude from the results. If the text matched by the regular expression is the same as any string in this array, Amazon Macie ignores it. The array can contain as many as 10 ignore words. Each ignore word can contain 4 - 90 characters. Ignore words are case sensitive.'
            keywords: '-  (Optional) An array that lists specific character sequences (keywords), one of which must be within proximity (maximum_match_distance) of the regular expression to match. The array can contain as many as 50 keywords. Each keyword can contain 3 - 90 characters. Keywords aren''t case sensitive.'
            maximum_match_distance: '- (Optional) The maximum number of characters that can exist between text that matches the regex pattern and the character sequences specified by the keywords array. Macie includes or excludes a result based on the proximity of a keyword to text that matches the regex pattern. The distance can be 1 - 300 characters. The default value is 50.'
            name: '- (Optional) A custom name for the custom data identifier. The name can contain as many as 128 characters. If omitted, Terraform will assign a random, unique name. Conflicts with name_prefix.'
            name_prefix: '-  (Optional) Creates a unique name beginning with the specified prefix. Conflicts with name.'
            regex: '- (Optional) The regular expression (regex) that defines the pattern to match. The expression can contain as many as 512 characters.'
            tags: '- (Optional) A map of key-value pairs that specifies the tags to associate with the custom data identifier.'
        importStatements: []
    aws_macie2_findings_filter:
        subCategory: Macie
        description: Provides a resource to manage an Amazon Macie Findings Filter.
        name: aws_macie2_findings_filter
        title: aws_macie2_findings_filter
        examples:
            - name: test
              manifest: |-
                {
                  "action": "ARCHIVE",
                  "depends_on": [
                    "${aws_macie2_account.test}"
                  ],
                  "description": "DESCRIPTION",
                  "finding_criteria": [
                    {
                      "criterion": [
                        {
                          "eq": [
                            "${data.aws_region.current.name}"
                          ],
                          "field": "region"
                        }
                      ]
                    }
                  ],
                  "name": "NAME OF THE FINDINGS FILTER",
                  "position": 1
                }
              dependencies:
                aws_macie2_account.example: '{}'
        argumentDocs:
            action: '- (Required) The action to perform on findings that meet the filter criteria (finding_criteria). Valid values are: ARCHIVE, suppress (automatically archive) the findings; and, NOOP, don''t perform any action on the findings.'
            arn: '- The Amazon Resource Name (ARN) of the Findings Filter.'
            criterion: '-  (Optional) A condition that specifies the property, operator, and one or more values to use to filter the results.  (documented below)'
            description: '- (Optional) A custom description of the filter. The description can contain as many as 512 characters.'
            eq: '- (Optional) The value for the property matches (equals) the specified value. If you specify multiple values, Amazon Macie uses OR logic to join the values.'
            eq_exact_match: '- (Optional) The value for the property exclusively matches (equals an exact match for) all the specified values. If you specify multiple values, Amazon Macie uses AND logic to join the values.'
            field: '- (Required) The name of the field to be evaluated.'
            finding_criteria: '- (Required) The criteria to use to filter findings.'
            gt: '- (Optional) The value for the property is greater than the specified value.'
            gte: '- (Optional) The value for the property is greater than or equal to the specified value.'
            id: '- The unique identifier (ID) of the macie Findings Filter.'
            lt: '- (Optional) The value for the property is less than the specified value.'
            lte: '- (Optional) The value for the property is less than or equal to the specified value.'
            name: '- (Optional) A custom name for the filter. The name must contain at least 3 characters and can contain as many as 64 characters. If omitted, Terraform will assign a random, unique name. Conflicts with name_prefix.'
            name_prefix: '-  (Optional) Creates a unique name beginning with the specified prefix. Conflicts with name.'
            neq: '- (Optional) The value for the property doesn''t match (doesn''t equal) the specified value. If you specify multiple values, Amazon Macie uses OR logic to join the values.'
            position: '- (Optional) The position of the filter in the list of saved filters on the Amazon Macie console. This value also determines the order in which the filter is applied to findings, relative to other filters that are also applied to the findings.'
            tags: '- (Optional) A map of key-value pairs that specifies the tags to associate with the filter.'
        importStatements: []
    aws_macie2_invitation_accepter:
        subCategory: Macie
        description: Provides a resource to manage an Amazon Macie Invitation Accepter.
        name: aws_macie2_invitation_accepter
        title: aws_macie2_invitation_accepter
        examples:
            - name: member
              manifest: |-
                {
                  "administrator_account_id": "ADMINISTRATOR ACCOUNT ID",
                  "depends_on": [
                    "${aws_macie2_member.primary}"
                  ]
                }
              dependencies:
                aws_macie2_account.member: '{}'
                aws_macie2_account.primary: |-
                    {
                      "provider": "awsalternate"
                    }
                aws_macie2_member.primary: |-
                    {
                      "account_id": "ACCOUNT ID",
                      "depends_on": [
                        "${aws_macie2_account.primary}"
                      ],
                      "email": "EMAIL",
                      "invitation_message": "Message of the invite",
                      "invite": true,
                      "provider": "awsalternate"
                    }
        argumentDocs:
            administrator_account_id: '- (Required) The AWS account ID for the account that sent the invitation.'
            id: '- The unique identifier (ID) of the macie invitation accepter.'
            invitation_id: '- The unique identifier for the invitation.'
        importStatements: []
    aws_macie2_member:
        subCategory: Macie
        description: Provides a resource to manage an Amazon Macie Member.
        name: aws_macie2_member
        title: aws_macie2_member
        examples:
            - name: example
              manifest: |-
                {
                  "account_id": "AWS ACCOUNT ID",
                  "depends_on": [
                    "${aws_macie2_account.example}"
                  ],
                  "email": "EMAIL",
                  "invitation_disable_email_notification": true,
                  "invitation_message": "Message of the invitation",
                  "invite": true
                }
              dependencies:
                aws_macie2_account.example: '{}'
        argumentDocs:
            account_id: '- (Required) The AWS account ID for the account.'
            administrator_account_id: '- The AWS account ID for the administrator account.'
            arn: '- The Amazon Resource Name (ARN) of the account.'
            email: '- (Required) The email address for the account.'
            id: '- The unique identifier (ID) of the macie Member.'
            invitation_disable_email_notification: '- (Optional) Specifies whether to send an email notification to the root user of each account that the invitation will be sent to. This notification is in addition to an alert that the root user receives in AWS Personal Health Dashboard. To send an email notification to the root user of each account, set this value to true.'
            invitation_message: '- (Optional) A custom message to include in the invitation. Amazon Macie adds this message to the standard content that it sends for an invitation.'
            invite: '- (Optional) Send an invitation to a member'
            invited_at: '- The date and time, in UTC and extended RFC 3339 format, when an Amazon Macie membership invitation was last sent to the account. This value is null if a Macie invitation hasn''t been sent to the account.'
            relationship_status: '- The current status of the relationship between the account and the administrator account.'
            status: '- (Optional) Specifies the status for the account. To enable Amazon Macie and start all Macie activities for the account, set this value to ENABLED. Valid values are ENABLED or PAUSED.'
            tags: '- (Optional) A map of key-value pairs that specifies the tags to associate with the account in Amazon Macie.'
            updated_at: '- The date and time, in UTC and extended RFC 3339 format, of the most recent change to the status of the relationship between the account and the administrator account.'
        importStatements: []
    aws_macie2_organization_admin_account:
        subCategory: Macie
        description: Provides a resource to manage an Amazon Macie Organization Admin Account.
        name: aws_macie2_organization_admin_account
        title: aws_macie2_organization_admin_account
        examples:
            - name: test
              manifest: |-
                {
                  "admin_account_id": "ID OF THE ADMIN ACCOUNT",
                  "depends_on": [
                    "${aws_macie2_account.test}"
                  ]
                }
              dependencies:
                aws_macie2_account.example: '{}'
        argumentDocs:
            admin_account_id: '- (Required) The AWS account ID for the account to designate as the delegated Amazon Macie administrator account for the organization.'
            id: '- The unique identifier (ID) of the macie organization admin account.'
        importStatements: []
    aws_main_route_table_association:
        subCategory: VPC (Virtual Private Cloud)
        description: Provides a resource for managing the main routing table of a VPC.
        name: aws_main_route_table_association
        title: aws_main_route_table_association
        examples:
            - name: a
              manifest: |-
                {
                  "route_table_id": "${aws_route_table.bar.id}",
                  "vpc_id": "${aws_vpc.foo.id}"
                }
              references:
                route_table_id: aws_route_table.bar.id
                vpc_id: aws_vpc.foo.id
        argumentDocs:
            id: '- The ID of the Route Table Association'
            original_route_table_id: '- Used internally, see Notes below'
            route_table_id: |-
                - (Required) The ID of the Route Table to set as the new
                main route table for the target VPC
            vpc_id: '- (Required) The ID of the VPC whose main route table should be set'
        importStatements: []
    aws_media_convert_queue:
        subCategory: Elemental MediaConvert
        description: Provides an AWS Elemental MediaConvert Queue.
        name: aws_media_convert_queue
        title: aws_media_convert_queue
        examples:
            - name: test
              manifest: |-
                {
                  "name": "tf-test-queue"
                }
        argumentDocs:
            arn: '- The Arn of the queue'
            description: '- (Optional) A description of the queue'
            id: '- The same as name'
            name: '- (Required) A unique identifier describing the queue'
            pricing_plan: '- (Optional) Specifies whether the pricing plan for the queue is on-demand or reserved. Valid values are ON_DEMAND or RESERVED. Default to ON_DEMAND.'
            reservation_plan_settings: '- (Optional) A detail pricing plan of the  reserved queue. See below.'
            reservation_plan_settings.commitment: '- (Required) The length of the term of your reserved queue pricing plan commitment. Valid value is ONE_YEAR.'
            reservation_plan_settings.renewal_type: '- (Required) Specifies whether the term of your reserved queue pricing plan. Valid values are AUTO_RENEW or EXPIRE.'
            reservation_plan_settings.reserved_slots: '- (Required) Specifies the number of reserved transcode slots (RTS) for queue.'
            status: '- (Optional) A status of the queue. Valid values are ACTIVE or RESERVED. Default to PAUSED.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_media_package_channel:
        subCategory: Elemental MediaPackage
        description: Provides an AWS Elemental MediaPackage Channel.
        name: aws_media_package_channel
        title: aws_media_package_channel
        examples:
            - name: kittens
              manifest: |-
                {
                  "channel_id": "kitten-channel",
                  "description": "A channel dedicated to amusing videos of kittens."
                }
        argumentDocs:
            arn: '- The ARN of the channel'
            channel_id: '- (Required) A unique identifier describing the channel'
            description: '- (Optional) A description of the channel'
            hls_ingest: '- A single item list of HLS ingest information'
            id: '- The same as channel_id'
            ingest_endpoints: '- A list of the ingest endpoints'
            password: '- The password'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            url: '- The URL'
            username: '- The username'
        importStatements: []
    aws_media_store_container:
        subCategory: Elemental MediaStore
        description: Provides a MediaStore Container.
        name: aws_media_store_container
        title: aws_media_store_container
        examples:
            - name: example
              manifest: |-
                {
                  "name": "example"
                }
        argumentDocs:
            arn: '- The ARN of the container.'
            endpoint: '- The DNS endpoint of the container.'
            name: '- (Required) The name of the container. Must contain alphanumeric characters or underscores.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_media_store_container_policy:
        subCategory: Elemental MediaStore
        description: Provides a MediaStore Container Policy.
        name: aws_media_store_container_policy
        title: aws_media_store_container_policy
        examples:
            - name: example
              manifest: |-
                {
                  "container_name": "${aws_media_store_container.example.name}",
                  "policy": "{\n\t\"Version\": \"2012-10-17\",\n\t\"Statement\": [{\n\t\t\"Sid\": \"MediaStoreFullAccess\",\n\t\t\"Action\": [ \"mediastore:*\" ],\n\t\t\"Principal\": {\"AWS\" : \"arn:aws:iam::${data.aws_caller_identity.current.account_id}:root\"},\n\t\t\"Effect\": \"Allow\",\n\t\t\"Resource\": \"arn:aws:mediastore:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:container/${aws_media_store_container.example.name}/*\",\n\t\t\"Condition\": {\n\t\t\t\"Bool\": { \"aws:SecureTransport\": \"true\" }\n\t\t}\n\t}]\n}\n"
                }
              references:
                container_name: aws_media_store_container.example.name
              dependencies:
                aws_media_store_container.example: |-
                    {
                      "name": "example"
                    }
        argumentDocs:
            container_name: '- (Required) The name of the container.'
            policy: '- (Required) The contents of the policy. For more information about building AWS IAM policy documents with Terraform, see the AWS IAM Policy Document Guide.'
        importStatements: []
    aws_memorydb_acl:
        subCategory: MemoryDB for Redis
        description: Provides a MemoryDB ACL.
        name: aws_memorydb_acl
        title: aws_memorydb_acl
        examples:
            - name: example
              manifest: |-
                {
                  "name": "my-acl",
                  "user_names": [
                    "my-user-1",
                    "my-user-2"
                  ]
                }
        argumentDocs:
            arn: '- The ARN of the ACL.'
            id: '- Same as name.'
            minimum_engine_version: '- The minimum engine version supported by the ACL.'
            name: '- (Optional, Forces new resource) Name of the ACL. If omitted, Terraform will assign a random, unique name. Conflicts with name_prefix.'
            name_prefix: '- (Optional, Forces new resource) Creates a unique name beginning with the specified prefix. Conflicts with name.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            user_names: '- (Optional) Set of MemoryDB user names to be included in this ACL.'
        importStatements: []
    aws_memorydb_cluster:
        subCategory: MemoryDB for Redis
        description: Provides a MemoryDB Cluster.
        name: aws_memorydb_cluster
        title: aws_memorydb_cluster
        examples:
            - name: example
              manifest: |-
                {
                  "acl_name": "open-access",
                  "name": "my-cluster",
                  "node_type": "db.t4g.small",
                  "num_shards": 2,
                  "security_group_ids": [
                    "${aws_security_group.example.id}"
                  ],
                  "snapshot_retention_limit": 7,
                  "subnet_group_name": "${aws_memorydb_subnet_group.example.id}"
                }
              references:
                subnet_group_name: aws_memorydb_subnet_group.example.id
        argumentDocs:
            acl_name: '- (Required) The name of the Access Control List to associate with the cluster.'
            address: '- DNS hostname of the cluster configuration endpoint.'
            arn: '- The ARN of the cluster.'
            auto_minor_version_upgrade: '- (Optional, Forces new resource) When set to true, the cluster will automatically receive minor engine version upgrades after launch. Defaults to true.'
            availability_zone: '- The Availability Zone in which the node resides.'
            cluster_endpoint: ""
            create: '- (Default 120 minutes) Used when creating a cluster.'
            create_time: '- The date and time when the node was created. Example: 2022-01-01T21:00:00Z.'
            delete: '- (Default 120 minutes) Used when deleting a cluster.'
            description: '- (Optional) Description for the cluster. Defaults to "Managed by Terraform".'
            endpoint: ""
            engine_patch_version: '- Patch version number of the Redis engine used by the cluster.'
            engine_version: '- (Optional) Version number of the Redis engine to be used for the cluster. Downgrades are not supported.'
            final_snapshot_name: '- (Optional) Name of the final cluster snapshot to be created when this resource is deleted. If omitted, no final snapshot will be made.'
            id: '- Same as name.'
            kms_key_arn: '- (Optional, Forces new resource) ARN of the KMS key used to encrypt the cluster at rest.'
            maintenance_window: '- (Optional) Specifies the weekly time range during which maintenance on the cluster is performed. It is specified as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance window is a 60 minute period. Example: sun:23:00-mon:01:30.'
            name: '- (Optional, Forces new resource) Name of the cluster. If omitted, Terraform will assign a random, unique name. Conflicts with name_prefix.'
            name_prefix: '- (Optional, Forces new resource) Creates a unique name beginning with the specified prefix. Conflicts with name.'
            node_type: '- (Required) The compute and memory capacity of the nodes in the cluster. See AWS documentation on supported node types as well as vertical scaling.'
            nodes: '- Set of nodes in this shard.'
            num_nodes: '- Number of individual nodes in this shard.'
            num_replicas_per_shard: '- (Optional) The number of replicas to apply to each shard, up to a maximum of 5. Defaults to 1 (i.e. 2 nodes per shard).'
            num_shards: '- (Optional) The number of shards in the cluster. Defaults to 1.'
            parameter_group_name: '- (Optional) The name of the parameter group associated with the cluster.'
            port: '- (Optional, Forces new resource) The port number on which each of the nodes accepts connections. Defaults to 6379.'
            security_group_ids: '- (Optional) Set of VPC Security Group ID-s to associate with this cluster.'
            shards: '- Set of shards in this cluster.'
            slots: '- Keyspace for this shard. Example: 0-16383.'
            snapshot_arns: '- (Optional, Forces new resource) List of ARN-s that uniquely identify RDB snapshot files stored in S3. The snapshot files will be used to populate the new cluster. Object names in the ARN-s cannot contain any commas.'
            snapshot_name: '- (Optional, Forces new resource) The name of a snapshot from which to restore data into the new cluster.'
            snapshot_retention_limit: '- (Optional) The number of days for which MemoryDB retains automatic snapshots before deleting them. When set to 0, automatic backups are disabled. Defaults to 0.'
            snapshot_window: '- (Optional) The daily time range (in UTC) during which MemoryDB begins taking a daily snapshot of your shard. Example: 05:00-09:00.'
            sns_topic_arn: '- (Optional) ARN of the SNS topic to which cluster notifications are sent.'
            subnet_group_name: '- (Optional, Forces new resource) The name of the subnet group to be used for the cluster. Defaults to a subnet group consisting of default VPC subnets.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            tls_enabled: '- (Optional, Forces new resource) A flag to enable in-transit encryption on the cluster. When set to false, the acl_name must be open-access. Defaults to true.'
            update: '- (Default 120 minutes) Used when updating a cluster.'
        importStatements: []
    aws_memorydb_parameter_group:
        subCategory: MemoryDB for Redis
        description: Provides a MemoryDB Parameter Group.
        name: aws_memorydb_parameter_group
        title: aws_memorydb_parameter_group
        examples:
            - name: example
              manifest: |-
                {
                  "family": "memorydb_redis6",
                  "name": "my-parameter-group",
                  "parameter": [
                    {
                      "name": "activedefrag",
                      "value": "yes"
                    }
                  ]
                }
        argumentDocs:
            arn: '- The ARN of the parameter group.'
            description: '- (Optional, Forces new resource) Description for the parameter group. Defaults to "Managed by Terraform".'
            family: '- (Required, Forces new resource) The engine version that the parameter group can be used with.'
            id: '- Same as name.'
            name: '- (Optional, Forces new resource) Name of the parameter group. If omitted, Terraform will assign a random, unique name. Conflicts with name_prefix.'
            name_prefix: '- (Optional, Forces new resource) Creates a unique name beginning with the specified prefix. Conflicts with name.'
            parameter: '- (Optional) Set of MemoryDB parameters to apply. Any parameters not specified will fall back to their family defaults. Detailed below.'
            parameter.name: '- (Required) The name of the parameter.'
            parameter.value: '- (Required) The value of the parameter.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_memorydb_snapshot:
        subCategory: MemoryDB for Redis
        description: Provides a MemoryDB Snapshot.
        name: aws_memorydb_snapshot
        title: aws_memorydb_snapshot
        examples:
            - name: example
              manifest: |-
                {
                  "cluster_name": "${aws_memorydb_cluster.example.name}",
                  "name": "my-snapshot"
                }
              references:
                cluster_name: aws_memorydb_cluster.example.name
        argumentDocs:
            arn: '- The ARN of the snapshot.'
            cluster_configuration: '- The configuration of the cluster from which the snapshot was taken.'
            cluster_name: '- (Required, Forces new resource) Name of the MemoryDB cluster to take a snapshot of.'
            create: '- (Default 120 minutes) Used when taking the snapshot of a cluster.'
            delete: '- (Default 120 minutes) Used when deleting a snapshot.'
            description: '- Description for the cluster.'
            engine_version: '- Version number of the Redis engine used by the cluster.'
            id: '- The name of the snapshot.'
            kms_key_arn: '- (Optional, Forces new resource) ARN of the KMS key used to encrypt the snapshot at rest.'
            maintenance_window: '- The weekly time range during which maintenance on the cluster is performed.'
            name: '- (Optional, Forces new resource) Name of the snapshot. If omitted, Terraform will assign a random, unique name. Conflicts with name_prefix.'
            name_prefix: '- (Optional, Forces new resource) Creates a unique name beginning with the specified prefix. Conflicts with name.'
            node_type: '- Compute and memory capacity of the nodes in the cluster.'
            num_shards: '- Number of shards in the cluster.'
            parameter_group_name: '- Name of the parameter group associated with the cluster.'
            port: '- Port number on which the cluster accepts connections.'
            snapshot_retention_limit: '- Number of days for which MemoryDB retains automatic snapshots before deleting them.'
            snapshot_window: '- The daily time range (in UTC) during which MemoryDB begins taking a daily snapshot of the shard.'
            source: '- Indicates whether the snapshot is from an automatic backup (automated) or was created manually (manual).'
            subnet_group_name: '- Name of the subnet group used by the cluster.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            topic_arn: '- ARN of the SNS topic to which cluster notifications are sent.'
            vpc_id: '- The VPC in which the cluster exists.'
        importStatements: []
    aws_memorydb_subnet_group:
        subCategory: MemoryDB for Redis
        description: Provides a MemoryDB Subnet Group.
        name: aws_memorydb_subnet_group
        title: aws_memorydb_subnet_group
        examples:
            - name: example
              manifest: |-
                {
                  "name": "my-subnet-group",
                  "subnet_ids": [
                    "${aws_subnet.example.id}"
                  ]
                }
              dependencies:
                aws_subnet.example: |-
                    {
                      "availability_zone": "us-west-2a",
                      "cidr_block": "10.0.0.0/24",
                      "vpc_id": "${aws_vpc.example.id}"
                    }
                aws_vpc.example: |-
                    {
                      "cidr_block": "10.0.0.0/16"
                    }
        argumentDocs:
            arn: '- The ARN of the subnet group.'
            description: '- (Optional) Description for the subnet group. Defaults to "Managed by Terraform".'
            id: '- The name of the subnet group.'
            name: '- (Optional, Forces new resource) Name of the subnet group. If omitted, Terraform will assign a random, unique name. Conflicts with name_prefix.'
            name_prefix: '- (Optional, Forces new resource) Creates a unique name beginning with the specified prefix. Conflicts with name.'
            subnet_ids: '- (Required) Set of VPC Subnet ID-s for the subnet group. At least one subnet must be provided.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            vpc_id: '- The VPC in which the subnet group exists.'
        importStatements: []
    aws_memorydb_user:
        subCategory: MemoryDB for Redis
        description: Provides a MemoryDB User.
        name: aws_memorydb_user
        title: aws_memorydb_user
        examples:
            - name: example
              manifest: |-
                {
                  "access_string": "on ~* \u0026* +@all",
                  "authentication_mode": [
                    {
                      "passwords": [
                        "${random_password.example.result}"
                      ],
                      "type": "password"
                    }
                  ],
                  "user_name": "my-user"
                }
              dependencies:
                random_password.example: |-
                    {
                      "length": 16
                    }
        argumentDocs:
            access_string: '- (Required) The access permissions string used for this user.'
            arn: '- The ARN of the user.'
            authentication_mode: '- (Required) Denotes the user''s authentication properties. Detailed below.'
            authentication_mode.passwords: '- (Required) The set of passwords used for authentication. You can create up to two passwords for each user.'
            authentication_mode.type: '- (Required) Indicates whether the user requires a password to authenticate. Must be set to password.'
            id: '- Same as user_name.'
            minimum_engine_version: '- The minimum engine version supported for the user.'
            password_count: '- The number of passwords belonging to the user.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            user_name: '- (Required, Forces new resource) Name of the MemoryDB user. Up to 40 characters.'
        importStatements: []
    aws_mq_broker:
        subCategory: MQ
        description: Provides an MQ Broker Resource
        name: aws_mq_broker
        title: aws_mq_broker
        examples:
            - name: example
              manifest: |-
                {
                  "broker_name": "example",
                  "configuration": [
                    {
                      "id": "${aws_mq_configuration.test.id}",
                      "revision": "${aws_mq_configuration.test.latest_revision}"
                    }
                  ],
                  "engine_type": "ActiveMQ",
                  "engine_version": "5.15.9",
                  "host_instance_type": "mq.t2.micro",
                  "security_groups": [
                    "${aws_security_group.test.id}"
                  ],
                  "user": [
                    {
                      "password": "MindTheGap",
                      "username": "ExampleUser"
                    }
                  ]
                }
              references:
                configuration.id: aws_mq_configuration.test.id
                configuration.revision: aws_mq_configuration.test.latest_revision
            - name: example
              manifest: |-
                {
                  "broker_name": "example",
                  "configuration": [
                    {
                      "id": "${aws_mq_configuration.test.id}",
                      "revision": "${aws_mq_configuration.test.latest_revision}"
                    }
                  ],
                  "engine_type": "ActiveMQ",
                  "engine_version": "5.15.9",
                  "host_instance_type": "mq.m5.large",
                  "security_groups": [
                    "${aws_security_group.test.id}"
                  ],
                  "storage_type": "ebs",
                  "user": [
                    {
                      "password": "MindTheGap",
                      "username": "ExampleUser"
                    }
                  ]
                }
              references:
                configuration.id: aws_mq_configuration.test.id
                configuration.revision: aws_mq_configuration.test.latest_revision
        argumentDocs:
            ActiveMQ: ':'
            RabbitMQ: ':'
            apply_immediately: '- (Optional) Specifies whether any broker modifications are applied immediately, or during the next maintenance window. Default is false.'
            arn: '- ARN of the broker.'
            authentication_strategy: '- (Optional) Authentication strategy used to secure the broker. Valid values are simple and ldap. ldap is not supported for engine_type RabbitMQ.'
            auto_minor_version_upgrade: '- (Optional) Whether to automatically upgrade to new minor versions of brokers as Amazon MQ makes releases available.'
            broker_name: '- (Required) Name of the broker.'
            configuration: '- (Optional) Configuration block for broker configuration. Applies to engine_type of ActiveMQ only. Detailed below.'
            configuration.id: '- (Optional) The Configuration ID.'
            configuration.revision: '- (Optional) Revision of the Configuration.'
            deployment_mode: '- (Optional) Deployment mode of the broker. Valid values are SINGLE_INSTANCE, ACTIVE_STANDBY_MULTI_AZ, and CLUSTER_MULTI_AZ. Default is SINGLE_INSTANCE.'
            encryption_options: '- (Optional) Configuration block containing encryption options. Detailed below.'
            encryption_options.kms_key_id: '- (Optional) Amazon Resource Name (ARN) of Key Management Service (KMS) Customer Master Key (CMK) to use for encryption at rest. Requires setting use_aws_owned_key to false. To perform drift detection when AWS-managed CMKs or customer-managed CMKs are in use, this value must be configured.'
            encryption_options.use_aws_owned_key: '- (Optional) Whether to enable an AWS-owned KMS CMK that is not in your account. Defaults to true. Setting to false without configuring kms_key_id will create an AWS-managed CMK aliased to aws/mq in your account.'
            engine_type: '- (Required) Type of broker engine. Valid values are ActiveMQ and RabbitMQ.'
            engine_version: '- (Required) Version of the broker engine. See the AmazonMQ Broker Engine docs for supported versions. For example, 5.15.0.'
            host_instance_type: '- (Required) Broker''s instance type. For example, mq.t3.micro, mq.m5.large.'
            id: '- Unique ID that Amazon MQ generates for the broker.'
            instances: '- List of information about allocated brokers (both active & standby).'
            instances.0.console_url: '- The URL of the broker''s ActiveMQ Web Console.'
            instances.0.endpoints: '- Broker''s wire-level protocol endpoints in the following order & format referenceable e.g., as instances.0.endpoints.0 (SSL):'
            instances.0.ip_address: '- IP Address of the broker.'
            ldap_server_metadata: '- (Optional) Configuration block for the LDAP server used to authenticate and authorize connections to the broker. Not supported for engine_type RabbitMQ. Detailed below. (Currently, AWS may not process changes to LDAP server metadata.)'
            ldap_server_metadata.hosts: '- (Optional) List of a fully qualified domain name of the LDAP server and an optional failover server.'
            ldap_server_metadata.role_base: '- (Optional) Fully qualified name of the directory to search for a user’s groups.'
            ldap_server_metadata.role_name: '- (Optional) Specifies the LDAP attribute that identifies the group name attribute in the object returned from the group membership query.'
            ldap_server_metadata.role_search_matching: '- (Optional) Search criteria for groups.'
            ldap_server_metadata.role_search_subtree: '- (Optional) Whether the directory search scope is the entire sub-tree.'
            ldap_server_metadata.service_account_password: '- (Optional) Service account password.'
            ldap_server_metadata.service_account_username: '- (Optional) Service account username.'
            ldap_server_metadata.user_base: '- (Optional) Fully qualified name of the directory where you want to search for users.'
            ldap_server_metadata.user_role_name: '- (Optional) Specifies the name of the LDAP attribute for the user group membership.'
            ldap_server_metadata.user_search_matching: '- (Optional) Search criteria for users.'
            ldap_server_metadata.user_search_subtree: '- (Optional) Whether the directory search scope is the entire sub-tree.'
            logs: '- (Optional) Configuration block for the logging configuration of the broker. Detailed below.'
            logs.audit: '- (Optional) Enables audit logging. Auditing is only possible for engine_type of ActiveMQ. User management action made using JMX or the ActiveMQ Web Console is logged. Defaults to false.'
            logs.general: '- (Optional) Enables general logging via CloudWatch. Defaults to false.'
            maintenance_window_start_time: '- (Optional) Configuration block for the maintenance window start time. Detailed below.'
            maintenance_window_start_time.day_of_week: '- (Required) Day of the week, e.g., MONDAY, TUESDAY, or WEDNESDAY.'
            maintenance_window_start_time.time_of_day: '- (Required) Time, in 24-hour format, e.g., 02:00.'
            maintenance_window_start_time.time_zone: '- (Required) Time zone in either the Country/City format or the UTC offset format, e.g., CET.'
            publicly_accessible: '- (Optional) Whether to enable connections from applications outside of the VPC that hosts the broker''s subnets.'
            security_groups: '- (Optional) List of security group IDs assigned to the broker.'
            storage_type: '- (Optional) Storage type of the broker. For engine_type ActiveMQ, the valid values are efs and ebs, and the AWS-default is efs. For engine_type RabbitMQ, only ebs is supported. When using ebs, only the mq.m5 broker instance type family is supported.'
            subnet_ids: '- (Optional) List of subnet IDs in which to launch the broker. A SINGLE_INSTANCE deployment requires one subnet. An ACTIVE_STANDBY_MULTI_AZ deployment requires multiple subnets.'
            tags: '- (Optional) Map of tags to assign to the broker. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            user: '- (Required) Configuration block for broker users. For engine_type of RabbitMQ, Amazon MQ does not return broker users preventing this resource from making user updates and drift detection. Detailed below.'
            user.console_access: '- (Optional) Whether to enable access to the ActiveMQ Web Console for the user. Applies to engine_type of ActiveMQ only.'
            user.groups: '- (Optional) List of groups (20 maximum) to which the ActiveMQ user belongs. Applies to engine_type of ActiveMQ only.'
            user.password: '- (Required) Password of the user. It must be 12 to 250 characters long, at least 4 unique characters, and must not contain commas.'
            user.username: '- (Required) Username of the user.'
        importStatements: []
    aws_mq_configuration:
        subCategory: MQ
        description: Provides an MQ configuration Resource
        name: aws_mq_configuration
        title: aws_mq_configuration
        examples:
            - name: example
              manifest: |-
                {
                  "data": "\u003c?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?\u003e\n\u003cbroker xmlns=\"http://activemq.apache.org/schema/core\"\u003e\n  \u003cplugins\u003e\n    \u003cforcePersistencyModeBrokerPlugin persistenceFlag=\"true\"/\u003e\n    \u003cstatisticsBrokerPlugin/\u003e\n    \u003ctimeStampingBrokerPlugin ttlCeiling=\"86400000\" zeroExpirationOverride=\"86400000\"/\u003e\n  \u003c/plugins\u003e\n\u003c/broker\u003e\n",
                  "description": "Example Configuration",
                  "engine_type": "ActiveMQ",
                  "engine_version": "5.15.0",
                  "name": "example"
                }
        argumentDocs:
            arn: '- ARN of the configuration.'
            authentication_strategy: '- (Optional) Authentication strategy associated with the configuration. Valid values are simple and ldap. ldap is not supported for engine_type RabbitMQ.'
            data: '- (Required) Broker configuration in XML format. See official docs for supported parameters and format of the XML.'
            description: '- (Optional) Description of the configuration.'
            engine_type: '- (Required) Type of broker engine. Valid values are ActiveMQ and RabbitMQ.'
            engine_version: '- (Required) Version of the broker engine.'
            id: '- Unique ID that Amazon MQ generates for the configuration.'
            latest_revision: '- Latest revision of the configuration.'
            name: '- (Required) Name of the configuration.'
            tags: '- (Optional) Map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_msk_cluster:
        subCategory: Managed Streaming for Kafka
        description: Terraform resource for managing an AWS Managed Streaming for Kafka cluster
        name: aws_msk_cluster
        title: aws_msk_cluster
        examples:
            - name: example
              manifest: |-
                {
                  "broker_node_group_info": [
                    {
                      "client_subnets": [
                        "${aws_subnet.subnet_az1.id}",
                        "${aws_subnet.subnet_az2.id}",
                        "${aws_subnet.subnet_az3.id}"
                      ],
                      "instance_type": "kafka.m5.large",
                      "security_groups": [
                        "${aws_security_group.sg.id}"
                      ],
                      "storage_info": [
                        {
                          "ebs_storage_info": [
                            {
                              "volume_size": 1000
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "cluster_name": "example",
                  "encryption_info": [
                    {
                      "encryption_at_rest_kms_key_arn": "${aws_kms_key.kms.arn}"
                    }
                  ],
                  "kafka_version": "3.2.0",
                  "logging_info": [
                    {
                      "broker_logs": [
                        {
                          "cloudwatch_logs": [
                            {
                              "enabled": true,
                              "log_group": "${aws_cloudwatch_log_group.test.name}"
                            }
                          ],
                          "firehose": [
                            {
                              "delivery_stream": "${aws_kinesis_firehose_delivery_stream.test_stream.name}",
                              "enabled": true
                            }
                          ],
                          "s3": [
                            {
                              "bucket": "${aws_s3_bucket.bucket.id}",
                              "enabled": true,
                              "prefix": "logs/msk-"
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "number_of_broker_nodes": 3,
                  "open_monitoring": [
                    {
                      "prometheus": [
                        {
                          "jmx_exporter": [
                            {
                              "enabled_in_broker": true
                            }
                          ],
                          "node_exporter": [
                            {
                              "enabled_in_broker": true
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "tags": {
                    "foo": "bar"
                  }
                }
              references:
                encryption_info.encryption_at_rest_kms_key_arn: aws_kms_key.kms.arn
                logging_info.broker_logs.cloudwatch_logs.log_group: aws_cloudwatch_log_group.test.name
                logging_info.broker_logs.firehose.delivery_stream: aws_kinesis_firehose_delivery_stream.test_stream.name
                logging_info.broker_logs.s3.bucket: aws_s3_bucket.bucket.id
              dependencies:
                aws_cloudwatch_log_group.test: |-
                    {
                      "name": "msk_broker_logs"
                    }
                aws_iam_role.firehose_role: |-
                    {
                      "assume_role_policy": "{\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n  {\n    \"Action\": \"sts:AssumeRole\",\n    \"Principal\": {\n      \"Service\": \"firehose.amazonaws.com\"\n    },\n    \"Effect\": \"Allow\",\n    \"Sid\": \"\"\n  }\n  ]\n}\n",
                      "name": "firehose_test_role"
                    }
                aws_kinesis_firehose_delivery_stream.test_stream: |-
                    {
                      "destination": "s3",
                      "lifecycle": [
                        {
                          "ignore_changes": [
                            "${tags[\"LogDeliveryEnabled\"]}"
                          ]
                        }
                      ],
                      "name": "terraform-kinesis-firehose-msk-broker-logs-stream",
                      "s3_configuration": [
                        {
                          "bucket_arn": "${aws_s3_bucket.bucket.arn}",
                          "role_arn": "${aws_iam_role.firehose_role.arn}"
                        }
                      ],
                      "tags": {
                        "LogDeliveryEnabled": "placeholder"
                      }
                    }
                aws_kms_key.kms: |-
                    {
                      "description": "example"
                    }
                aws_s3_bucket.bucket: |-
                    {
                      "bucket": "msk-broker-logs-bucket"
                    }
                aws_s3_bucket_acl.bucket_acl: |-
                    {
                      "acl": "private",
                      "bucket": "${aws_s3_bucket.bucket.id}"
                    }
                aws_security_group.sg: |-
                    {
                      "vpc_id": "${aws_vpc.vpc.id}"
                    }
                aws_subnet.subnet_az1: |-
                    {
                      "availability_zone": "${data.aws_availability_zones.azs.names[0]}",
                      "cidr_block": "192.168.0.0/24",
                      "vpc_id": "${aws_vpc.vpc.id}"
                    }
                aws_subnet.subnet_az2: |-
                    {
                      "availability_zone": "${data.aws_availability_zones.azs.names[1]}",
                      "cidr_block": "192.168.1.0/24",
                      "vpc_id": "${aws_vpc.vpc.id}"
                    }
                aws_subnet.subnet_az3: |-
                    {
                      "availability_zone": "${data.aws_availability_zones.azs.names[2]}",
                      "cidr_block": "192.168.2.0/24",
                      "vpc_id": "${aws_vpc.vpc.id}"
                    }
                aws_vpc.vpc: |-
                    {
                      "cidr_block": "192.168.0.0/22"
                    }
            - name: example
              manifest: |-
                {
                  "broker_node_group_info": [
                    {
                      "client_subnets": [
                        "${aws_subnet.subnet_az1.id}",
                        "${aws_subnet.subnet_az2.id}",
                        "${aws_subnet.subnet_az3.id}"
                      ],
                      "instance_type": "kafka.m5.4xlarge",
                      "security_groups": [
                        "${aws_security_group.sg.id}"
                      ],
                      "storage_info": [
                        {
                          "ebs_storage_info": [
                            {
                              "provisioned_throughput": [
                                {
                                  "enabled": true,
                                  "volume_throughput": 250
                                }
                              ],
                              "volume_size": 1000
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "cluster_name": "example",
                  "kafka_version": "2.7.1",
                  "number_of_broker_nodes": 3
                }
        argumentDocs:
            arn: '- (Required) Amazon Resource Name (ARN) of the MSK Configuration to use in the cluster.'
            az_distribution: '- (Optional) The distribution of broker nodes across availability zones (documentation). Currently the only valid value is DEFAULT.'
            bootstrap_brokers: '- Comma separated list of one or more hostname:port pairs of kafka brokers suitable to bootstrap connectivity to the kafka cluster. Contains a value if encryption_info.0.encryption_in_transit.0.client_broker is set to PLAINTEXT or TLS_PLAINTEXT. The resource sorts values alphabetically. AWS may not always return all endpoints so this value is not guaranteed to be stable across applies.'
            bootstrap_brokers_public_sasl_iam: '- One or more DNS names (or IP addresses) and SASL IAM port pairs. For example, b-1-public.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9198,b-2-public.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9198,b-3-public.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9198. This attribute will have a value if encryption_info.0.encryption_in_transit.0.client_broker is set to TLS_PLAINTEXT or TLS and client_authentication.0.sasl.0.iam is set to true and broker_node_group_info.0.connectivity_info.0.public_access.0.type is set to SERVICE_PROVIDED_EIPS and the cluster fulfill all other requirements for public access. The resource sorts the list alphabetically. AWS may not always return all endpoints so the values may not be stable across applies.'
            bootstrap_brokers_public_sasl_scram: '- One or more DNS names (or IP addresses) and SASL SCRAM port pairs. For example, b-1-public.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9196,b-2-public.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9196,b-3-public.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9196. This attribute will have a value if encryption_info.0.encryption_in_transit.0.client_broker is set to TLS_PLAINTEXT or TLS and client_authentication.0.sasl.0.scram is set to true and broker_node_group_info.0.connectivity_info.0.public_access.0.type is set to SERVICE_PROVIDED_EIPS and the cluster fulfill all other requirements for public access. The resource sorts the list alphabetically. AWS may not always return all endpoints so the values may not be stable across applies.'
            bootstrap_brokers_public_tls: '- One or more DNS names (or IP addresses) and TLS port pairs. For example, b-1-public.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9194,b-2-public.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9194,b-3-public.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9194. This attribute will have a value if encryption_info.0.encryption_in_transit.0.client_broker is set to TLS_PLAINTEXT or TLS and broker_node_group_info.0.connectivity_info.0.public_access.0.type is set to SERVICE_PROVIDED_EIPS and the cluster fulfill all other requirements for public access. The resource sorts the list alphabetically. AWS may not always return all endpoints so the values may not be stable across applies.'
            bootstrap_brokers_sasl_iam: '- One or more DNS names (or IP addresses) and SASL IAM port pairs. For example, b-1.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9098,b-2.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9098,b-3.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9098. This attribute will have a value if encryption_info.0.encryption_in_transit.0.client_broker is set to TLS_PLAINTEXT or TLS and client_authentication.0.sasl.0.iam is set to true. The resource sorts the list alphabetically. AWS may not always return all endpoints so the values may not be stable across applies.'
            bootstrap_brokers_sasl_scram: '- One or more DNS names (or IP addresses) and SASL SCRAM port pairs. For example, b-1.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9096,b-2.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9096,b-3.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9096. This attribute will have a value if encryption_info.0.encryption_in_transit.0.client_broker is set to TLS_PLAINTEXT or TLS and client_authentication.0.sasl.0.scram is set to true. The resource sorts the list alphabetically. AWS may not always return all endpoints so the values may not be stable across applies.'
            bootstrap_brokers_tls: '- One or more DNS names (or IP addresses) and TLS port pairs. For example, b-1.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9094,b-2.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9094,b-3.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9094. This attribute will have a value if encryption_info.0.encryption_in_transit.0.client_broker is set to TLS_PLAINTEXT or TLS. The resource sorts the list alphabetically. AWS may not always return all endpoints so the values may not be stable across applies.'
            broker_logs: '- (Required) Configuration block for Broker Logs settings for logging info. See below.'
            broker_node_group_info: '- (Required) Configuration block for the broker nodes of the Kafka cluster.'
            bucket: '- (Optional) Name of the S3 bucket to deliver logs to.'
            certificate_authority_arns: '- (Optional) List of ACM Certificate Authority Amazon Resource Names (ARNs).'
            client_authentication: '- (Optional) Configuration block for specifying a client authentication. See below.'
            client_broker: '- (Optional) Encryption setting for data in transit between clients and brokers. Valid values: TLS, TLS_PLAINTEXT, and PLAINTEXT. Default value is TLS.'
            client_subnets: '- (Required) A list of subnets to connect to in client VPC (documentation).'
            cluster_name: '- (Required) Name of the MSK cluster.'
            configuration_info: '- (Optional) Configuration block for specifying a MSK Configuration to attach to Kafka brokers. See below.'
            connectivity_info: '- (Optional) Information about the cluster access configuration. See below. For security reasons, you can''t turn on public access while creating an MSK cluster. However, you can update an existing cluster to make it publicly accessible. You can also create a new cluster and then update it to make it publicly accessible (documentation).'
            create: '- (Default 120 minutes) How long to wait for the MSK Cluster to be created.'
            current_version: '- Current version of the MSK Cluster used for updates, e.g., K13V1IB3VIYZZH'
            delete: '- (Default 120 minutes) How long to wait for the MSK Cluster to be deleted.'
            delivery_stream: '- (Optional) Name of the Kinesis Data Firehose delivery stream to deliver logs to.'
            ebs_storage_info: '- (Optional) A block that contains EBS volume information. See below.'
            ebs_volume_size: '- (Optional, Deprecated use storage_info.ebs_storage_info.volume_size instead) The size in GiB of the EBS volume for the data drive on each broker node.'
            enabled: '- (Optional) Controls whether provisioned throughput is enabled or not. Default value: false.'
            enabled_in_broker: '- (Required) Indicates whether you want to enable or disable the JMX Exporter.'
            encryption_at_rest_kms_key_arn: '- (Optional) You may specify a KMS key short ID or ARN (it will always output an ARN) to use for encrypting your data at rest.  If no key is specified, an AWS managed KMS (''aws/msk'' managed service) key will be used for encrypting the data at rest.'
            encryption_in_transit: '- (Optional) Configuration block to specify encryption in transit. See below.'
            encryption_info: '- (Optional) Configuration block for specifying encryption. See below.'
            encryption_info.0.encryption_at_rest_kms_key_arn: '- The ARN of the KMS key used for encryption at rest of the broker data volumes.'
            enhanced_monitoring: '- (Optional) Specify the desired enhanced MSK CloudWatch monitoring level. See Monitoring Amazon MSK with Amazon CloudWatch'
            iam: '- (Optional) Enables IAM client authentication. Defaults to false.'
            in_cluster: '- (Optional) Whether data communication among broker nodes is encrypted. Default value: true.'
            instance_type: '- (Required) Specify the instance type to use for the kafka brokersE.g., kafka.m5.large. (Pricing info)'
            jmx_exporter: '- (Optional) Configuration block for JMX Exporter. See below.'
            kafka_version: '- (Required) Specify the desired Kafka software version.'
            log_group: '- (Optional) Name of the Cloudwatch Log Group to deliver logs to.'
            logging_info: '- (Optional) Configuration block for streaming broker logs to Cloudwatch/S3/Kinesis Firehose. See below.'
            node_exporter: '- (Optional) Configuration block for Node Exporter. See below.'
            number_of_broker_nodes: '- (Required) The desired total number of broker nodes in the kafka cluster.  It must be a multiple of the number of specified client subnets.'
            open_monitoring: '- (Optional) Configuration block for JMX and Node monitoring for the MSK cluster. See below.'
            prefix: '- (Optional) Prefix to append to the folder name.'
            prometheus: '- (Required) Configuration block for Prometheus settings for open monitoring. See below.'
            provisioned_throughput: '- (Optional) A block that contains EBS volume provisioned throughput information. To provision storage throughput, you must choose broker type kafka.m5.4xlarge or larger. See below.'
            public_access: '- (Optional) Access control settings for brokers. See below.'
            revision: '- (Required) Revision of the MSK Configuration to use in the cluster.'
            sasl: '- (Optional) Configuration block for specifying SASL client authentication. See below.'
            scram: '- (Optional) Enables SCRAM client authentication via AWS Secrets Manager. Defaults to false.'
            security_groups: '- (Required) A list of the security groups to associate with the elastic network interfaces to control who can communicate with the cluster.'
            storage_info: '- (Optional) A block that contains information about storage volumes attached to MSK broker nodes. See below.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            tls: '- (Optional) Configuration block for specifying TLS client authentication. See below.'
            type: '- (Optional) Public access type. Valida values: DISABLED, SERVICE_PROVIDED_EIPS.'
            unauthenticated: '- (Optional) Enables unauthenticated access.'
            update: |-
                - (Default 120 minutes) How long to wait for the MSK Cluster to be updated.
                Note that the update timeout is used separately for ebs_volume_size, instance_type, number_of_broker_nodes, configuration_info, kafka_version and monitoring and logging update timeouts.
            volume_size: '- (Optional) The size in GiB of the EBS volume for the data drive on each broker node. Minimum value of 1 and maximum value of 16384.'
            volume_throughput: '- (Optional) Throughput value of the EBS volumes for the data drive on each kafka broker node in MiB per second. The minimum value is 250. The maximum value varies between broker type. You can refer to the valid values for the maximum volume throughput at the following documentation on throughput bottlenecks'
            zookeeper_connect_string: '- A comma separated list of one or more hostname:port pairs to use to connect to the Apache Zookeeper cluster. The returned values are sorted alphabetically. The AWS API may not return all endpoints, so this value is not guaranteed to be stable across applies.'
            zookeeper_connect_string_tls: '- A comma separated list of one or more hostname:port pairs to use to connect to the Apache Zookeeper cluster via TLS. The returned values are sorted alphabetically. The AWS API may not return all endpoints, so this value is not guaranteed to be stable across applies.'
        importStatements: []
    aws_msk_configuration:
        subCategory: Managed Streaming for Kafka
        description: Terraform resource for managing an Amazon Managed Streaming for Kafka configuration
        name: aws_msk_configuration
        title: aws_msk_configuration
        examples:
            - name: example
              manifest: |-
                {
                  "kafka_versions": [
                    "2.1.0"
                  ],
                  "name": "example",
                  "server_properties": "auto.create.topics.enable = true\ndelete.topic.enable = true\n"
                }
        argumentDocs:
            arn: '- Amazon Resource Name (ARN) of the configuration.'
            description: '- (Optional) Description of the configuration.'
            kafka_versions: '- (Required) List of Apache Kafka versions which can use this configuration.'
            latest_revision: '- Latest revision of the configuration.'
            name: '- (Required) Name of the configuration.'
            server_properties: '- (Required) Contents of the server.properties file. Supported properties are documented in the MSK Developer Guide.'
        importStatements: []
    aws_msk_scram_secret_association:
        subCategory: Managed Streaming for Kafka
        description: Associates SCRAM secrets with a Managed Streaming for Kafka (MSK) cluster.
        name: aws_msk_scram_secret_association
        title: aws_msk_scram_secret_association
        examples:
            - name: example
              manifest: |-
                {
                  "cluster_arn": "${aws_msk_cluster.example.arn}",
                  "depends_on": [
                    "${aws_secretsmanager_secret_version.example}"
                  ],
                  "secret_arn_list": [
                    "${aws_secretsmanager_secret.example.arn}"
                  ]
                }
              references:
                cluster_arn: aws_msk_cluster.example.arn
              dependencies:
                aws_kms_key.example: |-
                    {
                      "description": "Example Key for MSK Cluster Scram Secret Association"
                    }
                aws_msk_cluster.example: |-
                    {
                      "client_authentication": [
                        {
                          "sasl": [
                            {
                              "scram": true
                            }
                          ]
                        }
                      ],
                      "cluster_name": "example"
                    }
                aws_secretsmanager_secret.example: |-
                    {
                      "kms_key_id": "${aws_kms_key.example.key_id}",
                      "name": "AmazonMSK_example"
                    }
                aws_secretsmanager_secret_policy.example: |-
                    {
                      "policy": "{\n  \"Version\" : \"2012-10-17\",\n  \"Statement\" : [ {\n    \"Sid\": \"AWSKafkaResourcePolicy\",\n    \"Effect\" : \"Allow\",\n    \"Principal\" : {\n      \"Service\" : \"kafka.amazonaws.com\"\n    },\n    \"Action\" : \"secretsmanager:getSecretValue\",\n    \"Resource\" : \"${aws_secretsmanager_secret.example.arn}\"\n  } ]\n}\n",
                      "secret_arn": "${aws_secretsmanager_secret.example.arn}"
                    }
                aws_secretsmanager_secret_version.example: |-
                    {
                      "secret_id": "${aws_secretsmanager_secret.example.id}",
                      "secret_string": "${jsonencode({ username = \"user\", password = \"pass\" })}"
                    }
        argumentDocs:
            cluster_arn: '- (Required, Forces new resource) Amazon Resource Name (ARN) of the MSK cluster.'
            id: '- Amazon Resource Name (ARN) of the MSK cluster.'
            secret_arn_list: '- (Required) List of AWS Secrets Manager secret ARNs.'
        importStatements: []
    aws_mskconnect_connector:
        subCategory: Managed Streaming for Kafka Connect
        description: Provides an Amazon MSK Connect Connector resource.
        name: aws_mskconnect_connector
        title: aws_mskconnect_connector
        examples:
            - name: example
              manifest: |-
                {
                  "capacity": [
                    {
                      "autoscaling": [
                        {
                          "max_worker_count": 2,
                          "mcu_count": 1,
                          "min_worker_count": 1,
                          "scale_in_policy": [
                            {
                              "cpu_utilization_percentage": 20
                            }
                          ],
                          "scale_out_policy": [
                            {
                              "cpu_utilization_percentage": 80
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "connector_configuration": {
                    "connector.class": "com.github.jcustenborder.kafka.connect.simulator.SimulatorSinkConnector",
                    "tasks.max": "1",
                    "topics": "example"
                  },
                  "kafka_cluster": [
                    {
                      "apache_kafka_cluster": [
                        {
                          "bootstrap_servers": "${aws_msk_cluster.example.bootstrap_brokers_tls}",
                          "vpc": [
                            {
                              "security_groups": [
                                "${aws_security_group.example.id}"
                              ],
                              "subnets": [
                                "${aws_subnet.example1.id}",
                                "${aws_subnet.example2.id}",
                                "${aws_subnet.example3.id}"
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "kafka_cluster_client_authentication": [
                    {
                      "authentication_type": "NONE"
                    }
                  ],
                  "kafka_cluster_encryption_in_transit": [
                    {
                      "encryption_type": "TLS"
                    }
                  ],
                  "kafkaconnect_version": "2.7.1",
                  "name": "example",
                  "plugin": [
                    {
                      "custom_plugin": [
                        {
                          "arn": "${aws_mskconnect_custom_plugin.example.arn}",
                          "revision": "${aws_mskconnect_custom_plugin.example.latest_revision}"
                        }
                      ]
                    }
                  ],
                  "service_execution_role_arn": "${aws_iam_role.example.arn}"
                }
              references:
                kafka_cluster.apache_kafka_cluster.bootstrap_servers: aws_msk_cluster.example.bootstrap_brokers_tls
                plugin.custom_plugin.arn: aws_mskconnect_custom_plugin.example.arn
                plugin.custom_plugin.revision: aws_mskconnect_custom_plugin.example.latest_revision
                service_execution_role_arn: aws_iam_role.example.arn
        argumentDocs:
            arn: '- (Required) The Amazon Resource Name (ARN) of the custom plugin.'
            bootstrap_servers: '- (Required) The bootstrap servers of the cluster.'
            capacity: '- (Required) Information about the capacity allocated to the connector. See below.'
            capacity.autoscaling: '- (Optional) Information about the auto scaling parameters for the connector. See below.'
            capacity.provisioned_capacity: '- (Optional) Details about a fixed capacity allocated to a connector. See below.'
            cloudwatch_logs: '- (Optional) Details about delivering logs to Amazon CloudWatch Logs. See below.'
            cloudwatch_logs.enabled: '- (Optional) Whether log delivery to Amazon CloudWatch Logs is enabled.'
            cloudwatch_logs.log_group: '- (Required) The name of the CloudWatch log group that is the destination for log delivery.'
            connector_configuration: '- (Required) A map of keys to values that represent the configuration for the connector.'
            create: '- (Default 20 minutes) How long to wait for the MSK Connect Connector to be created.'
            delete: '- (Default 10 minutes) How long to wait for the MSK Connect Connector to be created.'
            description: '- (Optional) A summary description of the connector.'
            firehose: '- (Optional) Details about delivering logs to Amazon Kinesis Data Firehose. See below.'
            firehose.delivery_stream: '- (Optional) The name of the Kinesis Data Firehose delivery stream that is the destination for log delivery.'
            firehose.enabled: '- (Required) Specifies whether connector logs get delivered to Amazon Kinesis Data Firehose.'
            kafka_cluster: '- (Required) Specifies which Apache Kafka cluster to connect to. See below.'
            kafka_cluster.apache_kafka_cluster: '- (Required) The Apache Kafka cluster to which the connector is connected.'
            kafka_cluster_client_authentication: '- (Required) Details of the client authentication used by the Apache Kafka cluster. See below.'
            kafka_cluster_client_authentication.authentication_type: '- (Optional) The type of client authentication used to connect to the Apache Kafka cluster. Valid values: IAM, NONE. A value of NONE means that no client authentication is used. The default value is NONE.'
            kafka_cluster_encryption_in_transit: '- (Required) Details of encryption in transit to the Apache Kafka cluster. See below.'
            kafka_cluster_encryption_in_transit.encryption_type: '- (Optional) The type of encryption in transit to the Apache Kafka cluster. Valid values: PLAINTEXT, TLS. The default values is PLAINTEXT.'
            kafkaconnect_version: '- (Required) The version of Kafka Connect. It has to be compatible with both the Apache Kafka cluster''s version and the plugins.'
            log_delivery: '- (Optional) Details about log delivery. See below.'
            log_delivery.worker_log_delivery: '- (Required) The workers can send worker logs to different destination types. This configuration specifies the details of these destinations. See below.'
            max_worker_count: '- (Required) The maximum number of workers allocated to the connector.'
            mcu_count: '- (Optional) The number of microcontroller units (MCUs) allocated to each connector worker. Valid values: 1, 2, 4, 8. The default value is 1.'
            min_worker_count: '- (Required) The minimum number of workers allocated to the connector.'
            name: '- (Required) The name of the connector.'
            plugin: '- (Required) Specifies which plugins to use for the connector. See below.'
            plugin.custom_plugin: '- (Required) Details about a custom plugin. See below.'
            revision: '- (Required) The revision of the custom plugin.'
            s3: '- (Optional) Details about delivering logs to Amazon S3. See below.'
            s3.bucket: '- (Optional) The name of the S3 bucket that is the destination for log delivery.'
            s3.enabled: '- (Required) Specifies whether connector logs get sent to the specified Amazon S3 destination.'
            s3.prefix: '- (Optional) The S3 prefix that is the destination for log delivery.'
            scale_in_policy: '- (Optional) The scale-in policy for the connector. See below.'
            scale_in_policy.cpu_utilization_percentage: '- (Required) Specifies the CPU utilization percentage threshold at which you want connector scale in to be triggered.'
            scale_out_policy: '- (Optional) The scale-out policy for the connector. See below.'
            scale_out_policy.cpu_utilization_percentage: '- (Required) The CPU utilization percentage threshold at which you want connector scale out to be triggered.'
            service_execution_role_arn: '- (Required) The Amazon Resource Name (ARN) of the IAM role used by the connector to access the Amazon Web Services resources that it needs. The types of resources depends on the logic of the connector. For example, a connector that has Amazon S3 as a destination must have permissions that allow it to write to the S3 destination bucket.'
            update: '- (Default 20 minutes) How long to wait for the MSK Connect Connector to be created.'
            version: '- The current version of the connector.'
            vpc: '- (Required) Details of an Amazon VPC which has network connectivity to the Apache Kafka cluster.'
            vpc.security_groups: '- (Required) The security groups for the connector.'
            vpc.subnets: '- (Required) The subnets for the connector.'
            worker_configuration: '- (Optional) Specifies which worker configuration to use with the connector. See below.'
            worker_configuration.arn: '- (Required) The Amazon Resource Name (ARN) of the worker configuration.'
            worker_configuration.revision: '- (Required) The revision of the worker configuration.'
            worker_count: '- (Required) The number of workers that are allocated to the connector.'
        importStatements: []
    aws_mskconnect_custom_plugin:
        subCategory: Managed Streaming for Kafka Connect
        description: Provides an Amazon MSK Connect custom plugin resource.
        name: aws_mskconnect_custom_plugin
        title: aws_mskconnect_custom_plugin
        examples:
            - name: example
              manifest: |-
                {
                  "content_type": "ZIP",
                  "location": [
                    {
                      "s3": [
                        {
                          "bucket_arn": "${aws_s3_bucket.example.arn}",
                          "file_key": "${aws_s3_object.example.key}"
                        }
                      ]
                    }
                  ],
                  "name": "debezium-example"
                }
              references:
                location.s3.bucket_arn: aws_s3_bucket.example.arn
                location.s3.file_key: aws_s3_object.example.key
              dependencies:
                aws_s3_bucket.example: |-
                    {
                      "bucket": "example"
                    }
                aws_s3_object.example: |-
                    {
                      "bucket": "${aws_s3_bucket.example.id}",
                      "key": "debezium.zip",
                      "source": "debezium.zip"
                    }
        argumentDocs:
            arn: '- the Amazon Resource Name (ARN) of the custom plugin.'
            bucket_arn: '- (Required) The Amazon Resource Name (ARN) of an S3 bucket.'
            content_type: '- (Required) The type of the plugin file. Allowed values are ZIP and JAR.'
            create: '- (Default 10 minutes) How long to wait for the MSK Connect Custom Plugin to be created.'
            delete: '- (Default 10 minutes) How long to wait for the MSK Connect Custom Plugin to be created.'
            description: '- (Optional) A summary description of the custom plugin.'
            file_key: '- (Required) The file key for an object in an S3 bucket.'
            latest_revision: '- an ID of the latest successfully created revision of the custom plugin.'
            location: '- (Required) Information about the location of a custom plugin. See below.'
            name: '- (Required) The name of the custom plugin..'
            object_version: '- (Optional) The version of an object in an S3 bucket.'
            s3: '- (Required) Information of the plugin file stored in Amazon S3. See below.'
            state: '- the state of the custom plugin.'
        importStatements: []
    aws_mskconnect_worker_configuration:
        subCategory: Managed Streaming for Kafka Connect
        description: Provides an Amazon MSK Connect worker configuration resource.
        name: aws_mskconnect_worker_configuration
        title: aws_mskconnect_worker_configuration
        examples:
            - name: example
              manifest: |-
                {
                  "name": "example",
                  "properties_file_content": "key.converter=org.apache.kafka.connect.storage.StringConverter\nvalue.converter=org.apache.kafka.connect.storage.StringConverter\n"
                }
        argumentDocs:
            arn: '- the Amazon Resource Name (ARN) of the worker configuration.'
            description: '- (Optional) A summary description of the worker configuration.'
            latest_revision: '- an ID of the latest successfully created revision of the worker configuration.'
            name: '- (Required) The name of the worker configuration.'
            properties_file_content: '- (Required) Contents of connect-distributed.properties file. The value can be either base64 encoded or in raw format.'
        importStatements: []
    aws_mwaa_environment:
        subCategory: MWAA (Managed Workflows for Apache Airflow)
        description: Creates a MWAA Environment
        name: aws_mwaa_environment
        title: aws_mwaa_environment
        examples:
            - name: example
              manifest: |-
                {
                  "dag_s3_path": "dags/",
                  "execution_role_arn": "${aws_iam_role.example.arn}",
                  "name": "example",
                  "network_configuration": [
                    {
                      "security_group_ids": [
                        "${aws_security_group.example.id}"
                      ],
                      "subnet_ids": "${aws_subnet.private[*].id}"
                    }
                  ],
                  "source_bucket_arn": "${aws_s3_bucket.example.arn}"
                }
              references:
                execution_role_arn: aws_iam_role.example.arn
                source_bucket_arn: aws_s3_bucket.example.arn
            - name: example
              manifest: |-
                {
                  "airflow_configuration_options": {
                    "core.default_task_retries": 16,
                    "core.parallelism": 1
                  },
                  "dag_s3_path": "dags/",
                  "execution_role_arn": "${aws_iam_role.example.arn}",
                  "name": "example",
                  "network_configuration": [
                    {
                      "security_group_ids": [
                        "${aws_security_group.example.id}"
                      ],
                      "subnet_ids": "${aws_subnet.private[*].id}"
                    }
                  ],
                  "source_bucket_arn": "${aws_s3_bucket.example.arn}"
                }
              references:
                execution_role_arn: aws_iam_role.example.arn
                source_bucket_arn: aws_s3_bucket.example.arn
            - name: example
              manifest: |-
                {
                  "dag_s3_path": "dags/",
                  "execution_role_arn": "${aws_iam_role.example.arn}",
                  "logging_configuration": [
                    {
                      "dag_processing_logs": [
                        {
                          "enabled": true,
                          "log_level": "DEBUG"
                        }
                      ],
                      "scheduler_logs": [
                        {
                          "enabled": true,
                          "log_level": "INFO"
                        }
                      ],
                      "task_logs": [
                        {
                          "enabled": true,
                          "log_level": "WARNING"
                        }
                      ],
                      "webserver_logs": [
                        {
                          "enabled": true,
                          "log_level": "ERROR"
                        }
                      ],
                      "worker_logs": [
                        {
                          "enabled": true,
                          "log_level": "CRITICAL"
                        }
                      ]
                    }
                  ],
                  "name": "example",
                  "network_configuration": [
                    {
                      "security_group_ids": [
                        "${aws_security_group.example.id}"
                      ],
                      "subnet_ids": "${aws_subnet.private[*].id}"
                    }
                  ],
                  "source_bucket_arn": "${aws_s3_bucket.example.arn}"
                }
              references:
                execution_role_arn: aws_iam_role.example.arn
                source_bucket_arn: aws_s3_bucket.example.arn
            - name: example
              manifest: |-
                {
                  "dag_s3_path": "dags/",
                  "execution_role_arn": "${aws_iam_role.example.arn}",
                  "name": "example",
                  "network_configuration": [
                    {
                      "security_group_ids": [
                        "${aws_security_group.example.id}"
                      ],
                      "subnet_ids": "${aws_subnet.private[*].id}"
                    }
                  ],
                  "source_bucket_arn": "${aws_s3_bucket.example.arn}",
                  "tags": {
                    "Environment": "production",
                    "Name": "example"
                  }
                }
              references:
                execution_role_arn: aws_iam_role.example.arn
                source_bucket_arn: aws_s3_bucket.example.arn
        argumentDocs:
            airflow_configuration_options: '- (Optional) The airflow_configuration_options parameter specifies airflow override options. Check the Official documentation for all possible configuration options.'
            airflow_version: '- (Optional) Airflow version of your environment, will be set by default to the latest version that MWAA supports.'
            arn: '- The ARN of the MWAA Environment'
            created_at: '- The Created At date of the MWAA Environment'
            dag_s3_path: '- (Required) The relative path to the DAG folder on your Amazon S3 storage bucket. For example, dags. For more information, see Importing DAGs on Amazon MWAA.'
            enabled: '- (Required) Enabling or disabling the collection of logs'
            environment_class: '- (Optional) Environment class for the cluster. Possible options are mw1.small, mw1.medium, mw1.large. Will be set by default to mw1.small. Please check the AWS Pricing for more information about the environment classes.'
            execution_role_arn: '- (Required) The Amazon Resource Name (ARN) of the task execution role that the Amazon MWAA and its environment can assume. Check the official AWS documentation for the detailed role specification.'
            kms_key: '- (Optional) The Amazon Resource Name (ARN) of your KMS key that you want to use for encryption. Will be set to the ARN of the managed KMS key aws/airflow by default. Please check the Official Documentation for more information.'
            log_level: '- (Optional) Logging level. Valid values: CRITICAL, ERROR, WARNING, INFO, DEBUG. Will be INFO by default.'
            logging_configuration: '- (Optional) The Apache Airflow logs you want to send to Amazon CloudWatch Logs.'
            logging_configuration.dag_processing_logs: '- (Optional) (Optional) Log configuration options for processing DAGs. See Module logging configuration for more information. Disabled by default.'
            logging_configuration.scheduler_logs: '- (Optional) Log configuration options for the schedulers. See Module logging configuration for more information. Disabled by default.'
            logging_configuration.task_logs: '- (Optional) Log configuration options for DAG tasks. See Module logging configuration for more information. Enabled by default with INFO log level.'
            logging_configuration.webserver_logs: '- (Optional) Log configuration options for the webservers. See Module logging configuration for more information. Disabled by default.'
            logging_configuration.worker_logs: '- (Optional) Log configuration options for the workers. See Module logging configuration for more information. Disabled by default.'
            logging_configuration[0].<LOG_CONFIGURATION_TYPE>[0].cloud_watch_log_group_arn: '- Provides the ARN for the CloudWatch group where the logs will be published'
            max_workers: '- (Optional) The maximum number of workers that can be automatically scaled up. Value need to be between 1 and 25. Will be 10 by default.'
            min_workers: '- (Optional) The minimum number of workers that you want to run in your environment. Will be 1 by default.'
            name: '- (Required) The name of the Apache Airflow Environment'
            network_configuration: '- (Required) Specifies the network configuration for your Apache Airflow Environment. This includes two private subnets as well as security groups for the Airflow environment. Each subnet requires internet connection, otherwise the deployment will fail. See Network configuration below for details.'
            network_configuration.security_group_ids: '- (Required) Security groups IDs for the environment. At least one of the security group needs to allow MWAA resources to talk to each other, otherwise MWAA cannot be provisioned.'
            network_configuration.subnet_ids: '- (Required)  The private subnet IDs in which the environment should be created. MWAA requires two subnets.'
            plugins_s3_object_version: '- (Optional) The plugins.zip file version you want to use.'
            plugins_s3_path: '- (Optional) The relative path to the plugins.zip file on your Amazon S3 storage bucket. For example, plugins.zip. If a relative path is provided in the request, then plugins_s3_object_version is required. For more information, see Importing DAGs on Amazon MWAA.'
            requirements_s3_object_version: '- (Optional) The requirements.txt file version you want to use.'
            requirements_s3_path: '- (Optional) The relative path to the requirements.txt file on your Amazon S3 storage bucket. For example, requirements.txt. If a relative path is provided in the request, then requirements_s3_object_version is required. For more information, see Importing DAGs on Amazon MWAA.'
            schedulers: '- (Optional) The number of schedulers that you want to run in your environment. v2.0.2 and above accepts 2 - 5, default 2. v1.10.12 accepts 1.'
            service_role_arn: '- The Service Role ARN of the Amazon MWAA Environment'
            source_bucket_arn: '- (Required) The Amazon Resource Name (ARN) of your Amazon S3 storage bucket. For example, arn:aws:s3:::airflow-mybucketname.'
            status: '- The status of the Amazon MWAA Environment'
            tags: '- (Optional) A map of resource tags to associate with the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            webserver_access_mode: '- (Optional) Specifies whether the webserver should be accessible over the internet or via your specified VPC. Possible options: PRIVATE_ONLY (default) and PUBLIC_ONLY.'
            webserver_url: '- The webserver URL of the MWAA Environment'
            weekly_maintenance_window_start: '- (Optional) Specifies the start date for the weekly maintenance window.'
        importStatements: []
    aws_nat_gateway:
        subCategory: VPC (Virtual Private Cloud)
        description: Provides a resource to create a VPC NAT Gateway.
        name: aws_nat_gateway
        title: aws_nat_gateway
        examples:
            - name: example
              manifest: |-
                {
                  "allocation_id": "${aws_eip.example.id}",
                  "depends_on": [
                    "${aws_internet_gateway.example}"
                  ],
                  "subnet_id": "${aws_subnet.example.id}",
                  "tags": {
                    "Name": "gw NAT"
                  }
                }
              references:
                allocation_id: aws_eip.example.id
                subnet_id: aws_subnet.example.id
            - name: example
              manifest: |-
                {
                  "connectivity_type": "private",
                  "subnet_id": "${aws_subnet.example.id}"
                }
              references:
                subnet_id: aws_subnet.example.id
        argumentDocs:
            allocation_id: '- (Optional) The Allocation ID of the Elastic IP address for the gateway. Required for connectivity_type of public.'
            connectivity_type: '- (Optional) Connectivity type for the gateway. Valid values are private and public. Defaults to public.'
            id: '- The ID of the NAT Gateway.'
            network_interface_id: '- The ENI ID of the network interface created by the NAT gateway.'
            private_ip: '- The private IP address of the NAT Gateway.'
            public_ip: '- The public IP address of the NAT Gateway.'
            subnet_id: '- (Required) The Subnet ID of the subnet in which to place the gateway.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_neptune_cluster:
        subCategory: Neptune
        description: Provides an Neptune Cluster Resource
        name: aws_neptune_cluster
        title: aws_neptune_cluster
        examples:
            - name: default
              manifest: |-
                {
                  "apply_immediately": true,
                  "backup_retention_period": 5,
                  "cluster_identifier": "neptune-cluster-demo",
                  "engine": "neptune",
                  "iam_database_authentication_enabled": true,
                  "preferred_backup_window": "07:00-09:00",
                  "skip_final_snapshot": true
                }
        argumentDocs:
            allow_major_version_upgrade: '- (Optional) Specifies whether upgrades between different major versions are allowed. You must set it to true when providing an engine_version parameter that uses a different major version than the DB cluster''s current version. Default is false.'
            apply_immediately: '- (Optional) Specifies whether any cluster modifications are applied immediately, or during the next maintenance window. Default is false.'
            arn: '- The Neptune Cluster Amazon Resource Name (ARN)'
            availability_zones: '- (Optional) A list of EC2 Availability Zones that instances in the Neptune cluster can be created in.'
            backup_retention_period: '- (Optional) The days to retain backups for. Default 1'
            cluster_identifier: '- (Optional, Forces new resources) The cluster identifier. If omitted, Terraform will assign a random, unique identifier.'
            cluster_identifier_prefix: '- (Optional, Forces new resource) Creates a unique cluster identifier beginning with the specified prefix. Conflicts with cluster_identifier.'
            cluster_members: – List of Neptune Instances that are a part of this cluster
            cluster_resource_id: '- The Neptune Cluster Resource ID'
            copy_tags_to_snapshot: '- (Optional) If set to true, tags are copied to any snapshot of the DB cluster that is created.'
            create: '- (Default 120 minutes) Used for Cluster creation'
            delete: '- (Default 120 minutes) Used for destroying cluster. This includes any cleanup task during the destroying process.'
            deletion_protection: '- (Optional) A value that indicates whether the DB cluster has deletion protection enabled.The database can''t be deleted when deletion protection is enabled. By default, deletion protection is disabled.'
            enable_cloudwatch_logs_exports: '- (Optional) A list of the log types this DB cluster is configured to export to Cloudwatch Logs. Currently only supports audit.'
            endpoint: '- The DNS address of the Neptune instance'
            engine: '- (Optional) The name of the database engine to be used for this Neptune cluster. Defaults to neptune.'
            engine_version: '- (Optional) The database engine version.'
            final_snapshot_identifier: '- (Optional) The name of your final Neptune snapshot when this Neptune cluster is deleted. If omitted, no final snapshot will be made.'
            hosted_zone_id: '- The Route53 Hosted Zone ID of the endpoint'
            iam_database_authentication_enabled: '- (Optional) Specifies whether or not mappings of AWS Identity and Access Management (IAM) accounts to database accounts is enabled.'
            iam_roles: '- (Optional) A List of ARNs for the IAM roles to associate to the Neptune Cluster.'
            id: '- The Neptune Cluster Identifier'
            kms_key_arn: '- (Optional) The ARN for the KMS encryption key. When specifying kms_key_arn, storage_encrypted needs to be set to true.'
            neptune_cluster_parameter_group_name: '- (Optional) A cluster parameter group to associate with the cluster.'
            neptune_subnet_group_name: '- (Optional) A Neptune subnet group to associate with this Neptune instance.'
            port: '- (Optional) The port on which the Neptune accepts connections. Default is 8182.'
            preferred_backup_window: '- (Optional) The daily time range during which automated backups are created if automated backups are enabled using the BackupRetentionPeriod parameter. Time in UTC. Default: A 30-minute window selected at random from an 8-hour block of time per regionE.g., 04:00-09:00'
            preferred_maintenance_window: '- (Optional) The weekly time range during which system maintenance can occur, in (UTC) e.g., wed:04:00-wed:04:30'
            reader_endpoint: '- A read-only endpoint for the Neptune cluster, automatically load-balanced across replicas'
            replication_source_identifier: '- (Optional) ARN of a source Neptune cluster or Neptune instance if this Neptune cluster is to be created as a Read Replica.'
            skip_final_snapshot: '- (Optional) Determines whether a final Neptune snapshot is created before the Neptune cluster is deleted. If true is specified, no Neptune snapshot is created. If false is specified, a Neptune snapshot is created before the Neptune cluster is deleted, using the value from final_snapshot_identifier. Default is false.'
            snapshot_identifier: '- (Optional) Specifies whether or not to create this cluster from a snapshot. You can use either the name or ARN when specifying a Neptune cluster snapshot, or the ARN when specifying a Neptune snapshot.'
            status: '- The Neptune instance status'
            storage_encrypted: '- (Optional) Specifies whether the Neptune cluster is encrypted. The default is false if not specified.'
            tags: '- (Optional) A map of tags to assign to the Neptune cluster. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            update: '- (Default 120 minutes) Used for Cluster modifications'
            vpc_security_group_ids: '- (Optional) List of VPC security groups to associate with the Cluster'
        importStatements: []
    aws_neptune_cluster_endpoint:
        subCategory: Neptune
        description: Provides an Neptune Cluster Endpoint Resource
        name: aws_neptune_cluster_endpoint
        title: aws_neptune_cluster_endpoint
        examples:
            - name: example
              manifest: |-
                {
                  "cluster_endpoint_identifier": "example",
                  "cluster_identifier": "${aws_neptune_cluster.test.cluster_identifier}",
                  "endpoint_type": "READER"
                }
              references:
                cluster_identifier: aws_neptune_cluster.test.cluster_identifier
        argumentDocs:
            arn: '- The Neptune Cluster Endpoint Amazon Resource Name (ARN).'
            cluster_endpoint_identifier: '- (Required, Forces new resources) The identifier of the endpoint.'
            cluster_identifier: '- (Required, Forces new resources) The DB cluster identifier of the DB cluster associated with the endpoint.'
            endpoint: '- The DNS address of the endpoint.'
            endpoint_type: '- (Required) The type of the endpoint. One of: READER, WRITER, ANY.'
            excluded_members: '- (Optional) List of DB instance identifiers that aren''t part of the custom endpoint group. All other eligible instances are reachable through the custom endpoint. Only relevant if the list of static members is empty.'
            id: '- The Neptune Cluster Endpoint Identifier.'
            static_members: '- (Optional) List of DB instance identifiers that are part of the custom endpoint group.'
            tags: '- (Optional) A map of tags to assign to the Neptune cluster. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_neptune_cluster_instance:
        subCategory: Neptune
        description: Provides an Neptune Cluster Resource Instance
        name: aws_neptune_cluster_instance
        title: aws_neptune_cluster_instance
        examples:
            - name: example
              manifest: |-
                {
                  "apply_immediately": true,
                  "cluster_identifier": "${aws_neptune_cluster.default.id}",
                  "count": 2,
                  "engine": "neptune",
                  "instance_class": "db.r4.large"
                }
              references:
                cluster_identifier: aws_neptune_cluster.default.id
              dependencies:
                aws_neptune_cluster.default: |-
                    {
                      "apply_immediately": true,
                      "backup_retention_period": 5,
                      "cluster_identifier": "neptune-cluster-demo",
                      "engine": "neptune",
                      "iam_database_authentication_enabled": true,
                      "preferred_backup_window": "07:00-09:00",
                      "skip_final_snapshot": true
                    }
        argumentDocs:
            address: '- The hostname of the instance. See also endpoint and port.'
            apply_immediately: |-
                - (Optional) Specifies whether any instance modifications
                are applied immediately, or during the next maintenance window. Default isfalse.
            arn: '- Amazon Resource Name (ARN) of neptune instance'
            auto_minor_version_upgrade: '- (Optional) Indicates that minor engine upgrades will be applied automatically to the instance during the maintenance window. Default is true.'
            availability_zone: '- (Optional) The EC2 Availability Zone that the neptune instance is created in.'
            cluster_identifier: '- (Required) The identifier of the aws_neptune_cluster in which to launch this instance.'
            create: '- (Default 90 minutes) How long to wait for creating instances to become available.'
            dbi_resource_id: '- The region-unique, immutable identifier for the neptune instance.'
            delete: '- (Default 90 minutes) How long to wait for deleting instances to become fully deleted.'
            endpoint: '- The connection endpoint in address:port format.'
            engine: '- (Optional) The name of the database engine to be used for the neptune instance. Defaults to neptune. Valid Values: neptune.'
            engine_version: '- (Optional) The neptune engine version.'
            id: '- The Instance identifier'
            identifier: '- (Optional, Forces new resource) The identifier for the neptune instance, if omitted, Terraform will assign a random, unique identifier.'
            identifier_prefix: '- (Optional, Forces new resource) Creates a unique identifier beginning with the specified prefix. Conflicts with identifier.'
            instance_class: '- (Required) The instance class to use.'
            kms_key_arn: '- The ARN for the KMS encryption key if one is set to the neptune cluster.'
            neptune_parameter_group_name: '- (Optional) The name of the neptune parameter group to associate with this instance.'
            neptune_subnet_group_name: '- (Required if publicly_accessible = false, Optional otherwise) A subnet group to associate with this neptune instance. NOTE: This must match the neptune_subnet_group_name of the attached aws_neptune_cluster.'
            port: '- (Optional) The port on which the DB accepts connections. Defaults to 8182.'
            preferred_backup_window: '- (Optional) The daily time range during which automated backups are created if automated backups are enabled. Eg: "04:00-09:00"'
            preferred_maintenance_window: |-
                - (Optional) The window to perform maintenance in.
                Syntax: "ddd:hh24:mi-ddd:hh24:mi". Eg: "Mon:00:00-Mon:03:00".
            promotion_tier: '- (Optional) Default 0. Failover Priority setting on instance level. The reader who has lower tier has higher priority to get promoter to writer.'
            publicly_accessible: '- (Optional) Bool to control if instance is publicly accessible. Default is false.'
            storage_encrypted: '- Specifies whether the neptune cluster is encrypted.'
            tags: '- (Optional) A map of tags to assign to the instance. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            update: '- (Default 90 minutes) How long to wait for updating instances to complete updates.'
            writer: – Boolean indicating if this instance is writable. False indicates this instance is a read replica.
        importStatements: []
    aws_neptune_cluster_parameter_group:
        subCategory: Neptune
        description: Manages a Neptune Cluster Parameter Group
        name: aws_neptune_cluster_parameter_group
        title: aws_neptune_cluster_parameter_group
        examples:
            - name: example
              manifest: |-
                {
                  "description": "neptune cluster parameter group",
                  "family": "neptune1",
                  "name": "example",
                  "parameter": [
                    {
                      "name": "neptune_enable_audit_log",
                      "value": 1
                    }
                  ]
                }
        argumentDocs:
            apply_method: '- (Optional) Valid values are immediate and pending-reboot. Defaults to pending-reboot.'
            arn: '- The ARN of the neptune cluster parameter group.'
            description: '- (Optional) The description of the neptune cluster parameter group. Defaults to "Managed by Terraform".'
            family: '- (Required) The family of the neptune cluster parameter group.'
            id: '- The neptune cluster parameter group name.'
            name: '- (Optional, Forces new resource) The name of the neptune cluster parameter group. If omitted, Terraform will assign a random, unique name.'
            name_prefix: '- (Optional, Forces new resource) Creates a unique name beginning with the specified prefix. Conflicts with name.'
            parameter: '- (Optional) A list of neptune parameters to apply.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            value: '- (Required) The value of the neptune parameter.'
        importStatements: []
    aws_neptune_cluster_snapshot:
        subCategory: Neptune
        description: Manages a Neptune database cluster snapshot.
        name: aws_neptune_cluster_snapshot
        title: aws_neptune_cluster_snapshot
        examples:
            - name: example
              manifest: |-
                {
                  "db_cluster_identifier": "${aws_neptune_cluster.example.id}",
                  "db_cluster_snapshot_identifier": "resourcetestsnapshot1234"
                }
              references:
                db_cluster_identifier: aws_neptune_cluster.example.id
        argumentDocs:
            allocated_storage: '- Specifies the allocated storage size in gigabytes (GB).'
            availability_zones: '- List of EC2 Availability Zones that instances in the DB cluster snapshot can be restored in.'
            create: '- (Default 20m) How long to wait for the snapshot to be available.'
            db_cluster_identifier: '- (Required) The DB Cluster Identifier from which to take the snapshot.'
            db_cluster_snapshot_arn: '- The Amazon Resource Name (ARN) for the DB Cluster Snapshot.'
            db_cluster_snapshot_identifier: '- (Required) The Identifier for the snapshot.'
            engine: '- Specifies the name of the database engine.'
            engine_version: '- Version of the database engine for this DB cluster snapshot.'
            kms_key_id: '- If storage_encrypted is true, the AWS KMS key identifier for the encrypted DB cluster snapshot.'
            license_model: '- License model information for the restored DB cluster.'
            port: '- Port that the DB cluster was listening on at the time of the snapshot.'
            source_db_cluster_snapshot_identifier: '- The DB Cluster Snapshot Arn that the DB Cluster Snapshot was copied from. It only has value in case of cross customer or cross region copy.'
            status: '- The status of this DB Cluster Snapshot.'
            storage_encrypted: '- Specifies whether the DB cluster snapshot is encrypted.'
            vpc_id: '- The VPC ID associated with the DB cluster snapshot.'
        importStatements: []
    aws_neptune_event_subscription:
        subCategory: Neptune
        description: Provides a Neptune event subscription resource.
        name: aws_neptune_event_subscription
        title: aws_neptune_event_subscription
        examples:
            - name: default
              manifest: |-
                {
                  "event_categories": [
                    "maintenance",
                    "availability",
                    "creation",
                    "backup",
                    "restoration",
                    "recovery",
                    "deletion",
                    "failover",
                    "failure",
                    "notification",
                    "configuration change",
                    "read replica"
                  ],
                  "name": "neptune-event-sub",
                  "sns_topic_arn": "${aws_sns_topic.default.arn}",
                  "source_ids": [
                    "${aws_neptune_cluster_instance.example.id}"
                  ],
                  "source_type": "db-instance",
                  "tags": {
                    "env": "test"
                  }
                }
              references:
                sns_topic_arn: aws_sns_topic.default.arn
              dependencies:
                aws_neptune_cluster.default: |-
                    {
                      "apply_immediately": "true",
                      "backup_retention_period": 5,
                      "cluster_identifier": "neptune-cluster-demo",
                      "engine": "neptune",
                      "iam_database_authentication_enabled": "true",
                      "preferred_backup_window": "07:00-09:00",
                      "skip_final_snapshot": true
                    }
                aws_neptune_cluster_instance.example: |-
                    {
                      "apply_immediately": "true",
                      "cluster_identifier": "${aws_neptune_cluster.default.id}",
                      "engine": "neptune",
                      "instance_class": "db.r4.large"
                    }
                aws_sns_topic.default: |-
                    {
                      "name": "neptune-events"
                    }
        argumentDocs:
            arn: '- The Amazon Resource Name of the Neptune event notification subscription.'
            create: '- (Default 40m) How long to wait for creating event subscription to become available.'
            customer_aws_id: '- The AWS customer account associated with the Neptune event notification subscription.'
            delete: '- (Default 40m) How long to wait for deleting event subscription to become fully deleted.'
            enabled: '- (Optional) A boolean flag to enable/disable the subscription. Defaults to true.'
            event_categories: '- (Optional) A list of event categories for a source_type that you want to subscribe to. Run aws neptune describe-event-categories to find all the event categories.'
            id: '- The name of the Neptune event notification subscription.'
            name: '- (Optional) The name of the Neptune event subscription. By default generated by Terraform.'
            name_prefix: '- (Optional) The name of the Neptune event subscription. Conflicts with name.'
            sns_topic_arn: '- (Required) The ARN of the SNS topic to send events to.'
            source_ids: '- (Optional) A list of identifiers of the event sources for which events will be returned. If not specified, then all sources are included in the response. If specified, a source_type must also be specified.'
            source_type: '- (Optional) The type of source that will be generating the events. Valid options are db-instance, db-security-group, db-parameter-group, db-snapshot, db-cluster or db-cluster-snapshot. If not set, all sources will be subscribed to.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            update: '- (Default 40m) How long to wait for updating event subscription to complete updates.'
        importStatements: []
    aws_neptune_parameter_group:
        subCategory: Neptune
        description: Manages a Neptune Parameter Group
        name: aws_neptune_parameter_group
        title: aws_neptune_parameter_group
        examples:
            - name: example
              manifest: |-
                {
                  "family": "neptune1",
                  "name": "example",
                  "parameter": [
                    {
                      "name": "neptune_query_timeout",
                      "value": "25"
                    }
                  ]
                }
        argumentDocs:
            apply_method: '- (Optional) The apply method of the Neptune parameter. Valid values are immediate and pending-reboot. Defaults to pending-reboot.'
            arn: '- The Neptune parameter group Amazon Resource Name (ARN).'
            description: '- (Optional) The description of the Neptune parameter group. Defaults to "Managed by Terraform".'
            family: '- (Required) The family of the Neptune parameter group.'
            id: '- The Neptune parameter group name.'
            name: '- (Required, Forces new resource) The name of the Neptune parameter group.'
            parameter: '- (Optional) A list of Neptune parameters to apply.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            value: '- (Required) The value of the Neptune parameter.'
        importStatements: []
    aws_neptune_subnet_group:
        subCategory: Neptune
        description: Provides an Neptune subnet group resource.
        name: aws_neptune_subnet_group
        title: aws_neptune_subnet_group
        examples:
            - name: default
              manifest: |-
                {
                  "name": "main",
                  "subnet_ids": [
                    "${aws_subnet.frontend.id}",
                    "${aws_subnet.backend.id}"
                  ],
                  "tags": {
                    "Name": "My neptune subnet group"
                  }
                }
        argumentDocs:
            arn: '- The ARN of the neptune subnet group.'
            description: '- (Optional) The description of the neptune subnet group. Defaults to "Managed by Terraform".'
            id: '- The neptune subnet group name.'
            name: '- (Optional, Forces new resource) The name of the neptune subnet group. If omitted, Terraform will assign a random, unique name.'
            name_prefix: '- (Optional, Forces new resource) Creates a unique name beginning with the specified prefix. Conflicts with name.'
            subnet_ids: '- (Required) A list of VPC subnet IDs.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_network_acl:
        subCategory: VPC (Virtual Private Cloud)
        description: Provides an network ACL resource.
        name: aws_network_acl
        title: aws_network_acl
        examples:
            - name: main
              manifest: |-
                {
                  "egress": [
                    {
                      "action": "allow",
                      "cidr_block": "10.3.0.0/18",
                      "from_port": 443,
                      "protocol": "tcp",
                      "rule_no": 200,
                      "to_port": 443
                    }
                  ],
                  "ingress": [
                    {
                      "action": "allow",
                      "cidr_block": "10.3.0.0/18",
                      "from_port": 80,
                      "protocol": "tcp",
                      "rule_no": 100,
                      "to_port": 80
                    }
                  ],
                  "tags": {
                    "Name": "main"
                  },
                  "vpc_id": "${aws_vpc.main.id}"
                }
              references:
                vpc_id: aws_vpc.main.id
        argumentDocs:
            action: '- (Required) The action to take.'
            arn: '- The ARN of the network ACL'
            cidr_block: |-
                - (Optional) The CIDR block to match. This must be a
                valid network mask.
            egress: |-
                - (Optional) Specifies an egress rule. Parameters defined below.
                This argument is processed in attribute-as-blocks mode.
            from_port: '- (Required) The from port to match.'
            icmp_code: '- (Optional) The ICMP type code to be used. Default 0.'
            icmp_type: '- (Optional) The ICMP type to be used. Default 0.'
            id: '- The ID of the network ACL'
            ingress: |-
                - (Optional) Specifies an ingress rule. Parameters defined below.
                This argument is processed in attribute-as-blocks mode.
            ipv6_cidr_block: '- (Optional) The IPv6 CIDR block.'
            owner_id: '- The ID of the AWS account that owns the network ACL.'
            protocol: |-
                - (Required) The protocol to match. If using the -1 'all'
                protocol, you must specify a from and to port of 0.
            rule_no: '- (Required) The rule number. Used for ordering.'
            subnet_ids: '- (Optional) A list of Subnet IDs to apply the ACL to'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            to_port: '- (Required) The to port to match.'
            vpc_id: '- (Required) The ID of the associated VPC.'
        importStatements: []
    aws_network_acl_association:
        subCategory: VPC (Virtual Private Cloud)
        description: Provides an network ACL association resource.
        name: aws_network_acl_association
        title: aws_network_acl_association
        examples:
            - name: main
              manifest: |-
                {
                  "network_acl_id": "${aws_network_acl.main.id}",
                  "subnet_id": "${aws_subnet.main.id}"
                }
              references:
                network_acl_id: aws_network_acl.main.id
                subnet_id: aws_subnet.main.id
        argumentDocs:
            id: '- The ID of the network ACL association'
            network_acl_id: '- (Required) The ID of the network ACL.'
            subnet_id: '- (Required) The ID of the associated Subnet.'
        importStatements: []
    aws_network_acl_rule:
        subCategory: VPC (Virtual Private Cloud)
        description: Provides an network ACL Rule resource.
        name: aws_network_acl_rule
        title: aws_network_acl_rule
        examples:
            - name: bar
              manifest: |-
                {
                  "cidr_block": "${aws_vpc.foo.cidr_block}",
                  "egress": false,
                  "from_port": 22,
                  "network_acl_id": "${aws_network_acl.bar.id}",
                  "protocol": "tcp",
                  "rule_action": "allow",
                  "rule_number": 200,
                  "to_port": 22
                }
              references:
                cidr_block: aws_vpc.foo.cidr_block
                network_acl_id: aws_network_acl.bar.id
              dependencies:
                aws_network_acl.bar: |-
                    {
                      "vpc_id": "${aws_vpc.foo.id}"
                    }
        argumentDocs:
            cidr_block: '- (Optional) The network range to allow or deny, in CIDR notation (for example 172.16.0.0/24 ).'
            egress: '- (Optional, bool) Indicates whether this is an egress rule (rule is applied to traffic leaving the subnet). Default false.'
            from_port: '- (Optional) The from port to match.'
            icmp_code: '- (Optional) ICMP protocol: The ICMP code. Required if specifying ICMP for the protocolE.g., -1'
            icmp_type: '- (Optional) ICMP protocol: The ICMP type. Required if specifying ICMP for the protocolE.g., -1'
            id: '- The ID of the network ACL Rule'
            ipv6_cidr_block: '- (Optional) The IPv6 CIDR block to allow or deny.'
            network_acl_id: '- (Required) The ID of the network ACL.'
            protocol: '- (Required) The protocol. A value of -1 means all protocols.'
            rule_action: '- (Required) Indicates whether to allow or deny the traffic that matches the rule. Accepted values: allow | deny'
            rule_number: '- (Required) The rule number for the entry (for example, 100). ACL entries are processed in ascending order by rule number.'
            to_port: '- (Optional) The to port to match.'
        importStatements: []
    aws_network_interface:
        subCategory: VPC (Virtual Private Cloud)
        description: Provides an Elastic network interface (ENI) resource.
        name: aws_network_interface
        title: aws_network_interface
        examples:
            - name: test
              manifest: |-
                {
                  "attachment": [
                    {
                      "device_index": 1,
                      "instance": "${aws_instance.test.id}"
                    }
                  ],
                  "private_ips": [
                    "10.0.0.50"
                  ],
                  "security_groups": [
                    "${aws_security_group.web.id}"
                  ],
                  "subnet_id": "${aws_subnet.public_a.id}"
                }
              references:
                attachment.instance: aws_instance.test.id
                subnet_id: aws_subnet.public_a.id
        argumentDocs:
            arn: '- ARN of the network interface.'
            attachment: '- (Optional) Configuration block to define the attachment of the ENI. See Attachment below for more details!'
            attachment.device_index: '- (Required) Integer to define the devices index.'
            attachment.instance: '- (Required) ID of the instance to attach to.'
            description: '- (Optional) Description for the network interface.'
            id: '- ID of the network interface.'
            interface_type: '- (Optional) Type of network interface to create. Set to efa for Elastic Fabric Adapter. Changing interface_type will cause the resource to be destroyed and re-created.'
            ipv4_prefix_count: '- (Optional) Number of IPv4 prefixes that AWS automatically assigns to the network interface.'
            ipv4_prefixes: '- (Optional) One or more IPv4 prefixes assigned to the network interface.'
            ipv6_address_count: '- (Optional) Number of IPv6 addresses to assign to a network interface. You can''t use this option if specifying specific ipv6_addresses. If your subnet has the AssignIpv6AddressOnCreation attribute set to true, you can specify 0 to override this setting.'
            ipv6_address_list: '- (Optional) List of private IPs to assign to the ENI in sequential order.'
            ipv6_address_list_enable: '- (Optional) Whether ipv6_addreses_list is allowed and controls the IPs to assign to the ENI and ipv6_addresses and ipv6_addresses_count become read-only. Default false.'
            ipv6_addresses: '- (Optional) One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet. Addresses are assigned without regard to order. You can''t use this option if you''re specifying ipv6_address_count.'
            ipv6_prefix_count: '- (Optional) Number of IPv6 prefixes that AWS automatically assigns to the network interface.'
            ipv6_prefixes: '- (Optional) One or more IPv6 prefixes assigned to the network interface.'
            mac_address: '- MAC address of the network interface.'
            owner_id: '- AWS account ID of the owner of the network interface.'
            private_dns_name: '- Private DNS name of the network interface (IPv4).'
            private_ip_list: '- (Optional) List of private IPs to assign to the ENI in sequential order. Requires setting private_ip_list_enabled to true.'
            private_ip_list_enabled: '- (Optional) Whether private_ip_list is allowed and controls the IPs to assign to the ENI and private_ips and private_ips_count become read-only. Default false.'
            private_ips: '- (Optional) List of private IPs to assign to the ENI without regard to order.'
            private_ips_count: '- (Optional) Number of secondary private IPs to assign to the ENI. The total number of private IPs will be 1 + private_ips_count, as a primary private IP will be assiged to an ENI by default.'
            security_groups: '- (Optional) List of security group IDs to assign to the ENI.'
            source_dest_check: '- (Optional) Whether to enable source destination checking for the ENI. Default true.'
            subnet_id: '- (Required) Subnet ID to create the ENI in.'
            tags: '- (Optional) Map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_network_interface_attachment:
        subCategory: VPC (Virtual Private Cloud)
        description: Attach an Elastic network interface (ENI) resource with EC2 instance.
        name: aws_network_interface_attachment
        title: aws_network_interface_attachment
        examples:
            - name: test
              manifest: |-
                {
                  "device_index": 0,
                  "instance_id": "${aws_instance.test.id}",
                  "network_interface_id": "${aws_network_interface.test.id}"
                }
              references:
                instance_id: aws_instance.test.id
                network_interface_id: aws_network_interface.test.id
        argumentDocs:
            attachment_id: '- The ENI Attachment ID.'
            device_index: '- (Required) Network interface index (int).'
            instance_id: '- (Required) Instance ID to attach.'
            network_interface_id: '- (Required) ENI ID to attach.'
            status: '- The status of the Network Interface Attachment.'
        importStatements: []
    aws_network_interface_sg_attachment:
        subCategory: VPC (Virtual Private Cloud)
        description: Associates a security group with a network interface.
        name: aws_network_interface_sg_attachment
        title: aws_network_interface_sg_attachment
        examples:
            - name: sg_attachment
              manifest: |-
                {
                  "network_interface_id": "${aws_instance.instance.primary_network_interface_id}",
                  "security_group_id": "${aws_security_group.sg.id}"
                }
              references:
                network_interface_id: aws_instance.instance.primary_network_interface_id
                security_group_id: aws_security_group.sg.id
              dependencies:
                aws_instance.instance: |-
                    {
                      "ami": "${data.aws_ami.ami.id}",
                      "instance_type": "t2.micro",
                      "tags": {
                        "type": "terraform-test-instance"
                      }
                    }
                aws_security_group.sg: |-
                    {
                      "tags": {
                        "type": "terraform-test-security-group"
                      }
                    }
            - name: sg_attachment
              manifest: |-
                {
                  "network_interface_id": "${data.aws_instance.instance.network_interface_id}",
                  "security_group_id": "${aws_security_group.sg.id}"
                }
              references:
                network_interface_id: data.aws_instance.instance.network_interface_id
                security_group_id: aws_security_group.sg.id
              dependencies:
                aws_security_group.sg: |-
                    {
                      "tags": {
                        "type": "terraform-test-security-group"
                      }
                    }
        argumentDocs:
            network_interface_id: '- (Required) The ID of the network interface to attach to.'
            security_group_id: '- (Required) The ID of the security group.'
        importStatements: []
    aws_networkfirewall_firewall:
        subCategory: Network Firewall
        description: Provides an AWS Network Firewall Firewall resource.
        name: aws_networkfirewall_firewall
        title: aws_networkfirewall_firewall
        examples:
            - name: example
              manifest: |-
                {
                  "firewall_policy_arn": "${aws_networkfirewall_firewall_policy.example.arn}",
                  "name": "example",
                  "subnet_mapping": [
                    {
                      "subnet_id": "${aws_subnet.example.id}"
                    }
                  ],
                  "tags": {
                    "Tag1": "Value1",
                    "Tag2": "Value2"
                  },
                  "vpc_id": "${aws_vpc.example.id}"
                }
              references:
                firewall_policy_arn: aws_networkfirewall_firewall_policy.example.arn
                subnet_mapping.subnet_id: aws_subnet.example.id
                vpc_id: aws_vpc.example.id
        argumentDocs:
            arn: '- The Amazon Resource Name (ARN) that identifies the firewall.'
            attachment: '- Nested list describing the attachment status of the firewall''s association with a single VPC subnet.'
            availability_zone: '- The Availability Zone where the subnet is configured.'
            delete_protection: '- (Optional) A boolean flag indicating whether it is possible to delete the firewall. Defaults to false.'
            description: '- (Optional) A friendly description of the firewall.'
            endpoint_id: '- The identifier of the firewall endpoint that AWS Network Firewall has instantiated in the subnet. You use this to identify the firewall endpoint in the VPC route tables, when you redirect the VPC traffic through the endpoint.'
            firewall_policy_arn: '- (Required) The Amazon Resource Name (ARN) of the VPC Firewall policy.'
            firewall_policy_change_protection: '- (Option) A boolean flag indicating whether it is possible to change the associated firewall policy. Defaults to false.'
            firewall_status: '- Nested list of information about the current status of the firewall.'
            id: '- The Amazon Resource Name (ARN) that identifies the firewall.'
            name: '- (Required, Forces new resource) A friendly name of the firewall.'
            subnet_change_protection: '- (Optional) A boolean flag indicating whether it is possible to change the associated subnet(s). Defaults to false.'
            subnet_id: '- The unique identifier of the subnet that you''ve specified to be used for a firewall endpoint.'
            subnet_mapping: '- (Required) Set of configuration blocks describing the public subnets. Each subnet must belong to a different Availability Zone in the VPC. AWS Network Firewall creates a firewall endpoint in each subnet. See Subnet Mapping below for details.'
            subnet_mapping.subnet_id: '- (Required) The unique identifier for the subnet.'
            sync_states: '- Set of subnets configured for use by the firewall.'
            tags: '- (Optional) Map of resource tags to associate with the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            update_token: '- A string token used when updating a firewall.'
            vpc_id: '- (Required, Forces new resource) The unique identifier of the VPC where AWS Network Firewall should create the firewall.'
        importStatements: []
    aws_networkfirewall_firewall_policy:
        subCategory: Network Firewall
        description: Provides an AWS Network Firewall Policy resource.
        name: aws_networkfirewall_firewall_policy
        title: aws_networkfirewall_firewall_policy
        examples:
            - name: example
              manifest: |-
                {
                  "firewall_policy": [
                    {
                      "stateless_default_actions": [
                        "aws:pass"
                      ],
                      "stateless_fragment_default_actions": [
                        "aws:drop"
                      ],
                      "stateless_rule_group_reference": [
                        {
                          "priority": 1,
                          "resource_arn": "${aws_networkfirewall_rule_group.example.arn}"
                        }
                      ]
                    }
                  ],
                  "name": "example",
                  "tags": {
                    "Tag1": "Value1",
                    "Tag2": "Value2"
                  }
                }
              references:
                firewall_policy.stateless_rule_group_reference.resource_arn: aws_networkfirewall_rule_group.example.arn
            - name: test
              manifest: |-
                {
                  "firewall_policy": [
                    {
                      "stateless_custom_action": [
                        {
                          "action_definition": [
                            {
                              "publish_metric_action": [
                                {
                                  "dimension": [
                                    {
                                      "value": "1"
                                    }
                                  ]
                                }
                              ]
                            }
                          ],
                          "action_name": "ExampleCustomAction"
                        }
                      ],
                      "stateless_default_actions": [
                        "aws:pass",
                        "ExampleCustomAction"
                      ],
                      "stateless_fragment_default_actions": [
                        "aws:drop"
                      ]
                    }
                  ],
                  "name": "example"
                }
        argumentDocs:
            action_definition.publish_metric_action: '- (Required) A configuration block describing the stateless inspection criteria that publishes the specified metrics to Amazon CloudWatch for the matching packet. You can pair this custom action with any of the standard stateless rule actions. See Publish Metric Action below for details.'
            action_definition.publish_metric_action.dimension: '- (Required) Set of configuration blocks describing dimension settings to use for Amazon CloudWatch custom metrics. See Dimension below for more details.'
            action_definition.publish_metric_action.dimension.value: '- (Required) The string value to use in the custom metric dimension.'
            arn: '- The Amazon Resource Name (ARN) that identifies the firewall policy.'
            description: '- (Optional) A friendly description of the firewall policy.'
            firewall_policy: '- (Required) A configuration block describing the rule groups and policy actions to use in the firewall policy. See Firewall Policy below for details.'
            firewall_policy.stateful_default_actions: '- (Optional) Set of actions to take on a packet if it does not match any stateful rules in the policy. This can only be specified if the policy has a stateful_engine_options block with a rule_order value of STRICT_ORDER. You can specify one of either or neither values of aws:drop_strict or aws:drop_established, as well as any combination of aws:alert_strict and aws:alert_established.'
            firewall_policy.stateful_engine_options: '- (Optional) A configuration block that defines options on how the policy handles stateful rules. See Stateful Engine Options below for details.'
            firewall_policy.stateful_rule_group_reference: '- (Optional) Set of configuration blocks containing references to the stateful rule groups that are used in the policy. See Stateful Rule Group Reference below for details.'
            firewall_policy.stateless_custom_action: '- (Optional) Set of configuration blocks describing the custom action definitions that are available for use in the firewall policy''s stateless_default_actions. See Stateless Custom Action below for details.'
            firewall_policy.stateless_default_actions: |-
                - (Required) Set of actions to take on a packet if it does not match any of the stateless rules in the policy. You must specify one of the standard actions including: aws:drop, aws:pass, or aws:forward_to_sfe.
                In addition, you can specify custom actions that are compatible with your standard action choice. If you want non-matching packets to be forwarded for stateful inspection, specify aws:forward_to_sfe.
            firewall_policy.stateless_fragment_default_actions: |-
                - (Required) Set of actions to take on a fragmented packet if it does not match any of the stateless rules in the policy. You must specify one of the standard actions including: aws:drop, aws:pass, or aws:forward_to_sfe.
                In addition, you can specify custom actions that are compatible with your standard action choice. If you want non-matching packets to be forwarded for stateful inspection, specify aws:forward_to_sfe.
            firewall_policy.stateless_rule_group_reference: '- (Optional) Set of configuration blocks containing references to the stateless rule groups that are used in the policy. See Stateless Rule Group Reference below for details.'
            id: '- The Amazon Resource Name (ARN) that identifies the firewall policy.'
            name: '- (Required, Forces new resource) A friendly name of the firewall policy.'
            stateful_engine_options.rule_order: '- (Required) Indicates how to manage the order of stateful rule evaluation for the policy. Default value: DEFAULT_ACTION_ORDER. Valid values: DEFAULT_ACTION_ORDER, STRICT_ORDER.'
            stateful_rule_group_reference.priority: '- (Optional) An integer setting that indicates the order in which to apply the stateful rule groups in a single policy. This argument must be specified if the policy has a stateful_engine_options block with a rule_order value of STRICT_ORDER. AWS Network Firewall applies each stateful rule group to a packet starting with the group that has the lowest priority setting.'
            stateful_rule_group_reference.resource_arn: '- (Required) The Amazon Resource Name (ARN) of the stateful rule group.'
            stateless_custom_action.action_definition: '- (Required) A configuration block describing the custom action associated with the action_name. See Action Definition below for details.'
            stateless_custom_action.action_name: '- (Required, Forces new resource) A friendly name of the custom action.'
            stateless_rule_group_reference.priority: '- (Required) An integer setting that indicates the order in which to run the stateless rule groups in a single policy. AWS Network Firewall applies each stateless rule group to a packet starting with the group that has the lowest priority setting.'
            stateless_rule_group_reference.resource_arn: '- (Required) The Amazon Resource Name (ARN) of the stateless rule group.'
            tags: '- (Optional) Map of resource tags to associate with the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            update_token: '- A string token used when updating a firewall policy.'
        importStatements: []
    aws_networkfirewall_logging_configuration:
        subCategory: Network Firewall
        description: Provides an AWS Network Firewall Logging Configuration resource.
        name: aws_networkfirewall_logging_configuration
        title: aws_networkfirewall_logging_configuration
        examples:
            - name: example
              manifest: |-
                {
                  "firewall_arn": "${aws_networkfirewall_firewall.example.arn}",
                  "logging_configuration": [
                    {
                      "log_destination_config": [
                        {
                          "log_destination": {
                            "bucketName": "${aws_s3_bucket.example.bucket}",
                            "prefix": "/example"
                          },
                          "log_destination_type": "S3",
                          "log_type": "FLOW"
                        }
                      ]
                    }
                  ]
                }
              references:
                firewall_arn: aws_networkfirewall_firewall.example.arn
            - name: example
              manifest: |-
                {
                  "firewall_arn": "${aws_networkfirewall_firewall.example.arn}",
                  "logging_configuration": [
                    {
                      "log_destination_config": [
                        {
                          "log_destination": {
                            "logGroup": "${aws_cloudwatch_log_group.example.name}"
                          },
                          "log_destination_type": "CloudWatchLogs",
                          "log_type": "ALERT"
                        }
                      ]
                    }
                  ]
                }
              references:
                firewall_arn: aws_networkfirewall_firewall.example.arn
            - name: example
              manifest: |-
                {
                  "firewall_arn": "${aws_networkfirewall_firewall.example.arn}",
                  "logging_configuration": [
                    {
                      "log_destination_config": [
                        {
                          "log_destination": {
                            "deliveryStream": "${aws_kinesis_firehose_delivery_stream.example.name}"
                          },
                          "log_destination_type": "KinesisDataFirehose",
                          "log_type": "ALERT"
                        }
                      ]
                    }
                  ]
                }
              references:
                firewall_arn: aws_networkfirewall_firewall.example.arn
        argumentDocs:
            bucketName: with the name of the bucket and optionally specify the key prefix with a path.
            deliveryStream: with the name of the delivery stream.
            firewall_arn: '- (Required, Forces new resource) The Amazon Resource Name (ARN) of the Network Firewall firewall.'
            id: '- The Amazon Resource Name (ARN) of the associated firewall.'
            logGroup: with the name of the CloudWatch log group.
            logging_configuration: '- (Required) A configuration block describing how AWS Network Firewall performs logging for a firewall. See Logging Configuration below for details.'
            logging_configuration.log_destination_config: '- (Required) Set of configuration blocks describing the logging details for a firewall. See Log Destination Config below for details. At most, only two blocks can be specified; one for FLOW logs and one for ALERT logs.'
            logging_configuration.log_destination_config.log_destination: '- (Required) A map describing the logging destination for the chosen log_destination_type.'
            logging_configuration.log_destination_config.log_destination_type: '- (Required) The location to send logs to. Valid values: S3, CloudWatchLogs, KinesisDataFirehose.'
            logging_configuration.log_destination_config.log_type: '- (Required) The type of log to send. Valid values: ALERT or FLOW. Alert logs report traffic that matches a StatefulRule with an action setting that sends a log message. Flow logs are standard network traffic flow logs.'
        importStatements: []
    aws_networkfirewall_resource_policy:
        subCategory: Network Firewall
        description: Provides an AWS Network Firewall Resource Policy resource.
        name: aws_networkfirewall_resource_policy
        title: aws_networkfirewall_resource_policy
        examples:
            - name: example
              manifest: |-
                {
                  "policy": "${jsonencode({\n    Statement = [{\n      Action = [\n        \"network-firewall:ListFirewallPolicies\",\n        \"network-firewall:CreateFirewall\",\n        \"network-firewall:UpdateFirewall\",\n        \"network-firewall:AssociateFirewallPolicy\"\n      ]\n      Effect   = \"Allow\"\n      Resource = aws_networkfirewall_firewall_policy.example.arn\n      Principal = {\n        AWS = \"arn:aws:iam::123456789012:root\"\n      }\n    }]\n    Version = \"2012-10-17\"\n  })}",
                  "resource_arn": "${aws_networkfirewall_firewall_policy.example.arn}"
                }
              references:
                resource_arn: aws_networkfirewall_firewall_policy.example.arn
            - name: example
              manifest: |-
                {
                  "policy": "${jsonencode({\n    Statement = [{\n      Action = [\n        \"network-firewall:ListRuleGroups\",\n        \"network-firewall:CreateFirewallPolicy\",\n        \"network-firewall:UpdateFirewallPolicy\"\n      ]\n      Effect   = \"Allow\"\n      Resource = aws_networkfirewall_rule_group.example.arn\n      Principal = {\n        AWS = \"arn:aws:iam::123456789012:root\"\n      }\n    }]\n    Version = \"2012-10-17\"\n  })}",
                  "resource_arn": "${aws_networkfirewall_rule_group.example.arn}"
                }
              references:
                resource_arn: aws_networkfirewall_rule_group.example.arn
        argumentDocs:
            id: '- The Amazon Resource Name (ARN) of the rule group or firewall policy associated with the resource policy.'
            policy: '- (Required) JSON formatted policy document that controls access to the Network Firewall resource. The policy must be provided without whitespaces.  It is recommended to use jsonencode for formatting as seen in the examples above. For more details, including available policy statement Actions, see the Policy parameter in the AWS API documentation.'
            resource_arn: '- (Required, Forces new resource) The Amazon Resource Name (ARN) of the rule group or firewall policy.'
        importStatements: []
    aws_networkfirewall_rule_group:
        subCategory: Network Firewall
        description: Provides an AWS Network Firewall Rule Group resource.
        name: aws_networkfirewall_rule_group
        title: aws_networkfirewall_rule_group
        examples:
            - name: example
              manifest: |-
                {
                  "capacity": 100,
                  "name": "example",
                  "rule_group": [
                    {
                      "rules_source": [
                        {
                          "rules_source_list": [
                            {
                              "generated_rules_type": "DENYLIST",
                              "target_types": [
                                "HTTP_HOST"
                              ],
                              "targets": [
                                "test.example.com"
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "tags": {
                    "Tag1": "Value1",
                    "Tag2": "Value2"
                  },
                  "type": "STATEFUL"
                }
            - name: example
              manifest: |-
                {
                  "capacity": 50,
                  "description": "Permits http traffic from source",
                  "name": "example",
                  "rule_group": [
                    {
                      "rules_source": [
                        {
                          "dynamic": {
                            "stateful_rule": [
                              {
                                "content": [
                                  {
                                    "action": "PASS",
                                    "header": [
                                      {
                                        "destination": "ANY",
                                        "destination_port": "ANY",
                                        "direction": "ANY",
                                        "protocol": "HTTP",
                                        "source": "${stateful_rule.value}",
                                        "source_port": "ANY"
                                      }
                                    ],
                                    "rule_option": [
                                      {
                                        "keyword": "sid:1"
                                      }
                                    ]
                                  }
                                ],
                                "for_each": "${local.ips}"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ],
                  "tags": {
                    "Name": "permit HTTP from source"
                  },
                  "type": "STATEFUL"
                }
              references:
                rule_group.rules_source.dynamic.content.header.source: stateful_rule.value
                rule_group.rules_source.dynamic.for_each: local.ips
            - name: example
              manifest: |-
                {
                  "capacity": 100,
                  "name": "example",
                  "rule_group": [
                    {
                      "rules_source": [
                        {
                          "stateful_rule": [
                            {
                              "action": "DROP",
                              "header": [
                                {
                                  "destination": "124.1.1.24/32",
                                  "destination_port": 53,
                                  "direction": "ANY",
                                  "protocol": "TCP",
                                  "source": "1.2.3.4/32",
                                  "source_port": 53
                                }
                              ],
                              "rule_option": [
                                {
                                  "keyword": "sid:1"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "tags": {
                    "Tag1": "Value1",
                    "Tag2": "Value2"
                  },
                  "type": "STATEFUL"
                }
            - name: example
              manifest: |-
                {
                  "capacity": 100,
                  "name": "example",
                  "rules": "${file(\"example.rules\")}",
                  "tags": {
                    "Tag1": "Value1",
                    "Tag2": "Value2"
                  },
                  "type": "STATEFUL"
                }
            - name: example
              manifest: |-
                {
                  "capacity": 100,
                  "name": "example",
                  "rule_group": [
                    {
                      "rule_variables": [
                        {
                          "ip_sets": [
                            {
                              "ip_set": [
                                {
                                  "definition": [
                                    "10.0.0.0/16",
                                    "10.0.1.0/24",
                                    "192.168.0.0/16"
                                  ]
                                }
                              ],
                              "key": "WEBSERVERS_HOSTS"
                            },
                            {
                              "ip_set": [
                                {
                                  "definition": [
                                    "1.2.3.4/32"
                                  ]
                                }
                              ],
                              "key": "EXTERNAL_HOST"
                            }
                          ],
                          "port_sets": [
                            {
                              "key": "HTTP_PORTS",
                              "port_set": [
                                {
                                  "definition": [
                                    "443",
                                    "80"
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "rules_source": [
                        {
                          "rules_string": "${file(\"suricata_rules_file\")}"
                        }
                      ]
                    }
                  ],
                  "tags": {
                    "Tag1": "Value1",
                    "Tag2": "Value2"
                  },
                  "type": "STATEFUL"
                }
            - name: example
              manifest: |-
                {
                  "capacity": 100,
                  "description": "Stateless Rate Limiting Rule",
                  "name": "example",
                  "rule_group": [
                    {
                      "rules_source": [
                        {
                          "stateless_rules_and_custom_actions": [
                            {
                              "custom_action": [
                                {
                                  "action_definition": [
                                    {
                                      "publish_metric_action": [
                                        {
                                          "dimension": [
                                            {
                                              "value": "2"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ],
                                  "action_name": "ExampleMetricsAction"
                                }
                              ],
                              "stateless_rule": [
                                {
                                  "priority": 1,
                                  "rule_definition": [
                                    {
                                      "actions": [
                                        "aws:pass",
                                        "ExampleMetricsAction"
                                      ],
                                      "match_attributes": [
                                        {
                                          "destination": [
                                            {
                                              "address_definition": "124.1.1.5/32"
                                            }
                                          ],
                                          "destination_port": [
                                            {
                                              "from_port": 443,
                                              "to_port": 443
                                            }
                                          ],
                                          "protocols": [
                                            6
                                          ],
                                          "source": [
                                            {
                                              "address_definition": "1.2.3.4/32"
                                            }
                                          ],
                                          "source_port": [
                                            {
                                              "from_port": 443,
                                              "to_port": 443
                                            }
                                          ],
                                          "tcp_flag": [
                                            {
                                              "flags": [
                                                "SYN"
                                              ],
                                              "masks": [
                                                "SYN",
                                                "ACK"
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "tags": {
                    "Tag1": "Value1",
                    "Tag2": "Value2"
                  },
                  "type": "STATELESS"
                }
        argumentDocs:
            action_definition.publish_metric_action: '- (Required) A configuration block describing the stateless inspection criteria that publishes the specified metrics to Amazon CloudWatch for the matching packet. You can pair this custom action with any of the standard stateless rule actions. See Publish Metric Action below for details.'
            action_definition.publish_metric_action.dimension: '- (Required) Set of configuration blocks containing the dimension settings to use for Amazon CloudWatch custom metrics. See Dimension below for details.'
            action_definition.publish_metric_action.dimension.value: '- (Required) The value to use in the custom metric dimension.'
            arn: '- The Amazon Resource Name (ARN) that identifies the rule group.'
            capacity: '- (Required, Forces new resource) The maximum number of operating resources that this rule group can use. For a stateless rule group, the capacity required is the sum of the capacity requirements of the individual rules. For a stateful rule group, the minimum capacity required is the number of individual rules.'
            custom_action.action_definition: '- (Required) A configuration block describing the custom action associated with the action_name. See Action Definition below for details.'
            custom_action.action_name: '- (Required, Forces new resource) A friendly name of the custom action.'
            description: '- (Optional) A friendly description of the rule group.'
            destination.address_definition: '- (Required)  An IP address or a block of IP addresses in CIDR notation. AWS Network Firewall supports all address ranges for IPv4.'
            destination_port.from_port: '- (Required) The lower limit of the port range. This must be less than or equal to the to_port.'
            destination_port.to_port: '- (Optional) The upper limit of the port range. This must be greater than or equal to the from_port.'
            header.destination: '- (Required) The destination IP address or address range to inspect for, in CIDR notation. To match with any address, specify ANY.'
            header.destination_port: '- (Required) The destination port to inspect for. To match with any address, specify ANY.'
            header.direction: '- (Required) The direction of traffic flow to inspect. Valid values: ANY or FORWARD.'
            header.protocol: '- (Required) The protocol to inspect. Valid values: IP, TCP, UDP, ICMP, HTTP, FTP, TLS, SMB, DNS, DCERPC, SSH, SMTP, IMAP, MSN, KRB5, IKEV2, TFTP, NTP, DHCP.'
            header.source: '- (Required) The source IP address or address range for, in CIDR notation. To match with any address, specify ANY.'
            header.source_port: '- (Required) The source port to inspect for. To match with any address, specify ANY.'
            id: '- The Amazon Resource Name (ARN) that identifies the rule group.'
            ip_set.definition: '- (Required) Set of IP addresses and address ranges, in CIDR notation.'
            ip_sets.ip_set: '- (Required) A configuration block that defines a set of IP addresses. See IP Set below for details.'
            ip_sets.key: '- (Required) A unique alphanumeric string to identify the ip_set.'
            match_attributes.destination: '- (Optional) Set of configuration blocks describing the destination IP address and address ranges to inspect for, in CIDR notation. If not specified, this matches with any destination address. See Destination below for details.'
            match_attributes.destination_port: '- (Optional) Set of configuration blocks describing the destination ports to inspect for. If not specified, this matches with any destination port. See Destination Port below for details.'
            match_attributes.protocols: '- (Optional) Set of protocols to inspect for, specified using the protocol''s assigned internet protocol number (IANA). If not specified, this matches with any protocol.'
            match_attributes.source: '- (Optional) Set of configuration blocks describing the source IP address and address ranges to inspect for, in CIDR notation. If not specified, this matches with any source address. See Source below for details.'
            match_attributes.source_port: '- (Optional) Set of configuration blocks describing the source ports to inspect for. If not specified, this matches with any source port. See Source Port below for details.'
            match_attributes.tcp_flag: '- (Optional) Set of configuration blocks containing the TCP flags and masks to inspect for. If not specified, this matches with any settings.'
            name: '- (Required, Forces new resource) A friendly name of the rule group.'
            port_set.definition: '- (Required) Set of port ranges.'
            port_sets.key: '- (Required) An unique alphanumeric string to identify the port_set.'
            port_sets.port_set: '- (Required) A configuration block that defines a set of port ranges. See Port Set below for details.'
            rule_definition.actions: '- (Required) Set of actions to take on a packet that matches one of the stateless rule definition''s match_attributes. For every rule you must specify 1 standard action, and you can add custom actions. Standard actions include: aws:pass, aws:drop, aws:forward_to_sfe.'
            rule_definition.match_attributes: '- (Required) A configuration block containing criteria for AWS Network Firewall to use to inspect an individual packet in stateless rule inspection. See Match Attributes below for details.'
            rule_group: '- (Optional) A configuration block that defines the rule group rules. Required unless rules is specified. See Rule Group below for details.'
            rule_group.rule_variables: '- (Optional) A configuration block that defines additional settings available to use in the rules defined in the rule group. Can only be specified for stateful rule groups. See Rule Variables below for details.'
            rule_group.rules_source: '- (Required) A configuration block that defines the stateful or stateless rules for the rule group. See Rules Source below for details.'
            rule_group.stateful_rule_options: '- (Optional) A configuration block that defines stateful rule options for the rule group. See Stateful Rule Options below for details.'
            rule_option.keyword: |-
                - (Required) Keyword defined by open source detection systems like Snort or Suricata for stateful rule inspection.
                See Snort General Rule Options or Suricata Rule Options for more details.
            rule_option.settings: '- (Optional) Set of strings for additional settings to use in stateful rule inspection.'
            rule_variables.ip_sets: '- (Optional) Set of configuration blocks that define IP address information. See IP Sets below for details.'
            rule_variables.port_sets: '- (Optional) Set of configuration blocks that define port range information. See Port Sets below for details.'
            rules: '- (Optional) The stateful rule group rules specifications in Suricata file format, with one rule per line. Use this to import your existing Suricata compatible rule groups. Required unless rule_group is specified.'
            rules_source.rules_source_list: '- (Optional) A configuration block containing stateful inspection criteria for a domain list rule group. See Rules Source List below for details.'
            rules_source.rules_string: '- (Optional) The fully qualified name of a file in an S3 bucket that contains Suricata compatible intrusion preventions system (IPS) rules or the Suricata rules as a string. These rules contain stateful inspection criteria and the action to take for traffic that matches the criteria.'
            rules_source.stateful_rule: '- (Optional) Set of configuration blocks containing stateful inspection criteria for 5-tuple rules to be used together in a rule group. See Stateful Rule below for details.'
            rules_source.stateless_rules_and_custom_actions: '- (Optional) A configuration block containing stateless inspection criteria for a stateless rule group. See Stateless Rules and Custom Actions below for details.'
            rules_source_list.generated_rules_type: '- (Required) String value to specify whether domains in the target list are allowed or denied access. Valid values: ALLOWLIST, DENYLIST.'
            rules_source_list.target_types: '- (Required) Set of types of domain specifications that are provided in the targets argument. Valid values: HTTP_HOST, TLS_SNI.'
            rules_source_list.targets: '- (Required) Set of domains that you want to inspect for in your traffic flows.'
            source.address_definition: '- (Required)  An IP address or a block of IP addresses in CIDR notation. AWS Network Firewall supports all address ranges for IPv4.'
            source_port.from_port: '- (Required) The lower limit of the port range. This must be less than or equal to the to_port.'
            source_port.to_port: '- (Optional) The upper limit of the port range. This must be greater than or equal to the from_port.'
            stateful_rule.action: '- (Required) Action to take with packets in a traffic flow when the flow matches the stateful rule criteria. For all actions, AWS Network Firewall performs the specified action and discontinues stateful inspection of the traffic flow. Valid values: ALERT, DROP or PASS.'
            stateful_rule.header: '- (Required) A configuration block containing the stateful 5-tuple inspection criteria for the rule, used to inspect traffic flows. See Header below for details.'
            stateful_rule.rule_option: '- (Required) Set of configuration blocks containing additional settings for a stateful rule. See Rule Option below for details.'
            stateful_rule_options.rule_order: '- (Required) Indicates how to manage the order of the rule evaluation for the rule group. Default value: DEFAULT_ACTION_ORDER. Valid values: DEFAULT_ACTION_ORDER, STRICT_ORDER.'
            stateless_rule.priority: '- (Required) A setting that indicates the order in which to run this rule relative to all of the rules that are defined for a stateless rule group. AWS Network Firewall evaluates the rules in a rule group starting with the lowest priority setting.'
            stateless_rule.rule_definition: '- (Required) A configuration block defining the stateless 5-tuple packet inspection criteria and the action to take on a packet that matches the criteria. See Rule Definition below for details.'
            stateless_rules_and_custom_actions.custom_action: '- (Optional) Set of configuration blocks containing custom action definitions that are available for use by the set of stateless rule. See Custom Action below for details.'
            stateless_rules_and_custom_actions.stateless_rule: '- (Required) Set of configuration blocks containing the stateless rules for use in the stateless rule group. See Stateless Rule below for details.'
            tags: '- (Optional) A map of key:value pairs to associate with the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            tcp_flag.flags: |-
                - (Required) Set of flags to look for in a packet. This setting can only specify values that are also specified in masks.
                Valid values: FIN, SYN, RST, PSH, ACK, URG, ECE, CWR.
            tcp_flag.masks: |-
                - (Optional) Set of flags to consider in the inspection. To inspect all flags, leave this empty.
                Valid values: FIN, SYN, RST, PSH, ACK, URG, ECE, CWR.
            type: '- (Required) Whether the rule group is stateless (containing stateless rules) or stateful (containing stateful rules). Valid values include: STATEFUL or STATELESS.'
            update_token: '- A string token used when updating the rule group.'
        importStatements: []
    aws_networkmanager_connection:
        subCategory: Network Manager
        description: Creates a connection between two devices.
        name: aws_networkmanager_connection
        title: aws_networkmanager_connection
        examples:
            - name: example
              manifest: |-
                {
                  "connected_device_id": "${aws_networkmanager_device.example2.id}",
                  "device_id": "${aws_networkmanager_device.example1.id}",
                  "global_network_id": "${aws_networkmanager_global_network.example.id}"
                }
              references:
                connected_device_id: aws_networkmanager_device.example2.id
                device_id: aws_networkmanager_device.example1.id
                global_network_id: aws_networkmanager_global_network.example.id
        argumentDocs:
            arn: '- The Amazon Resource Name (ARN) of the connection.'
            connected_device_id: '- (Required) The ID of the second device in the connection.'
            connected_link_id: '- (Optional) The ID of the link for the second device.'
            description: '- (Optional) A description of the connection.'
            device_id: '- (Required) The ID of the first device in the connection.'
            global_network_id: '- (Required) The ID of the global network.'
            link_id: '- (Optional) The ID of the link for the first device.'
            tags: '- (Optional) Key-value tags for the connection. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_networkmanager_customer_gateway_association:
        subCategory: Network Manager
        description: Associates a customer gateway with a device and optionally, with a link.
        name: aws_networkmanager_customer_gateway_association
        title: aws_networkmanager_customer_gateway_association
        examples:
            - name: example
              manifest: |-
                {
                  "customer_gateway_arn": "${aws_customer_gateway.example.arn}",
                  "depends_on": [
                    "${aws_networkmanager_transit_gateway_registration.example}"
                  ],
                  "device_id": "${aws_networkmanager_device.example.id}",
                  "global_network_id": "${aws_networkmanager_global_network.example.id}"
                }
              references:
                customer_gateway_arn: aws_customer_gateway.example.arn
                device_id: aws_networkmanager_device.example.id
                global_network_id: aws_networkmanager_global_network.example.id
              dependencies:
                aws_customer_gateway.example: |-
                    {
                      "bgp_asn": 65000,
                      "ip_address": "172.83.124.10",
                      "type": "ipsec.1"
                    }
                aws_ec2_transit_gateway.example: '{}'
                aws_networkmanager_device.example: |-
                    {
                      "global_network_id": "${aws_networkmanager_global_network.example.id}",
                      "site_id": "${aws_networkmanager_site.example.id}"
                    }
                aws_networkmanager_global_network.example: |-
                    {
                      "description": "example"
                    }
                aws_networkmanager_site.example: |-
                    {
                      "global_network_id": "${aws_networkmanager_global_network.example.id}"
                    }
                aws_networkmanager_transit_gateway_registration.example: |-
                    {
                      "depends_on": [
                        "${aws_vpn_connection.example}"
                      ],
                      "global_network_id": "${aws_networkmanager_global_network.example.id}",
                      "transit_gateway_arn": "${aws_ec2_transit_gateway.example.arn}"
                    }
                aws_vpn_connection.example: |-
                    {
                      "customer_gateway_id": "${aws_customer_gateway.example.id}",
                      "static_routes_only": true,
                      "transit_gateway_id": "${aws_ec2_transit_gateway.example.id}",
                      "type": "${aws_customer_gateway.example.type}"
                    }
        argumentDocs:
            customer_gateway_arn: '- (Required) The Amazon Resource Name (ARN) of the customer gateway.'
            device_id: '- (Required) The ID of the device.'
            global_network_id: '- (Required) The ID of the global network.'
            link_id: '- (Optional) The ID of the link.'
        importStatements: []
    aws_networkmanager_device:
        subCategory: Network Manager
        description: Creates a device in a global network.
        name: aws_networkmanager_device
        title: aws_networkmanager_device
        examples:
            - name: example
              manifest: |-
                {
                  "global_network_id": "${aws_networkmanager_global_network.example.id}",
                  "site_id": "${aws_networkmanager_site.example.id}"
                }
              references:
                global_network_id: aws_networkmanager_global_network.example.id
                site_id: aws_networkmanager_site.example.id
        argumentDocs:
            address: '- (Optional) The physical address.'
            arn: '- The Amazon Resource Name (ARN) of the device.'
            aws_location: '- (Optional) The AWS location of the device. Documented below.'
            description: '- (Optional) A description of the device.'
            global_network_id: '- (Required) The ID of the global network.'
            latitude: '- (Optional) The latitude.'
            location: '- (Optional) The location of the device. Documented below.'
            longitude: '- (Optional) The longitude.'
            model: '- (Optional) The model of device.'
            serial_number: '- (Optional) The serial number of the device.'
            site_id: '- (Optional) The ID of the site.'
            subnet_arn: '- (Optional) The Amazon Resource Name (ARN) of the subnet that the device is located in.'
            tags: '- (Optional) Key-value tags for the device. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            type: '- (Optional) The type of device.'
            vendor: '- (Optional) The vendor of the device.'
            zone: '- (Optional) The Zone that the device is located in. Specify the ID of an Availability Zone, Local Zone, Wavelength Zone, or an Outpost.'
        importStatements: []
    aws_networkmanager_global_network:
        subCategory: Network Manager
        description: Provides a global network resource.
        name: aws_networkmanager_global_network
        title: aws_networkmanager_global_network
        examples:
            - name: example
              manifest: |-
                {
                  "description": "example"
                }
        argumentDocs:
            arn: '- Global Network Amazon Resource Name (ARN)'
            description: '- (Optional) Description of the Global Network.'
            tags: '- (Optional) Key-value tags for the Global Network. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_networkmanager_link:
        subCategory: Network Manager
        description: Creates a link for a site.
        name: aws_networkmanager_link
        title: aws_networkmanager_link
        examples:
            - name: example
              manifest: |-
                {
                  "bandwidth": [
                    {
                      "download_speed": 50,
                      "upload_speed": 10
                    }
                  ],
                  "global_network_id": "${aws_networkmanager_global_network.example.id}",
                  "provider_name": "MegaCorp",
                  "site_id": "${aws_networkmanager_global_site.example.id}"
                }
              references:
                global_network_id: aws_networkmanager_global_network.example.id
                site_id: aws_networkmanager_global_site.example.id
        argumentDocs:
            arn: '- Link Amazon Resource Name (ARN).'
            bandwidth: '- (Required) The upload speed and download speed in Mbps. Documented below.'
            description: '- (Optional) A description of the link.'
            download_speed: '- (Optional) Download speed in Mbps.'
            global_network_id: '- (Required) The ID of the global network.'
            provider_name: '- (Optional) The provider of the link.'
            site_id: '- (Required) The ID of the site.'
            tags: '- (Optional) Key-value tags for the link. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            type: '- (Optional) The type of the link.'
            upload_speed: '- (Optional) Upload speed in Mbps.'
        importStatements: []
    aws_networkmanager_link_association:
        subCategory: Network Manager
        description: Associates a link to a device.
        name: aws_networkmanager_link_association
        title: aws_networkmanager_link_association
        examples:
            - name: example
              manifest: |-
                {
                  "device_id": "${aws_networkmanager_device.example.id}",
                  "global_network_id": "${aws_networkmanager_global_network.example.id}",
                  "link_id": "${aws_networkmanager_link.example.id}"
                }
              references:
                device_id: aws_networkmanager_device.example.id
                global_network_id: aws_networkmanager_global_network.example.id
                link_id: aws_networkmanager_link.example.id
        argumentDocs:
            device_id: '- (Required) The ID of the device.'
            global_network_id: '- (Required) The ID of the global network.'
            link_id: '- (Required) The ID of the link.'
        importStatements: []
    aws_networkmanager_site:
        subCategory: Network Manager
        description: Creates a site in a global network.
        name: aws_networkmanager_site
        title: aws_networkmanager_site
        examples:
            - name: example
              manifest: |-
                {
                  "global_network_id": "${aws_networkmanager_global_network.example.id}"
                }
              references:
                global_network_id: aws_networkmanager_global_network.example.id
              dependencies:
                aws_networkmanager_global_network.example: '{}'
        argumentDocs:
            address: '- (Optional) Address of the location.'
            arn: '- Site Amazon Resource Name (ARN)'
            description: '- (Optional) Description of the Site.'
            global_network_id: '- (Required) The ID of the Global Network to create the site in.'
            latitude: '- (Optional) Latitude of the location.'
            location: '- (Optional) The site location as documented below.'
            longitude: '- (Optional) Longitude of the location.'
            tags: '- (Optional) Key-value tags for the Site. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_networkmanager_transit_gateway_connect_peer_association:
        subCategory: Network Manager
        description: Associates a transit gateway Connect peer with a device, and optionally, with a link.
        name: aws_networkmanager_transit_gateway_connect_peer_association
        title: aws_networkmanager_transit_gateway_connect_peer_association
        examples:
            - name: example
              manifest: |-
                {
                  "device_id": "${aws_networkmanager_device.example.id}",
                  "global_network_id": "${aws_networkmanager_global_network.example.id}",
                  "transit_gateway_connect_peer_arn": "${aws_ec2_transit_gateway_connect_peer.example.arn}"
                }
              references:
                device_id: aws_networkmanager_device.example.id
                global_network_id: aws_networkmanager_global_network.example.id
                transit_gateway_connect_peer_arn: aws_ec2_transit_gateway_connect_peer.example.arn
        argumentDocs:
            device_id: '- (Required) The ID of the device.'
            global_network_id: '- (Required) The ID of the global network.'
            link_id: '- (Optional) The ID of the link.'
            transit_gateway_connect_peer_arn: '- (Required) The Amazon Resource Name (ARN) of the Connect peer.'
        importStatements: []
    aws_networkmanager_transit_gateway_registration:
        subCategory: Network Manager
        description: Registers a transit gateway to a global network.
        name: aws_networkmanager_transit_gateway_registration
        title: aws_networkmanager_transit_gateway_registration
        examples:
            - name: example
              manifest: |-
                {
                  "global_network_id": "${aws_networkmanager_global_network.example.id}",
                  "transit_gateway_arn": "${aws_ec2_transit_gateway.example.arn}"
                }
              references:
                global_network_id: aws_networkmanager_global_network.example.id
                transit_gateway_arn: aws_ec2_transit_gateway.example.arn
              dependencies:
                aws_ec2_transit_gateway.example: '{}'
                aws_networkmanager_global_network.example: |-
                    {
                      "description": "example"
                    }
        argumentDocs:
            global_network_id: '- (Required) The ID of the Global Network to register to.'
            transit_gateway_arn: '- (Required) The ARN of the Transit Gateway to register.'
        importStatements: []
    aws_opensearch_domain:
        subCategory: OpenSearch
        description: Provides an OpenSearch Domain Policy.
        name: aws_opensearch_domain
        title: aws_opensearch_domain
        examples:
            - name: example
              manifest: |-
                {
                  "domain_name": "tf-test",
                  "engine_version": "OpenSearch_1.1"
                }
              dependencies:
                aws_opensearch_domain_policy.main: |-
                    {
                      "access_policies": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Action\": \"es:*\",\n            \"Principal\": \"*\",\n            \"Effect\": \"Allow\",\n            \"Condition\": {\n                \"IpAddress\": {\"aws:SourceIp\": \"127.0.0.1/32\"}\n            },\n            \"Resource\": \"${aws_opensearch_domain.example.arn}/*\"\n        }\n    ]\n}\n",
                      "domain_name": "${aws_opensearch_domain.example.domain_name}"
                    }
        argumentDocs:
            access_policies: '- (Optional) IAM policy document specifying the access policies for the domain'
            delete: '- (Optional, Default: 90m) How long to wait for deletion.'
            domain_name: '- (Required) Name of the domain.'
            update: '- (Optional, Default: 180m) How long to wait for updates.'
        importStatements: []
    aws_opensearch_domain_saml_options:
        subCategory: OpenSearch
        description: Terraform resource for managing SAML authentication options for an AWS OpenSearch Domain.
        name: aws_opensearch_domain_saml_options
        title: aws_opensearch_domain_saml_options
        examples:
            - name: example
              manifest: |-
                {
                  "domain_name": "${aws_opensearch_domain.example.domain_name}",
                  "saml_options": [
                    {
                      "enabled": true,
                      "idp": [
                        {
                          "entity_id": "https://example.com",
                          "metadata_content": "${file(\"./saml-metadata.xml\")}"
                        }
                      ]
                    }
                  ]
                }
              references:
                domain_name: aws_opensearch_domain.example.domain_name
              dependencies:
                aws_opensearch_domain.example: |-
                    {
                      "cluster_config": [
                        {
                          "instance_type": "r4.large.search"
                        }
                      ],
                      "domain_name": "example",
                      "engine_version": "OpenSearch_1.1",
                      "snapshot_options": [
                        {
                          "automated_snapshot_start_hour": 23
                        }
                      ],
                      "tags": {
                        "Domain": "TestDomain"
                      }
                    }
        argumentDocs:
            delete: '- (Optional, Default: 90m) How long to wait for deletion.'
            domain_name: '- (Required) Name of the domain.'
            id: '- Name of the domain the SAML options are associated with.'
            saml_options: '- (Optional) SAML authentication options for an AWS OpenSearch Domain.'
            saml_options.enabled: '- (Required) Whether SAML authentication is enabled.'
            saml_options.idp: '- (Optional) Information from your identity provider.'
            saml_options.idp.entity_id: '- (Required) Unique Entity ID of the application in SAML Identity Provider.'
            saml_options.idp.metadata_content: '- (Required) Metadata of the SAML application in xml format.'
            saml_options.master_backend_role: '- (Optional) This backend role from the SAML IdP receives full permissions to the cluster, equivalent to a new master user.'
            saml_options.master_user_name: '- (Optional) This username from the SAML IdP receives full permissions to the cluster, equivalent to a new master user.'
            saml_options.roles_key: '- (Optional) Element of the SAML assertion to use for backend roles. Default is roles.'
            saml_options.session_timeout_minutes: '- (Optional) Duration of a session in minutes after a user logs in. Default is 60. Maximum value is 1,440.'
            saml_options.subject_key: '- (Optional) Element of the SAML assertion to use for username. Default is NameID.'
            update: '- (Optional, Default: 180m) How long to wait for updates.'
        importStatements: []
    aws_opsworks_application:
        subCategory: OpsWorks
        description: Provides an OpsWorks application resource.
        name: aws_opsworks_application
        title: aws_opsworks_application
        examples:
            - name: foo-app
              manifest: |-
                {
                  "app_source": [
                    {
                      "revision": "master",
                      "type": "git",
                      "url": "https://github.com/example.git"
                    }
                  ],
                  "auto_bundle_on_deploy": true,
                  "description": "This is a Rails application",
                  "document_root": "public",
                  "domains": [
                    "example.com",
                    "sub.example.com"
                  ],
                  "enable_ssl": true,
                  "environment": [
                    {
                      "key": "key",
                      "secure": false,
                      "value": "value"
                    }
                  ],
                  "name": "foobar application",
                  "rails_env": "staging",
                  "short_name": "foobar",
                  "ssl_configuration": [
                    {
                      "certificate": "${file(\"./foobar.crt\")}",
                      "private_key": "${file(\"./foobar.key\")}"
                    }
                  ],
                  "stack_id": "${aws_opsworks_stack.main.id}",
                  "type": "rails"
                }
              references:
                stack_id: aws_opsworks_stack.main.id
        argumentDocs:
            app_source: '- (Optional) SCM configuration of the app as described below.'
            app_source.password: '- (Optional) Password to use when authenticating to the source. Terraform cannot perform drift detection of this configuration.'
            app_source.revision: '- (Optional) For sources that are version-aware, the revision to use.'
            app_source.ssh_key: '- (Optional) SSH key to use when authenticating to the source. Terraform cannot perform drift detection of this configuration.'
            app_source.type: '- (Required) The type of source to use. For example, "archive".'
            app_source.url: '- (Required) The URL where the app resource can be found.'
            app_source.username: '- (Optional) Username to use when authenticating to the source.'
            auto_bundle_on_deploy: '- (Optional) Run bundle install when deploying for application of type rails.'
            aws_flow_ruby_settings: '- (Optional) Specify activity and workflow workers for your app using the aws-flow gem.'
            data_source_arn: '- (Optional) The data source''s ARN.'
            data_source_database_name: '- (Optional) The database name.'
            data_source_type: '- (Optional) The data source''s type one of AutoSelectOpsworksMysqlInstance, OpsworksMysqlInstance, or RdsDbInstance.'
            description: '- (Optional) A description of the app.'
            document_root: '- (Optional) Subfolder for the document root for application of type rails.'
            domains: '-  (Optional) A list of virtual host alias.'
            enable_ssl: '- (Optional) Whether to enable SSL for the app. This must be set in order to let ssl_configuration.private_key, ssl_configuration.certificate and ssl_configuration.chain take effect.'
            environment: '- (Optional) Object to define environment variables.  Object is described below.'
            environment.key: '- (Required) Variable name.'
            environment.secure: '- (Optional) Set visibility of the variable value to true or false.'
            environment.value: '- (Required) Variable value.'
            id: '- The id of the application.'
            name: '- (Required) A human-readable name for the application.'
            rails_env: '- (Required if type = rails) The name of the Rails environment for application of type rails.'
            short_name: '- (Required) A short, machine-readable name for the application. This can only be defined on resource creation and ignored on resource update.'
            ssl_configuration: '- (Optional) The SSL configuration of the app. Object is described below.'
            ssl_configuration.certificate: '- (Required) The contents of the certificate''s domain.crt file.'
            ssl_configuration.chain: '- (Optional)  Can be used to specify an intermediate certificate authority key or client authentication.'
            ssl_configuration.private_key: '- (Required) The private key; the contents of the certificate''s domain.key file.'
            stack_id: '- (Required) The id of the stack the application will belong to.'
            type: '- (Required) Opsworks application type. One of aws-flow-ruby, java, rails, php, nodejs, static or other.'
        importStatements: []
    aws_opsworks_custom_layer:
        subCategory: OpsWorks
        description: Provides an OpsWorks custom layer resource.
        name: aws_opsworks_custom_layer
        title: aws_opsworks_custom_layer
        examples:
            - name: custlayer
              manifest: |-
                {
                  "name": "My Awesome Custom Layer",
                  "short_name": "awesome",
                  "stack_id": "${aws_opsworks_stack.main.id}"
                }
              references:
                stack_id: aws_opsworks_stack.main.id
        argumentDocs:
            arn: '- The Amazon Resource Name(ARN) of the layer.'
            auto_assign_elastic_ips: '- (Optional) Whether to automatically assign an elastic IP address to the layer''s instances.'
            auto_assign_public_ips: '- (Optional) For stacks belonging to a VPC, whether to automatically assign a public IP address to each of the layer''s instances.'
            auto_healing: '- (Optional) Whether to enable auto-healing for the layer.'
            batch_count: '- (Optional) Specifies the max number of log events in a batch, up to 10000. The default value is 1000.'
            batch_size: '- (Optional) Specifies the maximum size of log events in a batch, in bytes, up to 1048576 bytes. The default value is 32768 bytes.'
            buffer_duration: '- (Optional) Specifies the time duration for the batching of log events. The minimum value is 5000 and default value is 5000.'
            cloudwatch_configuration: '- (Optional) Will create an EBS volume and connect it to the layer''s instances. See Cloudwatch Configuration.'
            custom_instance_profile_arn: '- (Optional) The ARN of an IAM profile that will be used for the layer''s instances.'
            custom_json: '- (Optional) Custom JSON attributes to apply to the layer.'
            custom_security_group_ids: '- (Optional) Ids for a set of security groups to apply to the layer''s instances.'
            datetime_format: '- (Optional) Specifies how the timestamp is extracted from logs. For more information, see the CloudWatch Logs Agent Reference (https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/AgentReference.html).'
            drain_elb_on_shutdown: '- (Optional) Whether to enable Elastic Load Balancing connection draining.'
            ebs_volume: '- (Optional) Will create an EBS volume and connect it to the layer''s instances. See EBS Volume.'
            elastic_load_balancer: '- (Optional) Name of an Elastic Load Balancer to attach to this layer'
            enabled: '- (Optional)'
            encoding: '- (Optional) Specifies the encoding of the log file so that the file can be read correctly. The default is utf_8.'
            encrypted: '- (Optional) Encrypt the volume.'
            file: '- (Required) Specifies log files that you want to push to CloudWatch Logs. File can point to a specific file or multiple files (by using wild card characters such as /var/log/system.log*).'
            file_fingerprint_lines: '- (Optional) Specifies the range of lines for identifying a file. The valid values are one number, or two dash-delimited numbers, such as 1, 2-5. The default value is 1.'
            id: '- The id of the layer.'
            initial_position: '- (Optional) Specifies where to start to read data (start_of_file or end_of_file). The default is start_of_file.'
            install_updates_on_boot: '- (Optional) Whether to install OS and package updates on each instance when it boots.'
            instance_shutdown_timeout: '- (Optional) The time, in seconds, that OpsWorks will wait for Chef to complete after triggering the Shutdown event.'
            iops: '- (Optional) For PIOPS volumes, the IOPS per disk.'
            log_group_name: '- (Required) Specifies the destination log group. A log group is created automatically if it doesn''t already exist.'
            log_streams: '- (Optional) A block the specifies how an opsworks logs look like. See Log Streams.'
            mount_point: '- (Required) The path to mount the EBS volume on the layer''s instances.'
            multiline_start_pattern: '- (Optional) Specifies the pattern for identifying the start of a log message.'
            name: '- (Required) A human-readable name for the layer.'
            number_of_disks: '- (Required) The number of disks to use for the EBS volume.'
            raid_level: '- (Required) The RAID level to use for the volume.'
            short_name: '- (Required) A short, machine-readable name for the layer, which will be used to identify it in the Chef node JSON.'
            size: '- (Required) The size of the volume in gigabytes.'
            stack_id: '- (Required) The id of the stack the layer will belong to.'
            system_packages: '- (Optional) Names of a set of system packages to install on the layer''s instances.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            time_zone: '- (Optional) Specifies the time zone of log event time stamps.'
            type: '- (Optional) The type of volume to create. This may be standard (the default), io1 or gp2.'
            use_ebs_optimized_instances: '- (Optional) Whether to use EBS-optimized instances.'
        importStatements: []
    aws_opsworks_ecs_cluster_layer:
        subCategory: OpsWorks
        description: Provides an OpsWorks HAProxy layer resource.
        name: aws_opsworks_ecs_cluster_layer
        title: aws_opsworks_ecs_cluster_layer
        examples:
            - name: example
              manifest: |-
                {
                  "ecs_cluster_arn": "${aws_ecs_cluster.example.arn}",
                  "stack_id": "${aws_opsworks_stack.example.id}"
                }
              references:
                ecs_cluster_arn: aws_ecs_cluster.example.arn
                stack_id: aws_opsworks_stack.example.id
        argumentDocs:
            arn: '- The Amazon Resource Name(ARN) of the layer.'
            auto_assign_elastic_ips: '- (Optional) Whether to automatically assign an elastic IP address to the layer''s instances.'
            auto_assign_public_ips: '- (Optional) For stacks belonging to a VPC, whether to automatically assign a public IP address to each of the layer''s instances.'
            auto_healing: '- (Optional) Whether to enable auto-healing for the layer.'
            custom_instance_profile_arn: '- (Optional) The ARN of an IAM profile that will be used for the layer''s instances.'
            custom_json: '- (Optional) Custom JSON attributes to apply to the layer.'
            custom_security_group_ids: '- (Optional) Ids for a set of security groups to apply to the layer''s instances.'
            drain_elb_on_shutdown: '- (Optional) Whether to enable Elastic Load Balancing connection draining.'
            ebs_volume: '- (Optional) ebs_volume blocks, as described below, will each create an EBS volume and connect it to the layer''s instances.'
            ebs_volume.iops: '- (Optional) For PIOPS volumes, the IOPS per disk.'
            ebs_volume.mount_point: '- (Required) The path to mount the EBS volume on the layer''s instances.'
            ebs_volume.number_of_disks: '- (Required) The number of disks to use for the EBS volume.'
            ebs_volume.raid_level: '- (Required) The RAID level to use for the volume.'
            ebs_volume.size: '- (Required) The size of the volume in gigabytes.'
            ebs_volume.type: '- (Optional) The type of volume to create. This may be standard (the default), io1 or gp2.'
            ecs_cluster_arn: '- (Required) The ECS Cluster ARN of the layer.'
            elastic_load_balancer: '- (Optional) Name of an Elastic Load Balancer to attach to this layer'
            id: '- The id of the layer.'
            install_updates_on_boot: '- (Optional) Whether to install OS and package updates on each instance when it boots.'
            instance_shutdown_timeout: '- (Optional) The time, in seconds, that OpsWorks will wait for Chef to complete after triggering the Shutdown event.'
            name: '- (Optional) A human-readable name for the layer.'
            stack_id: '- (Required) The id of the stack the layer will belong to.'
            system_packages: '- (Optional) Names of a set of system packages to install on the layer''s instances.'
            tags: '- (Optional) A mapping of tags to assign to the resource.'
            use_ebs_optimized_instances: '- (Optional) Whether to use EBS-optimized instances.'
        importStatements: []
    aws_opsworks_ganglia_layer:
        subCategory: OpsWorks
        description: Provides an OpsWorks Ganglia layer resource.
        name: aws_opsworks_ganglia_layer
        title: aws_opsworks_ganglia_layer
        examples:
            - name: monitor
              manifest: |-
                {
                  "password": "foobarbaz",
                  "stack_id": "${aws_opsworks_stack.main.id}"
                }
              references:
                stack_id: aws_opsworks_stack.main.id
        argumentDocs:
            arn: '- The Amazon Resource Name(ARN) of the layer.'
            auto_assign_elastic_ips: '- (Optional) Whether to automatically assign an elastic IP address to the layer''s instances.'
            auto_assign_public_ips: '- (Optional) For stacks belonging to a VPC, whether to automatically assign a public IP address to each of the layer''s instances.'
            auto_healing: '- (Optional) Whether to enable auto-healing for the layer.'
            custom_instance_profile_arn: '- (Optional) The ARN of an IAM profile that will be used for the layer''s instances.'
            custom_json: '- (Optional) Custom JSON attributes to apply to the layer.'
            custom_security_group_ids: '- (Optional) Ids for a set of security groups to apply to the layer''s instances.'
            drain_elb_on_shutdown: '- (Optional) Whether to enable Elastic Load Balancing connection draining.'
            ebs_volume: '- (Optional) ebs_volume blocks, as described below, will each create an EBS volume and connect it to the layer''s instances.'
            ebs_volume.iops: '- (Optional) For PIOPS volumes, the IOPS per disk.'
            ebs_volume.mount_point: '- (Required) The path to mount the EBS volume on the layer''s instances.'
            ebs_volume.number_of_disks: '- (Required) The number of disks to use for the EBS volume.'
            ebs_volume.raid_level: '- (Required) The RAID level to use for the volume.'
            ebs_volume.size: '- (Required) The size of the volume in gigabytes.'
            ebs_volume.type: '- (Optional) The type of volume to create. This may be standard (the default), io1 or gp2.'
            elastic_load_balancer: '- (Optional) Name of an Elastic Load Balancer to attach to this layer'
            id: '- The id of the layer.'
            install_updates_on_boot: '- (Optional) Whether to install OS and package updates on each instance when it boots.'
            instance_shutdown_timeout: '- (Optional) The time, in seconds, that OpsWorks will wait for Chef to complete after triggering the Shutdown event.'
            name: '- (Optional) A human-readable name for the layer.'
            password: '- (Required) The password to use for Ganglia.'
            stack_id: '- (Required) The id of the stack the layer will belong to.'
            system_packages: '- (Optional) Names of a set of system packages to install on the layer''s instances.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            url: '- (Optional) The URL path to use for Ganglia. Defaults to "/ganglia".'
            use_ebs_optimized_instances: '- (Optional) Whether to use EBS-optimized instances.'
            username: '- (Optiona) The username to use for Ganglia. Defaults to "opsworks".'
        importStatements: []
    aws_opsworks_haproxy_layer:
        subCategory: OpsWorks
        description: Provides an OpsWorks HAProxy layer resource.
        name: aws_opsworks_haproxy_layer
        title: aws_opsworks_haproxy_layer
        examples:
            - name: lb
              manifest: |-
                {
                  "stack_id": "${aws_opsworks_stack.main.id}",
                  "stats_password": "foobarbaz"
                }
              references:
                stack_id: aws_opsworks_stack.main.id
        argumentDocs:
            arn: '- The Amazon Resource Name(ARN) of the layer.'
            auto_assign_elastic_ips: '- (Optional) Whether to automatically assign an elastic IP address to the layer''s instances.'
            auto_assign_public_ips: '- (Optional) For stacks belonging to a VPC, whether to automatically assign a public IP address to each of the layer''s instances.'
            auto_healing: '- (Optional) Whether to enable auto-healing for the layer.'
            custom_instance_profile_arn: '- (Optional) The ARN of an IAM profile that will be used for the layer''s instances.'
            custom_json: '- (Optional) Custom JSON attributes to apply to the layer.'
            custom_security_group_ids: '- (Optional) Ids for a set of security groups to apply to the layer''s instances.'
            drain_elb_on_shutdown: '- (Optional) Whether to enable Elastic Load Balancing connection draining.'
            ebs_volume: '- (Optional) ebs_volume blocks, as described below, will each create an EBS volume and connect it to the layer''s instances.'
            ebs_volume.iops: '- (Optional) For PIOPS volumes, the IOPS per disk.'
            ebs_volume.mount_point: '- (Required) The path to mount the EBS volume on the layer''s instances.'
            ebs_volume.number_of_disks: '- (Required) The number of disks to use for the EBS volume.'
            ebs_volume.raid_level: '- (Required) The RAID level to use for the volume.'
            ebs_volume.size: '- (Required) The size of the volume in gigabytes.'
            ebs_volume.type: '- (Optional) The type of volume to create. This may be standard (the default), io1 or gp2.'
            elastic_load_balancer: '- (Optional) Name of an Elastic Load Balancer to attach to this layer'
            healthcheck_method: '- (Optional) HTTP method to use for instance healthchecks. Defaults to "OPTIONS".'
            healthcheck_url: '- (Optional) URL path to use for instance healthchecks. Defaults to "/".'
            id: '- The id of the layer.'
            install_updates_on_boot: '- (Optional) Whether to install OS and package updates on each instance when it boots.'
            instance_shutdown_timeout: '- (Optional) The time, in seconds, that OpsWorks will wait for Chef to complete after triggering the Shutdown event.'
            name: '- (Optional) A human-readable name for the layer.'
            stack_id: '- (Required) The id of the stack the layer will belong to.'
            stats_enabled: '- (Optional) Whether to enable HAProxy stats.'
            stats_password: '- (Required) The password to use for HAProxy stats.'
            stats_url: '- (Optional) The HAProxy stats URL. Defaults to "/haproxy?stats".'
            stats_user: '- (Optional) The username for HAProxy stats. Defaults to "opsworks".'
            system_packages: '- (Optional) Names of a set of system packages to install on the layer''s instances.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            use_ebs_optimized_instances: '- (Optional) Whether to use EBS-optimized instances.'
        importStatements: []
    aws_opsworks_instance:
        subCategory: OpsWorks
        description: Provides an OpsWorks instance resource.
        name: aws_opsworks_instance
        title: aws_opsworks_instance
        examples:
            - name: my-instance
              manifest: |-
                {
                  "instance_type": "t2.micro",
                  "layer_ids": [
                    "${aws_opsworks_custom_layer.my-layer.id}"
                  ],
                  "os": "Amazon Linux 2015.09",
                  "stack_id": "${aws_opsworks_stack.main.id}",
                  "state": "stopped"
                }
              references:
                stack_id: aws_opsworks_stack.main.id
        argumentDocs:
            agent_version: '- (Optional) OpsWorks agent to install. Default is INHERIT.'
            ami_id: '- (Optional) AMI to use for the instance.  If an AMI is specified, os must be Custom.'
            architecture: '- (Optional) Machine architecture for created instances.  Valid values are x86_64 or i386. The default is x86_64.'
            auto_scaling_type: '- (Optional) Creates load-based or time-based instances.  Valid values are load, timer.'
            availability_zone: '- (Optional) Name of the availability zone where instances will be created by default.'
            create: '- (Default 10 minutes) Used when the instance is created. It should cover the time needed for the instance to start successfully.'
            created_at: '- Time that the instance was created.'
            delete: '- (Default 10 minutes) Used when the instance is deleted. It should cover the time needed for the instance to stop successfully.'
            delete_ebs: '- (Optional) Whether to delete EBS volume on deletion. Default is true.'
            delete_eip: '- (Optional) Whether to delete the Elastic IP on deletion.'
            ebs_block_device: '- (Optional) Configuration block for additional EBS block devices to attach to the instance. See Block Devices below.'
            ebs_block_device.delete_on_termination: '- (Optional) Whether the volume should be destroyed on instance termination. Default is true.'
            ebs_block_device.device_name: '- (Required) Name of the device to mount.'
            ebs_block_device.iops: '- (Optional) Amount of provisioned IOPS. This must be set with a volume_type of io1.'
            ebs_block_device.snapshot_id: '- (Optional) Snapshot ID to mount.'
            ebs_block_device.volume_size: '- (Optional) Size of the volume in gigabytes.'
            ebs_block_device.volume_type: '- (Optional) Type of volume. Valid values are standard, gp2, or io1. Default is standard.'
            ebs_optimized: '- (Optional) Whether the launched EC2 instance will be EBS-optimized.'
            ec2_instance_id: '- EC2 instance ID.'
            ecs_cluster_arn: '- (Optional) ECS cluster''s ARN for container instances.'
            elastic_ip: '- (Optional) Instance Elastic IP address.'
            ephemeral_block_device: '- (Optional) Configuration block for ephemeral (also known as "Instance Store") volumes on the instance. See Block Devices below.'
            ephemeral_block_device.device_name: '- Name of the block device to mount on the instance.'
            ephemeral_block_device.virtual_name: '- The Instance Store Device Name (e.g., ephemeral0).'
            hostname: '- (Optional) Instance''s host name.'
            id: '- ID of the OpsWorks instance.'
            infrastructure_class: '- (Optional) For registered instances, infrastructure class: ec2 or on-premises.'
            install_updates_on_boot: '- (Optional) Controls where to install OS and package updates when the instance boots.  Default is true.'
            instance_profile_arn: '- (Optional) ARN of the instance''s IAM profile.'
            instance_type: '- (Optional) Type of instance to start.'
            last_service_error_id: '- ID of the last service error.'
            layer_ids: '- (Required) List of the layers the instance will belong to.'
            os: '- (Optional) Name of operating system that will be installed.'
            platform: '- Instance''s platform.'
            private_dns: '- Private DNS name assigned to the instance. Can only be used inside the Amazon EC2, and only available if you''ve enabled DNS hostnames for your VPC.'
            private_ip: '- Private IP address assigned to the instance.'
            public_dns: '- Public DNS name assigned to the instance. For EC2-VPC, this is only available if you''ve enabled DNS hostnames for your VPC.'
            public_ip: '- Public IP address assigned to the instance, if applicable.'
            registered_by: '- For registered instances, who performed the registration.'
            reported_agent_version: '- Instance''s reported AWS OpsWorks Stacks agent version.'
            reported_os_family: '- For registered instances, the reported operating system family.'
            reported_os_name: '- For registered instances, the reported operating system name.'
            reported_os_version: '- For registered instances, the reported operating system version.'
            root_block_device: '- (Optional) Configuration block for the root block device of the instance. See Block Devices below.'
            root_block_device.delete_on_termination: '- (Optional) Whether the volume should be destroyed on instance termination. Default is true.'
            root_block_device.iops: '- (Optional) Amount of provisioned IOPS. This must be set with a volume_type of io1.'
            root_block_device.volume_size: '- (Optional) Size of the volume in gigabytes.'
            root_block_device.volume_type: '- (Optional) Type of volume. Valid values are standard, gp2, or io1. Default is standard.'
            root_device_type: '- (Optional) Name of the type of root device instances will have by default. Valid values are ebs or instance-store.'
            root_device_volume_id: '- Root device volume ID.'
            security_group_ids: '- Associated security groups.'
            ssh_host_dsa_key_fingerprint: '- SSH key''s Deep Security Agent (DSA) fingerprint.'
            ssh_host_rsa_key_fingerprint: '- SSH key''s RSA fingerprint.'
            ssh_key_name: '- (Optional) Name of the SSH keypair that instances will have by default.'
            stack_id: '- (Required) Identifier of the stack the instance will belong to.'
            state: '- (Optional) Desired state of the instance. Valid values are running or stopped.'
            status: '- Instance status. Will be one of booting, connection_lost, online, pending, rebooting, requested, running_setup, setup_failed, shutting_down, start_failed, stop_failed, stopped, stopping, terminated, or terminating.'
            subnet_id: '- (Optional) Subnet ID to attach to.'
            tenancy: '- (Optional) Instance tenancy to use. Valid values are default, dedicated or host.'
            update: '- (Default 10 minutes) Used when the instance is changed. It should cover the time needed to either start or stop the instance.'
            virtualization_type: '- (Optional) Keyword to choose what virtualization mode created instances will use. Valid values are paravirtual or hvm.'
        importStatements: []
    aws_opsworks_java_app_layer:
        subCategory: OpsWorks
        description: Provides an OpsWorks Java application layer resource.
        name: aws_opsworks_java_app_layer
        title: aws_opsworks_java_app_layer
        examples:
            - name: app
              manifest: |-
                {
                  "stack_id": "${aws_opsworks_stack.main.id}"
                }
              references:
                stack_id: aws_opsworks_stack.main.id
        argumentDocs:
            app_server: '- (Optional) Keyword for the application container to use. Defaults to "tomcat".'
            app_server_version: '- (Optional) Version of the selected application container to use. Defaults to "7".'
            arn: '- The Amazon Resource Name(ARN) of the layer.'
            auto_assign_elastic_ips: '- (Optional) Whether to automatically assign an elastic IP address to the layer''s instances.'
            auto_assign_public_ips: '- (Optional) For stacks belonging to a VPC, whether to automatically assign a public IP address to each of the layer''s instances.'
            auto_healing: '- (Optional) Whether to enable auto-healing for the layer.'
            custom_instance_profile_arn: '- (Optional) The ARN of an IAM profile that will be used for the layer''s instances.'
            custom_json: '- (Optional) Custom JSON attributes to apply to the layer.'
            custom_security_group_ids: '- (Optional) Ids for a set of security groups to apply to the layer''s instances.'
            drain_elb_on_shutdown: '- (Optional) Whether to enable Elastic Load Balancing connection draining.'
            ebs_volume: '- (Optional) ebs_volume blocks, as described below, will each create an EBS volume and connect it to the layer''s instances.'
            ebs_volume.iops: '- (Optional) For PIOPS volumes, the IOPS per disk.'
            ebs_volume.mount_point: '- (Required) The path to mount the EBS volume on the layer''s instances.'
            ebs_volume.number_of_disks: '- (Required) The number of disks to use for the EBS volume.'
            ebs_volume.raid_level: '- (Required) The RAID level to use for the volume.'
            ebs_volume.size: '- (Required) The size of the volume in gigabytes.'
            ebs_volume.type: '- (Optional) The type of volume to create. This may be standard (the default), io1 or gp2.'
            elastic_load_balancer: '- (Optional) Name of an Elastic Load Balancer to attach to this layer'
            id: '- The id of the layer.'
            install_updates_on_boot: '- (Optional) Whether to install OS and package updates on each instance when it boots.'
            instance_shutdown_timeout: '- (Optional) The time, in seconds, that OpsWorks will wait for Chef to complete after triggering the Shutdown event.'
            jvm_options: '- (Optional) Options to set for the JVM.'
            jvm_type: '- (Optional) Keyword for the type of JVM to use. Defaults to openjdk.'
            jvm_version: '- (Optional) Version of JVM to use. Defaults to "7".'
            name: '- (Optional) A human-readable name for the layer.'
            stack_id: '- (Required) The id of the stack the layer will belong to.'
            system_packages: '- (Optional) Names of a set of system packages to install on the layer''s instances.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            use_ebs_optimized_instances: '- (Optional) Whether to use EBS-optimized instances.'
        importStatements: []
    aws_opsworks_memcached_layer:
        subCategory: OpsWorks
        description: Provides an OpsWorks memcached layer resource.
        name: aws_opsworks_memcached_layer
        title: aws_opsworks_memcached_layer
        examples:
            - name: cache
              manifest: |-
                {
                  "stack_id": "${aws_opsworks_stack.main.id}"
                }
              references:
                stack_id: aws_opsworks_stack.main.id
        argumentDocs:
            allocated_memory: '- (Optional) Amount of memory to allocate for the cache on each instance, in megabytes. Defaults to 512MB.'
            arn: '- The Amazon Resource Name(ARN) of the layer.'
            auto_assign_elastic_ips: '- (Optional) Whether to automatically assign an elastic IP address to the layer''s instances.'
            auto_assign_public_ips: '- (Optional) For stacks belonging to a VPC, whether to automatically assign a public IP address to each of the layer''s instances.'
            auto_healing: '- (Optional) Whether to enable auto-healing for the layer.'
            custom_instance_profile_arn: '- (Optional) The ARN of an IAM profile that will be used for the layer''s instances.'
            custom_json: '- (Optional) Custom JSON attributes to apply to the layer.'
            custom_security_group_ids: '- (Optional) Ids for a set of security groups to apply to the layer''s instances.'
            drain_elb_on_shutdown: '- (Optional) Whether to enable Elastic Load Balancing connection draining.'
            ebs_volume: '- (Optional) ebs_volume blocks, as described below, will each create an EBS volume and connect it to the layer''s instances.'
            ebs_volume.iops: '- (Optional) For PIOPS volumes, the IOPS per disk.'
            ebs_volume.mount_point: '- (Required) The path to mount the EBS volume on the layer''s instances.'
            ebs_volume.number_of_disks: '- (Required) The number of disks to use for the EBS volume.'
            ebs_volume.raid_level: '- (Required) The RAID level to use for the volume.'
            ebs_volume.size: '- (Required) The size of the volume in gigabytes.'
            ebs_volume.type: '- (Optional) The type of volume to create. This may be standard (the default), io1 or gp2.'
            elastic_load_balancer: '- (Optional) Name of an Elastic Load Balancer to attach to this layer'
            id: '- The id of the layer.'
            install_updates_on_boot: '- (Optional) Whether to install OS and package updates on each instance when it boots.'
            instance_shutdown_timeout: '- (Optional) The time, in seconds, that OpsWorks will wait for Chef to complete after triggering the Shutdown event.'
            name: '- (Optional) A human-readable name for the layer.'
            stack_id: '- (Required) The id of the stack the layer will belong to.'
            system_packages: '- (Optional) Names of a set of system packages to install on the layer''s instances.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            use_ebs_optimized_instances: '- (Optional) Whether to use EBS-optimized instances.'
        importStatements: []
    aws_opsworks_mysql_layer:
        subCategory: OpsWorks
        description: Provides an OpsWorks MySQL layer resource.
        name: aws_opsworks_mysql_layer
        title: aws_opsworks_mysql_layer
        examples:
            - name: db
              manifest: |-
                {
                  "stack_id": "${aws_opsworks_stack.main.id}"
                }
              references:
                stack_id: aws_opsworks_stack.main.id
        argumentDocs:
            arn: '- The Amazon Resource Name(ARN) of the layer.'
            auto_assign_elastic_ips: '- (Optional) Whether to automatically assign an elastic IP address to the layer''s instances.'
            auto_assign_public_ips: '- (Optional) For stacks belonging to a VPC, whether to automatically assign a public IP address to each of the layer''s instances.'
            auto_healing: '- (Optional) Whether to enable auto-healing for the layer.'
            custom_instance_profile_arn: '- (Optional) The ARN of an IAM profile that will be used for the layer''s instances.'
            custom_json: '- (Optional) Custom JSON attributes to apply to the layer.'
            custom_security_group_ids: '- (Optional) Ids for a set of security groups to apply to the layer''s instances.'
            drain_elb_on_shutdown: '- (Optional) Whether to enable Elastic Load Balancing connection draining.'
            ebs_volume: '- (Optional) ebs_volume blocks, as described below, will each create an EBS volume and connect it to the layer''s instances.'
            ebs_volume.iops: '- (Optional) For PIOPS volumes, the IOPS per disk.'
            ebs_volume.mount_point: '- (Required) The path to mount the EBS volume on the layer''s instances.'
            ebs_volume.number_of_disks: '- (Required) The number of disks to use for the EBS volume.'
            ebs_volume.raid_level: '- (Required) The RAID level to use for the volume.'
            ebs_volume.size: '- (Required) The size of the volume in gigabytes.'
            ebs_volume.type: '- (Optional) The type of volume to create. This may be standard (the default), io1 or gp2.'
            elastic_load_balancer: '- (Optional) Name of an Elastic Load Balancer to attach to this layer'
            id: '- The id of the layer.'
            install_updates_on_boot: '- (Optional) Whether to install OS and package updates on each instance when it boots.'
            instance_shutdown_timeout: '- (Optional) The time, in seconds, that OpsWorks will wait for Chef to complete after triggering the Shutdown event.'
            name: '- (Optional) A human-readable name for the layer.'
            root_password: '- (Optional) Root password to use for MySQL.'
            root_password_on_all_instances: '- (Optional) Whether to set the root user password to all instances in the stack so they can access the instances in this layer.'
            stack_id: '- (Required) The id of the stack the layer will belong to.'
            system_packages: '- (Optional) Names of a set of system packages to install on the layer''s instances.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            use_ebs_optimized_instances: '- (Optional) Whether to use EBS-optimized instances.'
        importStatements: []
    aws_opsworks_nodejs_app_layer:
        subCategory: OpsWorks
        description: Provides an OpsWorks NodeJS application layer resource.
        name: aws_opsworks_nodejs_app_layer
        title: aws_opsworks_nodejs_app_layer
        examples:
            - name: app
              manifest: |-
                {
                  "stack_id": "${aws_opsworks_stack.main.id}"
                }
              references:
                stack_id: aws_opsworks_stack.main.id
        argumentDocs:
            arn: '- The Amazon Resource Name(ARN) of the layer.'
            auto_assign_elastic_ips: '- (Optional) Whether to automatically assign an elastic IP address to the layer''s instances.'
            auto_assign_public_ips: '- (Optional) For stacks belonging to a VPC, whether to automatically assign a public IP address to each of the layer''s instances.'
            auto_healing: '- (Optional) Whether to enable auto-healing for the layer.'
            custom_instance_profile_arn: '- (Optional) The ARN of an IAM profile that will be used for the layer''s instances.'
            custom_json: '- (Optional) Custom JSON attributes to apply to the layer.'
            custom_security_group_ids: '- (Optional) Ids for a set of security groups to apply to the layer''s instances.'
            drain_elb_on_shutdown: '- (Optional) Whether to enable Elastic Load Balancing connection draining.'
            ebs_volume: '- (Optional) ebs_volume blocks, as described below, will each create an EBS volume and connect it to the layer''s instances.'
            ebs_volume.iops: '- (Optional) For PIOPS volumes, the IOPS per disk.'
            ebs_volume.mount_point: '- (Required) The path to mount the EBS volume on the layer''s instances.'
            ebs_volume.number_of_disks: '- (Required) The number of disks to use for the EBS volume.'
            ebs_volume.raid_level: '- (Required) The RAID level to use for the volume.'
            ebs_volume.size: '- (Required) The size of the volume in gigabytes.'
            ebs_volume.type: '- (Optional) The type of volume to create. This may be standard (the default), io1 or gp2.'
            elastic_load_balancer: '- (Optional) Name of an Elastic Load Balancer to attach to this layer'
            id: '- The id of the layer.'
            install_updates_on_boot: '- (Optional) Whether to install OS and package updates on each instance when it boots.'
            instance_shutdown_timeout: '- (Optional) The time, in seconds, that OpsWorks will wait for Chef to complete after triggering the Shutdown event.'
            name: '- (Optional) A human-readable name for the layer.'
            nodejs_version: '- (Optional) The version of NodeJS to use. Defaults to "0.10.38".'
            stack_id: '- (Required) The id of the stack the layer will belong to.'
            system_packages: '- (Optional) Names of a set of system packages to install on the layer''s instances.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            use_ebs_optimized_instances: '- (Optional) Whether to use EBS-optimized instances.'
        importStatements: []
    aws_opsworks_permission:
        subCategory: OpsWorks
        description: Provides an OpsWorks permission resource.
        name: aws_opsworks_permission
        title: aws_opsworks_permission
        examples:
            - name: my_stack_permission
              manifest: |-
                {
                  "allow_ssh": true,
                  "allow_sudo": true,
                  "level": "iam_only",
                  "stack_id": "${aws_opsworks_stack.stack.id}",
                  "user_arn": "${aws_iam_user.user.arn}"
                }
              references:
                stack_id: aws_opsworks_stack.stack.id
                user_arn: aws_iam_user.user.arn
        argumentDocs:
            allow_ssh: '- (Optional) Whether the user is allowed to use SSH to communicate with the instance'
            allow_sudo: '- (Optional) Whether the user is allowed to use sudo to elevate privileges'
            id: '- The computed id of the permission. Please note that this is only used internally to identify the permission. This value is not used in aws.'
            level: '- (Optional) The users permission level. Mus be one of deny, show, deploy, manage, iam_only'
            stack_id: '- (Required) The stack to set the permissions for'
            user_arn: '- (Required) The user''s IAM ARN to set permissions for'
        importStatements: []
    aws_opsworks_php_app_layer:
        subCategory: OpsWorks
        description: Provides an OpsWorks PHP application layer resource.
        name: aws_opsworks_php_app_layer
        title: aws_opsworks_php_app_layer
        examples:
            - name: app
              manifest: |-
                {
                  "stack_id": "${aws_opsworks_stack.main.id}"
                }
              references:
                stack_id: aws_opsworks_stack.main.id
        argumentDocs:
            arn: '- The Amazon Resource Name(ARN) of the layer.'
            auto_assign_elastic_ips: '- (Optional) Whether to automatically assign an elastic IP address to the layer''s instances.'
            auto_assign_public_ips: '- (Optional) For stacks belonging to a VPC, whether to automatically assign a public IP address to each of the layer''s instances.'
            auto_healing: '- (Optional) Whether to enable auto-healing for the layer.'
            custom_instance_profile_arn: '- (Optional) The ARN of an IAM profile that will be used for the layer''s instances.'
            custom_json: '- (Optional) Custom JSON attributes to apply to the layer.'
            custom_security_group_ids: '- (Optional) Ids for a set of security groups to apply to the layer''s instances.'
            drain_elb_on_shutdown: '- (Optional) Whether to enable Elastic Load Balancing connection draining.'
            ebs_volume: '- (Optional) ebs_volume blocks, as described below, will each create an EBS volume and connect it to the layer''s instances.'
            ebs_volume.iops: '- (Optional) For PIOPS volumes, the IOPS per disk.'
            ebs_volume.mount_point: '- (Required) The path to mount the EBS volume on the layer''s instances.'
            ebs_volume.number_of_disks: '- (Required) The number of disks to use for the EBS volume.'
            ebs_volume.raid_level: '- (Required) The RAID level to use for the volume.'
            ebs_volume.size: '- (Required) The size of the volume in gigabytes.'
            ebs_volume.type: '- (Optional) The type of volume to create. This may be standard (the default), io1 or gp2.'
            elastic_load_balancer: '- (Optional) Name of an Elastic Load Balancer to attach to this layer'
            id: '- The id of the layer.'
            install_updates_on_boot: '- (Optional) Whether to install OS and package updates on each instance when it boots.'
            instance_shutdown_timeout: '- (Optional) The time, in seconds, that OpsWorks will wait for Chef to complete after triggering the Shutdown event.'
            name: '- (Optional) A human-readable name for the layer.'
            stack_id: '- (Required) The id of the stack the layer will belong to.'
            system_packages: '- (Optional) Names of a set of system packages to install on the layer''s instances.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            use_ebs_optimized_instances: '- (Optional) Whether to use EBS-optimized instances.'
        importStatements: []
    aws_opsworks_rails_app_layer:
        subCategory: OpsWorks
        description: Provides an OpsWorks Ruby on Rails application layer resource.
        name: aws_opsworks_rails_app_layer
        title: aws_opsworks_rails_app_layer
        examples:
            - name: app
              manifest: |-
                {
                  "stack_id": "${aws_opsworks_stack.main.id}"
                }
              references:
                stack_id: aws_opsworks_stack.main.id
        argumentDocs:
            app_server: '- (Optional) Keyword for the app server to use. Defaults to "apache_passenger".'
            arn: '- The Amazon Resource Name(ARN) of the layer.'
            auto_assign_elastic_ips: '- (Optional) Whether to automatically assign an elastic IP address to the layer''s instances.'
            auto_assign_public_ips: '- (Optional) For stacks belonging to a VPC, whether to automatically assign a public IP address to each of the layer''s instances.'
            auto_healing: '- (Optional) Whether to enable auto-healing for the layer.'
            bundler_version: '- (Optional) When OpsWorks is managing Bundler, which version to use. Defaults to "1.5.3".'
            custom_instance_profile_arn: '- (Optional) The ARN of an IAM profile that will be used for the layer''s instances.'
            custom_json: '- (Optional) Custom JSON attributes to apply to the layer.'
            custom_security_group_ids: '- (Optional) Ids for a set of security groups to apply to the layer''s instances.'
            drain_elb_on_shutdown: '- (Optional) Whether to enable Elastic Load Balancing connection draining.'
            ebs_volume: '- (Optional) ebs_volume blocks, as described below, will each create an EBS volume and connect it to the layer''s instances.'
            ebs_volume.iops: '- (Optional) For PIOPS volumes, the IOPS per disk.'
            ebs_volume.mount_point: '- (Required) The path to mount the EBS volume on the layer''s instances.'
            ebs_volume.number_of_disks: '- (Required) The number of disks to use for the EBS volume.'
            ebs_volume.raid_level: '- (Required) The RAID level to use for the volume.'
            ebs_volume.size: '- (Required) The size of the volume in gigabytes.'
            ebs_volume.type: '- (Optional) The type of volume to create. This may be standard (the default), io1 or gp2.'
            elastic_load_balancer: '- (Optional) Name of an Elastic Load Balancer to attach to this layer'
            id: '- The id of the layer.'
            install_updates_on_boot: '- (Optional) Whether to install OS and package updates on each instance when it boots.'
            instance_shutdown_timeout: '- (Optional) The time, in seconds, that OpsWorks will wait for Chef to complete after triggering the Shutdown event.'
            manage_bundler: '- (Optional) Whether OpsWorks should manage bundler. On by default.'
            name: '- (Optional) A human-readable name for the layer.'
            passenger_version: '- (Optional) The version of Passenger to use. Defaults to "4.0.46".'
            ruby_version: '- (Optional) The version of Ruby to use. Defaults to "2.0.0".'
            rubygems_version: '- (Optional) The version of RubyGems to use. Defaults to "2.2.2".'
            stack_id: '- (Required) The id of the stack the layer will belong to.'
            system_packages: '- (Optional) Names of a set of system packages to install on the layer''s instances.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            use_ebs_optimized_instances: '- (Optional) Whether to use EBS-optimized instances.'
        importStatements: []
    aws_opsworks_rds_db_instance:
        subCategory: OpsWorks
        description: Provides an OpsWorks RDS DB Instance resource.
        name: aws_opsworks_rds_db_instance
        title: aws_opsworks_rds_db_instance
        examples:
            - name: my_instance
              manifest: |-
                {
                  "db_password": "somePass",
                  "db_user": "someUser",
                  "rds_db_instance_arn": "${aws_db_instance.my_instance.arn}",
                  "stack_id": "${aws_opsworks_stack.my_stack.id}"
                }
              references:
                rds_db_instance_arn: aws_db_instance.my_instance.arn
                stack_id: aws_opsworks_stack.my_stack.id
        argumentDocs:
            db_password: '- (Required) A db password'
            db_user: '- (Required) A db username'
            id: '- The computed id. Please note that this is only used internally to identify the stack <-> instance relation. This value is not used in aws.'
            rds_db_instance_arn: '- (Required) The db instance to register for this stack. Changing this will force a new resource.'
            stack_id: '- (Required) The stack to register a db instance for. Changing this will force a new resource.'
        importStatements: []
    aws_opsworks_stack:
        subCategory: OpsWorks
        description: Provides an OpsWorks stack resource.
        name: aws_opsworks_stack
        title: aws_opsworks_stack
        examples:
            - name: main
              manifest: |-
                {
                  "custom_json": "{\n \"foobar\": {\n    \"version\": \"1.0.0\"\n  }\n}\n",
                  "default_instance_profile_arn": "${aws_iam_instance_profile.opsworks.arn}",
                  "name": "awesome-stack",
                  "region": "us-west-1",
                  "service_role_arn": "${aws_iam_role.opsworks.arn}",
                  "tags": {
                    "Name": "foobar-terraform-stack"
                  }
                }
              references:
                default_instance_profile_arn: aws_iam_instance_profile.opsworks.arn
                service_role_arn: aws_iam_role.opsworks.arn
        argumentDocs:
            agent_version: '- (Optional) If set to "LATEST", OpsWorks will automatically install the latest version.'
            berkshelf_version: '- (Optional) If manage_berkshelf is enabled, the version of Berkshelf to use.'
            color: '- (Optional) Color to paint next to the stack''s resources in the OpsWorks console.'
            configuration_manager_name: '- (Optional) Name of the configuration manager to use. Defaults to "Chef".'
            configuration_manager_version: '- (Optional) Version of the configuration manager to use. Defaults to "11.4".'
            custom_cookbooks_source: |-
                - (Optional) When use_custom_cookbooks is set, provide this sub-object as
                described below.
            custom_cookbooks_source.password: '- (Optional) Password to use when authenticating to the source. Terraform cannot perform drift detection of this configuration.'
            custom_cookbooks_source.revision: '- (Optional) For sources that are version-aware, the revision to use.'
            custom_cookbooks_source.ssh_key: '- (Optional) SSH key to use when authenticating to the source. Terraform cannot perform drift detection of this configuration.'
            custom_cookbooks_source.type: '- (Required) The type of source to use. For example, "archive".'
            custom_cookbooks_source.url: '- (Required) The URL where the cookbooks resource can be found.'
            custom_cookbooks_source.username: '- (Optional) Username to use when authenticating to the source.'
            custom_json: '- (Optional) User defined JSON passed to "Chef". Use a "here doc" for multiline JSON.'
            default_availability_zone: |-
                - (Optional) Name of the availability zone where instances will be created
                by default. This is required unless you set vpc_id.
            default_instance_profile_arn: |-
                - (Required) The ARN of an IAM Instance Profile that created instances
                will have by default.
            default_os: '- (Optional) Name of OS that will be installed on instances by default.'
            default_root_device_type: '- (Optional) Name of the type of root device instances will have by default.'
            default_ssh_key_name: '- (Optional) Name of the SSH keypair that instances will have by default.'
            default_subnet_id: |-
                - (Optional) Id of the subnet in which instances will be created by default. Mandatory
                if vpc_id is set, and forbidden if it isn't.
            hostname_theme: |-
                - (Optional) Keyword representing the naming scheme that will be used for instance hostnames
                within this stack.
            id: '- The id of the stack.'
            manage_berkshelf: '- (Optional) Boolean value controlling whether Opsworks will run Berkshelf for this stack.'
            name: '- (Required) The name of the stack.'
            region: '- (Required) The name of the region where the stack will exist.'
            service_role_arn: '- (Required) The ARN of an IAM role that the OpsWorks service will act as.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            use_custom_cookbooks: |-
                - (Optional) Boolean value controlling whether the custom cookbook settings are
                enabled.
            use_opsworks_security_groups: |-
                - (Optional) Boolean value controlling whether the standard OpsWorks
                security groups apply to created instances.
            vpc_id: '- (Optional) The id of the VPC that this stack belongs to.'
        importStatements: []
    aws_opsworks_static_web_layer:
        subCategory: OpsWorks
        description: Provides an OpsWorks static web server layer resource.
        name: aws_opsworks_static_web_layer
        title: aws_opsworks_static_web_layer
        examples:
            - name: web
              manifest: |-
                {
                  "stack_id": "${aws_opsworks_stack.main.id}"
                }
              references:
                stack_id: aws_opsworks_stack.main.id
        argumentDocs:
            arn: '- The Amazon Resource Name(ARN) of the layer.'
            auto_assign_elastic_ips: '- (Optional) Whether to automatically assign an elastic IP address to the layer''s instances.'
            auto_assign_public_ips: '- (Optional) For stacks belonging to a VPC, whether to automatically assign a public IP address to each of the layer''s instances.'
            auto_healing: '- (Optional) Whether to enable auto-healing for the layer.'
            custom_instance_profile_arn: '- (Optional) The ARN of an IAM profile that will be used for the layer''s instances.'
            custom_security_group_ids: '- (Optional) Ids for a set of security groups to apply to the layer''s instances.'
            drain_elb_on_shutdown: '- (Optional) Whether to enable Elastic Load Balancing connection draining.'
            ebs_volume: '- (Optional) ebs_volume blocks, as described below, will each create an EBS volume and connect it to the layer''s instances.'
            ebs_volume.iops: '- (Optional) For PIOPS volumes, the IOPS per disk.'
            ebs_volume.mount_point: '- (Required) The path to mount the EBS volume on the layer''s instances.'
            ebs_volume.number_of_disks: '- (Required) The number of disks to use for the EBS volume.'
            ebs_volume.raid_level: '- (Required) The RAID level to use for the volume.'
            ebs_volume.size: '- (Required) The size of the volume in gigabytes.'
            ebs_volume.type: '- (Optional) The type of volume to create. This may be standard (the default), io1 or gp2.'
            elastic_load_balancer: '- (Optional) Name of an Elastic Load Balancer to attach to this layer'
            id: '- The id of the layer.'
            install_updates_on_boot: '- (Optional) Whether to install OS and package updates on each instance when it boots.'
            instance_shutdown_timeout: '- (Optional) The time, in seconds, that OpsWorks will wait for Chef to complete after triggering the Shutdown event.'
            name: '- (Optional) A human-readable name for the layer.'
            stack_id: '- (Required) The id of the stack the layer will belong to.'
            system_packages: '- (Optional) Names of a set of system packages to install on the layer''s instances.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            use_ebs_optimized_instances: '- (Optional) Whether to use EBS-optimized instances.'
        importStatements: []
    aws_opsworks_user_profile:
        subCategory: OpsWorks
        description: Provides an OpsWorks User Profile resource.
        name: aws_opsworks_user_profile
        title: aws_opsworks_user_profile
        examples:
            - name: my_profile
              manifest: |-
                {
                  "ssh_username": "my_user",
                  "user_arn": "${aws_iam_user.user.arn}"
                }
              references:
                user_arn: aws_iam_user.user.arn
        argumentDocs:
            allow_self_management: '- (Optional) Whether users can specify their own SSH public key through the My Settings page'
            id: '- Same value as user_arn'
            ssh_public_key: '- (Optional) The users public key'
            ssh_username: '- (Required) The ssh username, with witch this user wants to log in'
            user_arn: '- (Required) The user''s IAM ARN'
        importStatements: []
    aws_organizations_account:
        subCategory: Organizations
        description: Provides a resource to create a member account in the current AWS Organization.
        name: aws_organizations_account
        title: aws_organizations_account
        examples:
            - name: account
              manifest: |-
                {
                  "email": "john@doe.org",
                  "name": "my_new_account"
                }
            - name: account
              manifest: |-
                {
                  "email": "john@doe.org",
                  "lifecycle": [
                    {
                      "ignore_changes": [
                        "${role_name}"
                      ]
                    }
                  ],
                  "name": "my_new_account",
                  "role_name": "myOrganizationRole"
                }
        argumentDocs:
            arn: '- The ARN for this account.'
            close_on_deletion: '- (Optional) If true, a deletion event will close the account. Otherwise, it will only remove from the organization. This is not supported for GovCloud accounts.'
            create_govcloud: '- (Optional) Whether to also create a GovCloud account. The GovCloud account is tied to the main (commercial) account this resource creates. If true, the GovCloud account ID is available in the govcloud_id attribute. The only way to manage the GovCloud account with Terraform is to subsequently import the account using this resource.'
            email: '- (Required) Email address of the owner to assign to the new member account. This email address must not already be associated with another AWS account.'
            govcloud_id: '- ID for a GovCloud account created with the account.'
            iam_user_access_to_billing: '- (Optional) If set to ALLOW, the new account enables IAM users and roles to access account billing information if they have the required permissions. If set to DENY, then only the root user (and no roles) of the new account can access account billing information. If this is unset, the AWS API will default this to ALLOW. If the resource is created and this option is changed, it will try to recreate the account.'
            id: '- The AWS account id'
            name: '- (Required) Friendly name for the member account.'
            parent_id: '- (Optional) Parent Organizational Unit ID or Root ID for the account. Defaults to the Organization default Root ID. A configuration must be present for this argument to perform drift detection.'
            role_name: '- (Optional) The name of an IAM role that Organizations automatically preconfigures in the new member account. This role trusts the root account, allowing users in the root account to assume the role, as permitted by the root account administrator. The role has administrator permissions in the new member account. The Organizations API provides no method for reading this information after account creation, so Terraform cannot perform drift detection on its value and will always show a difference for a configured value after import unless ignore_changes is used.'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_organizations_delegated_administrator:
        subCategory: Organizations
        description: Provides a resource to manage an AWS Organizations Delegated Administrator.
        name: aws_organizations_delegated_administrator
        title: aws_organizations_delegated_administrator
        examples:
            - name: example
              manifest: |-
                {
                  "account_id": "123456789012",
                  "service_principal": "principal"
                }
        argumentDocs:
            account_id: '- (Required) The account ID number of the member account in the organization to register as a delegated administrator.'
            arn: '- The Amazon Resource Name (ARN) of the delegated administrator''s account.'
            delegation_enabled_date: '- The date when the account was made a delegated administrator.'
            email: '- The email address that is associated with the delegated administrator''s AWS account.'
            id: '- The unique identifier (ID) of the delegated administrator.'
            joined_method: '- The method by which the delegated administrator''s account joined the organization.'
            joined_timestamp: '- The date when the delegated administrator''s account became a part of the organization.'
            name: '- The friendly name of the delegated administrator''s account.'
            service_principal: '- (Required) The service principal of the AWS service for which you want to make the member account a delegated administrator.'
            status: '- The status of the delegated administrator''s account in the organization.'
        importStatements: []
    aws_organizations_organization:
        subCategory: Organizations
        description: Provides a resource to create an organization.
        name: aws_organizations_organization
        title: aws_organizations_organization
        examples:
            - name: org
              manifest: |-
                {
                  "aws_service_access_principals": [
                    "cloudtrail.amazonaws.com",
                    "config.amazonaws.com"
                  ],
                  "feature_set": "ALL"
                }
        argumentDocs:
            accounts: '- List of organization accounts including the master account. For a list excluding the master account, see the non_master_accounts attribute. All elements have these attributes:'
            arn: '- ARN of the account'
            aws_service_access_principals: '- (Optional) List of AWS service principal names for which you want to enable integration with your organization. This is typically in the form of a URL, such as service-abbreviation.amazonaws.com. Organization must have feature_set set to ALL. For additional information, see the AWS Organizations User Guide.'
            email: '- Email of the account'
            enabled_policy_types: '- (Optional) List of Organizations policy types to enable in the Organization Root. Organization must have feature_set set to ALL. For additional information about valid policy types (e.g., AISERVICES_OPT_OUT_POLICY, BACKUP_POLICY, SERVICE_CONTROL_POLICY, and TAG_POLICY), see the AWS Organizations API Reference.'
            feature_set: '- (Optional) Specify "ALL" (default) or "CONSOLIDATED_BILLING".'
            id: '- Identifier of the account'
            master_account_arn: '- ARN of the master account'
            master_account_email: '- Email address of the master account'
            master_account_id: '- Identifier of the master account'
            name: '- Name of the account'
            non_master_accounts: '- List of organization accounts excluding the master account. For a list including the master account, see the accounts attribute. All elements have these attributes:'
            policy_types: '- List of policy types enabled for this root. All elements have these attributes:'
            roots: '- List of organization roots. All elements have these attributes:'
            status: '- Current status of the account'
        importStatements: []
    aws_organizations_organizational_unit:
        subCategory: Organizations
        description: Provides a resource to create an organizational unit.
        name: aws_organizations_organizational_unit
        title: aws_organizations_organizational_unit
        examples:
            - name: example
              manifest: |-
                {
                  "name": "example",
                  "parent_id": "${aws_organizations_organization.example.roots[0].id}"
                }
              references:
                parent_id: aws_organizations_organization.example.roots[0].id
        argumentDocs:
            accounts: '- List of child accounts for this Organizational Unit. Does not return account information for child Organizational Units. All elements have these attributes:'
            arn: '- ARN of the account'
            email: '- Email of the account'
            id: '- Identifier of the account'
            name: '- The name for the organizational unit'
            parent_id: '- ID of the parent organizational unit, which may be the root'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_organizations_policy:
        subCategory: Organizations
        description: Provides a resource to manage an AWS Organizations policy.
        name: aws_organizations_policy
        title: aws_organizations_policy
        examples:
            - name: example
              manifest: |-
                {
                  "content": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": {\n    \"Effect\": \"Allow\",\n    \"Action\": \"*\",\n    \"Resource\": \"*\"\n  }\n}\n",
                  "name": "example"
                }
        argumentDocs:
            arn: '- Amazon Resource Name (ARN) of the policy.'
            content: '- (Required) The policy content to add to the new policy. For example, if you create a service control policy (SCP), this string must be JSON text that specifies the permissions that admins in attached accounts can delegate to their users, groups, and roles. For more information about the SCP syntax, see the Service Control Policy Syntax documentation and for more information on the Tag Policy syntax, see the Tag Policy Syntax documentation.'
            description: '- (Optional) A description to assign to the policy.'
            id: '- The unique identifier (ID) of the policy.'
            name: '- (Required) The friendly name to assign to the policy.'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            type: '- (Optional) The type of policy to create. Valid values are AISERVICES_OPT_OUT_POLICY, BACKUP_POLICY, SERVICE_CONTROL_POLICY (SCP), and TAG_POLICY. Defaults to SERVICE_CONTROL_POLICY.'
        importStatements: []
    aws_organizations_policy_attachment:
        subCategory: Organizations
        description: Provides a resource to attach an AWS Organizations policy to an organization account, root, or unit.
        name: aws_organizations_policy_attachment
        title: aws_organizations_policy_attachment
        examples:
            - name: account
              manifest: |-
                {
                  "policy_id": "${aws_organizations_policy.example.id}",
                  "target_id": "123456789012"
                }
              references:
                policy_id: aws_organizations_policy.example.id
            - name: root
              manifest: |-
                {
                  "policy_id": "${aws_organizations_policy.example.id}",
                  "target_id": "${aws_organizations_organization.example.roots[0].id}"
                }
              references:
                policy_id: aws_organizations_policy.example.id
                target_id: aws_organizations_organization.example.roots[0].id
            - name: unit
              manifest: |-
                {
                  "policy_id": "${aws_organizations_policy.example.id}",
                  "target_id": "${aws_organizations_organizational_unit.example.id}"
                }
              references:
                policy_id: aws_organizations_policy.example.id
                target_id: aws_organizations_organizational_unit.example.id
        argumentDocs:
            policy_id: '- (Required) The unique identifier (ID) of the policy that you want to attach to the target.'
            target_id: '- (Required) The unique identifier (ID) of the root, organizational unit, or account number that you want to attach the policy to.'
        importStatements: []
    aws_pinpoint_adm_channel:
        subCategory: Pinpoint
        description: Provides a Pinpoint ADM Channel resource.
        name: aws_pinpoint_adm_channel
        title: aws_pinpoint_adm_channel
        examples:
            - name: channel
              manifest: |-
                {
                  "application_id": "${aws_pinpoint_app.app.application_id}",
                  "client_id": "",
                  "client_secret": "",
                  "enabled": true
                }
              references:
                application_id: aws_pinpoint_app.app.application_id
              dependencies:
                aws_pinpoint_app.app: '{}'
        argumentDocs:
            application_id: '- (Required) The application ID.'
            client_id: '- (Required) Client ID (part of OAuth Credentials) obtained via Amazon Developer Account.'
            client_secret: '- (Required) Client Secret (part of OAuth Credentials) obtained via Amazon Developer Account.'
            enabled: '- (Optional) Specifies whether to enable the channel. Defaults to true.'
        importStatements: []
    aws_pinpoint_apns_channel:
        subCategory: Pinpoint
        description: Provides a Pinpoint APNs Channel resource.
        name: aws_pinpoint_apns_channel
        title: aws_pinpoint_apns_channel
        examples:
            - name: apns
              manifest: |-
                {
                  "application_id": "${aws_pinpoint_app.app.application_id}",
                  "certificate": "${file(\"./certificate.pem\")}",
                  "private_key": "${file(\"./private_key.key\")}"
                }
              references:
                application_id: aws_pinpoint_app.app.application_id
              dependencies:
                aws_pinpoint_app.app: '{}'
        argumentDocs:
            application_id: '- (Required) The application ID.'
            bundle_id: '- (Required) The ID assigned to your iOS app. To find this value, choose Certificates, IDs & Profiles, choose App IDs in the Identifiers section, and choose your app.'
            certificate: '- (Required) The pem encoded TLS Certificate from Apple.'
            default_authentication_method: |-
                - (Optional) The default authentication method used for APNs.
                NOTE: Amazon Pinpoint uses this default for every APNs push notification that you send using the console.
                You can override the default when you send a message programmatically using the Amazon Pinpoint API, the AWS CLI, or an AWS SDK.
                If your default authentication type fails, Amazon Pinpoint doesn't attempt to use the other authentication type.
            enabled: '- (Optional) Whether the channel is enabled or disabled. Defaults to true.'
            private_key: '- (Required) The Certificate Private Key file (ie. .key file).'
            team_id: '- (Required) The ID assigned to your Apple developer account team. This value is provided on the Membership page.'
            token_key: '- (Required) The .p8 file that you download from your Apple developer account when you create an authentication key.'
            token_key_id: '- (Required) The ID assigned to your signing key. To find this value, choose Certificates, IDs & Profiles, and choose your key in the Keys section.'
        importStatements: []
    aws_pinpoint_apns_sandbox_channel:
        subCategory: Pinpoint
        description: Provides a Pinpoint APNs Sandbox Channel resource.
        name: aws_pinpoint_apns_sandbox_channel
        title: aws_pinpoint_apns_sandbox_channel
        examples:
            - name: apns_sandbox
              manifest: |-
                {
                  "application_id": "${aws_pinpoint_app.app.application_id}",
                  "certificate": "${file(\"./certificate.pem\")}",
                  "private_key": "${file(\"./private_key.key\")}"
                }
              references:
                application_id: aws_pinpoint_app.app.application_id
              dependencies:
                aws_pinpoint_app.app: '{}'
        argumentDocs:
            application_id: '- (Required) The application ID.'
            bundle_id: '- (Required) The ID assigned to your iOS app. To find this value, choose Certificates, IDs & Profiles, choose App IDs in the Identifiers section, and choose your app.'
            certificate: '- (Required) The pem encoded TLS Certificate from Apple.'
            default_authentication_method: |-
                - (Optional) The default authentication method used for APNs Sandbox.
                NOTE: Amazon Pinpoint uses this default for every APNs push notification that you send using the console.
                You can override the default when you send a message programmatically using the Amazon Pinpoint API, the AWS CLI, or an AWS SDK.
                If your default authentication type fails, Amazon Pinpoint doesn't attempt to use the other authentication type.
            enabled: '- (Optional) Whether the channel is enabled or disabled. Defaults to true.'
            private_key: '- (Required) The Certificate Private Key file (ie. .key file).'
            team_id: '- (Required) The ID assigned to your Apple developer account team. This value is provided on the Membership page.'
            token_key: '- (Required) The .p8 file that you download from your Apple developer account when you create an authentication key.'
            token_key_id: '- (Required) The ID assigned to your signing key. To find this value, choose Certificates, IDs & Profiles, and choose your key in the Keys section.'
        importStatements: []
    aws_pinpoint_apns_voip_channel:
        subCategory: Pinpoint
        description: Provides a Pinpoint APNs VoIP Channel resource.
        name: aws_pinpoint_apns_voip_channel
        title: aws_pinpoint_apns_voip_channel
        examples:
            - name: apns_voip
              manifest: |-
                {
                  "application_id": "${aws_pinpoint_app.app.application_id}",
                  "certificate": "${file(\"./certificate.pem\")}",
                  "private_key": "${file(\"./private_key.key\")}"
                }
              references:
                application_id: aws_pinpoint_app.app.application_id
              dependencies:
                aws_pinpoint_app.app: '{}'
        argumentDocs:
            application_id: '- (Required) The application ID.'
            bundle_id: '- (Required) The ID assigned to your iOS app. To find this value, choose Certificates, IDs & Profiles, choose App IDs in the Identifiers section, and choose your app.'
            certificate: '- (Required) The pem encoded TLS Certificate from Apple.'
            default_authentication_method: |-
                - (Optional) The default authentication method used for APNs.
                NOTE: Amazon Pinpoint uses this default for every APNs push notification that you send using the console.
                You can override the default when you send a message programmatically using the Amazon Pinpoint API, the AWS CLI, or an AWS SDK.
                If your default authentication type fails, Amazon Pinpoint doesn't attempt to use the other authentication type.
            enabled: '- (Optional) Whether the channel is enabled or disabled. Defaults to true.'
            private_key: '- (Required) The Certificate Private Key file (ie. .key file).'
            team_id: '- (Required) The ID assigned to your Apple developer account team. This value is provided on the Membership page.'
            token_key: '- (Required) The .p8 file that you download from your Apple developer account when you create an authentication key.'
            token_key_id: '- (Required) The ID assigned to your signing key. To find this value, choose Certificates, IDs & Profiles, and choose your key in the Keys section.'
        importStatements: []
    aws_pinpoint_apns_voip_sandbox_channel:
        subCategory: Pinpoint
        description: Provides a Pinpoint APNs VoIP Sandbox Channel resource.
        name: aws_pinpoint_apns_voip_sandbox_channel
        title: aws_pinpoint_apns_voip_sandbox_channel
        examples:
            - name: apns_voip_sandbox
              manifest: |-
                {
                  "application_id": "${aws_pinpoint_app.app.application_id}",
                  "certificate": "${file(\"./certificate.pem\")}",
                  "private_key": "${file(\"./private_key.key\")}"
                }
              references:
                application_id: aws_pinpoint_app.app.application_id
              dependencies:
                aws_pinpoint_app.app: '{}'
        argumentDocs:
            application_id: '- (Required) The application ID.'
            bundle_id: '- (Required) The ID assigned to your iOS app. To find this value, choose Certificates, IDs & Profiles, choose App IDs in the Identifiers section, and choose your app.'
            certificate: '- (Required) The pem encoded TLS Certificate from Apple.'
            default_authentication_method: |-
                - (Optional) The default authentication method used for APNs.
                NOTE: Amazon Pinpoint uses this default for every APNs push notification that you send using the console.
                You can override the default when you send a message programmatically using the Amazon Pinpoint API, the AWS CLI, or an AWS SDK.
                If your default authentication type fails, Amazon Pinpoint doesn't attempt to use the other authentication type.
            enabled: '- (Optional) Whether the channel is enabled or disabled. Defaults to true.'
            private_key: '- (Required) The Certificate Private Key file (ie. .key file).'
            team_id: '- (Required) The ID assigned to your Apple developer account team. This value is provided on the Membership page.'
            token_key: '- (Required) The .p8 file that you download from your Apple developer account when you create an authentication key.'
            token_key_id: '- (Required) The ID assigned to your signing key. To find this value, choose Certificates, IDs & Profiles, and choose your key in the Keys section.'
        importStatements: []
    aws_pinpoint_app:
        subCategory: Pinpoint
        description: Provides a Pinpoint App resource.
        name: aws_pinpoint_app
        title: aws_pinpoint_app
        examples:
            - name: example
              manifest: |-
                {
                  "limits": [
                    {
                      "maximum_duration": 600
                    }
                  ],
                  "name": "test-app",
                  "quiet_time": [
                    {
                      "end": "06:00",
                      "start": "00:00"
                    }
                  ]
                }
        argumentDocs:
            application_id: '- The Application ID of the Pinpoint App.'
            arn: '- Amazon Resource Name (ARN) of the PinPoint Application'
            campaign_hook: '- (Optional) Specifies settings for invoking an AWS Lambda function that customizes a segment for a campaign'
            daily: '- (Optional) The maximum number of messages that the campaign can send daily.'
            end: '- (Optional) The default end time for quiet time in ISO 8601 format. Required if start is set'
            lambda_function_name: '- (Optional) Lambda function name or ARN to be called for delivery. Conflicts with web_url'
            limits: '- (Optional) The default campaign limits for the app. These limits apply to each campaign for the app, unless the campaign overrides the default with limits of its own'
            maximum_duration: '- (Optional) The length of time (in seconds) that the campaign can run before it ends and message deliveries stop. This duration begins at the scheduled start time for the campaign. The minimum value is 60.'
            messages_per_second: '- (Optional) The number of messages that the campaign can send per second. The minimum value is 50, and the maximum is 20000.'
            mode: '- (Required if lambda_function_name or web_url are provided) What mode Lambda should be invoked in. Valid values for this parameter are DELIVERY, FILTER.'
            name: '- (Optional) The application name. By default generated by Terraform'
            name_prefix: '- (Optional) The name of the Pinpoint application. Conflicts with name'
            quiet_time: '- (Optional) The default quiet time for the app. Each campaign for this app sends no messages during this time unless the campaign overrides the default with a quiet time of its own'
            start: '- (Optional) The default start time for quiet time in ISO 8601 format. Required if end is set'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            total: '- (Optional) The maximum total number of messages that the campaign can send.'
            web_url: '- (Optional) Web URL to call for hook. If the URL has authentication specified it will be added as authentication to the request. Conflicts with lambda_function_name'
        importStatements: []
    aws_pinpoint_baidu_channel:
        subCategory: Pinpoint
        description: Provides a Pinpoint Baidu Channel resource.
        name: aws_pinpoint_baidu_channel
        title: aws_pinpoint_baidu_channel
        examples:
            - name: channel
              manifest: |-
                {
                  "api_key": "",
                  "application_id": "${aws_pinpoint_app.app.application_id}",
                  "secret_key": ""
                }
              references:
                application_id: aws_pinpoint_app.app.application_id
              dependencies:
                aws_pinpoint_app.app: '{}'
        argumentDocs:
            api_key: '- (Required) Platform credential API key from Baidu.'
            application_id: '- (Required) The application ID.'
            enabled: '- (Optional) Specifies whether to enable the channel. Defaults to true.'
            secret_key: '- (Required) Platform credential Secret key from Baidu.'
        importStatements: []
    aws_pinpoint_email_channel:
        subCategory: Pinpoint
        description: Provides a Pinpoint Email Channel resource.
        name: aws_pinpoint_email_channel
        title: aws_pinpoint_email_channel
        examples:
            - name: email
              manifest: |-
                {
                  "application_id": "${aws_pinpoint_app.app.application_id}",
                  "from_address": "user@example.com",
                  "role_arn": "${aws_iam_role.role.arn}"
                }
              references:
                application_id: aws_pinpoint_app.app.application_id
                role_arn: aws_iam_role.role.arn
              dependencies:
                aws_iam_role.role: |-
                    {
                      "assume_role_policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"pinpoint.amazonaws.com\"\n      },\n      \"Effect\": \"Allow\",\n      \"Sid\": \"\"\n    }\n  ]\n}\n"
                    }
                aws_iam_role_policy.role_policy: |-
                    {
                      "name": "role_policy",
                      "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": {\n    \"Action\": [\n      \"mobileanalytics:PutEvents\",\n      \"mobileanalytics:PutItems\"\n    ],\n    \"Effect\": \"Allow\",\n    \"Resource\": [\n      \"*\"\n    ]\n  }\n}\n",
                      "role": "${aws_iam_role.role.id}"
                    }
                aws_pinpoint_app.app: '{}'
                aws_ses_domain_identity.identity: |-
                    {
                      "domain": "example.com"
                    }
        argumentDocs:
            application_id: '- (Required) The application ID.'
            configuration_set: '- (Optional) The ARN of the Amazon SES configuration set that you want to apply to messages that you send through the channel.'
            enabled: '- (Optional) Whether the channel is enabled or disabled. Defaults to true.'
            from_address: '- (Required) The email address used to send emails from. You can use email only (user@example.com) or friendly address (User <user@example.com>). This field comply with RFC 5322.'
            identity: '- (Required) The ARN of an identity verified with SES.'
            messages_per_second: '- Messages per second that can be sent.'
            role_arn: '- (Optional) The ARN of an IAM Role used to submit events to Mobile Analytics'' event ingestion service.'
        importStatements: []
    aws_pinpoint_event_stream:
        subCategory: Pinpoint
        description: Provides a Pinpoint Event Stream resource.
        name: aws_pinpoint_event_stream
        title: aws_pinpoint_event_stream
        examples:
            - name: stream
              manifest: |-
                {
                  "application_id": "${aws_pinpoint_app.app.application_id}",
                  "destination_stream_arn": "${aws_kinesis_stream.test_stream.arn}",
                  "role_arn": "${aws_iam_role.test_role.arn}"
                }
              references:
                application_id: aws_pinpoint_app.app.application_id
                destination_stream_arn: aws_kinesis_stream.test_stream.arn
                role_arn: aws_iam_role.test_role.arn
              dependencies:
                aws_iam_role.test_role: |-
                    {
                      "assume_role_policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"pinpoint.us-east-1.amazonaws.com\"\n      },\n      \"Effect\": \"Allow\",\n      \"Sid\": \"\"\n    }\n  ]\n}\n"
                    }
                aws_iam_role_policy.test_role_policy: |-
                    {
                      "name": "test_policy",
                      "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": {\n    \"Action\": [\n      \"kinesis:PutRecords\",\n      \"kinesis:DescribeStream\"\n    ],\n    \"Effect\": \"Allow\",\n    \"Resource\": [\n      \"arn:aws:kinesis:us-east-1:*:*/*\"\n    ]\n  }\n}\n",
                      "role": "${aws_iam_role.test_role.id}"
                    }
                aws_kinesis_stream.test_stream: |-
                    {
                      "name": "pinpoint-kinesis-test",
                      "shard_count": 1
                    }
                aws_pinpoint_app.app: '{}'
        argumentDocs:
            application_id: '- (Required) The application ID.'
            destination_stream_arn: '- (Required) The Amazon Resource Name (ARN) of the Amazon Kinesis stream or Firehose delivery stream to which you want to publish events.'
            role_arn: '- (Required) The IAM role that authorizes Amazon Pinpoint to publish events to the stream in your account.'
        importStatements: []
    aws_pinpoint_gcm_channel:
        subCategory: Pinpoint
        description: Provides a Pinpoint GCM Channel resource.
        name: aws_pinpoint_gcm_channel
        title: aws_pinpoint_gcm_channel
        examples:
            - name: gcm
              manifest: |-
                {
                  "api_key": "api_key",
                  "application_id": "${aws_pinpoint_app.app.application_id}"
                }
              references:
                application_id: aws_pinpoint_app.app.application_id
              dependencies:
                aws_pinpoint_app.app: '{}'
        argumentDocs:
            api_key: '- (Required) Platform credential API key from Google.'
            application_id: '- (Required) The application ID.'
            enabled: '- (Optional) Whether the channel is enabled or disabled. Defaults to true.'
        importStatements: []
    aws_pinpoint_sms_channel:
        subCategory: Pinpoint
        description: Provides a Pinpoint SMS Channel resource.
        name: aws_pinpoint_sms_channel
        title: aws_pinpoint_sms_channel
        examples:
            - name: sms
              manifest: |-
                {
                  "application_id": "${aws_pinpoint_app.app.application_id}"
                }
              references:
                application_id: aws_pinpoint_app.app.application_id
              dependencies:
                aws_pinpoint_app.app: '{}'
        argumentDocs:
            application_id: '- (Required) The application ID.'
            enabled: '- (Optional) Whether the channel is enabled or disabled. Defaults to true.'
            promotional_messages_per_second: '- Promotional messages per second that can be sent.'
            sender_id: '- (Optional) Sender identifier of your messages.'
            short_code: '- (Optional) The Short Code registered with the phone provider.'
            transactional_messages_per_second: '- Transactional messages per second that can be sent.'
        importStatements: []
    aws_placement_group:
        subCategory: EC2 (Elastic Compute Cloud)
        description: Provides an EC2 placement group.
        name: aws_placement_group
        title: aws_placement_group
        examples:
            - name: web
              manifest: |-
                {
                  "name": "hunky-dory-pg",
                  "strategy": "cluster"
                }
        argumentDocs:
            arn: '- Amazon Resource Name (ARN) of the placement group.'
            id: '- The name of the placement group.'
            name: '- (Required) The name of the placement group.'
            partition_count: |-
                - (Optional) The number of partitions to create in the
                placement group.  Can only be specified when the strategy is set to
                "partition".  Valid values are 1 - 7 (default is 2).
            placement_group_id: '- The ID of the placement group.'
            spread_level: |-
                - (Optional) Determines how placement groups spread instances. Can only be used
                when the strategy is set to "spread". Can be "host" or "rack". "host" can only be used for Outpost placement groups.
            strategy: '- (Required) The placement strategy. Can be "cluster", "partition" or "spread".'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_prometheus_alert_manager_definition:
        subCategory: AMP (Managed Prometheus)
        description: Manages an Amazon Managed Service for Prometheus (AMP) Alert Manager Definition
        name: aws_prometheus_alert_manager_definition
        title: aws_prometheus_alert_manager_definition
        examples:
            - name: demo
              manifest: |-
                {
                  "definition": "alertmanager_config: |\n  route:\n    receiver: 'default'\n  receivers:\n    - name: 'default'\n",
                  "workspace_id": "${aws_prometheus_workspace.demo.id}"
                }
              references:
                workspace_id: aws_prometheus_workspace.demo.id
              dependencies:
                aws_prometheus_workspace.demo: '{}'
        argumentDocs:
            definition: '- (Required) the alert manager definition that you want to be applied. See more in AWS Docs.'
            workspace_id: '- (Required) The id of the prometheus workspace the alert manager definition should be linked to'
        importStatements: []
    aws_prometheus_rule_group_namespace:
        subCategory: AMP (Managed Prometheus)
        description: Manages an Amazon Managed Service for Prometheus (AMP) Rule Group Namespace
        name: aws_prometheus_rule_group_namespace
        title: aws_prometheus_rule_group_namespace
        examples:
            - name: demo
              manifest: |-
                {
                  "data": "groups:\n  - name: test\n    rules:\n    - record: metric:recording_rule\n      expr: avg(rate(container_cpu_usage_seconds_total[5m]))\n",
                  "name": "rules",
                  "workspace_id": "${aws_prometheus_workspace.demo.id}"
                }
              references:
                workspace_id: aws_prometheus_workspace.demo.id
              dependencies:
                aws_prometheus_workspace.demo: '{}'
        argumentDocs:
            data: '- (Required) the rule group namespace data that you want to be applied. See more in AWS Docs.'
            name: '- (Required) The name of the rule group namespace'
            workspace_id: '- (Required) The id of the prometheus workspace the rule group namespace should be linked to'
        importStatements: []
    aws_prometheus_workspace:
        subCategory: AMP (Managed Prometheus)
        description: Manages an Amazon Managed Service for Prometheus (AMP) Workspace
        name: aws_prometheus_workspace
        title: aws_prometheus_workspace
        examples:
            - name: demo
              manifest: |-
                {
                  "alias": "prometheus-test",
                  "tags": {
                    "Environment": "production",
                    "Owner": "abhi"
                  }
                }
        argumentDocs:
            alias: '- (Optional) The alias of the prometheus workspace. See more in AWS Docs.'
            arn: '- Amazon Resource Name (ARN) of the workspace.'
            id: '- Identifier of the workspace'
            prometheus_endpoint: '- Prometheus endpoint available for this workspace.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_proxy_protocol_policy:
        subCategory: ELB Classic
        description: Provides a proxy protocol policy, which allows an ELB to carry a client connection information to a backend.
        name: aws_proxy_protocol_policy
        title: aws_proxy_protocol_policy
        examples:
            - name: smtp
              manifest: |-
                {
                  "instance_ports": [
                    "25",
                    "587"
                  ],
                  "load_balancer": "${aws_elb.lb.name}"
                }
              references:
                load_balancer: aws_elb.lb.name
              dependencies:
                aws_elb.lb: |-
                    {
                      "availability_zones": [
                        "us-east-1a"
                      ],
                      "listener": [
                        {
                          "instance_port": 25,
                          "instance_protocol": "tcp",
                          "lb_port": 25,
                          "lb_protocol": "tcp"
                        },
                        {
                          "instance_port": 587,
                          "instance_protocol": "tcp",
                          "lb_port": 587,
                          "lb_protocol": "tcp"
                        }
                      ],
                      "name": "test-lb"
                    }
        argumentDocs:
            id: '- The ID of the policy.'
            instance_ports: |-
                - (Required) List of instance ports to which the policy
                should be applied. This can be specified if the protocol is SSL or TCP.
            load_balancer: |-
                - (Required) The load balancer to which the policy
                should be attached.
        importStatements: []
    aws_qldb_ledger:
        subCategory: QLDB (Quantum Ledger Database)
        description: Provides an QLDB Resource resource.
        name: aws_qldb_ledger
        title: aws_qldb_ledger
        examples:
            - name: sample-ledger
              manifest: |-
                {
                  "name": "sample-ledger",
                  "permissions_mode": "STANDARD"
                }
        argumentDocs:
            arn: '- The ARN of the QLDB Ledger'
            deletion_protection: '- (Optional) The deletion protection for the QLDB Ledger instance. By default it is true. To delete this resource via Terraform, this value must be configured to false and applied first before attempting deletion.'
            id: '- The Name of the QLDB Ledger'
            kms_key: '- (Optional) The key in AWS Key Management Service (AWS KMS) to use for encryption of data at rest in the ledger. For more information, see the AWS documentation. Valid values are "AWS_OWNED_KMS_KEY" to use an AWS KMS key that is owned and managed by AWS on your behalf, or the ARN of a valid symmetric customer managed KMS key.'
            name: '- (Optional) The friendly name for the QLDB Ledger instance. By default generated by Terraform.'
            permissions_mode: '- (Required) The permissions mode for the QLDB ledger instance. Specify either ALLOW_ALL or STANDARD.'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_qldb_stream:
        subCategory: QLDB (Quantum Ledger Database)
        description: Provides a QLDB Stream resource.
        name: aws_qldb_stream
        title: aws_qldb_stream
        examples:
            - name: example
              manifest: |-
                {
                  "inclusive_start_time": "2021-01-01T00:00:00Z",
                  "kinesis_configuration": [
                    {
                      "aggegation_enabled": false,
                      "stream_arn": "arn:aws:kinesis:us-east-1:xxxxxxxxxxxx:stream/example-kinesis-stream"
                    }
                  ],
                  "ledger_name": "existing-ledger-name",
                  "role_arn": "sample-role-arn",
                  "stream_name": "sample-ledger-stream",
                  "tags": {
                    "example": "tag"
                  }
                }
        argumentDocs:
            arn: '- The ARN of the QLDB Stream.'
            exclusive_end_time: '- (Optional) The exclusive date and time that specifies when the stream ends. If you don''t define this parameter, the stream runs indefinitely until you cancel it. It must be in ISO 8601 date and time format and in Universal Coordinated Time (UTC). For example: "2019-06-13T21:36:34Z".'
            id: '- The ID of the QLDB Stream.'
            inclusive_start_time: '- (Required) The inclusive start date and time from which to start streaming journal data. This parameter must be in ISO 8601 date and time format and in Universal Coordinated Time (UTC). For example: "2019-06-13T21:36:34Z".  This cannot be in the future and must be before exclusive_end_time.  If you provide a value that is before the ledger''s CreationDateTime, QLDB effectively defaults it to the ledger''s CreationDateTime.'
            kinesis_configuration: '- (Required) The configuration settings of the Kinesis Data Streams destination for your stream request. Documented below.'
            kinesis_configuration.aggregation_enabled: '- (Optional) Enables QLDB to publish multiple data records in a single Kinesis Data Streams record, increasing the number of records sent per API call. Default: true.'
            kinesis_configuration.stream_arn: '- (Required) The Amazon Resource Name (ARN) of the Kinesis Data Streams resource.'
            ledger_name: '- (Required) The name of the QLDB ledger.'
            role_arn: '- (Required) The Amazon Resource Name (ARN) of the IAM role that grants QLDB permissions for a journal stream to write data records to a Kinesis Data Streams resource.'
            stream_name: '- (Required) The name that you want to assign to the QLDB journal stream. User-defined names can help identify and indicate the purpose of a stream.  Your stream name must be unique among other active streams for a given ledger. Stream names have the same naming constraints as ledger names, as defined in the Amazon QLDB Developer Guide.'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_quicksight_data_source:
        subCategory: QuickSight
        description: Manages a Resource QuickSight Data Source.
        name: aws_quicksight_data_source
        title: aws_quicksight_data_source
        examples:
            - name: default
              manifest: |-
                {
                  "data_source_id": "example-id",
                  "name": "My Cool Data in S3",
                  "parameters": [
                    {
                      "s3": [
                        {
                          "manifest_file_location": [
                            {
                              "bucket": "my-bucket",
                              "key": "path/to/manifest.json"
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "type": "S3"
                }
        argumentDocs:
            actions: '- (Required) Set of IAM actions to grant or revoke permissions on. Max of 16 items.'
            amazon_elasticsearch: '- (Optional) Parameters for connecting to Amazon Elasticsearch.'
            arn: '- Amazon Resource Name (ARN) of the data source'
            athena: '- (Optional) Parameters for connecting to Athena.'
            aurora: '- (Optional) Parameters for connecting to Aurora MySQL.'
            aurora_postgresql: '- (Optional) Parameters for connecting to Aurora Postgresql.'
            aws_account_id: '- (Optional, Forces new resource) The ID for the AWS account that the data source is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.'
            aws_iot_analytics: '- (Optional) Parameters for connecting to AWS IOT Analytics.'
            bucket: '- (Required) The name of the bucket that contains the manifest file.'
            catalog: '- (Required) The catalog to which to connect.'
            cluster_id: '- (Optional, Required if host and port are not provided) The ID of the cluster to which to connect.'
            copy_source_arn: |-
                (Optional, Conflicts with credential_pair) - The Amazon Resource Name (ARN) of a data source that has the credential pair that you want to use.
                When the value is not null, the credential_pair from the data source in the ARN is used.
            credential_pair: (Optional, Conflicts with copy_source_arn) - Credential pair. See Credential Pair below for more details.
            credentials: '- (Optional) The credentials Amazon QuickSight uses to connect to your underlying source. Currently, only credentials based on user name and password are supported. See Credentials below for more details.'
            data_set_name: '- (Required) The name of the data set to which to connect.'
            data_source_id: '- (Required, Forces new resource) An identifier for the data source.'
            database: '- (Required) The database to which to connect.'
            disable_ssl: '- (Required) A Boolean option to control whether SSL should be disabled.'
            domain: '- (Required) The OpenSearch domain.'
            host: '- (Required) The host to which to connect.'
            instance_id: '- (Optional) The instance ID to which to connect.'
            jira: '- (Optional) Parameters for connecting to Jira.'
            key: '- (Required) The key of the manifest file within the bucket.'
            manifest_file_location: '- (Required) An object containing the S3 location of the S3 manifest file.'
            maria_db: '- (Optional) Parameters for connecting to MariaDB.'
            max_rows: '- (Required) The maximum number of rows to query.'
            mysql: '- (Optional) Parameters for connecting to MySQL.'
            name: '- (Required) A name for the data source, maximum of 128 characters.'
            oracle: '- (Optional) Parameters for connecting to Oracle.'
            parameters: '- (Required) The parameters used to connect to this data source (exactly one).'
            password: '- (Required) Password, maximum length of 1024 characters.'
            permission: '- (Optional) A set of resource permissions on the data source. Maximum of 64 items. See Permission below for more details.'
            port: '- (Required) The port to which to connect.'
            postgresql: '- (Optional) Parameters for connecting to Postgresql.'
            presto: '- (Optional) Parameters for connecting to Presto.'
            principal: '- (Required) The Amazon Resource Name (ARN) of the principal.'
            query: '- (Required) The Twitter query to retrieve the data.'
            rds: '- (Optional) Parameters for connecting to RDS.'
            redshift: '- (Optional) Parameters for connecting to Redshift.'
            s3: '- (Optional) Parameters for connecting to S3.'
            service_now: '- (Optional) Parameters for connecting to ServiceNow.'
            site_base_url: '- (Required) The base URL of the Jira instance''s site to which to connect.'
            snowflake: '- (Optional) Parameters for connecting to Snowflake.'
            spark: '- (Optional) Parameters for connecting to Spark.'
            sql_server: '- (Optional) Parameters for connecting to SQL Server.'
            ssl_properties: '- (Optional) Secure Socket Layer (SSL) properties that apply when Amazon QuickSight connects to your underlying source. See SSL Properties below for more details.'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            teradata: '- (Optional) Parameters for connecting to Teradata.'
            twitter: '- (Optional) Parameters for connecting to Twitter.'
            type: '- (Required) The type of the data source. See the AWS Documentation for the complete list of valid values.'
            username: '- (Required) User name, maximum length of 64 characters.'
            vpc_connection_arn: '- (Required) The Amazon Resource Name (ARN) for the VPC connection.'
            vpc_connection_properties: '- (Optional) Use this parameter only when you want Amazon QuickSight to use a VPC connection when connecting to your underlying source. See VPC Connection Properties below for more details.'
            warehouse: '- (Required) The warehouse to which to connect.'
            work_group: '- (Optional) The work-group to which to connect.'
        importStatements: []
    aws_quicksight_group:
        subCategory: QuickSight
        description: Manages a Resource QuickSight Group.
        name: aws_quicksight_group
        title: aws_quicksight_group
        examples:
            - name: example
              manifest: |-
                {
                  "group_name": "tf-example"
                }
        argumentDocs:
            arn: '- Amazon Resource Name (ARN) of group'
            aws_account_id: '- (Optional) The ID for the AWS account that the group is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.'
            description: '- (Optional) A description for the group.'
            group_name: '- (Required) A name for the group.'
            namespace: '- (Optional) The namespace. Currently, you should set this to default.'
        importStatements: []
    aws_quicksight_group_membership:
        subCategory: QuickSight
        description: Manages a Resource QuickSight Group Membership.
        name: aws_quicksight_group_membership
        title: aws_quicksight_group_membership
        examples:
            - name: example
              manifest: |-
                {
                  "group_name": "all-access-users",
                  "member_name": "john_smith"
                }
        argumentDocs:
            aws_account_id: '- (Optional) The ID for the AWS account that the group is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.'
            group_name: '- (Required) The name of the group in which the member will be added.'
            member_name: '- (Required) The name of the member to add to the group.'
            namespace: '- (Required) The namespace. Defaults to default. Currently only default is supported.'
        importStatements: []
    aws_quicksight_user:
        subCategory: QuickSight
        description: Manages a Resource QuickSight User.
        name: aws_quicksight_user
        title: aws_quicksight_user
        examples:
            - name: example
              manifest: |-
                {
                  "email": "author@example.com",
                  "iam_arn": "arn:aws:iam::123456789012:user/Example",
                  "identity_type": "IAM",
                  "namespace": "foo",
                  "session_name": "an-author",
                  "user_role": "AUTHOR"
                }
        argumentDocs:
            arn: '- Amazon Resource Name (ARN) of the user'
            aws_account_id: '- (Optional) The ID for the AWS account that the user is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.'
            email: '- (Required) The email address of the user that you want to register.'
            iam_arn: '- (Optional) The ARN of the IAM user or role that you are registering with Amazon QuickSight.'
            identity_type: '- (Required) Amazon QuickSight supports several ways of managing the identity of users. This parameter accepts either  IAM or QUICKSIGHT. If IAM is specified, the iam_arn must also be specified.'
            namespace: '- (Optional) The Amazon Quicksight namespace to create the user in. Defaults to default.'
            session_name: '- (Optional) The name of the IAM session to use when assuming roles that can embed QuickSight dashboards. Only valid for registering users using an assumed IAM role. Additionally, if registering multiple users using the same IAM role, each user needs to have a unique session name.'
            user_name: '- (Optional) The Amazon QuickSight user name that you want to create for the user you are registering. Only valid for registering a user with identity_type set to QUICKSIGHT.'
            user_role: '- (Required) The Amazon QuickSight role of the user. The user role can be one of the following: READER, AUTHOR, or ADMIN'
        importStatements: []
    aws_ram_principal_association:
        subCategory: RAM (Resource Access Manager)
        description: Provides a Resource Access Manager (RAM) principal association.
        name: aws_ram_principal_association
        title: aws_ram_principal_association
        examples:
            - name: example
              manifest: |-
                {
                  "principal": "111111111111",
                  "resource_share_arn": "${aws_ram_resource_share.example.arn}"
                }
              references:
                resource_share_arn: aws_ram_resource_share.example.arn
              dependencies:
                aws_ram_resource_share.example: |-
                    {
                      "allow_external_principals": true
                    }
            - name: example
              manifest: |-
                {
                  "principal": "${aws_organizations_organization.example.arn}",
                  "resource_share_arn": "${aws_ram_resource_share.example.arn}"
                }
              references:
                principal: aws_organizations_organization.example.arn
                resource_share_arn: aws_ram_resource_share.example.arn
        argumentDocs:
            aws_ram_resource_share_accepter: resource
            id: '- The Amazon Resource Name (ARN) of the Resource Share and the principal, separated by a comma.'
            principal: '- (Required) The principal to associate with the resource share. Possible values are an AWS account ID, an AWS Organizations Organization ARN, or an AWS Organizations Organization Unit ARN.'
            resource_share_arn: '- (Required) The Amazon Resource Name (ARN) of the resource share.'
        importStatements: []
    aws_ram_resource_association:
        subCategory: RAM (Resource Access Manager)
        description: Manages a Resource Access Manager (RAM) Resource Association.
        name: aws_ram_resource_association
        title: aws_ram_resource_association
        examples:
            - name: example
              manifest: |-
                {
                  "resource_arn": "${aws_subnet.example.arn}",
                  "resource_share_arn": "${aws_ram_resource_share.example.arn}"
                }
              references:
                resource_arn: aws_subnet.example.arn
                resource_share_arn: aws_ram_resource_share.example.arn
        argumentDocs:
            id: '- The Amazon Resource Name (ARN) of the resource share.'
            resource_arn: '- (Required) Amazon Resource Name (ARN) of the resource to associate with the RAM Resource Share.'
            resource_share_arn: '- (Required) Amazon Resource Name (ARN) of the RAM Resource Share.'
        importStatements: []
    aws_ram_resource_share:
        subCategory: RAM (Resource Access Manager)
        description: Manages a Resource Access Manager (RAM) Resource Share.
        name: aws_ram_resource_share
        title: aws_ram_resource_share
        examples:
            - name: example
              manifest: |-
                {
                  "allow_external_principals": true,
                  "name": "example",
                  "tags": {
                    "Environment": "Production"
                  }
                }
        argumentDocs:
            allow_external_principals: '- (Optional) Indicates whether principals outside your organization can be associated with a resource share.'
            arn: '- The Amazon Resource Name (ARN) of the resource share.'
            id: '- The Amazon Resource Name (ARN) of the resource share.'
            name: '- (Required) The name of the resource share.'
            permission_arns: '- (Optional) Specifies the Amazon Resource Names (ARNs) of the RAM permission to associate with the resource share. If you do not specify an ARN for the permission, RAM automatically attaches the default version of the permission for each resource type. You can associate only one permission with each resource type included in the resource share.'
            tags: '- (Optional) A map of tags to assign to the resource share. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_ram_resource_share_accepter:
        subCategory: RAM (Resource Access Manager)
        description: Manages accepting a Resource Access Manager (RAM) Resource Share invitation.
        name: aws_ram_resource_share_accepter
        title: aws_ram_resource_share_accepter
        examples:
            - name: receiver_accept
              manifest: |-
                {
                  "share_arn": "${aws_ram_principal_association.sender_invite.resource_share_arn}"
                }
              references:
                share_arn: aws_ram_principal_association.sender_invite.resource_share_arn
              dependencies:
                aws_ram_principal_association.sender_invite: |-
                    {
                      "principal": "${data.aws_caller_identity.receiver.account_id}",
                      "provider": "${aws.alternate}",
                      "resource_share_arn": "${aws_ram_resource_share.sender_share.arn}"
                    }
                aws_ram_resource_share.sender_share: |-
                    {
                      "allow_external_principals": true,
                      "name": "tf-test-resource-share",
                      "provider": "${aws.alternate}",
                      "tags": {
                        "Name": "tf-test-resource-share"
                      }
                    }
        argumentDocs:
            invitation_arn: '- The ARN of the resource share invitation.'
            receiver_account_id: '- The account ID of the receiver account which accepts the invitation.'
            resources: '- A list of the resource ARNs shared via the resource share.'
            sender_account_id: '- The account ID of the sender account which submits the invitation.'
            share_arn: '- (Required) The ARN of the resource share.'
            share_id: '- The ID of the resource share as displayed in the console.'
            share_name: '- The name of the resource share.'
            status: '- The status of the resource share (ACTIVE, PENDING, FAILED, DELETING, DELETED).'
        importStatements: []
    aws_rds_cluster:
        subCategory: RDS (Relational Database)
        description: Manages an RDS Aurora Cluster
        name: aws_rds_cluster
        title: aws_rds_cluster
        examples:
            - name: default
              manifest: |-
                {
                  "availability_zones": [
                    "us-west-2a",
                    "us-west-2b",
                    "us-west-2c"
                  ],
                  "backup_retention_period": 5,
                  "cluster_identifier": "aurora-cluster-demo",
                  "database_name": "mydb",
                  "engine": "aurora-mysql",
                  "engine_version": "5.7.mysql_aurora.2.03.2",
                  "master_password": "bar",
                  "master_username": "foo",
                  "preferred_backup_window": "07:00-09:00"
                }
            - name: default
              manifest: |-
                {
                  "availability_zones": [
                    "us-west-2a",
                    "us-west-2b",
                    "us-west-2c"
                  ],
                  "backup_retention_period": 5,
                  "cluster_identifier": "aurora-cluster-demo",
                  "database_name": "mydb",
                  "master_password": "bar",
                  "master_username": "foo",
                  "preferred_backup_window": "07:00-09:00"
                }
            - name: postgresql
              manifest: |-
                {
                  "availability_zones": [
                    "us-west-2a",
                    "us-west-2b",
                    "us-west-2c"
                  ],
                  "backup_retention_period": 5,
                  "cluster_identifier": "aurora-cluster-demo",
                  "database_name": "mydb",
                  "engine": "aurora-postgresql",
                  "master_password": "bar",
                  "master_username": "foo",
                  "preferred_backup_window": "07:00-09:00"
                }
            - name: example
              manifest: |-
                {
                  "cluster_identifier": "example",
                  "db_subnet_group_name": "${aws_db_subnet_group.example.name}",
                  "engine_mode": "multimaster",
                  "master_password": "barbarbarbar",
                  "master_username": "foo",
                  "skip_final_snapshot": true
                }
              references:
                db_subnet_group_name: aws_db_subnet_group.example.name
            - name: example
              manifest: |-
                {
                  "allocated_storage": 100,
                  "availability_zones": [
                    "us-west-2a",
                    "us-west-2b",
                    "us-west-2c"
                  ],
                  "cluster_identifier": "example",
                  "db_cluster_instance_class": "db.r6gd.xlarge",
                  "engine": "mysql",
                  "iops": 1000,
                  "master_password": "mustbeeightcharaters",
                  "master_username": "test",
                  "storage_type": "io1"
                }
            - name: example
              manifest: |-
                {
                  "cluster_identifier": "example",
                  "database_name": "test",
                  "engine": "aurora-postgresql",
                  "engine_mode": "provisioned",
                  "engine_version": "13.6",
                  "master_password": "must_be_eight_characters",
                  "master_username": "test",
                  "serverlessv2_scaling_configuration": [
                    {
                      "max_capacity": 1,
                      "min_capacity": 0.5
                    }
                  ]
                }
              dependencies:
                aws_rds_cluster_instance.example: |-
                    {
                      "cluster_identifier": "${aws_rds_cluster.example.id}",
                      "engine": "${aws_rds_cluster.example.engine}",
                      "engine_version": "${aws_rds_cluster.example.engine_version}",
                      "instance_class": "db.serverless"
                    }
            - name: db
              manifest: |-
                {
                  "engine": "aurora",
                  "s3_import": [
                    {
                      "bucket_name": "mybucket",
                      "bucket_prefix": "backups",
                      "ingestion_role": "arn:aws:iam::1234567890:role/role-xtrabackup-rds-restore",
                      "source_engine": "mysql",
                      "source_engine_version": "5.6"
                    }
                  ]
                }
            - name: example-clone
              manifest: |-
                {
                  "restore_to_point_in_time": [
                    {
                      "restore_type": "copy-on-write",
                      "source_cluster_identifier": "example",
                      "use_latest_restorable_time": true
                    }
                  ]
                }
            - name: example
              manifest: |-
                {
                  "engine_mode": "serverless",
                  "scaling_configuration": [
                    {
                      "auto_pause": true,
                      "max_capacity": 256,
                      "min_capacity": 2,
                      "seconds_until_auto_pause": 300,
                      "timeout_action": "ForceApplyCapacityChange"
                    }
                  ]
                }
            - name: example
              manifest: |-
                {
                  "serverlessv2_scaling_configuration": [
                    {
                      "max_capacity": 128,
                      "min_capacity": 0.5
                    }
                  ]
                }
        argumentDocs:
            allocated_storage: '- (Optional) The amount of storage in gibibytes (GiB) to allocate to each DB instance in the Multi-AZ DB cluster. (This setting is required to create a Multi-AZ DB cluster).'
            allow_major_version_upgrade: '- (Optional) Enable to allow major engine version upgrades when changing engine versions. Defaults to false.'
            apply_immediately: '- (Optional) Specifies whether any cluster modifications are applied immediately, or during the next maintenance window. Default is false. See Amazon RDS Documentation for more information.'
            arn: '- Amazon Resource Name (ARN) of cluster'
            auto_pause: '- (Optional) Whether to enable automatic pause. A DB cluster can be paused only when it''s idle (it has no connections). If a DB cluster is paused for more than seven days, the DB cluster might be backed up with a snapshot. In this case, the DB cluster is restored when there is a request to connect to it. Defaults to true.'
            availability_zones: '- (Optional) A list of EC2 Availability Zones for the DB cluster storage where DB cluster instances can be created. RDS automatically assigns 3 AZs if less than 3 AZs are configured, which will show as a difference requiring resource recreation next Terraform apply. It is recommended to specify 3 AZs or use the  if necessary.'
            backtrack_window: '- (Optional) The target backtrack window, in seconds. Only available for aurora and aurora-mysql engines currently. To disable backtracking, set this value to 0. Defaults to 0. Must be between 0 and 259200 (72 hours)'
            backup_retention_period: '- (Optional) The days to retain backups for. Default 1'
            bucket_name: '- (Required) The bucket name where your backup is stored'
            bucket_prefix: '- (Optional) Can be blank, but is the path to your backup'
            cluster_identifier: '- (Optional, Forces new resources) The cluster identifier. If omitted, Terraform will assign a random, unique identifier.'
            cluster_identifier_prefix: '- (Optional, Forces new resource) Creates a unique cluster identifier beginning with the specified prefix. Conflicts with cluster_identifier.'
            cluster_members: – List of RDS Instances that are a part of this cluster
            cluster_resource_id: '- The RDS Cluster Resource ID'
            copy_tags_to_snapshot: – (Optional, boolean) Copy all Cluster tags to snapshots. Default is false.
            create: '- (Default 120 minutes) Used for Cluster creation'
            database_name: '- (Optional) Name for an automatically created database on cluster creation. There are different naming restrictions per database engine: RDS Naming Constraints'
            db_cluster_instance_class: '- (Optional) The compute and memory capacity of each DB instance in the Multi-AZ DB cluster, for example db.m6g.xlarge. Not all DB instance classes are available in all AWS Regions, or for all database engines. For the full list of DB instance classes and availability for your engine, see DB instance class in the Amazon RDS User Guide. (This setting is required to create a Multi-AZ DB cluster).'
            db_cluster_parameter_group_name: '- (Optional) A cluster parameter group to associate with the cluster.'
            db_instance_parameter_group_name: '- (Optional) Instance parameter group to associate with all instances of the DB cluster. The db_instance_parameter_group_name parameter is only valid in combination with the allow_major_version_upgrade parameter.'
            db_subnet_group_name: '- (Optional) A DB subnet group to associate with this DB instance. NOTE: This must match the db_subnet_group_name specified on every aws_rds_cluster_instance in the cluster.'
            delete: |-
                - (Default 120 minutes) Used for destroying cluster. This includes
                any cleanup task during the destroying process.
            deletion_protection: '- (Optional) If the DB instance should have deletion protection enabled. The database can''t be deleted when this value is set to true. The default is false.'
            enable_global_write_forwarding: '- (Optional) Whether cluster should forward writes to an associated global cluster. Applied to secondary clusters to enable them to forward writes to an aws_rds_global_cluster''s primary cluster. See the Aurora Userguide documentation for more information.'
            enable_http_endpoint: '- (Optional) Enable HTTP endpoint (data API). Only valid when engine_mode is set to serverless.'
            enabled_cloudwatch_logs_exports: '- (Optional) Set of log types to export to cloudwatch. If omitted, no logs will be exported. The following log types are supported: audit, error, general, slowquery, postgresql (PostgreSQL).'
            endpoint: '- The DNS address of the RDS instance'
            engine: '- (Optional) The name of the database engine to be used for this DB cluster. Defaults to aurora. Valid Values: aurora, aurora-mysql, aurora-postgresql, mysql, postgres. (Note that mysql and postgres are Multi-AZ RDS clusters).'
            engine_mode: '- (Optional) The database engine mode. Valid values: global (only valid for Aurora MySQL 1.21 and earlier), multimaster, parallelquery, provisioned, serverless. Defaults to: provisioned. See the RDS User Guide for limitations when using serverless.'
            engine_version: '- (Optional) The database engine version. Updating this argument results in an outage. See the Aurora MySQL and Aurora Postgres documentation for your configured engine to determine this value. For example with Aurora MySQL 2, a potential value for this argument is 5.7.mysql_aurora.2.03.2. The value can contain a partial version where supported by the API. The actual engine version used is returned in the attribute engine_version_actual, , see Attributes Reference below.'
            engine_version_actual: '- The running version of the database.'
            final_snapshot_identifier: '- (Optional) The name of your final DB snapshot when this DB cluster is deleted. If omitted, no final snapshot will be made.'
            global_cluster_identifier: '- (Optional) The global cluster identifier specified on aws_rds_global_cluster.'
            hosted_zone_id: '- The Route53 Hosted Zone ID of the endpoint'
            iam_database_authentication_enabled: '- (Optional) Specifies whether or not mappings of AWS Identity and Access Management (IAM) accounts to database accounts is enabled. Please see AWS Documentation for availability and limitations.'
            iam_roles: '- (Optional) A List of ARNs for the IAM roles to associate to the RDS Cluster.'
            id: '- The RDS Cluster Identifier'
            ingestion_role: '- (Required) Role applied to load the data.'
            iops: '- (Optional) The amount of Provisioned IOPS (input/output operations per second) to be initially allocated for each DB instance in the Multi-AZ DB cluster. For information about valid Iops values, see Amazon RDS Provisioned IOPS storage to improve performance in the Amazon RDS User Guide. (This setting is required to create a Multi-AZ DB cluster). Must be a multiple between .5 and 50 of the storage amount for the DB cluster.'
            kms_key_id: '- (Optional) The ARN for the KMS encryption key. When specifying kms_key_id, storage_encrypted needs to be set to true.'
            lifecycle: configuration block ignore_changes argument
            master_password: '- (Required unless a snapshot_identifier or replication_source_identifier is provided or unless a global_cluster_identifier is provided when the cluster is the "secondary" cluster of a global database) Password for the master DB user. Note that this may show up in logs, and it will be stored in the state file. Please refer to the RDS Naming Constraints'
            master_username: '- (Required unless a snapshot_identifier or replication_source_identifier is provided or unless a global_cluster_identifier is provided when the cluster is the "secondary" cluster of a global database) Username for the master DB user. Please refer to the RDS Naming Constraints. This argument does not support in-place updates and cannot be changed during a restore from snapshot.'
            max_capacity: '- (Optional) The maximum capacity for an Aurora DB cluster in serverless DB engine mode. The maximum capacity must be greater than or equal to the minimum capacity. Valid Aurora MySQL capacity values are 1, 2, 4, 8, 16, 32, 64, 128, 256. Valid Aurora PostgreSQL capacity values are (2, 4, 8, 16, 32, 64, 192, and 384). Defaults to 16.'
            min_capacity: '- (Optional) The minimum capacity for an Aurora DB cluster in serverless DB engine mode. The minimum capacity must be lesser than or equal to the maximum capacity. Valid Aurora MySQL capacity values are 1, 2, 4, 8, 16, 32, 64, 128, 256. Valid Aurora PostgreSQL capacity values are (2, 4, 8, 16, 32, 64, 192, and 384). Defaults to 1.'
            port: '- (Optional) The port on which the DB accepts connections'
            preferred_backup_window: '- (Optional) The daily time range during which automated backups are created if automated backups are enabled using the BackupRetentionPeriod parameter.Time in UTC. Default: A 30-minute window selected at random from an 8-hour block of time per regionE.g., 04:00-09:00'
            preferred_maintenance_window: '- (Optional) The weekly time range during which system maintenance can occur, in (UTC) e.g., wed:04:00-wed:04:30'
            reader_endpoint: |-
                - A read-only endpoint for the Aurora cluster, automatically
                load-balanced across replicas
            replication_source_identifier: '- (Optional) ARN of a source DB cluster or DB instance if this DB cluster is to be created as a Read Replica. If DB Cluster is part of a Global Cluster, use the lifecycle configuration block ignore_changes argument to prevent Terraform from showing differences for this argument instead of configuring this value.'
            restore_to_point_in_time: '- (Optional) Nested attribute for point in time restore. More details below.'
            restore_to_time: '- (Optional) Date and time in UTC format to restore the database cluster to. Conflicts with use_latest_restorable_time.'
            restore_type: |-
                - (Optional) Type of restore to be performed.
                Valid options are full-copy (default) and copy-on-write.
            scaling_configuration: '- (Optional) Nested attribute with scaling properties. Only valid when engine_mode is set to serverless. More details below.'
            seconds_until_auto_pause: '- (Optional) The time, in seconds, before an Aurora DB cluster in serverless mode is paused. Valid values are 300 through 86400. Defaults to 300.'
            serverlessv2_scaling_configuration: '- (Optional) Nested attribute with scaling properties for ServerlessV2. Only valid when engine_mode is set to provisioned. More details below.'
            skip_final_snapshot: '- (Optional) Determines whether a final DB snapshot is created before the DB cluster is deleted. If true is specified, no DB snapshot is created. If false is specified, a DB snapshot is created before the DB cluster is deleted, using the value from final_snapshot_identifier. Default is false.'
            snapshot_identifier: '- (Optional) Specifies whether or not to create this cluster from a snapshot. You can use either the name or ARN when specifying a DB cluster snapshot, or the ARN when specifying a DB snapshot.'
            source_cluster_identifier: '- (Required) The identifier of the source database cluster from which to restore.'
            source_engine: '- (Required) Source engine for the backup'
            source_engine_version: '- (Required) Version of the source engine used to make the backup'
            source_region: '- (Optional) The source region for an encrypted replica DB cluster.'
            storage_encrypted: '- (Optional) Specifies whether the DB cluster is encrypted. The default is false for provisioned engine_mode and true for serverless engine_mode. When restoring an unencrypted snapshot_identifier, the kms_key_id argument must be provided to encrypt the restored cluster. Terraform will only perform drift detection if a configuration value is provided.'
            storage_type: '- (Optional) Specifies the storage type to be associated with the DB cluster. (This setting is required to create a Multi-AZ DB cluster). Valid values: io1, Default: io1.'
            tags: '- (Optional) A map of tags to assign to the DB cluster. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            timeout_action: '- (Optional) The action to take when the timeout is reached. Valid values: ForceApplyCapacityChange, RollbackCapacityChange. Defaults to RollbackCapacityChange. See documentation.'
            update: '- (Default 120 minutes) Used for Cluster modifications'
            use_latest_restorable_time: '- (Optional) Set to true to restore the database cluster to the latest restorable backup time. Defaults to false. Conflicts with restore_to_time.'
            vpc_security_group_ids: '- (Optional) List of VPC security groups to associate with the Cluster'
        importStatements: []
    aws_rds_cluster_activity_stream:
        subCategory: RDS (Relational Database)
        description: Manages RDS Aurora Cluster Database Activity Streams
        name: aws_rds_cluster_activity_stream
        title: aws_rds_cluster_activity_stream
        examples:
            - name: default
              manifest: |-
                {
                  "depends_on": [
                    "${aws_rds_cluster_instance.default}"
                  ],
                  "kms_key_id": "${aws_kms_key.default.key_id}",
                  "mode": "async",
                  "resource_arn": "${aws_rds_cluster.default.arn}"
                }
              references:
                kms_key_id: aws_kms_key.default.key_id
                resource_arn: aws_rds_cluster.default.arn
              dependencies:
                aws_kms_key.default: |-
                    {
                      "description": "AWS KMS Key to encrypt Database Activity Stream"
                    }
                aws_rds_cluster.default: |-
                    {
                      "availability_zones": [
                        "us-west-2a",
                        "us-west-2b",
                        "us-west-2c"
                      ],
                      "cluster_identifier": "aurora-cluster-demo",
                      "database_name": "mydb",
                      "engine": "aurora-postgresql",
                      "engine_version": "13.4",
                      "master_password": "mustbeeightcharaters",
                      "master_username": "foo"
                    }
                aws_rds_cluster_instance.default: |-
                    {
                      "cluster_identifier": "${aws_rds_cluster.default.cluster_identifier}",
                      "engine": "${aws_rds_cluster.default.engine}",
                      "identifier": "aurora-instance-demo",
                      "instance_class": "db.r6g.large"
                    }
        argumentDocs:
            engine_native_audit_fields_included: '- (Optional, Forces new resources) Specifies whether the database activity stream includes engine-native audit fields. This option only applies to an Oracle DB instance. By default, no engine-native audit fields are included. Defaults false.'
            id: '- The Amazon Resource Name (ARN) of the DB cluster.'
            kinesis_stream_name: '- The name of the Amazon Kinesis data stream to be used for the database activity stream.'
            kms_key_id: '- (Required, Forces new resources) The AWS KMS key identifier for encrypting messages in the database activity stream. The AWS KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key.'
            mode: '- (Required, Forces new resources) Specifies the mode of the database activity stream. Database events such as a change or access generate an activity stream event. The database session can handle these events either synchronously or asynchronously. One of: sync, async.'
            resource_arn: '- (Required, Forces new resources) The Amazon Resource Name (ARN) of the DB cluster.'
        importStatements: []
    aws_rds_cluster_endpoint:
        subCategory: RDS (Relational Database)
        description: Manages an RDS Aurora Cluster Endpoint
        name: aws_rds_cluster_endpoint
        title: aws_rds_cluster_endpoint
        examples:
            - name: eligible
              manifest: |-
                {
                  "cluster_endpoint_identifier": "reader",
                  "cluster_identifier": "${aws_rds_cluster.default.id}",
                  "custom_endpoint_type": "READER",
                  "excluded_members": [
                    "${aws_rds_cluster_instance.test1.id}",
                    "${aws_rds_cluster_instance.test2.id}"
                  ]
                }
              references:
                cluster_identifier: aws_rds_cluster.default.id
              dependencies:
                aws_rds_cluster.default: |-
                    {
                      "availability_zones": [
                        "us-west-2a",
                        "us-west-2b",
                        "us-west-2c"
                      ],
                      "backup_retention_period": 5,
                      "cluster_identifier": "aurora-cluster-demo",
                      "database_name": "mydb",
                      "master_password": "bar",
                      "master_username": "foo",
                      "preferred_backup_window": "07:00-09:00"
                    }
                aws_rds_cluster_instance.test1: |-
                    {
                      "apply_immediately": true,
                      "cluster_identifier": "${aws_rds_cluster.default.id}",
                      "engine": "${aws_rds_cluster.default.engine}",
                      "engine_version": "${aws_rds_cluster.default.engine_version}",
                      "identifier": "test1",
                      "instance_class": "db.t2.small"
                    }
                aws_rds_cluster_instance.test2: |-
                    {
                      "apply_immediately": true,
                      "cluster_identifier": "${aws_rds_cluster.default.id}",
                      "engine": "${aws_rds_cluster.default.engine}",
                      "engine_version": "${aws_rds_cluster.default.engine_version}",
                      "identifier": "test2",
                      "instance_class": "db.t2.small"
                    }
                aws_rds_cluster_instance.test3: |-
                    {
                      "apply_immediately": true,
                      "cluster_identifier": "${aws_rds_cluster.default.id}",
                      "engine": "${aws_rds_cluster.default.engine}",
                      "engine_version": "${aws_rds_cluster.default.engine_version}",
                      "identifier": "test3",
                      "instance_class": "db.t2.small"
                    }
            - name: static
              manifest: |-
                {
                  "cluster_endpoint_identifier": "static",
                  "cluster_identifier": "${aws_rds_cluster.default.id}",
                  "custom_endpoint_type": "READER",
                  "static_members": [
                    "${aws_rds_cluster_instance.test1.id}",
                    "${aws_rds_cluster_instance.test3.id}"
                  ]
                }
              references:
                cluster_identifier: aws_rds_cluster.default.id
              dependencies:
                aws_rds_cluster.default: |-
                    {
                      "availability_zones": [
                        "us-west-2a",
                        "us-west-2b",
                        "us-west-2c"
                      ],
                      "backup_retention_period": 5,
                      "cluster_identifier": "aurora-cluster-demo",
                      "database_name": "mydb",
                      "master_password": "bar",
                      "master_username": "foo",
                      "preferred_backup_window": "07:00-09:00"
                    }
                aws_rds_cluster_instance.test1: |-
                    {
                      "apply_immediately": true,
                      "cluster_identifier": "${aws_rds_cluster.default.id}",
                      "engine": "${aws_rds_cluster.default.engine}",
                      "engine_version": "${aws_rds_cluster.default.engine_version}",
                      "identifier": "test1",
                      "instance_class": "db.t2.small"
                    }
                aws_rds_cluster_instance.test2: |-
                    {
                      "apply_immediately": true,
                      "cluster_identifier": "${aws_rds_cluster.default.id}",
                      "engine": "${aws_rds_cluster.default.engine}",
                      "engine_version": "${aws_rds_cluster.default.engine_version}",
                      "identifier": "test2",
                      "instance_class": "db.t2.small"
                    }
                aws_rds_cluster_instance.test3: |-
                    {
                      "apply_immediately": true,
                      "cluster_identifier": "${aws_rds_cluster.default.id}",
                      "engine": "${aws_rds_cluster.default.engine}",
                      "engine_version": "${aws_rds_cluster.default.engine_version}",
                      "identifier": "test3",
                      "instance_class": "db.t2.small"
                    }
        argumentDocs:
            arn: '- Amazon Resource Name (ARN) of cluster'
            cluster_endpoint_identifier: '- (Required, Forces new resources) The identifier to use for the new endpoint. This parameter is stored as a lowercase string.'
            cluster_identifier: '- (Required, Forces new resources) The cluster identifier.'
            custom_endpoint_type: '- (Required) The type of the endpoint. One of: READER , ANY .'
            endpoint: '- A custom endpoint for the Aurora cluster'
            excluded_members: '- (Optional) List of DB instance identifiers that aren''t part of the custom endpoint group. All other eligible instances are reachable through the custom endpoint. Only relevant if the list of static members is empty. Conflicts with static_members.'
            id: '- The RDS Cluster Endpoint Identifier'
            static_members: '- (Optional) List of DB instance identifiers that are part of the custom endpoint group. Conflicts with excluded_members.'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_rds_cluster_instance:
        subCategory: RDS (Relational Database)
        description: Provides an RDS Cluster Resource Instance
        name: aws_rds_cluster_instance
        title: aws_rds_cluster_instance
        examples:
            - name: cluster_instances
              manifest: |-
                {
                  "cluster_identifier": "${aws_rds_cluster.default.id}",
                  "count": 2,
                  "engine": "${aws_rds_cluster.default.engine}",
                  "engine_version": "${aws_rds_cluster.default.engine_version}",
                  "identifier": "aurora-cluster-demo-${count.index}",
                  "instance_class": "db.r4.large"
                }
              references:
                cluster_identifier: aws_rds_cluster.default.id
                engine: aws_rds_cluster.default.engine
                engine_version: aws_rds_cluster.default.engine_version
              dependencies:
                aws_rds_cluster.default: |-
                    {
                      "availability_zones": [
                        "us-west-2a",
                        "us-west-2b",
                        "us-west-2c"
                      ],
                      "cluster_identifier": "aurora-cluster-demo",
                      "database_name": "mydb",
                      "master_password": "barbut8chars",
                      "master_username": "foo"
                    }
        argumentDocs:
            apply_immediately: |-
                - (Optional) Specifies whether any database modifications
                are applied immediately, or during the next maintenance window. Default isfalse.
            arn: '- Amazon Resource Name (ARN) of cluster instance'
            auto_minor_version_upgrade: '- (Optional) Indicates that minor engine upgrades will be applied automatically to the DB instance during the maintenance window. Default true.'
            availability_zone: '- (Optional, Computed, Forces new resource) The EC2 Availability Zone that the DB instance is created in. See docs about the details.'
            ca_cert_identifier: '- (Optional) The identifier of the CA certificate for the DB instance.'
            cluster_identifier: '- (Required, Forces new resource) The identifier of the aws_rds_cluster in which to launch this instance.'
            copy_tags_to_snapshot: – (Optional, boolean) Indicates whether to copy all of the user-defined tags from the DB instance to snapshots of the DB instance. Default false.
            create: |-
                - (Default 90 minutes) Used for Creating Instances, Replicas, and
                restoring from Snapshots
            db_parameter_group_name: '- (Optional) The name of the DB parameter group to associate with this instance.'
            db_subnet_group_name: '- (Required if publicly_accessible = false, Optional otherwise, Forces new resource) A DB subnet group to associate with this DB instance. NOTE: This must match the db_subnet_group_name of the attached aws_rds_cluster.'
            dbi_resource_id: '- The region-unique, immutable identifier for the DB instance.'
            delete: |-
                - (Default 90 minutes) Used for destroying databases. This includes
                the time required to take snapshots
            endpoint: '- The DNS address for this instance. May not be writable'
            engine: |-
                - (Optional, Forces new resource) The name of the database engine to be used for the RDS instance. Defaults to aurora. Valid Values: aurora, aurora-mysql, aurora-postgresql.
                For information on the difference between the available Aurora MySQL engines
                see Comparison between Aurora MySQL 1 and Aurora MySQL 2
                in the Amazon RDS User Guide.
            engine_version: '- (Optional) The database engine version.'
            engine_version_actual: '- The database engine version'
            id: '- The Instance identifier'
            identifier: '- (Optional, Forces new resource) The identifier for the RDS instance, if omitted, Terraform will assign a random, unique identifier.'
            identifier_prefix: '- (Optional, Forces new resource) Creates a unique identifier beginning with the specified prefix. Conflicts with identifier.'
            instance_class: |-
                - (Required) The instance class to use. For details on CPU
                and memory, see Scaling Aurora DB Instances. Aurora uses db.* instance classes/types. Please see AWS Documentation for currently available instance classes and complete details.
            kms_key_id: '- The ARN for the KMS encryption key if one is set to the cluster.'
            monitoring_interval: '- (Optional) The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance. To disable collecting Enhanced Monitoring metrics, specify 0. The default is 0. Valid Values: 0, 1, 5, 10, 15, 30, 60.'
            monitoring_role_arn: |-
                - (Optional) The ARN for the IAM role that permits RDS to send
                enhanced monitoring metrics to CloudWatch Logs. You can find more information on the AWS Documentation
                what IAM permissions are needed to allow Enhanced Monitoring for RDS Instances.
            performance_insights_enabled: '- (Optional) Specifies whether Performance Insights is enabled or not.'
            performance_insights_kms_key_id: '- (Optional) ARN for the KMS key to encrypt Performance Insights data. When specifying performance_insights_kms_key_id, performance_insights_enabled needs to be set to true.'
            performance_insights_retention_period: '- (Optional) Amount of time in days to retain Performance Insights data. Either 7 (7 days) or 731 (2 years). When specifying performance_insights_retention_period, performance_insights_enabled needs to be set to true. Defaults to ''7''.'
            port: '- The database port'
            preferred_backup_window: |-
                - (Optional) The daily time range during which automated backups are created if automated backups are enabled.
                Eg: "04:00-09:00"
            preferred_maintenance_window: |-
                - (Optional) The window to perform maintenance in.
                Syntax: "ddd:hh24:mi-ddd:hh24:mi". Eg: "Mon:00:00-Mon:03:00".
            promotion_tier: '- (Optional) Default 0. Failover Priority setting on instance level. The reader who has lower tier has higher priority to get promoted to writer.'
            publicly_accessible: |-
                - (Optional) Bool to control if instance is publicly accessible.
                Default false. See the documentation on Creating DB Instances for more
                details on controlling this property.
            storage_encrypted: '- Specifies whether the DB cluster is encrypted.'
            tags: '- (Optional) A map of tags to assign to the instance. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            update: '- (Default 90 minutes) Used for Database modifications'
            writer: – Boolean indicating if this instance is writable. False indicates this instance is a read replica.
        importStatements: []
    aws_rds_cluster_parameter_group:
        subCategory: RDS (Relational Database)
        description: Provides an RDS DB cluster parameter group resource.
        name: aws_rds_cluster_parameter_group
        title: aws_rds_cluster_parameter_group
        examples:
            - name: default
              manifest: |-
                {
                  "description": "RDS default cluster parameter group",
                  "family": "aurora5.6",
                  "name": "rds-cluster-pg",
                  "parameter": [
                    {
                      "name": "character_set_server",
                      "value": "utf8"
                    },
                    {
                      "name": "character_set_client",
                      "value": "utf8"
                    }
                  ]
                }
        argumentDocs:
            apply_method: |-
                - (Optional) "immediate" (default), or "pending-reboot". Some
                engines can't apply some parameters without a reboot, and you will need to
                specify "pending-reboot" here.
            arn: '- The ARN of the db cluster parameter group.'
            description: '- (Optional) The description of the DB cluster parameter group. Defaults to "Managed by Terraform".'
            family: '- (Required) The family of the DB cluster parameter group.'
            id: '- The db cluster parameter group name.'
            name: '- (Optional, Forces new resource) The name of the DB cluster parameter group. If omitted, Terraform will assign a random, unique name.'
            name_prefix: '- (Optional, Forces new resource) Creates a unique name beginning with the specified prefix. Conflicts with name.'
            parameter: '- (Optional) A list of DB parameters to apply. Note that parameters may differ from a family to an other. Full list of all parameters can be discovered via aws rds describe-db-cluster-parameters after initial creation of the group.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            value: '- (Required) The value of the DB parameter.'
        importStatements: []
    aws_rds_cluster_role_association:
        subCategory: RDS (Relational Database)
        description: Manages a RDS DB Cluster association with an IAM Role.
        name: aws_rds_cluster_role_association
        title: aws_rds_cluster_role_association
        examples:
            - name: example
              manifest: |-
                {
                  "db_cluster_identifier": "${aws_rds_cluster.example.id}",
                  "feature_name": "S3_INTEGRATION",
                  "role_arn": "${aws_iam_role.example.id}"
                }
              references:
                db_cluster_identifier: aws_rds_cluster.example.id
                role_arn: aws_iam_role.example.id
        argumentDocs:
            db_cluster_identifier: '- (Required) DB Cluster Identifier to associate with the IAM Role.'
            feature_name: '- (Required) Name of the feature for association. This can be found in the AWS documentation relevant to the integration or a full list is available in the SupportedFeatureNames list returned by AWS CLI rds describe-db-engine-versions.'
            id: '- DB Cluster Identifier and IAM Role ARN separated by a comma (,)'
            role_arn: '- (Required) Amazon Resource Name (ARN) of the IAM Role to associate with the DB Cluster.'
        importStatements: []
    aws_rds_global_cluster:
        subCategory: RDS (Relational Database)
        description: Manages an RDS Global Cluster
        name: aws_rds_global_cluster
        title: aws_rds_global_cluster
        examples:
            - name: example
              manifest: |-
                {
                  "database_name": "example_db",
                  "engine": "aurora",
                  "engine_version": "5.6.mysql_aurora.1.22.2",
                  "global_cluster_identifier": "global-test"
                }
              dependencies:
                aws_rds_cluster.primary: |-
                    {
                      "cluster_identifier": "test-primary-cluster",
                      "database_name": "example_db",
                      "db_subnet_group_name": "default",
                      "engine": "${aws_rds_global_cluster.example.engine}",
                      "engine_version": "${aws_rds_global_cluster.example.engine_version}",
                      "global_cluster_identifier": "${aws_rds_global_cluster.example.id}",
                      "master_password": "somepass123",
                      "master_username": "username",
                      "provider": "${aws.primary}"
                    }
                aws_rds_cluster.secondary: |-
                    {
                      "cluster_identifier": "test-secondary-cluster",
                      "db_subnet_group_name": "default",
                      "engine": "${aws_rds_global_cluster.example.engine}",
                      "engine_version": "${aws_rds_global_cluster.example.engine_version}",
                      "global_cluster_identifier": "${aws_rds_global_cluster.example.id}",
                      "provider": "${aws.secondary}"
                    }
                aws_rds_cluster_instance.primary: |-
                    {
                      "cluster_identifier": "${aws_rds_cluster.primary.id}",
                      "db_subnet_group_name": "default",
                      "engine": "${aws_rds_global_cluster.example.engine}",
                      "engine_version": "${aws_rds_global_cluster.example.engine_version}",
                      "identifier": "test-primary-cluster-instance",
                      "instance_class": "db.r4.large",
                      "provider": "${aws.primary}"
                    }
                aws_rds_cluster_instance.secondary: |-
                    {
                      "cluster_identifier": "${aws_rds_cluster.secondary.id}",
                      "db_subnet_group_name": "default",
                      "depends_on": [
                        "${aws_rds_cluster_instance.primary}"
                      ],
                      "engine": "${aws_rds_global_cluster.example.engine}",
                      "engine_version": "${aws_rds_global_cluster.example.engine_version}",
                      "identifier": "test-secondary-cluster-instance",
                      "instance_class": "db.r4.large",
                      "provider": "${aws.secondary}"
                    }
            - name: example
              manifest: |-
                {
                  "database_name": "example_db",
                  "engine": "aurora-postgresql",
                  "engine_version": "11.9",
                  "global_cluster_identifier": "global-test"
                }
              dependencies:
                aws_rds_cluster.primary: |-
                    {
                      "cluster_identifier": "test-primary-cluster",
                      "database_name": "example_db",
                      "db_subnet_group_name": "default",
                      "engine": "${aws_rds_global_cluster.example.engine}",
                      "engine_version": "${aws_rds_global_cluster.example.engine_version}",
                      "global_cluster_identifier": "${aws_rds_global_cluster.example.id}",
                      "master_password": "somepass123",
                      "master_username": "username",
                      "provider": "${aws.primary}"
                    }
                aws_rds_cluster.secondary: |-
                    {
                      "cluster_identifier": "test-secondary-cluster",
                      "db_subnet_group_name": "default",
                      "depends_on": [
                        "${aws_rds_cluster_instance.primary}"
                      ],
                      "engine": "${aws_rds_global_cluster.example.engine}",
                      "engine_version": "${aws_rds_global_cluster.example.engine_version}",
                      "global_cluster_identifier": "${aws_rds_global_cluster.example.id}",
                      "provider": "${aws.secondary}",
                      "skip_final_snapshot": true
                    }
                aws_rds_cluster_instance.primary: |-
                    {
                      "cluster_identifier": "${aws_rds_cluster.primary.id}",
                      "db_subnet_group_name": "default",
                      "engine": "${aws_rds_global_cluster.example.engine}",
                      "engine_version": "${aws_rds_global_cluster.example.engine_version}",
                      "identifier": "test-primary-cluster-instance",
                      "instance_class": "db.r4.large",
                      "provider": "${aws.primary}"
                    }
                aws_rds_cluster_instance.secondary: |-
                    {
                      "cluster_identifier": "${aws_rds_cluster.secondary.id}",
                      "db_subnet_group_name": "default",
                      "engine": "${aws_rds_global_cluster.example.engine}",
                      "engine_version": "${aws_rds_global_cluster.example.engine_version}",
                      "identifier": "test-secondary-cluster-instance",
                      "instance_class": "db.r4.large",
                      "provider": "${aws.secondary}"
                    }
            - name: example
              manifest: |-
                {
                  "force_destroy": true,
                  "global_cluster_identifier": "example",
                  "source_db_cluster_identifier": "${aws_rds_cluster.example.arn}"
                }
              references:
                source_db_cluster_identifier: aws_rds_cluster.example.arn
              dependencies:
                aws_rds_cluster.example: |-
                    {
                      "lifecycle": [
                        {
                          "ignore_changes": [
                            "${global_cluster_identifier}"
                          ]
                        }
                      ]
                    }
            - name: example
              manifest: |-
                {
                  "engine": "aurora-mysql",
                  "engine_version": "5.7.mysql_aurora.2.07.5",
                  "global_cluster_identifier": "kyivkharkiv"
                }
              dependencies:
                aws_rds_cluster.primary: |-
                    {
                      "allow_major_version_upgrade": true,
                      "apply_immediately": true,
                      "cluster_identifier": "odessadnipro",
                      "database_name": "totoro",
                      "engine": "${aws_rds_global_cluster.example.engine}",
                      "engine_version": "${aws_rds_global_cluster.example.engine_version}",
                      "global_cluster_identifier": "${aws_rds_global_cluster.example.id}",
                      "lifecycle": [
                        {
                          "ignore_changes": [
                            "${engine_version}"
                          ]
                        }
                      ],
                      "master_password": "satsukimae",
                      "master_username": "maesatsuki",
                      "skip_final_snapshot": true
                    }
                aws_rds_cluster_instance.primary: |-
                    {
                      "apply_immediately": true,
                      "cluster_identifier": "${aws_rds_cluster.primary.id}",
                      "engine": "${aws_rds_cluster.primary.engine}",
                      "engine_version": "${aws_rds_cluster.primary.engine_version}",
                      "identifier": "donetsklviv",
                      "instance_class": "db.r4.large"
                    }
            - name: example
              manifest: |-
                {
                  "lifecycle": [
                    {
                      "ignore_changes": [
                        "${source_db_cluster_identifier}"
                      ]
                    }
                  ]
                }
        argumentDocs:
            arn: '- RDS Global Cluster Amazon Resource Name (ARN)'
            create: '- (Default 30 minutes)'
            database_name: '- (Optional, Forces new resources) Name for an automatically created database on cluster creation.'
            db_cluster_arn: '- Amazon Resource Name (ARN) of member DB Cluster'
            delete: '- (Default 30 minutes)'
            deletion_protection: '- (Optional) If the Global Cluster should have deletion protection enabled. The database can''t be deleted when this value is set to true. The default is false.'
            engine: '- (Optional, Forces new resources) Name of the database engine to be used for this DB cluster. Terraform will only perform drift detection if a configuration value is provided. Valid values: aurora, aurora-mysql, aurora-postgresql. Defaults to aurora. Conflicts with source_db_cluster_identifier.'
            engine_version: '- (Optional) Engine version of the Aurora global database. The engine, engine_version, and instance_class (on the aws_rds_cluster_instance) must together support global databases. See Using Amazon Aurora global databases for more information. By upgrading the engine version, Terraform will upgrade cluster members. NOTE: To avoid an inconsistent final plan error while upgrading, use the lifecycle ignore_changes for engine_version meta argument on the associated aws_rds_cluster resource as shown above in Upgrading Engine Versions example.'
            force_destroy: '- (Optional) Enable to remove DB Cluster members from Global Cluster on destroy. Required with source_db_cluster_identifier.'
            global_cluster_identifier: '- (Required, Forces new resources) Global cluster identifier.'
            global_cluster_members: '- Set of objects containing Global Cluster members.'
            global_cluster_resource_id: '- AWS Region-unique, immutable identifier for the global database cluster. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB cluster is accessed'
            id: '- RDS Global Cluster identifier'
            is_writer: '- Whether the member is the primary DB Cluster'
            source_db_cluster_identifier: '- (Optional) Amazon Resource Name (ARN) to use as the primary DB Cluster of the Global Cluster on creation. Terraform cannot perform drift detection of this value.'
            storage_encrypted: '- (Optional, Forces new resources) Specifies whether the DB cluster is encrypted. The default is false unless source_db_cluster_identifier is specified and encrypted. Terraform will only perform drift detection if a configuration value is provided.'
            update: '- (Default 90 minutes)'
        importStatements: []
    aws_redshift_authentication_profile:
        subCategory: Redshift
        description: Creates a Redshift authentication profile
        name: aws_redshift_authentication_profile
        title: aws_redshift_authentication_profile
        examples:
            - name: example
              manifest: |-
                {
                  "authentication_profile_content": "${jsonencode(\n    {\n      AllowDBUserOverride = \"1\"\n      Client_ID           = \"ExampleClientID\"\n      App_ID              = \"example\"\n    }\n  )}",
                  "authentication_profile_name": "example"
                }
        argumentDocs:
            authentication_profile_content: '- (Required) The content of the authentication profile in JSON format. The maximum length of the JSON string is determined by a quota for your account.'
            authentication_profile_name: '- (Required, Forces new resource) The name of the authentication profile.'
            id: '- The name of the authentication profile.'
        importStatements: []
    aws_redshift_cluster:
        subCategory: Redshift
        description: Provides a Redshift Cluster resource.
        name: aws_redshift_cluster
        title: aws_redshift_cluster
        examples:
            - name: example
              manifest: |-
                {
                  "cluster_identifier": "tf-redshift-cluster",
                  "cluster_type": "single-node",
                  "database_name": "mydb",
                  "master_password": "Mustbe8characters",
                  "master_username": "exampleuser",
                  "node_type": "dc1.large"
                }
        argumentDocs:
            allow_version_upgrade: '- (Optional) If true , major version upgrades can be applied during the maintenance window to the Amazon Redshift engine that is running on the cluster. Default is true.'
            apply_immediately: '- (Optional) Specifies whether any cluster modifications are applied immediately, or during the next maintenance window. Default is false.'
            aqua_configuration_status: '- (Optional) The value represents how the cluster is configured to use AQUA (Advanced Query Accelerator) after the cluster is restored. Possible values are enabled, disabled, and auto. Requires Cluster reboot.'
            arn: '- Amazon Resource Name (ARN) of cluster'
            automated_snapshot_retention_period: '- (Optional) The number of days that automated snapshots are retained. If the value is 0, automated snapshots are disabled. Even if automated snapshots are disabled, you can still create manual snapshots when you want with create-cluster-snapshot. Default is 1.'
            availability_zone: '- (Optional) The EC2 Availability Zone (AZ) in which you want Amazon Redshift to provision the cluster. For example, if you have several EC2 instances running in a specific Availability Zone, then you might want the cluster to be provisioned in the same zone in order to decrease network latency. Can only be changed if availability_zone_relocation_enabled is true.'
            availability_zone_relocation_enabled: '- (Optional) If true, the cluster can be relocated to another availabity zone, either automatically by AWS or when requested. Default is false. Available for use on clusters from the RA3 instance family.'
            cluster_identifier: '- (Required) The Cluster Identifier. Must be a lower case string.'
            cluster_nodes: '- The nodes in the cluster. Cluster node blocks are documented below'
            cluster_parameter_group_name: '- (Optional) The name of the parameter group to be associated with this cluster.'
            cluster_public_key: '- The public key for the cluster'
            cluster_revision_number: '- The specific revision number of the database in the cluster'
            cluster_security_groups: '- (Optional) A list of security groups to be associated with this cluster.'
            cluster_subnet_group_name: '- (Optional) The name of a cluster subnet group to be associated with this cluster. If this parameter is not provided the resulting cluster will be deployed outside virtual private cloud (VPC).'
            cluster_type: '- (Optional) The cluster type to use. Either single-node or multi-node.'
            cluster_version: |-
                - (Optional) The version of the Amazon Redshift engine software that you want to deploy on the cluster.
                The version selected runs on all the nodes in the cluster.
            create: '- (Default 75 minutes) Used for creating Clusters.'
            database_name: |-
                - (Optional) The name of the first database to be created when the cluster is created.
                If you do not provide a name, Amazon Redshift will create a default database called dev.
            default_iam_role_arn: '- (Optional) The Amazon Resource Name (ARN) for the IAM role that was set as default for the cluster when the cluster was created.'
            delete: '- (Default 40 minutes) Used for destroying Clusters.'
            dns_name: '- The DNS name of the cluster'
            elastic_ip: '- (Optional) The Elastic IP (EIP) address for the cluster.'
            encrypted: '- (Optional) If true , the data in the cluster is encrypted at rest.'
            endpoint: '- The connection endpoint'
            enhanced_vpc_routing: '- (Optional) If true , enhanced VPC routing is enabled.'
            final_snapshot_identifier: '- (Optional) The identifier of the final snapshot that is to be created immediately before deleting the cluster. If this parameter is provided, skip_final_snapshot must be false.'
            iam_roles: '- (Optional) A list of IAM Role ARNs to associate with the cluster. A Maximum of 10 can be associated to the cluster at any time.'
            id: '- The Redshift Cluster ID.'
            kms_key_id: '- (Optional) The ARN for the KMS encryption key. When specifying kms_key_id, encrypted needs to be set to true.'
            logging: '- (Optional) Logging, documented below.'
            logging.bucket_name: |-
                - (Optional, required when enable is true) The name of an existing S3 bucket where the log files are to be stored. Must be in the same region as the cluster and the cluster must have read bucket and put object permissions.
                For more information on the permissions required for the bucket, please read the AWS documentation
            logging.enable: '- (Required) Enables logging information such as queries and connection attempts, for the specified Amazon Redshift cluster.'
            logging.log_destination_type: '- (Optional) The log destination type. An enum with possible values of s3 and cloudwatch.'
            logging.log_exports: '- (Optional) The collection of exported log types. Log types include the connection log, user log and user activity log. Required when log_destination_type is cloudwatch.'
            logging.s3_key_prefix: '- (Optional) The prefix applied to the log file names.'
            maintenance_track_name: '- (Optional) The name of the maintenance track for the restored cluster. When you take a snapshot, the snapshot inherits the MaintenanceTrack value from the cluster. The snapshot might be on a different track than the cluster that was the source for the snapshot. For example, suppose that you take a snapshot of  a cluster that is on the current track and then change the cluster to be on the trailing track. In this case, the snapshot and the source cluster are on different tracks. Default value is current.'
            manual_snapshot_retention_period: '- (Optional)  The default number of days to retain a manual snapshot. If the value is -1, the snapshot is retained indefinitely. This setting doesn''t change the retention period of existing snapshots. Valid values are between -1 and 3653. Default value is -1.'
            master_password: |-
                - (Required unless a snapshot_identifier is provided) Password for the master DB user.
                Note that this may show up in logs, and it will be stored in the state file. Password must contain at least 8 chars and
                contain at least one uppercase letter, one lowercase letter, and one number.
            master_username: '- (Required unless a snapshot_identifier is provided) Username for the master DB user.'
            node_role: '- Whether the node is a leader node or a compute node'
            node_type: '- (Required) The node type to be provisioned for the cluster.'
            number_of_nodes: '- (Optional) The number of compute nodes in the cluster. This parameter is required when the ClusterType parameter is specified as multi-node. Default is 1.'
            owner_account: '- (Optional) The AWS customer account used to create or copy the snapshot. Required if you are restoring a snapshot you do not own, optional if you own the snapshot.'
            port: |-
                - (Optional) The port number on which the cluster accepts incoming connections. Valid values are between 1115 and 65535.
                The cluster is accessible only via the JDBC and ODBC connection strings.
                Part of the connection string requires the port on which the cluster will listen for incoming connections.
                Default port is 5439.
            preferred_maintenance_window: |-
                - (Optional) The weekly time range (in UTC) during which automated cluster maintenance can occur.
                Format: ddd:hh24:mi-ddd:hh24:mi
            private_ip_address: '- The private IP address of a node within a cluster'
            public_ip_address: '- The public IP address of a node within a cluster'
            publicly_accessible: '- (Optional) If true, the cluster can be accessed from a public network. Default is true.'
            skip_final_snapshot: '- (Optional) Determines whether a final snapshot of the cluster is created before Amazon Redshift deletes the cluster. If true , a final cluster snapshot is not created. If false , a final cluster snapshot is created before the cluster is deleted. Default is false.'
            snapshot_cluster_identifier: '- (Optional) The name of the cluster the source snapshot was created from.'
            snapshot_copy: '- (Optional) Configuration of automatic copy of snapshots from one region to another. Documented below.'
            snapshot_copy.destination_region: '- (Required) The destination region that you want to copy snapshots to.'
            snapshot_copy.grant_name: '- (Optional) The name of the snapshot copy grant to use when snapshots of an AWS KMS-encrypted cluster are copied to the destination region.'
            snapshot_copy.retention_period: '- (Optional) The number of days to retain automated snapshots in the destination region after they are copied from the source region. Defaults to 7.'
            snapshot_identifier: '- (Optional) The name of the snapshot from which to create the new cluster.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            update: '- (Default 75 minutes) Used for updating Clusters.'
            vpc_security_group_ids: '- (Optional) A list of Virtual Private Cloud (VPC) security groups to be associated with the cluster.'
        importStatements: []
    aws_redshift_cluster_iam_roles:
        subCategory: Redshift
        description: Provides a Redshift Cluster IAM Roles resource.
        name: aws_redshift_cluster_iam_roles
        title: aws_redshift_cluster_iam_roles
        examples:
            - name: example
              manifest: |-
                {
                  "cluster_identifier": "${aws_redshift_cluster.example.cluster_identifier}",
                  "iam_role_arns": [
                    "${aws_iam_role.example.arn}"
                  ]
                }
              references:
                cluster_identifier: aws_redshift_cluster.example.cluster_identifier
        argumentDocs:
            cluster_identifier: '- (Required) The name of the Redshift Cluster IAM Roles.'
            default_iam_role_arn: '- (Optional) The Amazon Resource Name (ARN) for the IAM role that was set as default for the cluster when the cluster was created.'
            iam_role_arns: '- (Optional) A list of IAM Role ARNs to associate with the cluster. A Maximum of 10 can be associated to the cluster at any time.'
            id: '- The Redshift Cluster ID.'
        importStatements: []
    aws_redshift_endpoint_access:
        subCategory: Redshift
        description: Provides a Redshift Endpoint Access resource.
        name: aws_redshift_endpoint_access
        title: aws_redshift_endpoint_access
        examples:
            - name: example
              manifest: |-
                {
                  "cluster_identifier": "${aws_redshift_cluster.example.cluster_identifier}",
                  "endpoint_name": "example",
                  "subnet_group_name": "${aws_redshift_subnet_group.example.id}"
                }
              references:
                cluster_identifier: aws_redshift_cluster.example.cluster_identifier
                subnet_group_name: aws_redshift_subnet_group.example.id
        argumentDocs:
            address: '- The DNS address of the endpoint.'
            availability_zone: '- The Availability Zone.'
            cluster_identifier: '- (Required) The cluster identifier of the cluster to access.'
            endpoint_name: '- (Required) The Redshift-managed VPC endpoint name.'
            id: '- The Redshift-managed VPC endpoint name.'
            network_interface: '- One or more network interfaces of the endpoint. Also known as an interface endpoint. See details below.'
            network_interface_id: '- The network interface identifier.'
            port: '- The port number on which the cluster accepts incoming connections.'
            private_ip_address: '- The IPv4 address of the network interface within the subnet.'
            resource_owner: '- (Optional) The Amazon Web Services account ID of the owner of the cluster. This is only required if the cluster is in another Amazon Web Services account.'
            subnet_group_name: '- (Required) The subnet group from which Amazon Redshift chooses the subnet to deploy the endpoint.'
            subnet_id: '- The subnet identifier.'
            vpc_endpoint: '- The connection endpoint for connecting to an Amazon Redshift cluster through the proxy. See details below.'
            vpc_endpoint_id: '- The connection endpoint ID for connecting an Amazon Redshift cluster through the proxy.'
            vpc_id: '- The VPC identifier that the endpoint is associated.'
            vpc_security_group_ids: '- (Optional) The security group that defines the ports, protocols, and sources for inbound traffic that you are authorizing into your endpoint.'
        importStatements: []
    aws_redshift_event_subscription:
        subCategory: Redshift
        description: Provides a Redshift event subscription resource.
        name: aws_redshift_event_subscription
        title: aws_redshift_event_subscription
        examples:
            - name: default
              manifest: |-
                {
                  "event_categories": [
                    "configuration",
                    "management",
                    "monitoring",
                    "security"
                  ],
                  "name": "redshift-event-sub",
                  "severity": "INFO",
                  "sns_topic_arn": "${aws_sns_topic.default.arn}",
                  "source_ids": [
                    "${aws_redshift_cluster.default.id}"
                  ],
                  "source_type": "cluster",
                  "tags": {
                    "Name": "default"
                  }
                }
              references:
                sns_topic_arn: aws_sns_topic.default.arn
              dependencies:
                aws_redshift_cluster.default: |-
                    {
                      "cluster_identifier": "default",
                      "database_name": "default"
                    }
                aws_sns_topic.default: |-
                    {
                      "name": "redshift-events"
                    }
        argumentDocs:
            arn: '- Amazon Resource Name (ARN) of the Redshift event notification subscription'
            customer_aws_id: '- The AWS customer account associated with the Redshift event notification subscription'
            enabled: '- (Optional) A boolean flag to enable/disable the subscription. Defaults to true.'
            event_categories: '- (Optional) A list of event categories for a SourceType that you want to subscribe to. See https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-event-notifications.html or run aws redshift describe-event-categories.'
            id: '- The name of the Redshift event notification subscription'
            name: '- (Required) The name of the Redshift event subscription.'
            severity: '- (Optional) The event severity to be published by the notification subscription. Valid options are INFO or ERROR. Default value of INFO.'
            sns_topic_arn: '- (Required) The ARN of the SNS topic to send events to.'
            source_ids: '- (Optional) A list of identifiers of the event sources for which events will be returned. If not specified, then all sources are included in the response. If specified, a source_type must also be specified.'
            source_type: '- (Optional) The type of source that will be generating the events. Valid options are cluster, cluster-parameter-group, cluster-security-group, cluster-snapshot, or scheduled-action. If not set, all sources will be subscribed to.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_redshift_hsm_client_certificate:
        subCategory: Redshift
        description: Creates an HSM client certificate that an Amazon Redshift cluster will use to connect to the client's HSM in order to store and retrieve the keys used to encrypt the cluster databases.
        name: aws_redshift_hsm_client_certificate
        title: aws_redshift_hsm_client_certificate
        examples:
            - name: example
              manifest: |-
                {
                  "hsm_client_certificate_identifier": "example"
                }
        argumentDocs:
            arn: '- Amazon Resource Name (ARN) of the Hsm Client Certificate.'
            hsm_client_certificate_identifier: '- (Required, Forces new resource) The identifier of the HSM client certificate.'
            hsm_client_certificate_public_key: '- The public key that the Amazon Redshift cluster will use to connect to the HSM. You must register the public key in the HSM.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_redshift_hsm_configuration:
        subCategory: Redshift
        description: Creates an HSM configuration that contains the information required by an Amazon Redshift cluster to store and use database encryption keys in a Hardware Security Module (HSM).
        name: aws_redshift_hsm_configuration
        title: aws_redshift_hsm_configuration
        examples:
            - name: example
              manifest: |-
                {
                  "description": "example",
                  "hsm_configuration_identifier": "example",
                  "hsm_ip_address": "10.0.0.1",
                  "hsm_partition_name": "aws",
                  "hsm_partition_password": "example",
                  "hsm_server_public_certificate": "example"
                }
        argumentDocs:
            arn: '- Amazon Resource Name (ARN) of the Hsm Client Certificate.'
            description: '- (Required, Forces new resource) A text description of the HSM configuration to be created.'
            hsm_configuration_identifier: '- (Required, Forces new resource) The identifier to be assigned to the new Amazon Redshift HSM configuration.'
            hsm_configuration_public_key: '- The public key that the Amazon Redshift cluster will use to connect to the HSM. You must register the public key in the HSM.'
            hsm_ip_address: '- (Required, Forces new resource) The IP address that the Amazon Redshift cluster must use to access the HSM.'
            hsm_partition_name: '- (Required, Forces new resource) The name of the partition in the HSM where the Amazon Redshift clusters will store their database encryption keys.'
            hsm_partition_password: '- (Required, Forces new resource) The password required to access the HSM partition.'
            hsm_server_public_certificate: '- (Required, Forces new resource) The HSMs public certificate file. When using Cloud HSM, the file name is server.pem.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_redshift_parameter_group:
        subCategory: Redshift
        description: Provides a Redshift Cluster parameter group resource.
        name: aws_redshift_parameter_group
        title: aws_redshift_parameter_group
        examples:
            - name: bar
              manifest: |-
                {
                  "family": "redshift-1.0",
                  "name": "parameter-group-test-terraform",
                  "parameter": [
                    {
                      "name": "require_ssl",
                      "value": "true"
                    },
                    {
                      "name": "query_group",
                      "value": "example"
                    },
                    {
                      "name": "enable_user_activity_logging",
                      "value": "true"
                    }
                  ]
                }
        argumentDocs:
            arn: '- Amazon Resource Name (ARN) of parameter group'
            description: '- (Optional) The description of the Redshift parameter group. Defaults to "Managed by Terraform".'
            family: '- (Required) The family of the Redshift parameter group.'
            id: '- The Redshift parameter group name.'
            name: '- (Required) The name of the Redshift parameter group.'
            parameter: '- (Optional) A list of Redshift parameters to apply.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            value: '- (Required) The value of the Redshift parameter.'
        importStatements: []
    aws_redshift_scheduled_action:
        subCategory: Redshift
        description: Provides a Redshift Scheduled Action resource.
        name: aws_redshift_scheduled_action
        title: aws_redshift_scheduled_action
        examples:
            - name: example
              manifest: |-
                {
                  "iam_role": "${aws_iam_role.example.arn}",
                  "name": "tf-redshift-scheduled-action",
                  "schedule": "cron(00 23 * * ? *)",
                  "target_action": [
                    {
                      "pause_cluster": [
                        {
                          "cluster_identifier": "tf-redshift001"
                        }
                      ]
                    }
                  ]
                }
              references:
                iam_role: aws_iam_role.example.arn
              dependencies:
                aws_iam_policy.example: |-
                    {
                      "name": "redshift_scheduled_action",
                      "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n      {\n          \"Sid\": \"VisualEditor0\",\n          \"Effect\": \"Allow\",\n          \"Action\": [\n              \"redshift:PauseCluster\",\n              \"redshift:ResumeCluster\",\n              \"redshift:ResizeCluster\"\n          ],\n          \"Resource\": \"*\"\n      }\n  ]\n}\n"
                    }
                aws_iam_role.example: |-
                    {
                      "assume_role_policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": [\n          \"scheduler.redshift.amazonaws.com\"\n        ]\n      },\n      \"Effect\": \"Allow\",\n      \"Sid\": \"\"\n    }\n  ]\n}\n",
                      "name": "redshift_scheduled_action"
                    }
                aws_iam_role_policy_attachment.example: |-
                    {
                      "policy_arn": "${aws_iam_policy.example.arn}",
                      "role": "${aws_iam_role.example.name}"
                    }
            - name: example
              manifest: |-
                {
                  "iam_role": "${aws_iam_role.example.arn}",
                  "name": "tf-redshift-scheduled-action",
                  "schedule": "cron(00 23 * * ? *)",
                  "target_action": [
                    {
                      "resize_cluster": [
                        {
                          "cluster_identifier": "tf-redshift001",
                          "cluster_type": "multi-node",
                          "node_type": "dc1.large",
                          "number_of_nodes": 2
                        }
                      ]
                    }
                  ]
                }
              references:
                iam_role: aws_iam_role.example.arn
        argumentDocs:
            description: '- (Optional) The description of the scheduled action.'
            enable: '- (Optional) Whether to enable the scheduled action. Default is true .'
            end_time: '- (Optional) The end time in UTC when the schedule is active, in UTC RFC3339 format(for example, YYYY-MM-DDTHH:MM:SSZ).'
            iam_role: '- (Required) The IAM role to assume to run the scheduled action.'
            id: '- The Redshift Scheduled Action name.'
            name: '- (Required) The scheduled action name.'
            schedule: '- (Required) The schedule of action. The schedule is defined format of "at expression" or "cron expression", for example at(2016-03-04T17:27:00) or cron(0 10 ? * MON *). See Scheduled Action for more information.'
            start_time: '- (Optional) The start time in UTC when the schedule is active, in UTC RFC3339 format(for example, YYYY-MM-DDTHH:MM:SSZ).'
            target_action: '- (Required) Target action. Documented below.'
            target_action.pause_cluster: '- (Optional) An action that runs a PauseCluster API operation. Documented below.'
            target_action.pause_cluster.cluster_identifier: '- (Required) The identifier of the cluster to be paused.'
            target_action.resize_cluster: '- (Optional) An action that runs a ResizeCluster API operation. Documented below.'
            target_action.resize_cluster.classic: '- (Optional) A boolean value indicating whether the resize operation is using the classic resize process. Default: false.'
            target_action.resize_cluster.cluster_identifier: '- (Required) The unique identifier for the cluster to resize.'
            target_action.resize_cluster.cluster_type: '- (Optional)　The new cluster type for the specified cluster.'
            target_action.resize_cluster.node_type: '- (Optional) The new node type for the nodes you are adding.'
            target_action.resize_cluster.number_of_nodes: '- (Optional) The new number of nodes for the cluster.'
            target_action.resume_cluster: '- (Optional) An action that runs a ResumeCluster API operation. Documented below.'
            target_action.resume_cluster.cluster_identifier: '- (Required) The identifier of the cluster to be resumed.'
        importStatements: []
    aws_redshift_security_group:
        subCategory: Redshift
        description: Provides a Redshift security group resource.
        name: aws_redshift_security_group
        title: aws_redshift_security_group
        examples:
            - name: default
              manifest: |-
                {
                  "ingress": [
                    {
                      "cidr": "10.0.0.0/24"
                    }
                  ],
                  "name": "redshift-sg"
                }
        argumentDocs:
            cidr: '- The CIDR block to accept'
            description: '- (Optional) The description of the Redshift security group. Defaults to "Managed by Terraform".'
            id: '- The Redshift security group ID.'
            ingress: '- (Optional) A list of ingress rules.'
            name: '- (Required) The name of the Redshift security group.'
            security_group_name: '- The name of the security group to authorize'
            security_group_owner_id: |-
                - The owner Id of the security group provided
                by security_group_name.
        importStatements: []
    aws_redshift_snapshot_copy_grant:
        subCategory: Redshift
        description: Creates a snapshot copy grant that allows AWS Redshift to encrypt copied snapshots with a customer master key from AWS KMS in a destination region.
        name: aws_redshift_snapshot_copy_grant
        title: aws_redshift_snapshot_copy_grant
        examples:
            - name: test
              manifest: |-
                {
                  "snapshot_copy_grant_name": "my-grant"
                }
              dependencies:
                aws_redshift_cluster.test: |-
                    {
                      "snapshot_copy": [
                        {
                          "destination_region": "us-east-2",
                          "grant_name": "${aws_redshift_snapshot_copy_grant.test.snapshot_copy_grant_name}"
                        }
                      ]
                    }
        argumentDocs:
            arn: '- Amazon Resource Name (ARN) of snapshot copy grant'
            kms_key_id: '- (Optional, Forces new resource) The unique identifier for the customer master key (CMK) that the grant applies to. Specify the key ID or the Amazon Resource Name (ARN) of the CMK. To specify a CMK in a different AWS account, you must use the key ARN. If not specified, the default key is used.'
            snapshot_copy_grant_name: '- (Required, Forces new resource) A friendly name for identifying the grant.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_redshift_snapshot_schedule:
        subCategory: Redshift
        description: Provides an Redshift Snapshot Schedule resource.
        name: aws_redshift_snapshot_schedule
        title: aws_redshift_snapshot_schedule
        examples:
            - name: default
              manifest: |-
                {
                  "definitions": [
                    "rate(12 hours)"
                  ],
                  "identifier": "tf-redshift-snapshot-schedule"
                }
        argumentDocs:
            arn: '- Amazon Resource Name (ARN) of the Redshift Snapshot Schedule.'
            definitions: '- (Optional) The definition of the snapshot schedule. The definition is made up of schedule expressions, for example cron(30 12 *) or rate(12 hours).'
            description: '- (Optional) The description of the snapshot schedule.'
            force_destroy: '- (Optional) Whether to destroy all associated clusters with this snapshot schedule on deletion. Must be enabled and applied before attempting deletion.'
            identifier: '- (Optional, Forces new resource) The snapshot schedule identifier. If omitted, Terraform will assign a random, unique identifier.'
            identifier_prefix: |-
                - (Optional, Forces new resource) Creates a unique
                identifier beginning with the specified prefix. Conflicts with identifier.
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_redshift_snapshot_schedule_association:
        subCategory: Redshift
        description: Provides an Association Redshift Cluster and Snapshot Schedule resource.
        name: aws_redshift_snapshot_schedule_association
        title: aws_redshift_snapshot_schedule_association
        examples:
            - name: default
              manifest: |-
                {
                  "cluster_identifier": "${aws_redshift_cluster.default.id}",
                  "schedule_identifier": "${aws_redshift_snapshot_schedule.default.id}"
                }
              references:
                cluster_identifier: aws_redshift_cluster.default.id
                schedule_identifier: aws_redshift_snapshot_schedule.default.id
              dependencies:
                aws_redshift_cluster.default: |-
                    {
                      "cluster_identifier": "tf-redshift-cluster",
                      "cluster_type": "single-node",
                      "database_name": "mydb",
                      "master_password": "Mustbe8characters",
                      "master_username": "foo",
                      "node_type": "dc1.large"
                    }
                aws_redshift_snapshot_schedule.default: |-
                    {
                      "definitions": [
                        "rate(12 hours)"
                      ],
                      "identifier": "tf-redshift-snapshot-schedule"
                    }
        argumentDocs:
            cluster_identifier: '- (Required, Forces new resource) The cluster identifier.'
            schedule_identifier: '- (Required, Forces new resource) The snapshot schedule identifier.'
        importStatements: []
    aws_redshift_subnet_group:
        subCategory: Redshift
        description: Provides a Redshift Subnet Group resource.
        name: aws_redshift_subnet_group
        title: aws_redshift_subnet_group
        examples:
            - name: foo
              manifest: |-
                {
                  "name": "foo",
                  "subnet_ids": [
                    "${aws_subnet.foo.id}",
                    "${aws_subnet.bar.id}"
                  ],
                  "tags": {
                    "environment": "Production"
                  }
                }
              dependencies:
                aws_subnet.bar: |-
                    {
                      "availability_zone": "us-west-2b",
                      "cidr_block": "10.1.2.0/24",
                      "tags": {
                        "Name": "tf-dbsubnet-test-2"
                      },
                      "vpc_id": "${aws_vpc.foo.id}"
                    }
                aws_subnet.foo: |-
                    {
                      "availability_zone": "us-west-2a",
                      "cidr_block": "10.1.1.0/24",
                      "tags": {
                        "Name": "tf-dbsubnet-test-1"
                      },
                      "vpc_id": "${aws_vpc.foo.id}"
                    }
                aws_vpc.foo: |-
                    {
                      "cidr_block": "10.1.0.0/16"
                    }
        argumentDocs:
            arn: '- Amazon Resource Name (ARN) of the Redshift Subnet group name'
            description: '- (Optional) The description of the Redshift Subnet group. Defaults to "Managed by Terraform".'
            id: '- The Redshift Subnet group ID.'
            name: '- (Required) The name of the Redshift Subnet group.'
            subnet_ids: '- (Required) An array of VPC subnet IDs.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_redshift_usage_limit:
        subCategory: Redshift
        description: Provides a Redshift Usage Limit resource.
        name: aws_redshift_usage_limit
        title: aws_redshift_usage_limit
        examples:
            - name: example
              manifest: |-
                {
                  "amount": 60,
                  "cluster_identifier": "${aws_redshift_cluster.example.id}",
                  "feature_type": "concurrency-scaling",
                  "limit_type": "time"
                }
              references:
                cluster_identifier: aws_redshift_cluster.example.id
        argumentDocs:
            amount: '- (Required) The limit amount. If time-based, this amount is in minutes. If data-based, this amount is in terabytes (TB). The value must be a positive number.'
            arn: '- Amazon Resource Name (ARN) of the Redshift Usage Limit.'
            breach_action: '- (Optional) The action that Amazon Redshift takes when the limit is reached. The default is log. Valid values are log, emit-metric, and disable.'
            cluster_identifier: '- (Required) The identifier of the cluster that you want to limit usage.'
            feature_type: '- (Required) The Amazon Redshift feature that you want to limit. Valid values are spectrum, concurrency-scaling, and cross-region-datasharing.'
            id: '- The Redshift Usage Limit ID.'
            limit_type: '- (Required) The type of limit. Depending on the feature type, this can be based on a time duration or data size. If FeatureType is spectrum, then LimitType must be data-scanned. If FeatureType is concurrency-scaling, then LimitType must be time. If FeatureType is cross-region-datasharing, then LimitType must be data-scanned. Valid values are data-scanned, and time.'
            period: '- (Optional) The time period that the amount applies to. A weekly period begins on Sunday. The default is monthly. Valid values are daily, weekly, and monthly.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_redshiftdata_.subnet_group:
        subCategory: Redshift Data
        description: Provides a Redshift Data Statement execution resource.
        name: aws_redshiftdata_.subnet_group
        title: aws_redshiftdata_.subnet_group
        argumentDocs:
            cluster_identifier: '- (Required) The cluster identifier.'
            database: '- (Required) The name of the database.'
            db_user: '- (Optional) The database user name.'
            id: '- The Redshift Data Statement ID.'
            secret_arn: '- (Optional) The name or ARN of the secret that enables access to the database.'
            sql: '- (Required) The SQL statement text to run.'
            statement_name: '- (Optional) The name of the SQL statement. You can name the SQL statement when you create it to identify the query.'
            with_event: '- (Optional) A value that indicates whether to send an event to the Amazon EventBridge event bus after the SQL statement runs.'
        importStatements: []
    aws_replica_external kms_key:
        subCategory: KMS (Key Management)
        description: Manages a KMS multi-Region replica key that uses external key material.
        name: aws_replica_external kms_key
        title: aws_replica_external kms_key
        argumentDocs:
            arn: '- The Amazon Resource Name (ARN) of the replica key. The key ARNs of related multi-Region keys differ only in the Region value.'
            bypass_policy_lockout_safety_check: |-
                - (Optional) A flag to indicate whether to bypass the key policy lockout safety check.
                Setting this value to true increases the risk that the KMS key becomes unmanageable. Do not set this value to true indiscriminately.
                For more information, refer to the scenario in the Default Key Policy section in the AWS Key Management Service Developer Guide.
                The default value is false.
            deletion_window_in_days: |-
                - (Optional) The waiting period, specified in number of days. After the waiting period ends, AWS KMS deletes the KMS key.
                If you specify a value, it must be between 7 and 30, inclusive. If you do not specify a value, it defaults to 30.
            description: '- (Optional) A description of the KMS key.'
            enabled: '- (Optional) Specifies whether the replica key is enabled. Disabled KMS keys cannot be used in cryptographic operations. Keys pending import can only be false. Imported keys default to true unless expired.'
            expiration_model: '- Whether the key material expires. Empty when pending key material import, otherwise KEY_MATERIAL_EXPIRES or KEY_MATERIAL_DOES_NOT_EXPIRE.'
            key_id: '- The key ID of the replica key. Related multi-Region keys have the same key ID.'
            key_material_base64: '- (Optional) Base64 encoded 256-bit symmetric encryption key material to import. The KMS key is permanently associated with this key material. The same key material can be reimported, but you cannot import different key material.'
            key_state: '- The state of the replica key.'
            key_usage: '- The cryptographic operations for which you can use the KMS key. This is a shared property of multi-Region keys.'
            policy: |-
                - (Optional) The key policy to attach to the KMS key. If you do not specify a key policy, AWS KMS attaches the default key policy to the KMS key.
                For more information about building policy documents with Terraform, see the AWS IAM Policy Document Guide.
            primary_key_arn: '- (Required) The ARN of the multi-Region primary key to replicate. The primary key must be in a different AWS Region of the same AWS Partition. You can create only one replica of a given primary key in each AWS Region.'
            tags: '- (Optional) A map of tags to assign to the replica key. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            valid_to: '- (Optional) Time at which the imported key material expires. When the key material expires, AWS KMS deletes the key material and the key becomes unusable. If not specified, key material does not expire. Valid values: RFC3339 time string (YYYY-MM-DDTHH:MM:SSZ)'
        importStatements: []
    aws_replica_kms_key:
        subCategory: KMS (Key Management)
        description: Manages a KMS multi-Region replica key.
        name: aws_replica_kms_key
        title: aws_replica_kms_key
        argumentDocs:
            arn: '- The Amazon Resource Name (ARN) of the replica key. The key ARNs of related multi-Region keys differ only in the Region value.'
            bypass_policy_lockout_safety_check: |-
                - (Optional) A flag to indicate whether to bypass the key policy lockout safety check.
                Setting this value to true increases the risk that the KMS key becomes unmanageable. Do not set this value to true indiscriminately.
                For more information, refer to the scenario in the Default Key Policy section in the AWS Key Management Service Developer Guide.
                The default value is false.
            deletion_window_in_days: |-
                - (Optional) The waiting period, specified in number of days. After the waiting period ends, AWS KMS deletes the KMS key.
                If you specify a value, it must be between 7 and 30, inclusive. If you do not specify a value, it defaults to 30.
            description: '- (Optional) A description of the KMS key.'
            enabled: '- (Optional) Specifies whether the replica key is enabled. Disabled KMS keys cannot be used in cryptographic operations. The default value is true.'
            key_id: '- The key ID of the replica key. Related multi-Region keys have the same key ID.'
            key_rotation_enabled: '- A Boolean value that specifies whether key rotation is enabled. This is a shared property of multi-Region keys.'
            key_spec: '- The type of key material in the KMS key. This is a shared property of multi-Region keys.'
            key_usage: '- The cryptographic operations for which you can use the KMS key. This is a shared property of multi-Region keys.'
            policy: |-
                - (Optional) The key policy to attach to the KMS key. If you do not specify a key policy, AWS KMS attaches the default key policy to the KMS key.
                For more information about building policy documents with Terraform, see the AWS IAM Policy Document Guide.
            primary_key_arn: '- (Required) The ARN of the multi-Region primary key to replicate. The primary key must be in a different AWS Region of the same AWS Partition. You can create only one replica of a given primary key in each AWS Region.'
            tags: '- (Optional) A map of tags to assign to the replica key. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_resourcegroups_group:
        subCategory: Resource Groups
        description: Provides a Resource Group.
        name: aws_resourcegroups_group
        title: aws_resourcegroups_group
        examples:
            - name: test
              manifest: |-
                {
                  "name": "test-group",
                  "resource_query": [
                    {
                      "query": "{\n  \"ResourceTypeFilters\": [\n    \"AWS::EC2::Instance\"\n  ],\n  \"TagFilters\": [\n    {\n      \"Key\": \"Stage\",\n      \"Values\": [\"Test\"]\n    }\n  ]\n}\n"
                    }
                  ]
                }
        argumentDocs:
            arn: '- The ARN assigned by AWS for this resource group.'
            description: '- (Optional) A description of the resource group.'
            name: '- (Required) The resource group''s name. A resource group name can have a maximum of 127 characters, including letters, numbers, hyphens, dots, and underscores. The name cannot start with AWS or aws.'
            resource_query: '- (Required) A resource_query block. Resource queries are documented below.'
            resource_query.query: '- (Required) The resource query as a JSON string.'
            resource_query.type: '- (Required) The type of the resource query. Defaults to TAG_FILTERS_1_0.'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_route:
        subCategory: VPC (Virtual Private Cloud)
        description: Provides a resource to create a routing entry in a VPC routing table.
        name: aws_route
        title: aws_route
        examples:
            - name: r
              manifest: |-
                {
                  "depends_on": [
                    "${aws_route_table.testing}"
                  ],
                  "destination_cidr_block": "10.0.1.0/22",
                  "route_table_id": "rtb-4fbb3ac4",
                  "vpc_peering_connection_id": "pcx-45ff3dc1"
                }
            - name: r
              manifest: |-
                {
                  "destination_ipv6_cidr_block": "::/0",
                  "egress_only_gateway_id": "${aws_egress_only_internet_gateway.egress.id}",
                  "route_table_id": "rtb-4fbb3ac4"
                }
              references:
                egress_only_gateway_id: aws_egress_only_internet_gateway.egress.id
              dependencies:
                aws_egress_only_internet_gateway.egress: |-
                    {
                      "vpc_id": "${aws_vpc.vpc.id}"
                    }
                aws_vpc.vpc: |-
                    {
                      "assign_generated_ipv6_cidr_block": true,
                      "cidr_block": "10.1.0.0/16"
                    }
        argumentDocs:
            carrier_gateway_id: '- (Optional) Identifier of a carrier gateway. This attribute can only be used when the VPC contains a subnet which is associated with a Wavelength Zone.'
            core_network_arn: '- (Optional) The Amazon Resource Name (ARN) of a core network.'
            create: '- (Default 5 minutes) Used for route creation'
            delete: '- (Default 5 minutes) Used for route deletion'
            destination_cidr_block: '- (Optional) The destination CIDR block.'
            destination_ipv6_cidr_block: '- (Optional) The destination IPv6 CIDR block.'
            destination_prefix_list_id: '- (Optional) The ID of a managed prefix list destination.'
            egress_only_gateway_id: '- (Optional) Identifier of a VPC Egress Only Internet Gateway.'
            gateway_id: '- (Optional) Identifier of a VPC internet gateway or a virtual private gateway.'
            id: '- Route identifier computed from the routing table identifier and route destination.'
            instance_id: '- (Optional, Deprecated use network_interface_id instead) Identifier of an EC2 instance.'
            instance_owner_id: '- The AWS account ID of the owner of the EC2 instance.'
            local_gateway_id: '- (Optional) Identifier of a Outpost local gateway.'
            nat_gateway_id: '- (Optional) Identifier of a VPC NAT gateway.'
            network_interface_id: '- (Optional) Identifier of an EC2 network interface.'
            origin: '- How the route was created - CreateRouteTable, CreateRoute or EnableVgwRoutePropagation.'
            route_table_id: '- (Required) The ID of the routing table.'
            state: '- The state of the route - active or blackhole.'
            transit_gateway_id: '- (Optional) Identifier of an EC2 Transit Gateway.'
            update: '- (Default 2 minutes) Used for route creation'
            vpc_endpoint_id: '- (Optional) Identifier of a VPC Endpoint.'
            vpc_peering_connection_id: '- (Optional) Identifier of a VPC peering connection.'
        importStatements: []
    aws_route_table:
        subCategory: VPC (Virtual Private Cloud)
        description: Provides a resource to create a VPC routing table.
        name: aws_route_table
        title: aws_route_table
        examples:
            - name: example
              manifest: |-
                {
                  "route": [
                    {
                      "cidr_block": "10.0.1.0/24",
                      "gateway_id": "${aws_internet_gateway.example.id}"
                    },
                    {
                      "egress_only_gateway_id": "${aws_egress_only_internet_gateway.example.id}",
                      "ipv6_cidr_block": "::/0"
                    }
                  ],
                  "tags": {
                    "Name": "example"
                  },
                  "vpc_id": "${aws_vpc.example.id}"
                }
              references:
                route.egress_only_gateway_id: aws_egress_only_internet_gateway.example.id
                route.gateway_id: aws_internet_gateway.example.id
                vpc_id: aws_vpc.example.id
            - name: example
              manifest: |-
                {
                  "route": [],
                  "tags": {
                    "Name": "example"
                  },
                  "vpc_id": "${aws_vpc.example.id}"
                }
              references:
                vpc_id: aws_vpc.example.id
        argumentDocs:
            arn: '- The ARN of the route table.'
            carrier_gateway_id: '- (Optional) Identifier of a carrier gateway. This attribute can only be used when the VPC contains a subnet which is associated with a Wavelength Zone.'
            cidr_block: '- (Required) The CIDR block of the route.'
            core_network_arn: '- (Optional) The Amazon Resource Name (ARN) of a core network.'
            create: '- (Default 5 minutes) Used for route creation'
            delete: '- (Default 5 minutes) Used for route deletion'
            destination_prefix_list_id: '- (Optional) The ID of a managed prefix list destination of the route.'
            egress_only_gateway_id: '- (Optional) Identifier of a VPC Egress Only Internet Gateway.'
            gateway_id: '- (Optional) Identifier of a VPC internet gateway or a virtual private gateway.'
            id: '- The ID of the routing table.'
            instance_id: '- (Optional, Deprecated use network_interface_id instead) Identifier of an EC2 instance.'
            ipv6_cidr_block: '- (Optional) The Ipv6 CIDR block of the route.'
            local_gateway_id: '- (Optional) Identifier of a Outpost local gateway.'
            nat_gateway_id: '- (Optional) Identifier of a VPC NAT gateway.'
            network_interface_id: '- (Optional) Identifier of an EC2 network interface.'
            owner_id: '- The ID of the AWS account that owns the route table.'
            propagating_vgws: '- (Optional) A list of virtual gateways for propagation.'
            route: |-
                - (Optional) A list of route objects. Their keys are documented below. This argument is processed in attribute-as-blocks mode.
                This means that omitting this argument is interpreted as ignoring any existing routes. To remove all managed routes an empty list should be specified. See the example above.
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            transit_gateway_id: '- (Optional) Identifier of an EC2 Transit Gateway.'
            update: '- (Default 2 minutes) Used for route creation'
            vpc_endpoint_id: '- (Optional) Identifier of a VPC Endpoint.'
            vpc_id: '- (Required) The VPC ID.'
            vpc_peering_connection_id: '- (Optional) Identifier of a VPC peering connection.'
        importStatements: []
    aws_route_table_association:
        subCategory: VPC (Virtual Private Cloud)
        description: Provides a resource to create an association between a route table and a subnet or a route table and an internet gateway or virtual private gateway.
        name: aws_route_table_association
        title: aws_route_table_association
        examples:
            - name: a
              manifest: |-
                {
                  "route_table_id": "${aws_route_table.bar.id}",
                  "subnet_id": "${aws_subnet.foo.id}"
                }
              references:
                route_table_id: aws_route_table.bar.id
                subnet_id: aws_subnet.foo.id
            - name: b
              manifest: |-
                {
                  "gateway_id": "${aws_internet_gateway.foo.id}",
                  "route_table_id": "${aws_route_table.bar.id}"
                }
              references:
                gateway_id: aws_internet_gateway.foo.id
                route_table_id: aws_route_table.bar.id
        argumentDocs:
            gateway_id: '- (Optional) The gateway ID to create an association. Conflicts with subnet_id.'
            id: '- The ID of the association'
            route_table_id: '- (Required) The ID of the routing table to associate with.'
            subnet_id: '- (Optional) The subnet ID to create an association. Conflicts with gateway_id.'
        importStatements: []
    aws_route53domains_registered_domain:
        subCategory: Route 53 Domains
        description: Provides a resource to manage a domain that has been registered and associated with the current AWS account.
        name: aws_route53domains_registered_domain
        title: aws_route53domains_registered_domain
        examples:
            - name: example
              manifest: |-
                {
                  "domain_name": "example.com",
                  "name_server": [
                    {
                      "name": "ns-195.awsdns-24.com"
                    },
                    {
                      "name": "ns-874.awsdns-45.net"
                    }
                  ],
                  "tags": {
                    "Environment": "test"
                  }
                }
        argumentDocs:
            abuse_contact_email: '- Email address to contact to report incorrect contact information for a domain, to report that the domain is being used to send spam, to report that someone is cybersquatting on a domain name, or report some other type of abuse.'
            abuse_contact_phone: '- Phone number for reporting abuse.'
            address_line_1: '- (Optional) First line of the contact''s address.'
            address_line_2: '- (Optional) Second line of contact''s address, if any.'
            admin_contact: '- (Optional) Details about the domain administrative contact.'
            admin_privacy: '- (Optional) Whether domain administrative contact information is concealed from WHOIS queries. Default: true.'
            auto_renew: '- (Optional) Whether the domain registration is set to renew automatically. Default: true.'
            city: '- (Optional) The city of the contact''s address.'
            contact_type: '- (Optional) Indicates whether the contact is a person, company, association, or public organization. See the AWS API documentation for valid values.'
            country_code: '- (Optional) Code for the country of the contact''s address. See the AWS API documentation for valid values.'
            create: '- (Default 30 minutes) Used for Domain creation'
            creation_date: '- The date when the domain was created as found in the response to a WHOIS query.'
            domain_name: '- (Required) The name of the registered domain.'
            email: '- (Optional) Email address of the contact.'
            expiration_date: '- The date when the registration for the domain is set to expire.'
            extra_params: '- (Optional) A key-value map of parameters required by certain top-level domains.'
            fax: '- (Optional) Fax number of the contact. Phone number must be specified in the format "+[country dialing code].[number including any area code]".'
            first_name: '- (Optional) First name of contact.'
            glue_ips: '- (Optional) Glue IP addresses of a name server. The list can contain only one IPv4 and one IPv6 address.'
            id: '- The domain name.'
            last_name: '- (Optional) Last name of contact.'
            name: '- (Required) The fully qualified host name of the name server.'
            name_server: '- (Optional) The list of nameservers for the domain.'
            organization_name: '- (Optional) Name of the organization for contact types other than PERSON.'
            phone_number: '- (Optional) The phone number of the contact. Phone number must be specified in the format "+[country dialing code].[number including any area code]".'
            registrant_contact: '- (Optional) Details about the domain registrant.'
            registrant_privacy: '- (Optional) Whether domain registrant contact information is concealed from WHOIS queries. Default: true.'
            registrar_name: '- Name of the registrar of the domain as identified in the registry.'
            registrar_url: '- Web address of the registrar.'
            reseller: '- Reseller of the domain.'
            state: '- (Optional) The state or province of the contact''s city.'
            status_list: '- List of domain name status codes.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            tech_contact: '- (Optional) Details about the domain technical contact.'
            tech_privacy: '- (Optional) Whether domain technical contact information is concealed from WHOIS queries. Default: true.'
            transfer_lock: '- (Optional) Whether the domain is locked for transfer. Default: true.'
            update: '- (Default 30 minutes) Used for Domain update'
            updated_date: '- The last updated date of the domain as found in the response to a WHOIS query.'
            whois_server: '- The fully qualified name of the WHOIS server that can answer the WHOIS query for the domain.'
            zip_code: '- (Optional) The zip or postal code of the contact''s address.'
        importStatements: []
    aws_route53recoverycontrolconfig_cluster:
        subCategory: Route 53 Recovery Control Config
        description: Provides an AWS Route 53 Recovery Control Config Cluster
        name: aws_route53recoverycontrolconfig_cluster
        title: aws_route53recoverycontrolconfig_cluster
        examples:
            - name: example
              manifest: |-
                {
                  "name": "georgefitzgerald"
                }
        argumentDocs:
            arn: '- ARN of the cluster'
            cluster_endpoints: '- List of 5 endpoints in 5 regions that can be used to talk to the cluster. See below.'
            cluster_endpoints.endpoint: '- Cluster endpoint.'
            cluster_endpoints.region: '- Region of the endpoint.'
            name: '- (Required) Unique name describing the cluster.'
            status: '- Status of cluster. PENDING when it is being created, PENDING_DELETION when it is being deleted and DEPLOYED otherwise.'
        importStatements: []
    aws_route53recoverycontrolconfig_control_panel:
        subCategory: Route 53 Recovery Control Config
        description: Provides an AWS Route 53 Recovery Control Config Control Panel
        name: aws_route53recoverycontrolconfig_control_panel
        title: aws_route53recoverycontrolconfig_control_panel
        examples:
            - name: example
              manifest: |-
                {
                  "cluster_arn": "arn:aws:route53-recovery-control::123456789012:cluster/8d47920e-d789-437d-803a-2dcc4b204393",
                  "name": "balmorhea"
                }
        argumentDocs:
            arn: '- ARN of the control panel.'
            cluster_arn: '- (Required) ARN of the cluster in which this control panel will reside.'
            default_control_panel: '- Whether a control panel is default.'
            name: '- (Required) Name describing the control panel.'
            routing_control_count: '- Number routing controls in a control panel.'
            status: '- Status of control panel: PENDING when it is being created/updated, PENDING_DELETION when it is being deleted, and DEPLOYED otherwise.'
        importStatements: []
    aws_route53recoverycontrolconfig_routing_control:
        subCategory: Route 53 Recovery Control Config
        description: Provides an AWS Route 53 Recovery Control Config Routing Control
        name: aws_route53recoverycontrolconfig_routing_control
        title: aws_route53recoverycontrolconfig_routing_control
        examples:
            - name: example
              manifest: |-
                {
                  "cluster_arn": "arn:aws:route53-recovery-control::881188118811:cluster/8d47920e-d789-437d-803a-2dcc4b204393",
                  "name": "tinlicker"
                }
            - name: example
              manifest: |-
                {
                  "cluster_arn": "arn:aws:route53-recovery-control::881188118811:cluster/8d47920e-d789-437d-803a-2dcc4b204393",
                  "control_panel_arn": "arn:aws:route53-recovery-control::428113431245:controlpanel/abd5fbfc052d4844a082dbf400f61da8",
                  "name": "thomasoliver"
                }
        argumentDocs:
            arn: '- ARN of the routing control.'
            cluster_arn: '- (Required) ARN of the cluster in which this routing control will reside.'
            control_panel_arn: '- (Optional) ARN of the control panel in which this routing control will reside.'
            name: '- (Required) The name describing the routing control.'
            status: '- Status of routing control. PENDING when it is being created/updated, PENDING_DELETION when it is being deleted, and DEPLOYED otherwise.'
        importStatements: []
    aws_route53recoverycontrolconfig_safety_rule:
        subCategory: Route 53 Recovery Control Config
        description: Provides an AWS Route 53 Recovery Control Config Safety Rule
        name: aws_route53recoverycontrolconfig_safety_rule
        title: aws_route53recoverycontrolconfig_safety_rule
        examples:
            - name: example
              manifest: |-
                {
                  "asserted_controls": [
                    "${aws_route53recoverycontrolconfig_routing_control.example.arn}"
                  ],
                  "control_panel_arn": "arn:aws:route53-recovery-control::313517334327:controlpanel/abd5fbfc052d4844a082dbf400f61da8",
                  "name": "daisyguttridge",
                  "rule_config": [
                    {
                      "inverted": false,
                      "threshold": 1,
                      "type": "ATLEAST"
                    }
                  ],
                  "wait_period_ms": 5000
                }
            - name: example
              manifest: |-
                {
                  "control_panel_arn": "arn:aws:route53-recovery-control::313517334327:controlpanel/abd5fbfc052d4844a082dbf400f61da8",
                  "gating_controls": [
                    "${aws_route53recoverycontrolconfig_routing_control.example.arn}"
                  ],
                  "name": "i_o",
                  "rule_config": [
                    {
                      "inverted": false,
                      "threshold": 1,
                      "type": "ATLEAST"
                    }
                  ],
                  "target_controls": [
                    "${aws_route53recoverycontrolconfig_routing_control.example.arn}"
                  ],
                  "wait_period_ms": 5000
                }
        argumentDocs:
            arn: '- ARN of the safety rule.'
            asserted_controls: '- (Optional) Routing controls that are part of transactions that are evaluated to determine if a request to change a routing control state is allowed.'
            control_panel_arn: '- (Required) ARN of the control panel in which this safety rule will reside.'
            gating_controls: '- (Optional) Gating controls for the new gating rule. That is, routing controls that are evaluated by the rule configuration that you specify.'
            name: '- (Required) Name describing the safety rule.'
            rule_config: '- (Required) Configuration block for safety rule criteria. See below.'
            rule_config.inverted: '- (Required) Logical negation of the rule.'
            rule_config.threshold: '- (Required) Number of controls that must be set when you specify an ATLEAST type rule.'
            rule_config.type: '- (Required) Rule type. Valid values are ATLEAST, AND, and OR.'
            status: '- Status of the safety rule. PENDING when it is being created/updated, PENDING_DELETION when it is being deleted, and DEPLOYED otherwise.'
            target_controls: '- (Optional) Routing controls that can only be set or unset if the specified rule_config evaluates to true for the specified gating_controls.'
            wait_period_ms: '- (Required) Evaluation period, in milliseconds (ms), during which any request against the target routing controls will fail.'
        importStatements: []
    aws_route53recoveryreadiness_cell:
        subCategory: Route 53 Recovery Readiness
        description: Provides an AWS Route 53 Recovery Readiness Cell
        name: aws_route53recoveryreadiness_cell
        title: aws_route53recoveryreadiness_cell
        examples:
            - name: example
              manifest: |-
                {
                  "cell_name": "us-west-2-failover-cell"
                }
        argumentDocs:
            arn: '- ARN of the cell'
            cell_name: '- (Required) Unique name describing the cell.'
            cells: '- (Optional) List of cell arns to add as nested fault domains within this cell.'
            delete: '- (Default 5m) Used when deleting the Cell'
            parent_readiness_scopes: '- List of readiness scopes (recovery groups or cells) that contain this cell.'
            tags: '- (Optional) Key-value mapping of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_route53recoveryreadiness_readiness_check:
        subCategory: Route 53 Recovery Readiness
        description: Provides an AWS Route 53 Recovery Readiness Readiness Check
        name: aws_route53recoveryreadiness_readiness_check
        title: aws_route53recoveryreadiness_readiness_check
        examples:
            - name: example
              manifest: |-
                {
                  "readiness_check_name": "${my-cw-alarm-check}",
                  "resource_set_name": "${my-cw-alarm-set}"
                }
              references:
                readiness_check_name: my-cw-alarm-check
                resource_set_name: my-cw-alarm-set
        argumentDocs:
            arn: '- ARN of the readiness_check'
            delete: '- (Default 5m) Used when deleting the Readiness Check'
            readiness_check_name: '- (Required) Unique name describing the readiness check.'
            resource_set_name: '- (Required) Name describing the resource set that will be monitored for readiness.'
            tags: '- (Optional) Key-value mapping of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_route53recoveryreadiness_recovery_group:
        subCategory: Route 53 Recovery Readiness
        description: Provides an AWS Route 53 Recovery Readiness Recovery Group
        name: aws_route53recoveryreadiness_recovery_group
        title: aws_route53recoveryreadiness_recovery_group
        examples:
            - name: example
              manifest: |-
                {
                  "recovery_group_name": "my-high-availability-app"
                }
        argumentDocs:
            arn: '- ARN of the recovery group'
            cells: '- (Optional) List of cell arns to add as nested fault domains within this recovery group'
            delete: '- (Default 5m) Used when deleting the Recovery Group'
            recovery_group_name: '- (Required) A unique name describing the recovery group.'
            tags: '- (Optional) Key-value mapping of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_route53recoveryreadiness_resource_set:
        subCategory: Route 53 Recovery Readiness
        description: Provides an AWS Route 53 Recovery Readiness Resource Set
        name: aws_route53recoveryreadiness_resource_set
        title: aws_route53recoveryreadiness_resource_set
        examples:
            - name: example
              manifest: |-
                {
                  "resource_set_name": "${my-cw-alarm-set}",
                  "resource_set_type": "AWS::CloudWatch::Alarm",
                  "resources": [
                    {
                      "resource_arn": "${aws_cloudwatch_metric_alarm.example.arn}"
                    }
                  ]
                }
              references:
                resource_set_name: my-cw-alarm-set
                resources.resource_arn: aws_cloudwatch_metric_alarm.example.arn
        argumentDocs:
            arn: '- ARN of the resource set'
            delete: '- (Default 5m) Used when deleting the Resource Set'
            resource_set_name: '- (Required) Unique name describing the resource set.'
            resource_set_type: '- (Required) Type of the resources in the resource set.'
            resources: '- (Required) List of resources to add to this resource set. See below.'
            resources.#.component_id: '- Unique identified for DNS Target Resources, use for readiness checks.'
            resources.dns_target_resource: '- (Required if resource_arn is not set) Component for DNS/Routing Control Readiness Checks.'
            resources.dns_target_resource.domain_name: '- (Optional) DNS Name that acts as the ingress point to a portion of application.'
            resources.dns_target_resource.hosted_zone_arn: '- (Optional) Hosted Zone ARN that contains the DNS record with the provided name of target resource.'
            resources.dns_target_resource.record_set_id: '- (Optional) Route53 record set id to uniquely identify a record given a domain_name and a record_type.'
            resources.dns_target_resource.record_type: '- (Optional) Type of DNS Record of target resource.'
            resources.dns_target_resource.target_resource: '- (Optional) Target resource the R53 record specified with the above params points to.'
            resources.dns_target_resource.target_resource.nlb_resource: '- (Optional) NLB resource a DNS Target Resource points to. Required if r53_resource is not set.'
            resources.dns_target_resource.target_resource.nlb_resource.arn: '- (Required) NLB resource ARN.'
            resources.dns_target_resource.target_resource.r53_resource: '- (Optional) Route53 resource a DNS Target Resource record points to.'
            resources.dns_target_resource.target_resource.r53_resource.domain_name: '- (Optional) Domain name that is targeted.'
            resources.dns_target_resource.target_resource.r53_resource.record_set_id: '- (Optional) Resource record set ID that is targeted.'
            resources.readiness_scopes: '- (Optional) Recovery group ARN or cell ARN that contains this resource set.'
            resources.resource_arn: '- (Required if dns_target_resource is not set) ARN of the resource.'
            tags: '- (Optional) Key-value mapping of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_route53_delegation_set:
        subCategory: Route 53
        description: Provides a Route53 Delegation Set resource.
        name: aws_route53_delegation_set
        title: aws_route53_delegation_set
        examples:
            - name: main
              manifest: |-
                {
                  "reference_name": "DynDNS"
                }
              dependencies:
                aws_route53_zone.primary: |-
                    {
                      "delegation_set_id": "${aws_route53_delegation_set.main.id}",
                      "name": "hashicorp.com"
                    }
                aws_route53_zone.secondary: |-
                    {
                      "delegation_set_id": "${aws_route53_delegation_set.main.id}",
                      "name": "terraform.io"
                    }
        argumentDocs:
            arn: '- The Amazon Resource Name (ARN) of the Delegation Set.'
            id: '- The delegation set ID'
            name_servers: |-
                - A list of authoritative name servers for the hosted zone
                (effectively a list of NS records).
            reference_name: |-
                - (Optional) This is a reference name used in Caller Reference
                (helpful for identifying single delegation set amongst others)
        importStatements: []
    aws_route53_health_check:
        subCategory: Route 53
        description: Provides a Route53 health check.
        name: aws_route53_health_check
        title: aws_route53_health_check
        examples:
            - name: example
              manifest: |-
                {
                  "failure_threshold": "5",
                  "fqdn": "example.com",
                  "port": 80,
                  "request_interval": "30",
                  "resource_path": "/",
                  "tags": {
                    "Name": "tf-test-health-check"
                  },
                  "type": "HTTP"
                }
            - name: example
              manifest: |-
                {
                  "failure_threshold": "5",
                  "fqdn": "example.com",
                  "port": 443,
                  "request_interval": "30",
                  "resource_path": "/",
                  "search_string": "example",
                  "type": "HTTPS_STR_MATCH"
                }
            - name: parent
              manifest: |-
                {
                  "child_health_threshold": 1,
                  "child_healthchecks": [
                    "${aws_route53_health_check.child.id}"
                  ],
                  "tags": {
                    "Name": "tf-test-calculated-health-check"
                  },
                  "type": "CALCULATED"
                }
            - name: foo
              manifest: |-
                {
                  "cloudwatch_alarm_name": "${aws_cloudwatch_metric_alarm.foobar.alarm_name}",
                  "cloudwatch_alarm_region": "us-west-2",
                  "insufficient_data_health_status": "Healthy",
                  "type": "CLOUDWATCH_METRIC"
                }
              references:
                cloudwatch_alarm_name: aws_cloudwatch_metric_alarm.foobar.alarm_name
              dependencies:
                aws_cloudwatch_metric_alarm.foobar: |-
                    {
                      "alarm_description": "This metric monitors ec2 cpu utilization",
                      "alarm_name": "terraform-test-foobar5",
                      "comparison_operator": "GreaterThanOrEqualToThreshold",
                      "evaluation_periods": "2",
                      "metric_name": "CPUUtilization",
                      "namespace": "AWS/EC2",
                      "period": "120",
                      "statistic": "Average",
                      "threshold": "80"
                    }
        argumentDocs:
            arn: '- The Amazon Resource Name (ARN) of the Health Check.'
            child_health_threshold: '- (Optional) The minimum number of child health checks that must be healthy for Route 53 to consider the parent health check to be healthy. Valid values are integers between 0 and 256, inclusive'
            child_healthchecks: '- (Optional) For a specified parent health check, a list of HealthCheckId values for the associated child health checks.'
            cloudwatch_alarm_name: '- (Optional) The name of the CloudWatch alarm.'
            cloudwatch_alarm_region: '- (Optional) The CloudWatchRegion that the CloudWatch alarm was created in.'
            disabled: '- (Optional) A boolean value that stops Route 53 from performing health checks. When set to true, Route 53 will do the following depending on the type of health check:'
            enable_sni: '- (Optional) A boolean value that indicates whether Route53 should send the fqdn to the endpoint when performing the health check. This defaults to AWS'' defaults: when the type is "HTTPS" enable_sni defaults to true, when type is anything else enable_sni defaults to false.'
            failure_threshold: '- (Optional) The number of consecutive health checks that an endpoint must pass or fail.'
            fqdn: '- (Optional) The fully qualified domain name of the endpoint to be checked.'
            id: '- The id of the health check'
            insufficient_data_health_status: '- (Optional) The status of the health check when CloudWatch has insufficient data about the state of associated alarm. Valid values are Healthy , Unhealthy and LastKnownStatus.'
            invert_healthcheck: '- (Optional) A boolean value that indicates whether the status of health check should be inverted. For example, if a health check is healthy but Inverted is True , then Route 53 considers the health check to be unhealthy.'
            ip_address: '- (Optional) The IP address of the endpoint to be checked.'
            measure_latency: '- (Optional) A Boolean value that indicates whether you want Route 53 to measure the latency between health checkers in multiple AWS regions and your endpoint and to display CloudWatch latency graphs in the Route 53 console.'
            port: '- (Optional) The port of the endpoint to be checked.'
            reference_name: |-
                - (Optional) This is a reference name used in Caller Reference
                (helpful for identifying single health_check set amongst others)
            regions: '- (Optional) A list of AWS regions that you want Amazon Route 53 health checkers to check the specified endpoint from.'
            request_interval: '- (Required) The number of seconds between the time that Amazon Route 53 gets a response from your endpoint and the time that it sends the next health-check request.'
            resource_path: '- (Optional) The path that you want Amazon Route 53 to request when performing health checks.'
            routing_control_arn: '- (Optional) The Amazon Resource Name (ARN) for the Route 53 Application Recovery Controller routing control. This is used when health check type is RECOVERY_CONTROL'
            search_string: '- (Optional) String searched in the first 5120 bytes of the response body for check to be considered healthy. Only valid with HTTP_STR_MATCH and HTTPS_STR_MATCH.'
            tags: '- (Optional) A map of tags to assign to the health check. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            type: '- (Required) The protocol to use when performing health checks. Valid values are HTTP, HTTPS, HTTP_STR_MATCH, HTTPS_STR_MATCH, TCP, CALCULATED, CLOUDWATCH_METRIC and RECOVERY_CONTROL.'
        importStatements: []
    aws_route53_hosted_zone_dnssec:
        subCategory: Route 53
        description: Manages Route 53 Hosted Zone DNSSEC
        name: aws_route53_hosted_zone_dnssec
        title: aws_route53_hosted_zone_dnssec
        examples:
            - name: example
              manifest: |-
                {
                  "depends_on": [
                    "${aws_route53_key_signing_key.example}"
                  ],
                  "hosted_zone_id": "${aws_route53_key_signing_key.example.hosted_zone_id}"
                }
              references:
                hosted_zone_id: aws_route53_key_signing_key.example.hosted_zone_id
              dependencies:
                aws_kms_key.example: |-
                    {
                      "customer_master_key_spec": "ECC_NIST_P256",
                      "deletion_window_in_days": 7,
                      "key_usage": "SIGN_VERIFY",
                      "policy": "${jsonencode({\n    Statement = [\n      {\n        Action = [\n          \"kms:DescribeKey\",\n          \"kms:GetPublicKey\",\n          \"kms:Sign\",\n        ],\n        Effect = \"Allow\"\n        Principal = {\n          Service = \"dnssec-route53.amazonaws.com\"\n        }\n        Sid      = \"Allow Route 53 DNSSEC Service\",\n        Resource = \"*\"\n        Condition = {\n          StringEquals = {\n            \"aws:SourceAccount\" = \"${data.aws_caller_identity.current.account_id}\"\n          }\n          ArnLike = {\n            \"aws:SourceArn\" = \"arn:aws:route53:::hostedzone/*\"\n          }\n        }\n      },\n      {\n        Action = \"kms:CreateGrant\",\n        Effect = \"Allow\"\n        Principal = {\n          Service = \"dnssec-route53.amazonaws.com\"\n        }\n        Sid      = \"Allow Route 53 DNSSEC Service to CreateGrant\",\n        Resource = \"*\"\n        Condition = {\n          Bool = {\n            \"kms:GrantIsForAWSResource\" = \"true\"\n          }\n        }\n      },\n      {\n        Action = \"kms:*\"\n        Effect = \"Allow\"\n        Principal = {\n          AWS = \"arn:aws:iam::${data.aws_caller_identity.current.account_id}:root\"\n        }\n        Resource = \"*\"\n        Sid      = \"Enable IAM User Permissions\"\n      },\n    ]\n    Version = \"2012-10-17\"\n  })}"
                    }
                aws_route53_key_signing_key.example: |-
                    {
                      "hosted_zone_id": "${aws_route53_zone.example.id}",
                      "key_management_service_arn": "${aws_kms_key.example.arn}",
                      "name": "example"
                    }
                aws_route53_zone.example: |-
                    {
                      "name": "example.com"
                    }
        argumentDocs:
            hosted_zone_id: '- (Required) Identifier of the Route 53 Hosted Zone.'
            id: '- Route 53 Hosted Zone identifier.'
            signing_status: '- (Optional) Hosted Zone signing status. Valid values: SIGNING, NOT_SIGNING. Defaults to SIGNING.'
        importStatements: []
    aws_route53_key_signing_key:
        subCategory: Route 53
        description: Manages an Route 53 Key Signing Key
        name: aws_route53_key_signing_key
        title: aws_route53_key_signing_key
        examples:
            - name: example
              manifest: |-
                {
                  "hosted_zone_id": "${aws_route53_zone.test.id}",
                  "key_management_service_arn": "${aws_kms_key.test.arn}",
                  "name": "example"
                }
              references:
                hosted_zone_id: aws_route53_zone.test.id
                key_management_service_arn: aws_kms_key.test.arn
              dependencies:
                aws_kms_key.example: |-
                    {
                      "customer_master_key_spec": "ECC_NIST_P256",
                      "deletion_window_in_days": 7,
                      "key_usage": "SIGN_VERIFY",
                      "policy": "${jsonencode({\n    Statement = [\n      {\n        Action = [\n          \"kms:DescribeKey\",\n          \"kms:GetPublicKey\",\n          \"kms:Sign\",\n        ],\n        Effect = \"Allow\"\n        Principal = {\n          Service = \"dnssec-route53.amazonaws.com\"\n        }\n        Sid      = \"Allow Route 53 DNSSEC Service\",\n        Resource = \"*\"\n        Condition = {\n          StringEquals = {\n            \"aws:SourceAccount\" = \"${data.aws_caller_identity.current.account_id}\"\n          }\n          ArnLike = {\n            \"aws:SourceArn\" = \"arn:aws:route53:::hostedzone/*\"\n          }\n        }\n      },\n      {\n        Action = \"kms:CreateGrant\",\n        Effect = \"Allow\"\n        Principal = {\n          Service = \"dnssec-route53.amazonaws.com\"\n        }\n        Sid      = \"Allow Route 53 DNSSEC Service to CreateGrant\",\n        Resource = \"*\"\n        Condition = {\n          Bool = {\n            \"kms:GrantIsForAWSResource\" = \"true\"\n          }\n        }\n      },\n      {\n        Action = \"kms:*\"\n        Effect = \"Allow\"\n        Principal = {\n          AWS = \"arn:aws:iam::${data.aws_caller_identity.current.account_id}:root\"\n        }\n        Resource = \"*\"\n        Sid      = \"Enable IAM User Permissions\"\n      },\n    ]\n    Version = \"2012-10-17\"\n  })}"
                    }
                aws_route53_hosted_zone_dnssec.example: |-
                    {
                      "depends_on": [
                        "${aws_route53_key_signing_key.example}"
                      ],
                      "hosted_zone_id": "${aws_route53_key_signing_key.example.hosted_zone_id}"
                    }
                aws_route53_zone.example: |-
                    {
                      "name": "example.com"
                    }
        argumentDocs:
            digest_algorithm_mnemonic: '- A string used to represent the delegation signer digest algorithm. This value must follow the guidelines provided by RFC-8624 Section 3.3.'
            digest_algorithm_type: '- An integer used to represent the delegation signer digest algorithm. This value must follow the guidelines provided by RFC-8624 Section 3.3.'
            digest_value: '- A cryptographic digest of a DNSKEY resource record (RR). DNSKEY records are used to publish the public key that resolvers can use to verify DNSSEC signatures that are used to secure certain kinds of information provided by the DNS system.'
            dnskey_record: '- A string that represents a DNSKEY record.'
            ds_record: '- A string that represents a delegation signer (DS) record.'
            flag: '- An integer that specifies how the key is used. For key-signing key (KSK), this value is always 257.'
            hosted_zone_id: '- (Required) Identifier of the Route 53 Hosted Zone.'
            id: '- Route 53 Hosted Zone identifier and KMS Key identifier, separated by a comma (,).'
            key_management_service_arn: '- (Required) Amazon Resource Name (ARN) of the Key Management Service (KMS) Key. This must be unique for each key-signing key (KSK) in a single hosted zone. This key must be in the us-east-1 Region and meet certain requirements, which are described in the Route 53 Developer Guide and Route 53 API Reference.'
            key_tag: '- An integer used to identify the DNSSEC record for the domain name. The process used to calculate the value is described in RFC-4034 Appendix B.'
            name: '- (Required) Name of the key-signing key (KSK). Must be unique for each key-singing key in the same hosted zone.'
            public_key: '- The public key, represented as a Base64 encoding, as required by RFC-4034 Page 5.'
            signing_algorithm_mnemonic: '- A string used to represent the signing algorithm. This value must follow the guidelines provided by RFC-8624 Section 3.1.'
            signing_algorithm_type: '- An integer used to represent the signing algorithm. This value must follow the guidelines provided by RFC-8624 Section 3.1.'
            status: '- (Optional) Status of the key-signing key (KSK). Valid values: ACTIVE, INACTIVE. Defaults to ACTIVE.'
        importStatements: []
    aws_route53_query_log:
        subCategory: Route 53
        description: Provides a Route53 query logging configuration resource.
        name: aws_route53_query_log
        title: aws_route53_query_log
        examples:
            - name: example_com
              manifest: |-
                {
                  "cloudwatch_log_group_arn": "${aws_cloudwatch_log_group.aws_route53_example_com.arn}",
                  "depends_on": [
                    "${aws_cloudwatch_log_resource_policy.route53-query-logging-policy}"
                  ],
                  "zone_id": "${aws_route53_zone.example_com.zone_id}"
                }
              references:
                cloudwatch_log_group_arn: aws_cloudwatch_log_group.aws_route53_example_com.arn
                zone_id: aws_route53_zone.example_com.zone_id
              dependencies:
                aws_cloudwatch_log_group.aws_route53_example_com: |-
                    {
                      "name": "/aws/route53/${aws_route53_zone.example_com.name}",
                      "provider": "${aws.us-east-1}",
                      "retention_in_days": 30
                    }
                aws_cloudwatch_log_resource_policy.route53-query-logging-policy: |-
                    {
                      "policy_document": "${data.aws_iam_policy_document.route53-query-logging-policy.json}",
                      "policy_name": "route53-query-logging-policy",
                      "provider": "${aws.us-east-1}"
                    }
                aws_route53_zone.example_com: |-
                    {
                      "name": "example.com"
                    }
        argumentDocs:
            arn: '- The Amazon Resource Name (ARN) of the Query Logging Config.'
            cloudwatch_log_group_arn: '- (Required) CloudWatch log group ARN to send query logs.'
            id: '- The query logging configuration ID'
            zone_id: '- (Required) Route53 hosted zone ID to enable query logs.'
        importStatements: []
    aws_route53_record:
        subCategory: Route 53
        description: Provides a Route53 record resource.
        name: aws_route53_record
        title: aws_route53_record
        examples:
            - name: www
              manifest: |-
                {
                  "name": "www.example.com",
                  "records": [
                    "${aws_eip.lb.public_ip}"
                  ],
                  "ttl": "300",
                  "type": "A",
                  "zone_id": "${aws_route53_zone.primary.zone_id}"
                }
              references:
                zone_id: aws_route53_zone.primary.zone_id
            - name: www-dev
              manifest: |-
                {
                  "name": "www",
                  "records": [
                    "dev.example.com"
                  ],
                  "set_identifier": "dev",
                  "ttl": "5",
                  "type": "CNAME",
                  "weighted_routing_policy": [
                    {
                      "weight": 10
                    }
                  ],
                  "zone_id": "${aws_route53_zone.primary.zone_id}"
                }
              references:
                zone_id: aws_route53_zone.primary.zone_id
            - name: www-live
              manifest: |-
                {
                  "name": "www",
                  "records": [
                    "live.example.com"
                  ],
                  "set_identifier": "live",
                  "ttl": "5",
                  "type": "CNAME",
                  "weighted_routing_policy": [
                    {
                      "weight": 90
                    }
                  ],
                  "zone_id": "${aws_route53_zone.primary.zone_id}"
                }
              references:
                zone_id: aws_route53_zone.primary.zone_id
            - name: www
              manifest: |-
                {
                  "alias": [
                    {
                      "evaluate_target_health": true,
                      "name": "${aws_elb.main.dns_name}",
                      "zone_id": "${aws_elb.main.zone_id}"
                    }
                  ],
                  "name": "example.com",
                  "type": "A",
                  "zone_id": "${aws_route53_zone.primary.zone_id}"
                }
              references:
                alias.name: aws_elb.main.dns_name
                alias.zone_id: aws_elb.main.zone_id
                zone_id: aws_route53_zone.primary.zone_id
              dependencies:
                aws_elb.main: |-
                    {
                      "availability_zones": [
                        "us-east-1c"
                      ],
                      "listener": [
                        {
                          "instance_port": 80,
                          "instance_protocol": "http",
                          "lb_port": 80,
                          "lb_protocol": "http"
                        }
                      ],
                      "name": "foobar-terraform-elb"
                    }
            - name: example
              manifest: |-
                {
                  "allow_overwrite": true,
                  "name": "test.example.com",
                  "records": [
                    "${aws_route53_zone.example.name_servers[0]}",
                    "${aws_route53_zone.example.name_servers[1]}",
                    "${aws_route53_zone.example.name_servers[2]}",
                    "${aws_route53_zone.example.name_servers[3]}"
                  ],
                  "ttl": 172800,
                  "type": "NS",
                  "zone_id": "${aws_route53_zone.example.zone_id}"
                }
              references:
                zone_id: aws_route53_zone.example.zone_id
              dependencies:
                aws_route53_zone.example: |-
                    {
                      "name": "test.example.com"
                    }
        argumentDocs:
            alias: |-
                - (Optional) An alias block. Conflicts with ttl & records.
                Alias record documented below.
            allow_overwrite: '- (Optional) Allow creation of this record in Terraform to overwrite an existing record, if any. This does not affect the ability to update the record in Terraform and does not prevent other resources within Terraform or manual Route 53 changes outside Terraform from overwriting this record. false by default. This configuration is not recommended for most environments.'
            continent: '- A two-letter continent code. See http://docs.aws.amazon.com/Route53/latest/APIReference/API_GetGeoLocation.html for code details. Either continent or country must be specified.'
            country: '- A two-character country code or * to indicate a default resource record set.'
            evaluate_target_health: '- (Required) Set to true if you want Route 53 to determine whether to respond to DNS queries using this resource record set by checking the health of the resource record set. Some resources have special requirements, see related part of documentation.'
            failover_routing_policy: '- (Optional) A block indicating the routing behavior when associated health check fails. Conflicts with any other routing policy. Documented below.'
            fqdn: '- FQDN built using the zone domain and name.'
            geolocation_routing_policy: '- (Optional) A block indicating a routing policy based on the geolocation of the requestor. Conflicts with any other routing policy. Documented below.'
            health_check_id: '- (Optional) The health check the record should be associated with.'
            latency_routing_policy: '- (Optional) A block indicating a routing policy based on the latency between the requestor and an AWS region. Conflicts with any other routing policy. Documented below.'
            multivalue_answer_routing_policy: '- (Optional) Set to true to indicate a multivalue answer routing policy. Conflicts with any other routing policy.'
            name: '- (Required) The name of the record.'
            records: '- (Required for non-alias records) A string list of records. To specify a single record value longer than 255 characters such as a TXT record for DKIM, add \"\" inside the Terraform configuration string (e.g., "first255characters\"\"morecharacters").'
            region: '- (Required) An AWS region from which to measure latency. See http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy.html#routing-policy-latency'
            set_identifier: '- (Optional) Unique identifier to differentiate records with routing policies from one another. Required if using failover, geolocation, latency, multivalue_answer, or weighted routing policies documented below.'
            subdivision: '- (Optional) A subdivision code for a country.'
            ttl: '- (Required for non-alias records) The TTL of the record.'
            type: '- (Required) The record type. Valid values are A, AAAA, CAA, CNAME, DS, MX, NAPTR, NS, PTR, SOA, SPF, SRV and TXT.'
            weight: '- (Required) A numeric value indicating the relative weight of the record. See http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy.html#routing-policy-weighted.'
            weighted_routing_policy: '- (Optional) A block indicating a weighted routing policy. Conflicts with any other routing policy. Documented below.'
            zone_id: '- (Required) The ID of the hosted zone to contain this record.'
        importStatements: []
    aws_route53_resolver_dnssec_config:
        subCategory: Route 53 Resolver
        description: Provides a Route 53 Resolver DNSSEC config resource.
        name: aws_route53_resolver_dnssec_config
        title: aws_route53_resolver_dnssec_config
        examples:
            - name: example
              manifest: |-
                {
                  "resource_id": "${aws_vpc.example.id}"
                }
              references:
                resource_id: aws_vpc.example.id
              dependencies:
                aws_vpc.example: |-
                    {
                      "cidr_block": "10.0.0.0/16",
                      "enable_dns_hostnames": true,
                      "enable_dns_support": true
                    }
        argumentDocs:
            arn: '- The ARN for a configuration for DNSSEC validation.'
            id: '- The ID for a configuration for DNSSEC validation.'
            owner_id: '- The owner account ID of the virtual private cloud (VPC) for a configuration for DNSSEC validation.'
            resource_id: '- (Required) The ID of the virtual private cloud (VPC) that you''re updating the DNSSEC validation status for.'
            validation_status: '- The validation status for a DNSSEC configuration. The status can be one of the following: ENABLING, ENABLED, DISABLING and DISABLED.'
        importStatements: []
    aws_route53_resolver_endpoint:
        subCategory: Route 53 Resolver
        description: Provides a Route 53 Resolver endpoint resource.
        name: aws_route53_resolver_endpoint
        title: aws_route53_resolver_endpoint
        examples:
            - name: foo
              manifest: |-
                {
                  "direction": "INBOUND",
                  "ip_address": [
                    {
                      "subnet_id": "${aws_subnet.sn1.id}"
                    },
                    {
                      "ip": "10.0.64.4",
                      "subnet_id": "${aws_subnet.sn2.id}"
                    }
                  ],
                  "name": "foo",
                  "security_group_ids": [
                    "${aws_security_group.sg1.id}",
                    "${aws_security_group.sg2.id}"
                  ],
                  "tags": {
                    "Environment": "Prod"
                  }
                }
              references:
                ip_address.subnet_id: aws_subnet.sn2.id
        argumentDocs:
            arn: '- The ARN of the Route 53 Resolver endpoint.'
            create: '- (Default 10 minutes) Used for creating Route 53 Resolver endpoint'
            delete: '- (Default 10 minutes) Used for destroying Route 53 Resolver endpoint'
            direction: |-
                - (Required) The direction of DNS queries to or from the Route 53 Resolver endpoint.
                Valid values are INBOUND (resolver forwards DNS queries to the DNS service for a VPC from your network or another VPC)
                or OUTBOUND (resolver forwards DNS queries from the DNS service for a VPC to your network or another VPC).
            host_vpc_id: '- The ID of the VPC that you want to create the resolver endpoint in.'
            id: '- The ID of the Route 53 Resolver endpoint.'
            ip: '- (Optional) The IP address in the subnet that you want to use for DNS queries.'
            ip_address: |-
                - (Required) The subnets and IP addresses in your VPC that you want DNS queries to pass through on the way from your VPCs
                to your network (for outbound endpoints) or on the way from your network to your VPCs (for inbound endpoints). Described below.
            name: '- (Optional) The friendly name of the Route 53 Resolver endpoint.'
            security_group_ids: '- (Required) The ID of one or more security groups that you want to use to control access to this VPC.'
            subnet_id: '- (Required) The ID of the subnet that contains the IP address.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            update: '- (Default 10 minutes) Used for updating Route 53 Resolver endpoint'
        importStatements: []
    aws_route53_resolver_firewall_config:
        subCategory: Route 53 Resolver
        description: Provides a Route 53 Resolver DNS Firewall config resource.
        name: aws_route53_resolver_firewall_config
        title: aws_route53_resolver_firewall_config
        examples:
            - name: example
              manifest: |-
                {
                  "firewall_fail_open": "ENABLED",
                  "resource_id": "${aws_vpc.example.id}"
                }
              references:
                resource_id: aws_vpc.example.id
              dependencies:
                aws_vpc.example: |-
                    {
                      "cidr_block": "10.0.0.0/16",
                      "enable_dns_hostnames": true,
                      "enable_dns_support": true
                    }
        argumentDocs:
            firewall_fail_open: '- (Required) Determines how Route 53 Resolver handles queries during failures, for example when all traffic that is sent to DNS Firewall fails to receive a reply. By default, fail open is disabled, which means the failure mode is closed. This approach favors security over availability. DNS Firewall blocks queries that it is unable to evaluate properly. If you enable this option, the failure mode is open. This approach favors availability over security. DNS Firewall allows queries to proceed if it is unable to properly evaluate them. Valid values: ENABLED, DISABLED.'
            id: '- The ID of the firewall configuration.'
            owner_id: '- The AWS account ID of the owner of the VPC that this firewall configuration applies to.'
            resource_id: '- (Required) The ID of the VPC that the configuration is for.'
        importStatements: []
    aws_route53_resolver_firewall_domain_list:
        subCategory: Route 53 Resolver
        description: Provides a Route 53 Resolver DNS Firewall domain list resource.
        name: aws_route53_resolver_firewall_domain_list
        title: aws_route53_resolver_firewall_domain_list
        examples:
            - name: example
              manifest: |-
                {
                  "name": "example"
                }
        argumentDocs:
            arn: '- The ARN (Amazon Resource Name) of the domain list.'
            domains: '- (Optional) A array of domains for the firewall domain list.'
            id: '- The ID of the domain list.'
            name: '- (Required) A name that lets you identify the domain list, to manage and use it.'
            tags: '- (Optional) A map of tags to assign to the resource. f configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_route53_resolver_firewall_rule:
        subCategory: Route 53 Resolver
        description: Provides a Route 53 Resolver DNS Firewall rule resource.
        name: aws_route53_resolver_firewall_rule
        title: aws_route53_resolver_firewall_rule
        examples:
            - name: example
              manifest: |-
                {
                  "action": "BLOCK",
                  "block_override_dns_type": "CNAME",
                  "block_override_domain": "example.com",
                  "block_override_ttl": 1,
                  "block_response": "OVERRIDE",
                  "firewall_domain_list_id": "${aws_route53_resolver_firewall_domain_list.example.id}",
                  "firewall_rule_group_id": "${aws_route53_resolver_firewall_rule_group.example.id}",
                  "name": "example",
                  "priority": 100
                }
              references:
                firewall_domain_list_id: aws_route53_resolver_firewall_domain_list.example.id
                firewall_rule_group_id: aws_route53_resolver_firewall_rule_group.example.id
              dependencies:
                aws_route53_resolver_firewall_domain_list.example: |-
                    {
                      "domains": [
                        "example.com"
                      ],
                      "name": "example",
                      "tags": {}
                    }
                aws_route53_resolver_firewall_rule_group.example: |-
                    {
                      "name": "example",
                      "tags": {}
                    }
        argumentDocs:
            action: '- (Required) The action that DNS Firewall should take on a DNS query when it matches one of the domains in the rule''s domain list. Valid values: ALLOW, BLOCK, ALERT.'
            block_override_dns_type: '- (Required if block_response is OVERRIDE) The DNS record''s type. This determines the format of the record value that you provided in BlockOverrideDomain. Value values: CNAME.'
            block_override_domain: '- (Required if block_response is OVERRIDE) The custom DNS record to send back in response to the query.'
            block_override_ttl: '- (Required if block_response is OVERRIDE) The recommended amount of time, in seconds, for the DNS resolver or web browser to cache the provided override record. Minimum value of 0. Maximum value of 604800.'
            block_response: '- (Required if action is BLOCK) The way that you want DNS Firewall to block the request. Valid values: NODATA, NXDOMAIN, OVERRIDE.'
            firewall_domain_list_id: '- (Required) The ID of the domain list that you want to use in the rule.'
            firewall_rule_group_id: '- (Required) The unique identifier of the firewall rule group where you want to create the rule.'
            id: '- The ID of the rule.'
            name: '- (Required) A name that lets you identify the rule, to manage and use it.'
            priority: '- (Required) The setting that determines the processing order of the rule in the rule group. DNS Firewall processes the rules in a rule group by order of priority, starting from the lowest setting.'
        importStatements: []
    aws_route53_resolver_firewall_rule_group:
        subCategory: Route 53 Resolver
        description: Provides a Route 53 Resolver DNS Firewall rule group resource.
        name: aws_route53_resolver_firewall_rule_group
        title: aws_route53_resolver_firewall_rule_group
        examples:
            - name: example
              manifest: |-
                {
                  "name": "example"
                }
        argumentDocs:
            arn: '- The ARN (Amazon Resource Name) of the rule group.'
            id: '- The ID of the rule group.'
            name: '- (Required) A name that lets you identify the rule group, to manage and use it.'
            owner_id: '- The AWS account ID for the account that created the rule group. When a rule group is shared with your account, this is the account that has shared the rule group with you.'
            share_status: '- Whether the rule group is shared with other AWS accounts, or was shared with the current account by another AWS account. Sharing is configured through AWS Resource Access Manager (AWS RAM). Valid values: NOT_SHARED, SHARED_BY_ME, SHARED_WITH_ME'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_route53_resolver_firewall_rule_group_association:
        subCategory: Route 53 Resolver
        description: Provides a Route 53 Resolver DNS Firewall rule group association resource.
        name: aws_route53_resolver_firewall_rule_group_association
        title: aws_route53_resolver_firewall_rule_group_association
        examples:
            - name: example
              manifest: |-
                {
                  "firewall_rule_group_id": "${aws_route53_resolver_firewall_rule_group.example.id}",
                  "name": "example",
                  "priority": 100,
                  "vpc_id": "${aws_vpc.example.id}"
                }
              references:
                firewall_rule_group_id: aws_route53_resolver_firewall_rule_group.example.id
                vpc_id: aws_vpc.example.id
              dependencies:
                aws_route53_resolver_firewall_rule_group.example: |-
                    {
                      "name": "example"
                    }
        argumentDocs:
            arn: '- The ARN (Amazon Resource Name) of the firewall rule group association.'
            firewall_rule_group_id: '- (Required) The unique identifier of the firewall rule group.'
            id: '- The identifier for the association.'
            mutation_protection: '- (Optional) If enabled, this setting disallows modification or removal of the association, to help prevent against accidentally altering DNS firewall protections. Valid values: ENABLED, DISABLED.'
            name: '- (Required) A name that lets you identify the rule group association, to manage and use it.'
            priority: '- (Required) The setting that determines the processing order of the rule group among the rule groups that you associate with the specified VPC. DNS Firewall filters VPC traffic starting from the rule group with the lowest numeric priority setting.'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            vpc_id: '- (Required) The unique identifier of the VPC that you want to associate with the rule group.'
        importStatements: []
    aws_route53_resolver_query_log_config:
        subCategory: Route 53 Resolver
        description: Provides a Route 53 Resolver query logging configuration resource.
        name: aws_route53_resolver_query_log_config
        title: aws_route53_resolver_query_log_config
        examples:
            - name: example
              manifest: |-
                {
                  "destination_arn": "${aws_s3_bucket.example.arn}",
                  "name": "example",
                  "tags": {
                    "Environment": "Prod"
                  }
                }
              references:
                destination_arn: aws_s3_bucket.example.arn
        argumentDocs:
            arn: '- The ARN (Amazon Resource Name) of the Route 53 Resolver query logging configuration.'
            destination_arn: |-
                - (Required) The ARN of the resource that you want Route 53 Resolver to send query logs.
                You can send query logs to an S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream.
            id: '- The ID of the Route 53 Resolver query logging configuration.'
            name: '- (Required) The name of the Route 53 Resolver query logging configuration.'
            owner_id: '- The AWS account ID of the account that created the query logging configuration.'
            share_status: |-
                - An indication of whether the query logging configuration is shared with other AWS accounts, or was shared with the current account by another AWS account.
                Sharing is configured through AWS Resource Access Manager (AWS RAM).
                Values are NOT_SHARED, SHARED_BY_ME or SHARED_WITH_ME
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_route53_resolver_query_log_config_association:
        subCategory: Route 53 Resolver
        description: Provides a Route 53 Resolver query logging configuration association resource.
        name: aws_route53_resolver_query_log_config_association
        title: aws_route53_resolver_query_log_config_association
        examples:
            - name: example
              manifest: |-
                {
                  "resolver_query_log_config_id": "${aws_route53_resolver_query_log_config.example.id}",
                  "resource_id": "${aws_vpc.example.id}"
                }
              references:
                resolver_query_log_config_id: aws_route53_resolver_query_log_config.example.id
                resource_id: aws_vpc.example.id
        argumentDocs:
            id: -The ID of the Route 53 Resolver query logging configuration association.
            resolver_query_log_config_id: '- (Required) The ID of the Route 53 Resolver query logging configuration that you want to associate a VPC with.'
            resource_id: '- (Required) The ID of a VPC that you want this query logging configuration to log queries for.'
        importStatements: []
    aws_route53_resolver_rule:
        subCategory: Route 53 Resolver
        description: Provides a Route53 Resolver rule.
        name: aws_route53_resolver_rule
        title: aws_route53_resolver_rule
        examples:
            - name: sys
              manifest: |-
                {
                  "domain_name": "subdomain.example.com",
                  "rule_type": "SYSTEM"
                }
            - name: fwd
              manifest: |-
                {
                  "domain_name": "example.com",
                  "name": "example",
                  "resolver_endpoint_id": "${aws_route53_resolver_endpoint.foo.id}",
                  "rule_type": "FORWARD",
                  "tags": {
                    "Environment": "Prod"
                  },
                  "target_ip": [
                    {
                      "ip": "123.45.67.89"
                    }
                  ]
                }
              references:
                resolver_endpoint_id: aws_route53_resolver_endpoint.foo.id
        argumentDocs:
            arn: '- The ARN (Amazon Resource Name) for the resolver rule.'
            domain_name: '- (Required) DNS queries for this domain name are forwarded to the IP addresses that are specified using target_ip.'
            id: '- The ID of the resolver rule.'
            ip: '- (Required) One IP address that you want to forward DNS queries to. You can specify only IPv4 addresses.'
            name: '- (Optional) A friendly name that lets you easily find a rule in the Resolver dashboard in the Route 53 console.'
            owner_id: '- When a rule is shared with another AWS account, the account ID of the account that the rule is shared with.'
            port: '- (Optional) The port at ip that you want to forward DNS queries to. Default value is 53'
            resolver_endpoint_id: |-
                (Optional) The ID of the outbound resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify using target_ip.
                This argument should only be specified for FORWARD type rules.
            rule_type: '- (Required) The rule type. Valid values are FORWARD, SYSTEM and RECURSIVE.'
            share_status: |-
                - Whether the rules is shared and, if so, whether the current account is sharing the rule with another account, or another account is sharing the rule with the current account.
                Values are NOT_SHARED, SHARED_BY_ME or SHARED_WITH_ME
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            target_ip: |-
                - (Optional) Configuration block(s) indicating the IPs that you want Resolver to forward DNS queries to (documented below).
                This argument should only be specified for FORWARD type rules.
        importStatements: []
    aws_route53_resolver_rule_association:
        subCategory: Route 53 Resolver
        description: Provides a Route53 Resolver rule association.
        name: aws_route53_resolver_rule_association
        title: aws_route53_resolver_rule_association
        examples:
            - name: example
              manifest: |-
                {
                  "resolver_rule_id": "${aws_route53_resolver_rule.sys.id}",
                  "vpc_id": "${aws_vpc.foo.id}"
                }
              references:
                resolver_rule_id: aws_route53_resolver_rule.sys.id
                vpc_id: aws_vpc.foo.id
        argumentDocs:
            id: '- The ID of the resolver rule association.'
            name: '- (Optional) A name for the association that you''re creating between a resolver rule and a VPC.'
            resolver_rule_id: '- (Required) The ID of the resolver rule that you want to associate with the VPC.'
            vpc_id: '- (Required) The ID of the VPC that you want to associate the resolver rule with.'
        importStatements: []
    aws_route53_traffic_policy:
        subCategory: Route 53
        description: Manages a Route53 Traffic Policy
        name: aws_route53_traffic_policy
        title: aws_route53_traffic_policy
        examples:
            - name: example
              manifest: |-
                {
                  "comment": "example comment",
                  "document": "{\n  \"AWSPolicyFormatVersion\": \"2015-10-01\",\n  \"RecordType\": \"A\",\n  \"Endpoints\": {\n    \"endpoint-start-NkPh\": {\n      \"Type\": \"value\",\n      \"Value\": \"10.0.0.2\"\n    }\n  },\n  \"StartEndpoint\": \"endpoint-start-NkPh\"\n}\n",
                  "name": "example"
                }
        argumentDocs:
            comment: '- (Optional) Comment for the traffic policy.'
            document: '- (Required) Policy document. This is a JSON formatted string. For more information about building Route53 traffic policy documents, see the AWS Route53 Traffic Policy document format'
            id: '- ID of the traffic policy'
            name: '- (Required) Name of the traffic policy.'
            type: '- DNS type of the resource record sets that Amazon Route 53 creates when you use a traffic policy to create a traffic policy instance.'
            version: '- Version number of the traffic policy. This value is automatically incremented by AWS after each update of this resource.'
        importStatements: []
    aws_route53_traffic_policy_instance:
        subCategory: Route 53
        description: Provides a Route53 traffic policy instance resource.
        name: aws_route53_traffic_policy_instance
        title: aws_route53_traffic_policy_instance
        examples:
            - name: test
              manifest: |-
                {
                  "hosted_zone_id": "Z033120931TAQO548OGJC",
                  "name": "test.example.com",
                  "traffic_policy_id": "b3gb108f-ea6f-45a5-baab-9d112d8b4037",
                  "traffic_policy_version": 1,
                  "ttl": 360
                }
        argumentDocs:
            hosted_zone_id: '- (Required) ID of the hosted zone that you want Amazon Route 53 to create resource record sets in by using the configuration in a traffic policy.'
            id: '- ID of traffic policy instance.'
            name: '- (Required) Domain name for which Amazon Route 53 responds to DNS queries by using the resource record sets that Route 53 creates for this traffic policy instance.'
            traffic_policy_id: '- (Required) ID of the traffic policy that you want to use to create resource record sets in the specified hosted zone.'
            traffic_policy_version: '- (Required) Version of the traffic policy'
            ttl: '- (Required) TTL that you want Amazon Route 53 to assign to all the resource record sets that it creates in the specified hosted zone.'
        importStatements: []
    aws_route53_vpc_association_authorization:
        subCategory: Route 53
        description: Authorizes a VPC in a different account to be associated with a local Route53 Hosted Zone
        name: aws_route53_vpc_association_authorization
        title: aws_route53_vpc_association_authorization
        examples:
            - name: example
              manifest: |-
                {
                  "vpc_id": "${aws_vpc.alternate.id}",
                  "zone_id": "${aws_route53_zone.example.id}"
                }
              references:
                vpc_id: aws_vpc.alternate.id
                zone_id: aws_route53_zone.example.id
              dependencies:
                aws_route53_zone.example: |-
                    {
                      "lifecycle": [
                        {
                          "ignore_changes": [
                            "${vpc}"
                          ]
                        }
                      ],
                      "name": "example.com",
                      "vpc": [
                        {
                          "vpc_id": "${aws_vpc.example.id}"
                        }
                      ]
                    }
                aws_route53_zone_association.example: |-
                    {
                      "provider": "aws.alternate",
                      "vpc_id": "${aws_route53_vpc_association_authorization.example.vpc_id}",
                      "zone_id": "${aws_route53_vpc_association_authorization.example.zone_id}"
                    }
                aws_vpc.alternate: |-
                    {
                      "cidr_block": "10.7.0.0/16",
                      "enable_dns_hostnames": true,
                      "enable_dns_support": true,
                      "provider": "aws.alternate"
                    }
                aws_vpc.example: |-
                    {
                      "cidr_block": "10.6.0.0/16",
                      "enable_dns_hostnames": true,
                      "enable_dns_support": true
                    }
        argumentDocs:
            id: '- The calculated unique identifier for the association.'
            vpc_id: '- (Required) The VPC to authorize for association with the private hosted zone.'
            vpc_region: '- (Optional) The VPC''s region. Defaults to the region of the AWS provider.'
            zone_id: '- (Required) The ID of the private hosted zone that you want to authorize associating a VPC with.'
        importStatements: []
    aws_route53_zone:
        subCategory: Route 53
        description: Manages a Route53 Hosted Zone
        name: aws_route53_zone
        title: aws_route53_zone
        examples:
            - name: primary
              manifest: |-
                {
                  "name": "example.com"
                }
            - name: main
              manifest: |-
                {
                  "name": "example.com"
                }
              dependencies:
                aws_route53_record.dev-ns: |-
                    {
                      "name": "dev.example.com",
                      "records": "${aws_route53_zone.dev.name_servers}",
                      "ttl": "30",
                      "type": "NS",
                      "zone_id": "${aws_route53_zone.main.zone_id}"
                    }
            - name: dev
              manifest: |-
                {
                  "name": "dev.example.com",
                  "tags": {
                    "Environment": "dev"
                  }
                }
              dependencies:
                aws_route53_record.dev-ns: |-
                    {
                      "name": "dev.example.com",
                      "records": "${aws_route53_zone.dev.name_servers}",
                      "ttl": "30",
                      "type": "NS",
                      "zone_id": "${aws_route53_zone.main.zone_id}"
                    }
            - name: private
              manifest: |-
                {
                  "name": "example.com",
                  "vpc": [
                    {
                      "vpc_id": "${aws_vpc.example.id}"
                    }
                  ]
                }
              references:
                vpc.vpc_id: aws_vpc.example.id
        argumentDocs:
            arn: '- The Amazon Resource Name (ARN) of the Hosted Zone.'
            comment: '- (Optional) A comment for the hosted zone. Defaults to ''Managed by Terraform''.'
            delegation_set_id: '- (Optional) The ID of the reusable delegation set whose NS records you want to assign to the hosted zone. Conflicts with vpc as delegation sets can only be used for public zones.'
            force_destroy: '- (Optional) Whether to destroy all records (possibly managed outside of Terraform) in the zone when destroying the zone.'
            name: '- (Required) This is the name of the hosted zone.'
            name_servers: |-
                - A list of name servers in associated (or default) delegation set.
                Find more about delegation sets in AWS docs.
            tags: '- (Optional) A map of tags to assign to the zone. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            vpc: '- (Optional) Configuration block(s) specifying VPC(s) to associate with a private hosted zone. Conflicts with the delegation_set_id argument in this resource and any aws_route53_zone_association resource specifying the same zone ID. Detailed below.'
            vpc_id: '- (Required) ID of the VPC to associate.'
            vpc_region: '- (Optional) Region of the VPC to associate. Defaults to AWS provider region.'
            zone_id: '- The Hosted Zone ID. This can be referenced by zone records.'
        importStatements: []
    aws_route53_zone_association:
        subCategory: Route 53
        description: Manages a Route53 Hosted Zone VPC association
        name: aws_route53_zone_association
        title: aws_route53_zone_association
        examples:
            - name: secondary
              manifest: |-
                {
                  "vpc_id": "${aws_vpc.secondary.id}",
                  "zone_id": "${aws_route53_zone.example.zone_id}"
                }
              references:
                vpc_id: aws_vpc.secondary.id
                zone_id: aws_route53_zone.example.zone_id
              dependencies:
                aws_route53_zone.example: |-
                    {
                      "lifecycle": [
                        {
                          "ignore_changes": [
                            "${vpc}"
                          ]
                        }
                      ],
                      "name": "example.com",
                      "vpc": [
                        {
                          "vpc_id": "${aws_vpc.primary.id}"
                        }
                      ]
                    }
                aws_vpc.primary: |-
                    {
                      "cidr_block": "10.6.0.0/16",
                      "enable_dns_hostnames": true,
                      "enable_dns_support": true
                    }
                aws_vpc.secondary: |-
                    {
                      "cidr_block": "10.7.0.0/16",
                      "enable_dns_hostnames": true,
                      "enable_dns_support": true
                    }
        argumentDocs:
            id: '- The calculated unique identifier for the association.'
            owning_account: '- The account ID of the account that created the hosted zone.'
            vpc_id: '- (Required) The VPC to associate with the private hosted zone.'
            vpc_region: '- (Optional) The VPC''s region. Defaults to the region of the AWS provider.'
            zone_id: '- (Required) The private hosted zone to associate.'
        importStatements: []
    aws_rum_app_monitor:
        subCategory: CloudWatch RUM
        description: Provides a CloudWatch RUM App Monitor resource.
        name: aws_rum_app_monitor
        title: aws_rum_app_monitor
        examples:
            - name: example
              manifest: |-
                {
                  "domain": "localhost",
                  "name": "example"
                }
        argumentDocs:
            allow_cookies: '- (Optional) If you set this to true, RUM web client sets two cookies, a session cookie  and a user cookie. The cookies allow the RUM web client to collect data relating to the number of users an application has and the behavior of the application across a sequence of events. Cookies are stored in the top-level domain of the current page.'
            arn: '- The Amazon Resource Name (ARN) specifying the app monitor.'
            cw_log_enabled: '- (Optional) Data collected by RUM is kept by RUM for 30 days and then deleted. This parameter  specifies whether RUM sends a copy of this telemetry data to Amazon CloudWatch Logs in your account. This enables you to keep the telemetry data for more than 30 days, but it does incur Amazon CloudWatch Logs charges. Default value is false.'
            cw_log_group: '- The name of the log group where the copies are stored.'
            domain: '- (Required) The top-level internet domain name for which your application has administrative authority.'
            enable_xray: '- (Optional) If you set this to true, RUM enables X-Ray tracing for the user sessions  that RUM samples. RUM adds an X-Ray trace header to allowed HTTP requests. It also records an X-Ray segment for allowed HTTP requests.'
            excluded_pages: '- (Optional) A list of URLs in your website or application to exclude from RUM data collection.'
            favorite_pages: '- (Optional) A list of pages in the CloudWatch RUM console that are to be displayed with a "favorite" icon.'
            guest_role_arn: '- (Optional) The ARN of the guest IAM role that is attached to the Amazon Cognito identity pool that is used to authorize the sending of data to RUM.'
            id: '- TThe Amazon Resource Name (ARN) specifying the app monitor.'
            identity_pool_id: '- (Optional) The ID of the Amazon Cognito identity pool that is used to authorize the sending of data to RUM.'
            included_pages: '- (Optional)  If this app monitor is to collect data from only certain pages in your application, this structure lists those pages.'
            name: '- (Required) The name of the log stream.'
            session_sample_rate: '- (Optional) Specifies the percentage of user sessions to use for RUM data collection. Choosing a higher percentage gives you more data but also incurs more costs. The number you specify is the percentage of user sessions that will be used. Default value is 0.1.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            telemetries: '- (Optional) An array that lists the types of telemetry data that this app monitor is to collect. Valid values are errors, performance, and http.'
        importStatements: []
    aws_s3control_access_point_policy:
        subCategory: S3 Control
        description: Provides a resource to manage an S3 Access Point resource policy.
        name: aws_s3control_access_point_policy
        title: aws_s3control_access_point_policy
        examples:
            - name: example
              manifest: |-
                {
                  "access_point_arn": "${aws_s3_access_point.example.arn}",
                  "policy": "${jsonencode({\n    Version = \"2008-10-17\"\n    Statement = [{\n      Effect = \"Allow\"\n      Action = \"s3:GetObjectTagging\"\n      Principal = {\n        AWS = \"*\"\n      }\n      Resource = \"${aws_s3_access_point.example.arn}/object/*\"\n    }]\n  })}"
                }
              references:
                access_point_arn: aws_s3_access_point.example.arn
              dependencies:
                aws_s3_access_point.example: |-
                    {
                      "bucket": "${aws_s3_bucket.example.id}",
                      "lifecycle": [
                        {
                          "ignore_changes": [
                            "${policy}"
                          ]
                        }
                      ],
                      "name": "example",
                      "public_access_block_configuration": [
                        {
                          "block_public_acls": true,
                          "block_public_policy": false,
                          "ignore_public_acls": true,
                          "restrict_public_buckets": false
                        }
                      ]
                    }
                aws_s3_bucket.example: |-
                    {
                      "bucket": "example"
                    }
        argumentDocs:
            access_point_arn: '- (Required) The ARN of the access point that you want to associate with the specified policy.'
            has_public_access_policy: '- Indicates whether this access point currently has a policy that allows public access.'
            id: '- The AWS account ID and access point name separated by a colon (:).'
            policy: '- (Required) The policy that you want to apply to the specified access point.'
        importStatements: []
    aws_s3control_bucket:
        subCategory: S3 Control
        description: Manages an S3 Control Bucket.
        name: aws_s3control_bucket
        title: aws_s3control_bucket
        examples:
            - name: example
              manifest: |-
                {
                  "bucket": "example",
                  "outpost_id": "${data.aws_outposts_outpost.example.id}"
                }
              references:
                outpost_id: data.aws_outposts_outpost.example.id
        argumentDocs:
            arn: '- Amazon Resource Name (ARN) of the bucket.'
            bucket: '- (Required) Name of the bucket.'
            creation_date: '- UTC creation date in RFC3339 format.'
            id: '- Amazon Resource Name (ARN) of the bucket.'
            outpost_id: '- (Required) Identifier of the Outpost to contain this bucket.'
            public_access_block_enabled: '- Boolean whether Public Access Block is enabled.'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_s3control_bucket_lifecycle_configuration:
        subCategory: S3 Control
        description: Manages an S3 Control Bucket Lifecycle Configuration.
        name: aws_s3control_bucket_lifecycle_configuration
        title: aws_s3control_bucket_lifecycle_configuration
        examples:
            - name: example
              manifest: |-
                {
                  "bucket": "${aws_s3control_bucket.example.arn}",
                  "rule": [
                    {
                      "expiration": [
                        {
                          "days": 365
                        }
                      ],
                      "filter": [
                        {
                          "prefix": "logs/"
                        }
                      ],
                      "id": "logs"
                    },
                    {
                      "expiration": [
                        {
                          "days": 7
                        }
                      ],
                      "filter": [
                        {
                          "prefix": "temp/"
                        }
                      ],
                      "id": "temp"
                    }
                  ]
                }
              references:
                bucket: aws_s3control_bucket.example.arn
        argumentDocs:
            abort_incomplete_multipart_upload: '- (Optional) Configuration block containing settings for abort incomplete multipart upload.'
            bucket: '- (Required) Amazon Resource Name (ARN) of the bucket.'
            date: '- (Optional) Date the object is to be deleted. Should be in YYYY-MM-DD date format, e.g., 2020-09-30.'
            days: '- (Optional) Number of days before the object is to be deleted.'
            days_after_initiation: '- (Required) Number of days after which Amazon S3 aborts an incomplete multipart upload.'
            expiration: '- (Optional) Configuration block containing settings for expiration of objects.'
            expired_object_delete_marker: '- (Optional) Enable to remove a delete marker with no noncurrent versions. Cannot be specified with date or days.'
            filter: '- (Optional) Configuration block containing settings for filtering.'
            id: '- (Required) Unique identifier for the rule.'
            prefix: '- (Optional) Object prefix for rule filtering.'
            rule: '- (Required) Configuration block(s) containing lifecycle rules for the bucket.'
            status: '- (Optional) Status of the rule. Valid values: Enabled and Disabled. Defaults to Enabled.'
            tags: '- (Optional) Key-value map of object tags for rule filtering.'
        importStatements: []
    aws_s3control_bucket_policy:
        subCategory: S3 Control
        description: Manages an S3 Control Bucket Policy.
        name: aws_s3control_bucket_policy
        title: aws_s3control_bucket_policy
        examples:
            - name: example
              manifest: |-
                {
                  "bucket": "${aws_s3control_bucket.example.arn}",
                  "policy": "${jsonencode({\n    Id = \"testBucketPolicy\"\n    Statement = [\n      {\n        Action = \"s3-outposts:PutBucketLifecycleConfiguration\"\n        Effect = \"Deny\"\n        Principal = {\n          AWS = \"*\"\n        }\n        Resource = aws_s3control_bucket.example.arn\n        Sid      = \"statement1\"\n      }\n    ]\n    Version = \"2012-10-17\"\n  })}"
                }
              references:
                bucket: aws_s3control_bucket.example.arn
        argumentDocs:
            bucket: '- (Required) Amazon Resource Name (ARN) of the bucket.'
            id: '- Amazon Resource Name (ARN) of the bucket.'
            policy: '- (Required) JSON string of the resource policy. For more information about building AWS IAM policy documents with Terraform, see the AWS IAM Policy Document Guide.'
        importStatements: []
    aws_s3control_multi_region_access_point:
        subCategory: S3 Control
        description: Provides a resource to manage an S3 Multi-Region Access Point associated with specified buckets.
        name: aws_s3control_multi_region_access_point
        title: aws_s3control_multi_region_access_point
        examples:
            - name: example
              manifest: |-
                {
                  "details": [
                    {
                      "name": "example",
                      "region": [
                        {
                          "bucket": "${aws_s3_bucket.foo_bucket.id}"
                        },
                        {
                          "bucket": "${aws_s3_bucket.bar_bucket.id}"
                        }
                      ]
                    }
                  ]
                }
              references:
                details.region.bucket: aws_s3_bucket.bar_bucket.id
              dependencies:
                aws_s3_bucket.bar_bucket: |-
                    {
                      "bucket": "example-bucket-bar",
                      "provider": "${aws.secondary_region}"
                    }
                aws_s3_bucket.foo_bucket: |-
                    {
                      "bucket": "example-bucket-foo",
                      "provider": "${aws.primary_region}"
                    }
        argumentDocs:
            account_id: '- (Optional) The AWS account ID for the owner of the buckets for which you want to create a Multi-Region Access Point. Defaults to automatically determined account ID of the Terraform AWS provider.'
            alias: '- The alias for the Multi-Region Access Point.'
            arn: '- Amazon Resource Name (ARN) of the Multi-Region Access Point.'
            details: '- (Required) A configuration block containing details about the Multi-Region Access Point. See Details Configuration Block below for more details'
            details.name: '- (Required) The name of the Multi-Region Access Point.'
            details.public_access_block: '- (Optional) Configuration block to manage the PublicAccessBlock configuration that you want to apply to this Multi-Region Access Point. You can enable the configuration options in any combination. See Public Access Block Configuration below for more details.'
            details.public_access_block.block_public_acls: '- (Optional) Whether Amazon S3 should block public ACLs for buckets in this account. Defaults to true. Enabling this setting does not affect existing policies or ACLs. When set to true causes the following behavior:'
            details.public_access_block.block_public_policy: '- (Optional) Whether Amazon S3 should block public bucket policies for buckets in this account. Defaults to true. Enabling this setting does not affect existing bucket policies. When set to true causes Amazon S3 to:'
            details.public_access_block.ignore_public_acls: '- (Optional) Whether Amazon S3 should ignore public ACLs for buckets in this account. Defaults to true. Enabling this setting does not affect the persistence of any existing ACLs and doesn''t prevent new public ACLs from being set. When set to true causes Amazon S3 to:'
            details.public_access_block.restrict_public_buckets: '- (Optional) Whether Amazon S3 should restrict public bucket policies for buckets in this account. Defaults to true. Enabling this setting does not affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked. When set to true:'
            details.region: '- (Required) The Region configuration block to specify the bucket associated with the Multi-Region Access Point. See Region Configuration below for more details.'
            domain_name: '- The DNS domain name of the S3 Multi-Region Access Point in the format alias.accesspoint.s3-global.amazonaws.com. For more information, see the documentation on Multi-Region Access Point Requests.'
            id: '- The AWS account ID and access point name separated by a colon (:).'
            region.bucket: '- (Required) The name of the associated bucket for the Region.'
            status: '- The current status of the Multi-Region Access Point. One of: READY, INCONSISTENT_ACROSS_REGIONS, CREATING, PARTIALLY_CREATED, PARTIALLY_DELETED, DELETING.'
            timeouts.create: '- (Default 60 minutes) Used when creating the Multi-Region Access Point.'
            timeouts.delete: '- (Default 15 minutes) Used when deleting the Multi-Region Access Point.'
        importStatements: []
    aws_s3control_multi_region_access_point_policy:
        subCategory: S3 Control
        description: Provides a resource to manage an S3 Multi-Region Access Point access control policy.
        name: aws_s3control_multi_region_access_point_policy
        title: aws_s3control_multi_region_access_point_policy
        examples:
            - name: example
              manifest: |-
                {
                  "details": [
                    {
                      "name": "${element(split(\":\", aws_s3control_multi_region_access_point.example.id), 1)}",
                      "policy": "${jsonencode({\n      \"Version\" : \"2012-10-17\",\n      \"Statement\" : [\n        {\n          \"Sid\" : \"Example\",\n          \"Effect\" : \"Allow\",\n          \"Principal\" : {\n            \"AWS\" : data.aws_caller_identity.current.account_id\n          },\n          \"Action\" : [\"s3:GetObject\", \"s3:PutObject\"],\n          \"Resource\" : \"arn:${data.aws_partition.current.partition}:s3::${data.aws_caller_identity.current.account_id}:accesspoint/${aws_s3control_multi_region_access_point.example.alias}/object/*\"\n        }\n      ]\n    })}"
                    }
                  ]
                }
              dependencies:
                aws_s3control_multi_region_access_point.example: |-
                    {
                      "details": [
                        {
                          "name": "example",
                          "region": [
                            {
                              "bucket": "${aws_s3_bucket.foo_bucket.id}"
                            }
                          ]
                        }
                      ]
                    }
                aws_s3_bucket.foo_bucket: |-
                    {
                      "bucket": "example-bucket-foo"
                    }
        argumentDocs:
            account_id: '- (Optional) The AWS account ID for the owner of the Multi-Region Access Point. Defaults to automatically determined account ID of the Terraform AWS provider.'
            details: '- (Required) A configuration block containing details about the policy for the Multi-Region Access Point. See Details Configuration Block below for more details'
            details.name: '- (Required) The name of the Multi-Region Access Point.'
            details.policy: '- (Required) A valid JSON document that specifies the policy that you want to associate with this Multi-Region Access Point. Once applied, the policy can be edited, but not deleted. For more information, see the documentation on Multi-Region Access Point Permissions.'
            established: '- The last established policy for the Multi-Region Access Point.'
            id: '- The AWS account ID and access point name separated by a colon (:).'
            proposed: '- The proposed policy for the Multi-Region Access Point.'
            timeouts.create: '- (Default 15 minutes) Used when creating the Multi-Region Access Point Policy.'
            timeouts.update: '- (Default 15 minutes) Used when updating the Multi-Region Access Point Policy.'
        importStatements: []
    aws_s3control_object_lambda_access_point:
        subCategory: S3 Control
        description: Provides a resource to manage an S3 Object Lambda Access Point.
        name: aws_s3control_object_lambda_access_point
        title: aws_s3control_object_lambda_access_point
        examples:
            - name: example
              manifest: |-
                {
                  "configuration": [
                    {
                      "supporting_access_point": "${aws_s3_access_point.example.arn}",
                      "transformation_configuration": [
                        {
                          "actions": [
                            "GetObject"
                          ],
                          "content_transformation": [
                            {
                              "aws_lambda": [
                                {
                                  "function_arn": "${aws_lambda_function.example.arn}"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "name": "example"
                }
              references:
                configuration.supporting_access_point: aws_s3_access_point.example.arn
                configuration.transformation_configuration.content_transformation.aws_lambda.function_arn: aws_lambda_function.example.arn
              dependencies:
                aws_s3_access_point.example: |-
                    {
                      "bucket": "${aws_s3_bucket.example.id}",
                      "name": "example"
                    }
                aws_s3_bucket.example: |-
                    {
                      "bucket": "example"
                    }
        argumentDocs:
            account_id: '- (Optional) The AWS account ID for the owner of the bucket for which you want to create an Object Lambda Access Point. Defaults to automatically determined account ID of the Terraform AWS provider.'
            arn: '- Amazon Resource Name (ARN) of the Object Lambda Access Point.'
            configuration: '- (Required) A configuration block containing details about the Object Lambda Access Point. See Configuration below for more details.'
            configuration.allowed_features: '- (Optional) Allowed features. Valid values: GetObject-Range, GetObject-PartNumber.'
            configuration.cloud_watch_metrics_enabled: '- (Optional) Whether or not the CloudWatch metrics configuration is enabled.'
            configuration.supporting_access_point: '- (Required) Standard access point associated with the Object Lambda Access Point.'
            configuration.transformation_configuration: '- (Required) List of transformation configurations for the Object Lambda Access Point. See Transformation Configuration below for more details.'
            configuration.transformation_configuration.actions: '- (Required) The actions of an Object Lambda Access Point configuration. Valid values: GetObject.'
            configuration.transformation_configuration.content_transformation: '- (Required) The content transformation of an Object Lambda Access Point configuration. See Content Transformation below for more details.'
            configuration.transformation_configuration.content_transformation.aws_lambda: '- (Required) Configuration for an AWS Lambda function. See AWS Lambda below for more details.'
            configuration.transformation_configuration.content_transformation.aws_lambda.function_arn: '- (Required) The Amazon Resource Name (ARN) of the AWS Lambda function.'
            configuration.transformation_configuration.content_transformation.aws_lambda.function_payload: '- (Optional) Additional JSON that provides supplemental data to the Lambda function used to transform objects.'
            id: '- The AWS account ID and access point name separated by a colon (:).'
            name: '- (Required) The name for this Object Lambda Access Point.'
        importStatements: []
    aws_s3control_object_lambda_access_point_policy:
        subCategory: S3 Control
        description: Provides a resource to manage an S3 Object Lambda Access Point resource policy.
        name: aws_s3control_object_lambda_access_point_policy
        title: aws_s3control_object_lambda_access_point_policy
        examples:
            - name: example
              manifest: |-
                {
                  "name": "${aws_s3control_object_lambda_access_point.example.name}",
                  "policy": "${jsonencode({\n    Version = \"2008-10-17\"\n    Statement = [{\n      Effect = \"Allow\"\n      Action = \"s3-object-lambda:GetObject\"\n      Principal = {\n        AWS = data.aws_caller_identity.current.account_id\n      }\n      Resource = aws_s3control_object_lambda_access_point.example.arn\n    }]\n  })}"
                }
              references:
                name: aws_s3control_object_lambda_access_point.example.name
              dependencies:
                aws_s3control_object_lambda_access_point.example: |-
                    {
                      "configuration": [
                        {
                          "supporting_access_point": "${aws_s3_access_point.example.arn}",
                          "transformation_configuration": [
                            {
                              "actions": [
                                "GetObject"
                              ],
                              "content_transformation": [
                                {
                                  "aws_lambda": [
                                    {
                                      "function_arn": "${aws_lambda_function.example.arn}"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "name": "example"
                    }
                aws_s3_access_point.example: |-
                    {
                      "bucket": "${aws_s3_bucket.example.id}",
                      "name": "example"
                    }
                aws_s3_bucket.example: |-
                    {
                      "bucket": "example"
                    }
        argumentDocs:
            account_id: '- (Optional) The AWS account ID for the account that owns the Object Lambda Access Point. Defaults to automatically determined account ID of the Terraform AWS provider.'
            has_public_access_policy: '- Indicates whether this access point currently has a policy that allows public access.'
            id: '- The AWS account ID and access point name separated by a colon (:).'
            name: '- (Required) The name of the Object Lambda Access Point.'
            policy: '- (Required) The Object Lambda Access Point resource policy document.'
        importStatements: []
    aws_s3outposts_endpoint:
        subCategory: S3 on Outposts
        description: Manages an S3 Outposts Endpoint.
        name: aws_s3outposts_endpoint
        title: aws_s3outposts_endpoint
        examples:
            - name: example
              manifest: |-
                {
                  "outpost_id": "${data.aws_outposts_outpost.example.id}",
                  "security_group_id": "${aws_security_group.example.id}",
                  "subnet_id": "${aws_subnet.example.id}"
                }
              references:
                outpost_id: data.aws_outposts_outpost.example.id
                security_group_id: aws_security_group.example.id
                subnet_id: aws_subnet.example.id
        argumentDocs:
            arn: '- Amazon Resource Name (ARN) of the endpoint.'
            cidr_block: '- VPC CIDR block of the endpoint.'
            creation_time: '- UTC creation time in RFC3339 format.'
            id: '- Amazon Resource Name (ARN) of the endpoint.'
            network_interface_id: '- Identifier of the Elastic Network Interface (ENI).'
            network_interfaces: '- Set of nested attributes for associated Elastic Network Interfaces (ENIs).'
            outpost_id: '- (Required) Identifier of the Outpost to contain this endpoint.'
            security_group_id: '- (Required) Identifier of the EC2 Security Group.'
            subnet_id: '- (Required) Identifier of the EC2 Subnet.'
        importStatements: []
    aws_s3_access_point:
        subCategory: S3 Control
        description: Manages an S3 Access Point.
        name: aws_s3_access_point
        title: aws_s3_access_point
        examples:
            - name: example
              manifest: |-
                {
                  "bucket": "${aws_s3_bucket.example.id}",
                  "name": "example"
                }
              references:
                bucket: aws_s3_bucket.example.id
              dependencies:
                aws_s3_bucket.example: |-
                    {
                      "bucket": "example"
                    }
            - name: example
              manifest: |-
                {
                  "bucket": "${aws_s3control_bucket.example.arn}",
                  "name": "example",
                  "vpc_configuration": [
                    {
                      "vpc_id": "${aws_vpc.example.id}"
                    }
                  ]
                }
              references:
                bucket: aws_s3control_bucket.example.arn
                vpc_configuration.vpc_id: aws_vpc.example.id
              dependencies:
                aws_s3control_bucket.example: |-
                    {
                      "bucket": "example"
                    }
                aws_vpc.example: |-
                    {
                      "cidr_block": "10.0.0.0/16"
                    }
        argumentDocs:
            account_id: '- (Optional) AWS account ID for the owner of the bucket for which you want to create an access point. Defaults to automatically determined account ID of the Terraform AWS provider.'
            alias: '- The alias of the S3 Access Point.'
            arn: '- Amazon Resource Name (ARN) of the S3 Access Point.'
            bucket: '- (Required) Name of an AWS Partition S3 Bucket or the Amazon Resource Name (ARN) of S3 on Outposts Bucket that you want to associate this access point with.'
            domain_name: |-
                - The DNS domain name of the S3 Access Point in the format name-account_id.s3-accesspoint.region.amazonaws.com.
                Note: S3 access points only support secure access by HTTPS. HTTP isn't supported.
            endpoints: '- The VPC endpoints for the S3 Access Point.'
            has_public_access_policy: '- Indicates whether this access point currently has a policy that allows public access.'
            id: '- For Access Point of an AWS Partition S3 Bucket, the AWS account ID and access point name separated by a colon (:). For S3 on Outposts Bucket, the Amazon Resource Name (ARN) of the Access Point.'
            name: '- (Required) Name you want to assign to this access point.'
            network_origin: '- Indicates whether this access point allows access from the public Internet. Values are VPC (the access point doesn''t allow access from the public Internet) and Internet (the access point allows access from the public Internet, subject to the access point and bucket access policies).'
            policy: '- (Optional) Valid JSON document that specifies the policy that you want to apply to this access point. Removing policy from your configuration or setting policy to null or an empty string (i.e., policy = "") will not delete the policy since it could have been set by aws_s3control_access_point_policy. To remove the policy, set it to "{}" (an empty JSON document).'
            public_access_block_configuration: '- (Optional) Configuration block to manage the PublicAccessBlock configuration that you want to apply to this Amazon S3 bucket. You can enable the configuration options in any combination. Detailed below.'
            public_access_block_configuration.block_public_acls: '- (Optional) Whether Amazon S3 should block public ACLs for buckets in this account. Defaults to true. Enabling this setting does not affect existing policies or ACLs. When set to true causes the following behavior:'
            public_access_block_configuration.block_public_policy: '- (Optional) Whether Amazon S3 should block public bucket policies for buckets in this account. Defaults to true. Enabling this setting does not affect existing bucket policies. When set to true causes Amazon S3 to:'
            public_access_block_configuration.ignore_public_acls: '- (Optional) Whether Amazon S3 should ignore public ACLs for buckets in this account. Defaults to true. Enabling this setting does not affect the persistence of any existing ACLs and doesn''t prevent new public ACLs from being set. When set to true causes Amazon S3 to:'
            public_access_block_configuration.restrict_public_buckets: '- (Optional) Whether Amazon S3 should restrict public bucket policies for buckets in this account. Defaults to true. Enabling this setting does not affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked. When set to true:'
            vpc_configuration: '- (Optional) Configuration block to restrict access to this access point to requests from the specified Virtual Private Cloud (VPC). Required for S3 on Outposts. Detailed below.'
            vpc_configuration.vpc_id: '- (Required)  This access point will only allow connections from the specified VPC ID.'
        importStatements: []
    aws_s3_account_public_access_block:
        subCategory: S3 Control
        description: Manages S3 account-level Public Access Block Configuration
        name: aws_s3_account_public_access_block
        title: aws_s3_account_public_access_block
        examples:
            - name: example
              manifest: |-
                {
                  "block_public_acls": true,
                  "block_public_policy": true
                }
        argumentDocs:
            account_id: '- (Optional) AWS account ID to configure. Defaults to automatically determined account ID of the Terraform AWS provider.'
            block_public_acls: '- (Optional) Whether Amazon S3 should block public ACLs for buckets in this account. Defaults to false. Enabling this setting does not affect existing policies or ACLs. When set to true causes the following behavior:'
            block_public_policy: '- (Optional) Whether Amazon S3 should block public bucket policies for buckets in this account. Defaults to false. Enabling this setting does not affect existing bucket policies. When set to true causes Amazon S3 to:'
            id: '- AWS account ID'
            ignore_public_acls: '- (Optional) Whether Amazon S3 should ignore public ACLs for buckets in this account. Defaults to false. Enabling this setting does not affect the persistence of any existing ACLs and doesn''t prevent new public ACLs from being set. When set to true causes Amazon S3 to:'
            restrict_public_buckets: '- (Optional) Whether Amazon S3 should restrict public bucket policies for buckets in this account. Defaults to false. Enabling this setting does not affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked. When set to true:'
        importStatements: []
    aws_s3_bucket:
        subCategory: S3 (Simple Storage)
        description: Provides a S3 bucket resource.
        name: aws_s3_bucket
        title: aws_s3_bucket
        examples:
            - name: b
              manifest: |-
                {
                  "bucket": "my-tf-test-bucket",
                  "tags": {
                    "Environment": "Dev",
                    "Name": "My bucket"
                  }
                }
              dependencies:
                aws_s3_bucket_acl.example: |-
                    {
                      "acl": "private",
                      "bucket": "${aws_s3_bucket.b.id}"
                    }
            - name: b
              manifest: |-
                {
                  "acl": "public-read",
                  "bucket": "s3-website-test.hashicorp.com",
                  "policy": "${file(\"policy.json\")}",
                  "website": [
                    {
                      "error_document": "error.html",
                      "index_document": "index.html",
                      "routing_rules": "[{\n    \"Condition\": {\n        \"KeyPrefixEquals\": \"docs/\"\n    },\n    \"Redirect\": {\n        \"ReplaceKeyPrefixWith\": \"documents/\"\n    }\n}]\n"
                    }
                  ]
                }
            - name: b
              manifest: |-
                {
                  "acl": "public-read",
                  "bucket": "s3-website-test.hashicorp.com",
                  "cors_rule": [
                    {
                      "allowed_headers": [
                        "*"
                      ],
                      "allowed_methods": [
                        "PUT",
                        "POST"
                      ],
                      "allowed_origins": [
                        "https://s3-website-test.hashicorp.com"
                      ],
                      "expose_headers": [
                        "ETag"
                      ],
                      "max_age_seconds": 3000
                    }
                  ]
                }
            - name: b
              manifest: |-
                {
                  "acl": "private",
                  "bucket": "my-tf-test-bucket",
                  "versioning": [
                    {
                      "enabled": true
                    }
                  ]
                }
            - name: log_bucket
              manifest: |-
                {
                  "acl": "log-delivery-write",
                  "bucket": "my-tf-log-bucket"
                }
            - name: b
              manifest: |-
                {
                  "acl": "private",
                  "bucket": "my-tf-test-bucket",
                  "logging": [
                    {
                      "target_bucket": "${aws_s3_bucket.log_bucket.id}",
                      "target_prefix": "log/"
                    }
                  ]
                }
              references:
                logging.target_bucket: aws_s3_bucket.log_bucket.id
            - name: bucket
              manifest: |-
                {
                  "acl": "private",
                  "bucket": "my-bucket",
                  "lifecycle_rule": [
                    {
                      "enabled": true,
                      "expiration": [
                        {
                          "days": 90
                        }
                      ],
                      "id": "log",
                      "prefix": "log/",
                      "tags": {
                        "autoclean": "true",
                        "rule": "log"
                      },
                      "transition": [
                        {
                          "days": 30,
                          "storage_class": "STANDARD_IA"
                        },
                        {
                          "days": 60,
                          "storage_class": "GLACIER"
                        }
                      ]
                    },
                    {
                      "enabled": true,
                      "expiration": [
                        {
                          "date": "2016-01-12"
                        }
                      ],
                      "id": "tmp",
                      "prefix": "tmp/"
                    }
                  ]
                }
            - name: versioning_bucket
              manifest: |-
                {
                  "acl": "private",
                  "bucket": "my-versioning-bucket",
                  "lifecycle_rule": [
                    {
                      "enabled": true,
                      "noncurrent_version_expiration": [
                        {
                          "days": 90
                        }
                      ],
                      "noncurrent_version_transition": [
                        {
                          "days": 30,
                          "storage_class": "STANDARD_IA"
                        },
                        {
                          "days": 60,
                          "storage_class": "GLACIER"
                        }
                      ],
                      "prefix": "config/"
                    }
                  ],
                  "versioning": [
                    {
                      "enabled": true
                    }
                  ]
                }
            - name: example
              manifest: |-
                {
                  "bucket": "my-tf-example-bucket",
                  "object_lock_configuration": [
                    {
                      "object_lock_enabled": "Enabled",
                      "rule": [
                        {
                          "default_retention": [
                            {
                              "days": 5,
                              "mode": "COMPLIANCE"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
            - name: destination
              manifest: |-
                {
                  "bucket": "tf-test-bucket-destination-12345",
                  "versioning": [
                    {
                      "enabled": true
                    }
                  ]
                }
              dependencies:
                aws_iam_policy.replication: |-
                    {
                      "name": "tf-iam-role-policy-replication-12345",
                      "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": [\n        \"s3:GetReplicationConfiguration\",\n        \"s3:ListBucket\"\n      ],\n      \"Effect\": \"Allow\",\n      \"Resource\": [\n        \"${aws_s3_bucket.source.arn}\"\n      ]\n    },\n    {\n      \"Action\": [\n        \"s3:GetObjectVersionForReplication\",\n        \"s3:GetObjectVersionAcl\",\n         \"s3:GetObjectVersionTagging\"\n      ],\n      \"Effect\": \"Allow\",\n      \"Resource\": [\n        \"${aws_s3_bucket.source.arn}/*\"\n      ]\n    },\n    {\n      \"Action\": [\n        \"s3:ReplicateObject\",\n        \"s3:ReplicateDelete\",\n        \"s3:ReplicateTags\"\n      ],\n      \"Effect\": \"Allow\",\n      \"Resource\": \"${aws_s3_bucket.destination.arn}/*\"\n    }\n  ]\n}\n"
                    }
                aws_iam_role.replication: |-
                    {
                      "assume_role_policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"s3.amazonaws.com\"\n      },\n      \"Effect\": \"Allow\",\n      \"Sid\": \"\"\n    }\n  ]\n}\n",
                      "name": "tf-iam-role-replication-12345"
                    }
                aws_iam_role_policy_attachment.replication: |-
                    {
                      "policy_arn": "${aws_iam_policy.replication.arn}",
                      "role": "${aws_iam_role.replication.name}"
                    }
            - name: source
              manifest: |-
                {
                  "acl": "private",
                  "bucket": "tf-test-bucket-source-12345",
                  "provider": "${aws.central}",
                  "replication_configuration": [
                    {
                      "role": "${aws_iam_role.replication.arn}",
                      "rules": [
                        {
                          "destination": [
                            {
                              "bucket": "${aws_s3_bucket.destination.arn}",
                              "metrics": [
                                {
                                  "minutes": 15,
                                  "status": "Enabled"
                                }
                              ],
                              "replication_time": [
                                {
                                  "minutes": 15,
                                  "status": "Enabled"
                                }
                              ],
                              "storage_class": "STANDARD"
                            }
                          ],
                          "filter": [
                            {
                              "tags": {}
                            }
                          ],
                          "id": "foobar",
                          "status": "Enabled"
                        }
                      ]
                    }
                  ],
                  "versioning": [
                    {
                      "enabled": true
                    }
                  ]
                }
              references:
                provider: aws.central
                replication_configuration.role: aws_iam_role.replication.arn
                replication_configuration.rules.destination.bucket: aws_s3_bucket.destination.arn
              dependencies:
                aws_iam_policy.replication: |-
                    {
                      "name": "tf-iam-role-policy-replication-12345",
                      "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": [\n        \"s3:GetReplicationConfiguration\",\n        \"s3:ListBucket\"\n      ],\n      \"Effect\": \"Allow\",\n      \"Resource\": [\n        \"${aws_s3_bucket.source.arn}\"\n      ]\n    },\n    {\n      \"Action\": [\n        \"s3:GetObjectVersionForReplication\",\n        \"s3:GetObjectVersionAcl\",\n         \"s3:GetObjectVersionTagging\"\n      ],\n      \"Effect\": \"Allow\",\n      \"Resource\": [\n        \"${aws_s3_bucket.source.arn}/*\"\n      ]\n    },\n    {\n      \"Action\": [\n        \"s3:ReplicateObject\",\n        \"s3:ReplicateDelete\",\n        \"s3:ReplicateTags\"\n      ],\n      \"Effect\": \"Allow\",\n      \"Resource\": \"${aws_s3_bucket.destination.arn}/*\"\n    }\n  ]\n}\n"
                    }
                aws_iam_role.replication: |-
                    {
                      "assume_role_policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"s3.amazonaws.com\"\n      },\n      \"Effect\": \"Allow\",\n      \"Sid\": \"\"\n    }\n  ]\n}\n",
                      "name": "tf-iam-role-replication-12345"
                    }
                aws_iam_role_policy_attachment.replication: |-
                    {
                      "policy_arn": "${aws_iam_policy.replication.arn}",
                      "role": "${aws_iam_role.replication.name}"
                    }
            - name: mybucket
              manifest: |-
                {
                  "bucket": "mybucket",
                  "server_side_encryption_configuration": [
                    {
                      "rule": [
                        {
                          "apply_server_side_encryption_by_default": [
                            {
                              "kms_master_key_id": "${aws_kms_key.mykey.arn}",
                              "sse_algorithm": "aws:kms"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              references:
                server_side_encryption_configuration.rule.apply_server_side_encryption_by_default.kms_master_key_id: aws_kms_key.mykey.arn
              dependencies:
                aws_kms_key.mykey: |-
                    {
                      "deletion_window_in_days": 10,
                      "description": "This key is used to encrypt bucket objects"
                    }
            - name: bucket
              manifest: |-
                {
                  "bucket": "mybucket",
                  "grant": [
                    {
                      "id": "${data.aws_canonical_user_id.current_user.id}",
                      "permissions": [
                        "FULL_CONTROL"
                      ],
                      "type": "CanonicalUser"
                    },
                    {
                      "permissions": [
                        "READ_ACP",
                        "WRITE"
                      ],
                      "type": "Group",
                      "uri": "http://acs.amazonaws.com/groups/s3/LogDelivery"
                    }
                  ]
                }
              references:
                grant.id: data.aws_canonical_user_id.current_user.id
        argumentDocs:
            acceleration_status: |-
                - (Optional, Deprecated) Sets the accelerate configuration of an existing bucket. Can be Enabled or Suspended. Cannot be used in cn-north-1 or us-gov-west-1. Terraform will only perform drift detection if a configuration value is provided.
                Use the resource aws_s3_bucket_accelerate_configuration instead.
            acl: '- (Optional, Deprecated) The canned ACL to apply. Valid values are private, public-read, public-read-write, aws-exec-read, authenticated-read, and log-delivery-write. Defaults to private.  Conflicts with grant. Terraform will only perform drift detection if a configuration value is provided. Use the resource aws_s3_bucket_acl instead.'
            arn: '- The ARN of the bucket. Will be of format arn:aws:s3:::bucketname.'
            bucket: '- (Optional, Forces new resource) The name of the bucket. If omitted, Terraform will assign a random, unique name. Must be lowercase and less than or equal to 63 characters in length. A full list of bucket naming rules may be found here.'
            bucket_domain_name: '- The bucket domain name. Will be of format bucketname.s3.amazonaws.com.'
            bucket_prefix: '- (Optional, Forces new resource) Creates a unique bucket name beginning with the specified prefix. Conflicts with bucket. Must be lowercase and less than or equal to 37 characters in length. A full list of bucket naming rules may be found here.'
            bucket_regional_domain_name: '- The bucket region-specific domain name. The bucket domain name including the region name, please refer here for format. Note: The AWS CloudFront allows specifying S3 region-specific endpoint when creating S3 origin, it will prevent redirect issues from CloudFront to S3 Origin URL.'
            cors_rule: '- (Optional, Deprecated) A rule of Cross-Origin Resource Sharing. See CORS rule below for details. Terraform will only perform drift detection if a configuration value is provided. Use the resource aws_s3_bucket_cors_configuration instead.'
            cors_rule.allowed_headers: '- (Optional) List of headers allowed.'
            cors_rule.allowed_methods: '- (Required) One or more HTTP methods that you allow the origin to execute. Can be GET, PUT, POST, DELETE or HEAD.'
            cors_rule.allowed_origins: '- (Required) One or more origins you want customers to be able to access the bucket from.'
            cors_rule.expose_headers: '- (Optional) One or more headers in the response that you want customers to be able to access from their applications (for example, from a JavaScript XMLHttpRequest object).'
            cors_rule.max_age_seconds: '- (Optional) Specifies time in seconds that browser can cache the response for a preflight request.'
            days: '- (Required) Specifies the number of days noncurrent object versions transition.'
            destination.access_control_translation: '- (Optional) Specifies the overrides to use for object owners on replication. Must be used in conjunction with account_id owner override configuration.'
            destination.account_id: '- (Optional) The Account ID to use for overriding the object owner on replication. Must be used in conjunction with access_control_translation override configuration.'
            destination.bucket: '- (Required) The ARN of the S3 bucket where you want Amazon S3 to store replicas of the object identified by the rule.'
            destination.metrics: '- (Optional) Enables replication metrics (required for S3 RTC) (documented below).'
            destination.replica_kms_key_id: |-
                - (Optional) Destination KMS encryption key ARN for SSE-KMS replication. Must be used in conjunction with
                sse_kms_encrypted_objects source selection criteria.
            destination.replication_time: '- (Optional) Enables S3 Replication Time Control (S3 RTC) (documented below).'
            destination.replication_time.minutes: '- (Optional) Threshold within which objects are to be replicated. The only valid value is 15.'
            destination.replication_time.status: '- (Optional) The status of RTC. Either Enabled or Disabled.'
            destination.storage_class: '- (Optional) The storage class used to store the object. By default, Amazon S3 uses the storage class of the source object to create the object replica.'
            force_destroy: '- (Optional, Default:false) A boolean that indicates all objects (including any locked objects) should be deleted from the bucket so that the bucket can be destroyed without error. These objects are not recoverable.'
            grant: '- (Optional, Deprecated) An ACL policy grant. See Grant below for details. Conflicts with acl. Terraform will only perform drift detection if a configuration value is provided. Use the resource aws_s3_bucket_acl instead.'
            grant.id: '- (Optional) Canonical user id to grant for. Used only when type is CanonicalUser.'
            grant.permissions: '- (Required) List of permissions to apply for grantee. Valid values are READ, WRITE, READ_ACP, WRITE_ACP, FULL_CONTROL.'
            grant.type: '- (Required) Type of grantee to apply for. Valid values are CanonicalUser and Group. AmazonCustomerByEmail is not supported.'
            grant.uri: '- (Optional) Uri address to grant for. Used only when type is Group.'
            hosted_zone_id: '- The Route 53 Hosted Zone ID for this bucket''s region.'
            id: '- The name of the bucket.'
            lifecycle_rule: |-
                - (Optional, Deprecated) A configuration of object lifecycle management. See Lifecycle Rule below for details. Terraform will only perform drift detection if a configuration value is provided.
                Use the resource aws_s3_bucket_lifecycle_configuration instead.
            lifecycle_rule.abort_incomplete_multipart_upload_days: (Optional) Specifies the number of days after initiating a multipart upload when the multipart upload must be completed.
            lifecycle_rule.enabled: '- (Required) Specifies lifecycle rule status.'
            lifecycle_rule.expiration: '- (Optional) Specifies a period in the object''s expire. See Expiration below for details.'
            lifecycle_rule.expiration.date: '- (Optional) Specifies the date after which you want the corresponding action to take effect.'
            lifecycle_rule.expiration.days: '- (Optional) Specifies the number of days after object creation when the specific rule action takes effect.'
            lifecycle_rule.expiration.expired_object_delete_marker: '- (Optional) On a versioned bucket (versioning-enabled or versioning-suspended bucket), you can add this element in the lifecycle configuration to direct Amazon S3 to delete expired object delete markers. This cannot be specified with Days or Date in a Lifecycle Expiration Policy.'
            lifecycle_rule.id: '- (Optional) Unique identifier for the rule. Must be less than or equal to 255 characters in length.'
            lifecycle_rule.noncurrent_version_expiration: '- (Optional) Specifies when noncurrent object versions expire. See Noncurrent Version Expiration below for details.'
            lifecycle_rule.noncurrent_version_transition: '- (Optional) Specifies when noncurrent object versions transitions. See Noncurrent Version Transition below for details.'
            lifecycle_rule.prefix: '- (Optional) Object key prefix identifying one or more objects to which the rule applies.'
            lifecycle_rule.tags: '- (Optional) Specifies object tags key and value.'
            lifecycle_rule.transition: '- (Optional) Specifies a period in the object''s transitions. See Transition below for details.'
            logging: |-
                - (Optional, Deprecated) A configuration of S3 bucket logging parameters. See Logging below for details. Terraform will only perform drift detection if a configuration value is provided.
                Use the resource aws_s3_bucket_logging instead.
            logging.target_bucket: '- (Required) The name of the bucket that will receive the log objects.'
            logging.target_prefix: '- (Optional) To specify a key prefix for log objects.'
            metrics.minutes: '- (Optional) Threshold within which objects are to be replicated. The only valid value is 15.'
            metrics.status: '- (Optional) The status of replication metrics. Either Enabled or Disabled.'
            noncurrent_version_expiration.days: '- (Required) Specifies the number of days noncurrent object versions expire.'
            object_lock_configuration: |-
                - (Optional, Deprecated) A configuration of S3 object locking. See Object Lock Configuration below for details.
                Terraform wil only perform drift detection if a configuration value is provided.
                Use the object_lock_enabled parameter and the resource aws_s3_bucket_object_lock_configuration instead.
            object_lock_configuration.object_lock_enabled: '- (Optional, Deprecated) Indicates whether this bucket has an Object Lock configuration enabled. Valid value is Enabled. Use the top-level argument object_lock_enabled instead.'
            object_lock_configuration.rule: '- (Optional) The Object Lock rule in place for this bucket (documented below).'
            object_lock_configuration.rule.default_retention: '- (Required) The default retention period that you want to apply to new objects placed in this bucket (documented below).'
            object_lock_configuration.rule.default_retention.days: '- (Optional) The number of days that you want to specify for the default retention period.'
            object_lock_configuration.rule.default_retention.mode: '- (Required) The default Object Lock retention mode you want to apply to new objects placed in this bucket. Valid values are GOVERNANCE and COMPLIANCE.'
            object_lock_configuration.rule.default_retention.years: '- (Optional) The number of years that you want to specify for the default retention period.'
            object_lock_enabled: '- (Optional, Default:false, Forces new resource) Indicates whether this bucket has an Object Lock configuration enabled. Valid values are true or false.'
            policy: |-
                - (Optional, Deprecated) A valid bucket policy JSON document. Note that if the policy document is not specific enough (but still valid), Terraform may view the policy as constantly changing in a terraform plan. In this case, please make sure you use the verbose/specific version of the policy. For more information about building AWS IAM policy documents with Terraform, see the AWS IAM Policy Document Guide.
                Terraform will only perform drift detection if a configuration value is provided.
                Use the resource aws_s3_bucket_policy instead.
            region: '- The AWS region this bucket resides in.'
            replication_configuration: |-
                - (Optional, Deprecated) A configuration of replication configuration. See Replication Configuration below for details. Terraform will only perform drift detection if a configuration value is provided.
                Use the resource aws_s3_bucket_replication_configuration instead.
            replication_configuration.role: '- (Required) The ARN of the IAM role for Amazon S3 to assume when replicating the objects.'
            replication_configuration.rules: '- (Required) Specifies the rules managing the replication (documented below).'
            replication_configuration.rules.delete_marker_replication_status: '- (Optional) Whether delete markers are replicated. The only valid value is Enabled. To disable, omit this argument. This argument is only valid with V2 replication configurations (i.e., when filter is used).'
            replication_configuration.rules.destination: '- (Required) Specifies the destination for the rule (documented below).'
            replication_configuration.rules.filter: '- (Optional, Conflicts with prefix) Filter that identifies subset of objects to which the replication rule applies (documented below).'
            replication_configuration.rules.filter.prefix: '- (Optional) Object keyname prefix that identifies subset of objects to which the rule applies. Must be less than or equal to 1024 characters in length.'
            replication_configuration.rules.filter.tags: |-
                - (Optional)  A map of tags that identifies subset of objects to which the rule applies.
                The rule applies only to objects having all the tags in its tagset.
            replication_configuration.rules.id: '- (Optional) Unique identifier for the rule. Must be less than or equal to 255 characters in length.'
            replication_configuration.rules.prefix: '- (Optional, Conflicts with filter) Object keyname prefix identifying one or more objects to which the rule applies. Must be less than or equal to 1024 characters in length.'
            replication_configuration.rules.priority: '- (Optional) The priority associated with the rule. Priority should only be set if filter is configured. If not provided, defaults to 0. Priority must be unique between multiple rules.'
            replication_configuration.rules.source_selection_criteria: '- (Optional) Specifies special object selection criteria (documented below).'
            replication_configuration.rules.status: '- (Required) The status of the rule. Either Enabled or Disabled. The rule is ignored if status is not Enabled.'
            request_payer: |-
                - (Optional, Deprecated) Specifies who should bear the cost of Amazon S3 data transfer.
                Can be either BucketOwner or Requester. By default, the owner of the S3 bucket would incur the costs of any data transfer.
                See Requester Pays Buckets developer guide for more information.
                Terraform will only perform drift detection if a configuration value is provided.
                Use the resource aws_s3_bucket_request_payment_configuration instead.
            server_side_encryption_configuration: |-
                - (Optional, Deprecated) A configuration of server-side encryption configuration. See Server Side Encryption Configuration below for details.
                Terraform will only perform drift detection if a configuration value is provided.
                Use the resource aws_s3_bucket_server_side_encryption_configuration instead.
            server_side_encryption_configuration.rule: '- (Required) A single object for server-side encryption by default configuration. (documented below)'
            server_side_encryption_configuration.rule.apply_server_side_encryption_by_default: '- (Required) A single object for setting server-side encryption by default. (documented below)'
            server_side_encryption_configuration.rule.apply_server_side_encryption_by_default.kms_master_key_id: '- (Optional) The AWS KMS master key ID used for the SSE-KMS encryption. This can only be used when you set the value of sse_algorithm as aws:kms. The default aws/s3 AWS KMS master key is used if this element is absent while the sse_algorithm is aws:kms.'
            server_side_encryption_configuration.rule.apply_server_side_encryption_by_default.sse_algorithm: '- (Required) The server-side encryption algorithm to use. Valid values are AES256 and aws:kms'
            server_side_encryption_configuration.rule.bucket_key_enabled: '- (Optional) Whether or not to use Amazon S3 Bucket Keys for SSE-KMS.'
            source_selection_criteria.sse_kms_encrypted_objects: |-
                - (Optional) Match SSE-KMS encrypted objects (documented below). If specified, replica_kms_key_id
                in destination must be specified as well.
            source_selection_criteria.sse_kms_encrypted_objects.enabled: '- (Required) Boolean which indicates if this criteria is enabled.'
            storage_class: '- (Required) Specifies the Amazon S3 storage class to which you want the object to transition.'
            tags: '- (Optional) A map of tags to assign to the bucket. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            transition.date: '- (Optional) Specifies the date after which you want the corresponding action to take effect.'
            transition.days: '- (Optional) Specifies the number of days after object creation when the specific rule action takes effect.'
            transition.storage_class: '- (Required) Specifies the Amazon S3 storage class to which you want the object to transition.'
            versioning: '- (Optional, Deprecated) A configuration of the S3 bucket versioning state. See Versioning below for details. Terraform will only perform drift detection if a configuration value is provided. Use the resource aws_s3_bucket_versioning instead.'
            versioning.enabled: '- (Optional) Enable versioning. Once you version-enable a bucket, it can never return to an unversioned state. You can, however, suspend versioning on that bucket.'
            versioning.mfa_delete: '- (Optional) Enable MFA delete for either Change the versioning state of your bucket or Permanently delete an object version. Default is false. This cannot be used to toggle this setting but is available to allow managed buckets to reflect the state in AWS'
            website: |-
                - (Optional, Deprecated) A configuration of the S3 bucket website. See Website below for details. Terraform will only perform drift detection if a configuration value is provided.
                Use the resource aws_s3_bucket_website_configuration instead.
            website.error_document: '- (Optional) An absolute path to the document to return in case of a 4XX error.'
            website.index_document: '- (Required, unless using redirect_all_requests_to) Amazon S3 returns this index document when requests are made to the root domain or any of the subfolders.'
            website.redirect_all_requests_to: '- (Optional) A hostname to redirect all website requests for this bucket to. Hostname can optionally be prefixed with a protocol (http:// or https://) to use when redirecting requests. The default is the protocol that is used in the original request.'
            website.routing_rules: |-
                - (Optional) A json array containing routing rules
                describing redirect behavior and when redirects are applied.
            website_domain: '- The domain of the website endpoint, if the bucket is configured with a website. If not, this will be an empty string. This is used to create Route 53 alias records.'
            website_endpoint: '- The website endpoint, if the bucket is configured with a website. If not, this will be an empty string.'
        importStatements: []
    aws_s3_bucket_accelerate_configuration:
        subCategory: S3 (Simple Storage)
        description: Provides an S3 bucket accelerate configuration resource.
        name: aws_s3_bucket_accelerate_configuration
        title: aws_s3_bucket_accelerate_configuration
        examples:
            - name: example
              manifest: |-
                {
                  "bucket": "${aws_s3_bucket.mybucket.bucket}",
                  "status": "Enabled"
                }
              references:
                bucket: aws_s3_bucket.mybucket.bucket
              dependencies:
                aws_s3_bucket.mybucket: |-
                    {
                      "bucket": "mybucket"
                    }
        argumentDocs:
            bucket: '- (Required, Forces new resource) The name of the bucket.'
            expected_bucket_owner: '- (Optional, Forces new resource) The account ID of the expected bucket owner.'
            id: '- The bucket or bucket and expected_bucket_owner separated by a comma (,) if the latter is provided.'
            status: '- (Required) The transfer acceleration state of the bucket. Valid values: Enabled, Suspended.'
        importStatements: []
    aws_s3_bucket_acl:
        subCategory: S3 (Simple Storage)
        description: Provides an S3 bucket ACL resource.
        name: aws_s3_bucket_acl
        title: aws_s3_bucket_acl
        examples:
            - name: example_bucket_acl
              manifest: |-
                {
                  "acl": "private",
                  "bucket": "${aws_s3_bucket.example.id}"
                }
              references:
                bucket: aws_s3_bucket.example.id
              dependencies:
                aws_s3_bucket.example: |-
                    {
                      "bucket": "my-tf-example-bucket"
                    }
            - name: example
              manifest: |-
                {
                  "access_control_policy": [
                    {
                      "grant": [
                        {
                          "grantee": [
                            {
                              "id": "${data.aws_canonical_user_id.current.id}",
                              "type": "CanonicalUser"
                            }
                          ],
                          "permission": "READ"
                        },
                        {
                          "grantee": [
                            {
                              "type": "Group",
                              "uri": "http://acs.amazonaws.com/groups/s3/LogDelivery"
                            }
                          ],
                          "permission": "READ_ACP"
                        }
                      ],
                      "owner": [
                        {
                          "id": "${data.aws_canonical_user_id.current.id}"
                        }
                      ]
                    }
                  ],
                  "bucket": "${aws_s3_bucket.example.id}"
                }
              references:
                access_control_policy.grant.grantee.id: data.aws_canonical_user_id.current.id
                access_control_policy.owner.id: data.aws_canonical_user_id.current.id
                bucket: aws_s3_bucket.example.id
              dependencies:
                aws_s3_bucket.example: |-
                    {
                      "bucket": "my-tf-example-bucket"
                    }
        argumentDocs:
            access_control_policy: '- (Optional, Conflicts with acl) A configuration block that sets the ACL permissions for an object per grantee documented below.'
            access_control_policy.grant: '- (Required) Set of grant configuration blocks documented below.'
            access_control_policy.grant.grantee: '- (Required) Configuration block for the person being granted permissions documented below.'
            access_control_policy.grant.permission: '- (Required) Logging permissions assigned to the grantee for the bucket.'
            access_control_policy.owner: '- (Required) Configuration block of the bucket owner''s display name and ID documented below.'
            acl: '- (Optional, Conflicts with access_control_policy) The canned ACL to apply to the bucket.'
            bucket: '- (Required, Forces new resource) The name of the bucket.'
            expected_bucket_owner: '- (Optional, Forces new resource) The account ID of the expected bucket owner.'
            grantee.email_address: '- (Optional) Email address of the grantee. See Regions and Endpoints for supported AWS regions where this argument can be specified.'
            grantee.id: '- (Optional) The canonical user ID of the grantee.'
            grantee.type: '- (Required) Type of grantee. Valid values: CanonicalUser, AmazonCustomerByEmail, Group.'
            grantee.uri: '- (Optional) URI of the grantee group.'
            id: '- The bucket, expected_bucket_owner (if configured), and acl (if configured) separated by commas (,).'
            owner.display_name: '- (Optional) The display name of the owner.'
            owner.id: '- (Required) The ID of the owner.'
        importStatements: []
    aws_s3_bucket_analytics_configuration:
        subCategory: S3 (Simple Storage)
        description: Provides a S3 bucket analytics configuration resource.
        name: aws_s3_bucket_analytics_configuration
        title: aws_s3_bucket_analytics_configuration
        examples:
            - name: example-entire-bucket
              manifest: |-
                {
                  "bucket": "${aws_s3_bucket.example.bucket}",
                  "name": "EntireBucket",
                  "storage_class_analysis": [
                    {
                      "data_export": [
                        {
                          "destination": [
                            {
                              "s3_bucket_destination": [
                                {
                                  "bucket_arn": "${aws_s3_bucket.analytics.arn}"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              references:
                bucket: aws_s3_bucket.example.bucket
                storage_class_analysis.data_export.destination.s3_bucket_destination.bucket_arn: aws_s3_bucket.analytics.arn
              dependencies:
                aws_s3_bucket.analytics: |-
                    {
                      "bucket": "analytics destination"
                    }
                aws_s3_bucket.example: |-
                    {
                      "bucket": "example"
                    }
            - name: example-filtered
              manifest: |-
                {
                  "bucket": "${aws_s3_bucket.example.bucket}",
                  "filter": [
                    {
                      "prefix": "documents/",
                      "tags": {
                        "class": "blue",
                        "priority": "high"
                      }
                    }
                  ],
                  "name": "ImportantBlueDocuments"
                }
              references:
                bucket: aws_s3_bucket.example.bucket
              dependencies:
                aws_s3_bucket.example: |-
                    {
                      "bucket": "example"
                    }
        argumentDocs:
            bucket: '- (Required) The name of the bucket this analytics configuration is associated with.'
            bucket_account_id: '- (Optional) The account ID that owns the destination bucket.'
            bucket_arn: '- (Required) The ARN of the destination bucket.'
            data_export: '- (Required) Data export configuration (documented below).'
            destination: '- (Required) Specifies the destination for the exported analytics data (documented below).'
            filter: '- (Optional) Object filtering that accepts a prefix, tags, or a logical AND of prefix and tags (documented below).'
            format: '- (Optional) The output format of exported analytics data. Allowed values: CSV. Default value: CSV.'
            name: '- (Required) Unique identifier of the analytics configuration for the bucket.'
            output_schema_version: '- (Optional) The schema version of exported analytics data. Allowed values: V_1. Default value: V_1.'
            prefix: '- (Optional) Object prefix for filtering.'
            s3_bucket_destination: '- (Required) Analytics data export currently only supports an S3 bucket destination (documented below).'
            storage_class_analysis: '- (Optional) Configuration for the analytics data export (documented below).'
            tags: '- (Optional) Set of object tags for filtering.'
        importStatements: []
    aws_s3_bucket_cors_configuration:
        subCategory: S3 (Simple Storage)
        description: Provides an S3 bucket CORS configuration resource.
        name: aws_s3_bucket_cors_configuration
        title: aws_s3_bucket_cors_configuration
        examples:
            - name: example
              manifest: |-
                {
                  "bucket": "${aws_s3_bucket.example.bucket}",
                  "cors_rule": [
                    {
                      "allowed_headers": [
                        "*"
                      ],
                      "allowed_methods": [
                        "PUT",
                        "POST"
                      ],
                      "allowed_origins": [
                        "https://s3-website-test.hashicorp.com"
                      ],
                      "expose_headers": [
                        "ETag"
                      ],
                      "max_age_seconds": 3000
                    },
                    {
                      "allowed_methods": [
                        "GET"
                      ],
                      "allowed_origins": [
                        "*"
                      ]
                    }
                  ]
                }
              references:
                bucket: aws_s3_bucket.example.bucket
              dependencies:
                aws_s3_bucket.example: |-
                    {
                      "bucket": "mybucket"
                    }
        argumentDocs:
            bucket: '- (Required, Forces new resource) The name of the bucket.'
            cors_rule: '- (Required) Set of origins and methods (cross-origin access that you want to allow) documented below. You can configure up to 100 rules.'
            cors_rule.allowed_headers: '- (Optional) Set of Headers that are specified in the Access-Control-Request-Headers header.'
            cors_rule.allowed_methods: '- (Required) Set of HTTP methods that you allow the origin to execute. Valid values are GET, PUT, HEAD, POST, and DELETE.'
            cors_rule.allowed_origins: '- (Required) Set of origins you want customers to be able to access the bucket from.'
            cors_rule.expose_headers: '- (Optional) Set of headers in the response that you want customers to be able to access from their applications (for example, from a JavaScript XMLHttpRequest object).'
            cors_rule.id: '- (Optional) Unique identifier for the rule. The value cannot be longer than 255 characters.'
            cors_rule.max_age_seconds: '- (Optional) The time in seconds that your browser is to cache the preflight response for the specified resource.'
            expected_bucket_owner: '- (Optional, Forces new resource) The account ID of the expected bucket owner.'
            id: '- The bucket or bucket and expected_bucket_owner separated by a comma (,) if the latter is provided.'
        importStatements: []
    aws_s3_bucket_intelligent_tiering_configuration:
        subCategory: S3 (Simple Storage)
        description: Provides an S3 Intelligent-Tiering configuration resource.
        name: aws_s3_bucket_intelligent_tiering_configuration
        title: aws_s3_bucket_intelligent_tiering_configuration
        examples:
            - name: example-entire-bucket
              manifest: |-
                {
                  "bucket": "${aws_s3_bucket.example.bucket}",
                  "name": "EntireBucket",
                  "tiering": [
                    {
                      "access_tier": "DEEP_ARCHIVE_ACCESS",
                      "days": 180
                    },
                    {
                      "access_tier": "ARCHIVE_ACCESS",
                      "days": 125
                    }
                  ]
                }
              references:
                bucket: aws_s3_bucket.example.bucket
              dependencies:
                aws_s3_bucket.example: |-
                    {
                      "bucket": "example"
                    }
            - name: example-filtered
              manifest: |-
                {
                  "bucket": "${aws_s3_bucket.example.bucket}",
                  "filter": [
                    {
                      "prefix": "documents/",
                      "tags": {
                        "class": "blue",
                        "priority": "high"
                      }
                    }
                  ],
                  "name": "ImportantBlueDocuments",
                  "status": "Disabled",
                  "tiering": [
                    {
                      "access_tier": "ARCHIVE_ACCESS",
                      "days": 125
                    }
                  ]
                }
              references:
                bucket: aws_s3_bucket.example.bucket
              dependencies:
                aws_s3_bucket.example: |-
                    {
                      "bucket": "example"
                    }
        argumentDocs:
            access_tier: '- (Required) S3 Intelligent-Tiering access tier. Valid values: ARCHIVE_ACCESS, DEEP_ARCHIVE_ACCESS.'
            bucket: '- (Required) The name of the bucket this intelligent tiering configuration is associated with.'
            days: '- (Required) The number of consecutive days of no access after which an object will be eligible to be transitioned to the corresponding tier.'
            filter: '- (Optional) A bucket filter. The configuration only includes objects that meet the filter''s criteria (documented below).'
            name: '- (Required) The unique name used to identify the S3 Intelligent-Tiering configuration for the bucket.'
            prefix: '- (Optional) An object key name prefix that identifies the subset of objects to which the configuration applies.'
            status: '- (Optional) Specifies the status of the configuration. Valid values: Enabled, Disabled.'
            tags: '- (Optional) All of these tags must exist in the object''s tag set in order for the configuration to apply.'
            tiering: '- (Required) The S3 Intelligent-Tiering storage class tiers of the configuration (documented below).'
        importStatements: []
    aws_s3_bucket_inventory:
        subCategory: S3 (Simple Storage)
        description: Provides a S3 bucket inventory configuration resource.
        name: aws_s3_bucket_inventory
        title: aws_s3_bucket_inventory
        examples:
            - name: test
              manifest: |-
                {
                  "bucket": "${aws_s3_bucket.test.id}",
                  "destination": [
                    {
                      "bucket": [
                        {
                          "bucket_arn": "${aws_s3_bucket.inventory.arn}",
                          "format": "ORC"
                        }
                      ]
                    }
                  ],
                  "included_object_versions": "All",
                  "name": "EntireBucketDaily",
                  "schedule": [
                    {
                      "frequency": "Daily"
                    }
                  ]
                }
              references:
                bucket: aws_s3_bucket.test.id
                destination.bucket.bucket_arn: aws_s3_bucket.inventory.arn
              dependencies:
                aws_s3_bucket.inventory: |-
                    {
                      "bucket": "my-tf-inventory-bucket"
                    }
                aws_s3_bucket.test: |-
                    {
                      "bucket": "my-tf-test-bucket"
                    }
            - name: test-prefix
              manifest: |-
                {
                  "bucket": "${aws_s3_bucket.test.id}",
                  "destination": [
                    {
                      "bucket": [
                        {
                          "bucket_arn": "${aws_s3_bucket.inventory.arn}",
                          "format": "ORC",
                          "prefix": "inventory"
                        }
                      ]
                    }
                  ],
                  "filter": [
                    {
                      "prefix": "documents/"
                    }
                  ],
                  "included_object_versions": "All",
                  "name": "DocumentsWeekly",
                  "schedule": [
                    {
                      "frequency": "Daily"
                    }
                  ]
                }
              references:
                bucket: aws_s3_bucket.test.id
                destination.bucket.bucket_arn: aws_s3_bucket.inventory.arn
              dependencies:
                aws_s3_bucket.inventory: |-
                    {
                      "bucket": "my-tf-inventory-bucket"
                    }
                aws_s3_bucket.test: |-
                    {
                      "bucket": "my-tf-test-bucket"
                    }
        argumentDocs:
            account_id: '- (Optional) The ID of the account that owns the destination bucket. Recommended to be set to prevent problems if the destination bucket ownership changes.'
            bucket: '- (Required) The name of the source bucket that inventory lists the objects for.'
            bucket_arn: '- (Required) The Amazon S3 bucket ARN of the destination.'
            destination: '- (Required) Contains information about where to publish the inventory results (documented below).'
            enabled: '- (Optional, Default: true) Specifies whether the inventory is enabled or disabled.'
            encryption: '- (Optional) Contains the type of server-side encryption to use to encrypt the inventory (documented below).'
            filter: '- (Optional) Specifies an inventory filter. The inventory only includes objects that meet the filter''s criteria (documented below).'
            format: '- (Required) Specifies the output format of the inventory results. Can be CSV, ORC or Parquet.'
            frequency: '- (Required) Specifies how frequently inventory results are produced. Valid values: Daily, Weekly.'
            included_object_versions: '- (Required) Object versions to include in the inventory list. Valid values: All, Current.'
            key_id: '- (Required) The ARN of the KMS customer master key (CMK) used to encrypt the inventory file.'
            name: '- (Required) Unique identifier of the inventory configuration for the bucket.'
            optional_fields: '- (Optional) List of optional fields that are included in the inventory results. Please refer to the S3 documentation for more details.'
            prefix: '- (Optional) The prefix that an object must have to be included in the inventory results.'
            schedule: '- (Required) Specifies the schedule for generating inventory results (documented below).'
            sse_kms: '- (Optional) Specifies to use server-side encryption with AWS KMS-managed keys to encrypt the inventory file (documented below).'
            sse_s3: '- (Optional) Specifies to use server-side encryption with Amazon S3-managed keys (SSE-S3) to encrypt the inventory file.'
        importStatements: []
    aws_s3_bucket_lifecycle_configuration:
        subCategory: S3 (Simple Storage)
        description: Provides a S3 bucket lifecycle configuration resource.
        name: aws_s3_bucket_lifecycle_configuration
        title: aws_s3_bucket_lifecycle_configuration
        examples:
            - name: example
              manifest: |-
                {
                  "bucket": "${aws_s3_bucket.bucket.id}",
                  "rule": [
                    {
                      "id": "rule-1",
                      "status": "Enabled"
                    }
                  ]
                }
              references:
                bucket: aws_s3_bucket.bucket.id
            - name: example
              manifest: |-
                {
                  "bucket": "${aws_s3_bucket.bucket.id}",
                  "rule": [
                    {
                      "filter": [
                        {}
                      ],
                      "id": "rule-1",
                      "status": "Enabled"
                    }
                  ]
                }
              references:
                bucket: aws_s3_bucket.bucket.id
            - name: example
              manifest: |-
                {
                  "bucket": "${aws_s3_bucket.bucket.id}",
                  "rule": [
                    {
                      "filter": [
                        {
                          "prefix": "logs/"
                        }
                      ],
                      "id": "rule-1",
                      "status": "Enabled"
                    }
                  ]
                }
              references:
                bucket: aws_s3_bucket.bucket.id
            - name: example
              manifest: |-
                {
                  "bucket": "${aws_s3_bucket.bucket.id}",
                  "rule": [
                    {
                      "filter": [
                        {
                          "prefix": "logs/"
                        }
                      ],
                      "id": "rule-1",
                      "status": "Enabled"
                    },
                    {
                      "filter": [
                        {
                          "prefix": "tmp/"
                        }
                      ],
                      "id": "rule-2",
                      "status": "Enabled"
                    }
                  ]
                }
              references:
                bucket: aws_s3_bucket.bucket.id
            - name: example
              manifest: |-
                {
                  "bucket": "${aws_s3_bucket.bucket.id}",
                  "rule": [
                    {
                      "filter": [
                        {
                          "tag": [
                            {
                              "key": "Name",
                              "value": "Staging"
                            }
                          ]
                        }
                      ],
                      "id": "rule-1",
                      "status": "Enabled"
                    }
                  ]
                }
              references:
                bucket: aws_s3_bucket.bucket.id
            - name: example
              manifest: |-
                {
                  "bucket": "${aws_s3_bucket.bucket.id}",
                  "rule": [
                    {
                      "filter": [
                        {
                          "and": [
                            {
                              "tags": {
                                "Key1": "Value1",
                                "Key2": "Value2"
                              }
                            }
                          ]
                        }
                      ],
                      "id": "rule-1",
                      "status": "Enabled"
                    }
                  ]
                }
              references:
                bucket: aws_s3_bucket.bucket.id
            - name: example
              manifest: |-
                {
                  "bucket": "${aws_s3_bucket.bucket.id}",
                  "rule": [
                    {
                      "filter": [
                        {
                          "and": [
                            {
                              "prefix": "logs/",
                              "tags": {
                                "Key1": "Value1",
                                "Key2": "Value2"
                              }
                            }
                          ]
                        }
                      ],
                      "id": "rule-1",
                      "status": "Enabled"
                    }
                  ]
                }
              references:
                bucket: aws_s3_bucket.bucket.id
            - name: example
              manifest: |-
                {
                  "bucket": "${aws_s3_bucket.bucket.id}",
                  "rule": [
                    {
                      "filter": [
                        {
                          "object_size_greater_than": 500
                        }
                      ],
                      "id": "rule-1",
                      "status": "Enabled"
                    }
                  ]
                }
              references:
                bucket: aws_s3_bucket.bucket.id
            - name: example
              manifest: |-
                {
                  "bucket": "${aws_s3_bucket.bucket.id}",
                  "rule": [
                    {
                      "filter": [
                        {
                          "and": [
                            {
                              "object_size_greater_than": 500,
                              "object_size_less_than": 64000,
                              "prefix": "logs/"
                            }
                          ]
                        }
                      ],
                      "id": "rule-1",
                      "status": "Enabled"
                    }
                  ]
                }
              references:
                bucket: aws_s3_bucket.bucket.id
            - name: bucket-config
              manifest: |-
                {
                  "bucket": "${aws_s3_bucket.bucket.bucket}",
                  "rule": [
                    {
                      "expiration": [
                        {
                          "days": 90
                        }
                      ],
                      "filter": [
                        {
                          "and": [
                            {
                              "prefix": "log/",
                              "tags": {
                                "autoclean": "true",
                                "rule": "log"
                              }
                            }
                          ]
                        }
                      ],
                      "id": "log",
                      "status": "Enabled",
                      "transition": [
                        {
                          "days": 30,
                          "storage_class": "STANDARD_IA"
                        },
                        {
                          "days": 60,
                          "storage_class": "GLACIER"
                        }
                      ]
                    },
                    {
                      "expiration": [
                        {
                          "date": "2023-01-13T00:00:00Z"
                        }
                      ],
                      "filter": [
                        {
                          "prefix": "tmp/"
                        }
                      ],
                      "id": "tmp",
                      "status": "Enabled"
                    }
                  ]
                }
              references:
                bucket: aws_s3_bucket.bucket.bucket
              dependencies:
                aws_s3_bucket.bucket: |-
                    {
                      "bucket": "my-bucket"
                    }
                aws_s3_bucket.versioning_bucket: |-
                    {
                      "bucket": "my-versioning-bucket"
                    }
                aws_s3_bucket_acl.bucket_acl: |-
                    {
                      "acl": "private",
                      "bucket": "${aws_s3_bucket.bucket.id}"
                    }
                aws_s3_bucket_acl.versioning_bucket_acl: |-
                    {
                      "acl": "private",
                      "bucket": "${aws_s3_bucket.versioning_bucket.id}"
                    }
                aws_s3_bucket_versioning.versioning: |-
                    {
                      "bucket": "${aws_s3_bucket.versioning_bucket.id}",
                      "versioning_configuration": [
                        {
                          "status": "Enabled"
                        }
                      ]
                    }
            - name: versioning-bucket-config
              manifest: |-
                {
                  "bucket": "${aws_s3_bucket.versioning_bucket.bucket}",
                  "depends_on": [
                    "${aws_s3_bucket_versioning.versioning}"
                  ],
                  "rule": [
                    {
                      "filter": [
                        {
                          "prefix": "config/"
                        }
                      ],
                      "id": "config",
                      "noncurrent_version_expiration": [
                        {
                          "noncurrent_days": 90
                        }
                      ],
                      "noncurrent_version_transition": [
                        {
                          "noncurrent_days": 30,
                          "storage_class": "STANDARD_IA"
                        },
                        {
                          "noncurrent_days": 60,
                          "storage_class": "GLACIER"
                        }
                      ],
                      "status": "Enabled"
                    }
                  ]
                }
              references:
                bucket: aws_s3_bucket.versioning_bucket.bucket
              dependencies:
                aws_s3_bucket.bucket: |-
                    {
                      "bucket": "my-bucket"
                    }
                aws_s3_bucket.versioning_bucket: |-
                    {
                      "bucket": "my-versioning-bucket"
                    }
                aws_s3_bucket_acl.bucket_acl: |-
                    {
                      "acl": "private",
                      "bucket": "${aws_s3_bucket.bucket.id}"
                    }
                aws_s3_bucket_acl.versioning_bucket_acl: |-
                    {
                      "acl": "private",
                      "bucket": "${aws_s3_bucket.versioning_bucket.id}"
                    }
                aws_s3_bucket_versioning.versioning: |-
                    {
                      "bucket": "${aws_s3_bucket.versioning_bucket.id}",
                      "versioning_configuration": [
                        {
                          "status": "Enabled"
                        }
                      ]
                    }
        argumentDocs:
            and.object_size_greater_than: '- (Optional) Minimum object size to which the rule applies. Value must be at least 0 if specified.'
            and.object_size_less_than: '- (Optional) Maximum object size to which the rule applies. Value must be at least 1 if specified.'
            and.prefix: '- (Optional) Prefix identifying one or more objects to which the rule applies.'
            and.tags: '- (Optional) Key-value map of resource tags. All of these tags must exist in the object''s tag set in order for the rule to apply.'
            bucket: '- (Required) The name of the source S3 bucket you want Amazon S3 to monitor.'
            expected_bucket_owner: '- (Optional) The account ID of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.'
            expiration.date: '- (Optional) The date the object is to be moved or deleted. Should be in RFC3339 format.'
            expiration.days: '- (Optional) The lifetime, in days, of the objects that are subject to the rule. The value must be a non-zero positive integer.'
            expiration.expired_object_delete_marker: '- (Optional, Conflicts with date and days) Indicates whether Amazon S3 will remove a delete marker with no noncurrent versions. If set to true, the delete marker will be expired; if set to false the policy takes no action.'
            filter.and: '- (Optional) Configuration block used to apply a logical AND to two or more predicates documented below. The Lifecycle Rule will apply to any object matching all the predicates configured inside the and block.'
            filter.object_size_greater_than: '- (Optional) Minimum object size (in bytes) to which the rule applies.'
            filter.object_size_less_than: '- (Optional) Maximum object size (in bytes) to which the rule applies.'
            filter.prefix: '- (Optional) Prefix identifying one or more objects to which the rule applies. Defaults to an empty string ("") if not specified.'
            filter.tag: '- (Optional) A configuration block for specifying a tag key and value documented below.'
            id: and status)
            noncurrent_version_expiration.newer_noncurrent_versions: '- (Optional) The number of noncurrent versions Amazon S3 will retain. Must be a non-zero positive integer.'
            noncurrent_version_expiration.noncurrent_days: '- (Optional) The number of days an object is noncurrent before Amazon S3 can perform the associated action. Must be a positive integer.'
            noncurrent_version_transition.newer_noncurrent_versions: '- (Optional) The number of noncurrent versions Amazon S3 will retain. Must be a non-zero positive integer.'
            noncurrent_version_transition.noncurrent_days: '- (Optional) The number of days an object is noncurrent before Amazon S3 can perform the associated action.'
            noncurrent_version_transition.storage_class: '- (Required) The class of storage used to store the object. Valid Values: GLACIER, STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, DEEP_ARCHIVE, GLACIER_IR.'
            rule: '- (Required) List of configuration blocks describing the rules managing the replication documented below.'
            rule.abort_incomplete_multipart_upload: '- (Optional) Configuration block that specifies the days since the initiation of an incomplete multipart upload that Amazon S3 will wait before permanently removing all parts of the upload documented below.'
            rule.abort_incomplete_multipart_upload.days_after_initiation: '- The number of days after which Amazon S3 aborts an incomplete multipart upload.'
            rule.expiration: '- (Optional) Configuration block that specifies the expiration for the lifecycle of the object in the form of date, days and, whether the object has a delete marker documented below.'
            rule.filter: '- (Optional) Configuration block used to identify objects that a Lifecycle Rule applies to documented below. If not specified, the rule will default to using prefix.'
            rule.id: '- (Required) Unique identifier for the rule. The value cannot be longer than 255 characters.'
            rule.noncurrent_version_expiration: '- (Optional) Configuration block that specifies when noncurrent object versions expire documented below.'
            rule.noncurrent_version_transition: '- (Optional) Set of configuration blocks that specify the transition rule for the lifecycle rule that describes when noncurrent objects transition to a specific storage class documented below.'
            rule.prefix: '- (Optional) DEPRECATED Use filter instead. This has been deprecated by Amazon S3. Prefix identifying one or more objects to which the rule applies. Defaults to an empty string ("") if filter is not specified.'
            rule.status: '- (Required) Whether the rule is currently being applied. Valid values: Enabled or Disabled.'
            rule.transition: '- (Optional) Set of configuration blocks that specify when an Amazon S3 object transitions to a specified storage class documented below.'
            tag.key: '- (Required) Name of the object key.'
            tag.value: '- (Required) Value of the tag.'
            transition.date: '- (Optional, Conflicts with days) The date objects are transitioned to the specified storage class. The date value must be in RFC3339 format and set to midnight UTC e.g. 2023-01-13T00:00:00Z.'
            transition.days: '- (Optional, Conflicts with date) The number of days after creation when objects are transitioned to the specified storage class. The value must be a positive integer. If both days and date are not specified, defaults to 0. Valid values depend on storage_class, see Transition objects using Amazon S3 Lifecycle for more details.'
            transition.storage_class: '- The class of storage used to store the object. Valid Values: GLACIER, STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, DEEP_ARCHIVE, GLACIER_IR.'
        importStatements: []
    aws_s3_bucket_logging:
        subCategory: S3 (Simple Storage)
        description: Provides an S3 bucket (server access) logging resource.
        name: aws_s3_bucket_logging
        title: aws_s3_bucket_logging
        examples:
            - name: example
              manifest: |-
                {
                  "bucket": "${aws_s3_bucket.example.id}",
                  "target_bucket": "${aws_s3_bucket.log_bucket.id}",
                  "target_prefix": "log/"
                }
              references:
                bucket: aws_s3_bucket.example.id
                target_bucket: aws_s3_bucket.log_bucket.id
              dependencies:
                aws_s3_bucket.example: |-
                    {
                      "bucket": "my-tf-example-bucket"
                    }
                aws_s3_bucket.log_bucket: |-
                    {
                      "bucket": "my-tf-log-bucket"
                    }
                aws_s3_bucket_acl.example: |-
                    {
                      "acl": "private",
                      "bucket": "${aws_s3_bucket.example.id}"
                    }
                aws_s3_bucket_acl.log_bucket_acl: |-
                    {
                      "acl": "log-delivery-write",
                      "bucket": "${aws_s3_bucket.log_bucket.id}"
                    }
        argumentDocs:
            bucket: '- (Required, Forces new resource) The name of the bucket.'
            expected_bucket_owner: '- (Optional, Forces new resource) The account ID of the expected bucket owner.'
            id: '- The bucket or bucket and expected_bucket_owner separated by a comma (,) if the latter is provided.'
            target_bucket: '- (Required) The name of the bucket where you want Amazon S3 to store server access logs.'
            target_grant: '- (Optional) Set of configuration blocks with information for granting permissions documented below.'
            target_grant.grantee: '- (Required) A configuration block for the person being granted permissions documented below.'
            target_grant.grantee.email_address: '- (Optional) Email address of the grantee. See Regions and Endpoints for supported AWS regions where this argument can be specified.'
            target_grant.grantee.id: '- (Optional) The canonical user ID of the grantee.'
            target_grant.grantee.type: '- (Required) Type of grantee. Valid values: CanonicalUser, AmazonCustomerByEmail, Group.'
            target_grant.grantee.uri: '- (Optional) URI of the grantee group.'
            target_grant.permission: '- (Required) Logging permissions assigned to the grantee for the bucket. Valid values: FULL_CONTROL, READ, WRITE.'
            target_prefix: '- (Required) A prefix for all log object keys.'
        importStatements: []
    aws_s3_bucket_metric:
        subCategory: S3 (Simple Storage)
        description: Provides a S3 bucket metrics configuration resource.
        name: aws_s3_bucket_metric
        title: aws_s3_bucket_metric
        examples:
            - name: example-entire-bucket
              manifest: |-
                {
                  "bucket": "${aws_s3_bucket.example.bucket}",
                  "name": "EntireBucket"
                }
              references:
                bucket: aws_s3_bucket.example.bucket
              dependencies:
                aws_s3_bucket.example: |-
                    {
                      "bucket": "example"
                    }
            - name: example-filtered
              manifest: |-
                {
                  "bucket": "${aws_s3_bucket.example.bucket}",
                  "filter": [
                    {
                      "prefix": "documents/",
                      "tags": {
                        "class": "blue",
                        "priority": "high"
                      }
                    }
                  ],
                  "name": "ImportantBlueDocuments"
                }
              references:
                bucket: aws_s3_bucket.example.bucket
              dependencies:
                aws_s3_bucket.example: |-
                    {
                      "bucket": "example"
                    }
        argumentDocs:
            bucket: '- (Required) The name of the bucket to put metric configuration.'
            filter: '- (Optional) Object filtering that accepts a prefix, tags, or a logical AND of prefix and tags (documented below).'
            name: '- (Required) Unique identifier of the metrics configuration for the bucket. Must be less than or equal to 64 characters in length.'
            prefix: '- (Optional) Object prefix for filtering (singular).'
            tags: '- (Optional) Object tags for filtering (up to 10).'
        importStatements: []
    aws_s3_bucket_notification:
        subCategory: S3 (Simple Storage)
        description: Manages a S3 Bucket Notification Configuration
        name: aws_s3_bucket_notification
        title: aws_s3_bucket_notification
        examples:
            - name: bucket_notification
              manifest: |-
                {
                  "bucket": "${aws_s3_bucket.bucket.id}",
                  "topic": [
                    {
                      "events": [
                        "s3:ObjectCreated:*"
                      ],
                      "filter_suffix": ".log",
                      "topic_arn": "${aws_sns_topic.topic.arn}"
                    }
                  ]
                }
              references:
                bucket: aws_s3_bucket.bucket.id
                topic.topic_arn: aws_sns_topic.topic.arn
              dependencies:
                aws_s3_bucket.bucket: |-
                    {
                      "bucket": "your-bucket-name"
                    }
                aws_sns_topic.topic: |-
                    {
                      "name": "s3-event-notification-topic",
                      "policy": "{\n    \"Version\":\"2012-10-17\",\n    \"Statement\":[{\n        \"Effect\": \"Allow\",\n        \"Principal\": { \"Service\": \"s3.amazonaws.com\" },\n        \"Action\": \"SNS:Publish\",\n        \"Resource\": \"arn:aws:sns:*:*:s3-event-notification-topic\",\n        \"Condition\":{\n            \"ArnLike\":{\"aws:SourceArn\":\"${aws_s3_bucket.bucket.arn}\"}\n        }\n    }]\n}\n"
                    }
            - name: bucket_notification
              manifest: |-
                {
                  "bucket": "${aws_s3_bucket.bucket.id}",
                  "queue": [
                    {
                      "events": [
                        "s3:ObjectCreated:*"
                      ],
                      "filter_suffix": ".log",
                      "queue_arn": "${aws_sqs_queue.queue.arn}"
                    }
                  ]
                }
              references:
                bucket: aws_s3_bucket.bucket.id
                queue.queue_arn: aws_sqs_queue.queue.arn
              dependencies:
                aws_s3_bucket.bucket: |-
                    {
                      "bucket": "your-bucket-name"
                    }
                aws_sqs_queue.queue: |-
                    {
                      "name": "s3-event-notification-queue",
                      "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Principal\": \"*\",\n      \"Action\": \"sqs:SendMessage\",\n\t  \"Resource\": \"arn:aws:sqs:*:*:s3-event-notification-queue\",\n      \"Condition\": {\n        \"ArnEquals\": { \"aws:SourceArn\": \"${aws_s3_bucket.bucket.arn}\" }\n      }\n    }\n  ]\n}\n"
                    }
            - name: bucket_notification
              manifest: |-
                {
                  "bucket": "${aws_s3_bucket.bucket.id}",
                  "depends_on": [
                    "${aws_lambda_permission.allow_bucket}"
                  ],
                  "lambda_function": [
                    {
                      "events": [
                        "s3:ObjectCreated:*"
                      ],
                      "filter_prefix": "AWSLogs/",
                      "filter_suffix": ".log",
                      "lambda_function_arn": "${aws_lambda_function.func.arn}"
                    }
                  ]
                }
              references:
                bucket: aws_s3_bucket.bucket.id
                lambda_function.lambda_function_arn: aws_lambda_function.func.arn
              dependencies:
                aws_iam_role.iam_for_lambda: |-
                    {
                      "assume_role_policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"lambda.amazonaws.com\"\n      },\n      \"Effect\": \"Allow\"\n    }\n  ]\n}\n",
                      "name": "iam_for_lambda"
                    }
                aws_lambda_function.func: |-
                    {
                      "filename": "your-function.zip",
                      "function_name": "example_lambda_name",
                      "handler": "exports.example",
                      "role": "${aws_iam_role.iam_for_lambda.arn}",
                      "runtime": "go1.x"
                    }
                aws_lambda_permission.allow_bucket: |-
                    {
                      "action": "lambda:InvokeFunction",
                      "function_name": "${aws_lambda_function.func.arn}",
                      "principal": "s3.amazonaws.com",
                      "source_arn": "${aws_s3_bucket.bucket.arn}",
                      "statement_id": "AllowExecutionFromS3Bucket"
                    }
                aws_s3_bucket.bucket: |-
                    {
                      "bucket": "your-bucket-name"
                    }
            - name: bucket_notification
              manifest: |-
                {
                  "bucket": "${aws_s3_bucket.bucket.id}",
                  "depends_on": [
                    "${aws_lambda_permission.allow_bucket1}",
                    "${aws_lambda_permission.allow_bucket2}"
                  ],
                  "lambda_function": [
                    {
                      "events": [
                        "s3:ObjectCreated:*"
                      ],
                      "filter_prefix": "AWSLogs/",
                      "filter_suffix": ".log",
                      "lambda_function_arn": "${aws_lambda_function.func1.arn}"
                    },
                    {
                      "events": [
                        "s3:ObjectCreated:*"
                      ],
                      "filter_prefix": "OtherLogs/",
                      "filter_suffix": ".log",
                      "lambda_function_arn": "${aws_lambda_function.func2.arn}"
                    }
                  ]
                }
              references:
                bucket: aws_s3_bucket.bucket.id
                lambda_function.lambda_function_arn: aws_lambda_function.func2.arn
              dependencies:
                aws_iam_role.iam_for_lambda: |-
                    {
                      "assume_role_policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"lambda.amazonaws.com\"\n      },\n      \"Effect\": \"Allow\"\n    }\n  ]\n}\n",
                      "name": "iam_for_lambda"
                    }
                aws_lambda_function.func1: |-
                    {
                      "filename": "your-function1.zip",
                      "function_name": "example_lambda_name1",
                      "handler": "exports.example",
                      "role": "${aws_iam_role.iam_for_lambda.arn}",
                      "runtime": "go1.x"
                    }
                aws_lambda_function.func2: |-
                    {
                      "filename": "your-function2.zip",
                      "function_name": "example_lambda_name2",
                      "handler": "exports.example",
                      "role": "${aws_iam_role.iam_for_lambda.arn}"
                    }
                aws_lambda_permission.allow_bucket1: |-
                    {
                      "action": "lambda:InvokeFunction",
                      "function_name": "${aws_lambda_function.func1.arn}",
                      "principal": "s3.amazonaws.com",
                      "source_arn": "${aws_s3_bucket.bucket.arn}",
                      "statement_id": "AllowExecutionFromS3Bucket1"
                    }
                aws_lambda_permission.allow_bucket2: |-
                    {
                      "action": "lambda:InvokeFunction",
                      "function_name": "${aws_lambda_function.func2.arn}",
                      "principal": "s3.amazonaws.com",
                      "source_arn": "${aws_s3_bucket.bucket.arn}",
                      "statement_id": "AllowExecutionFromS3Bucket2"
                    }
                aws_s3_bucket.bucket: |-
                    {
                      "bucket": "your-bucket-name"
                    }
            - name: bucket_notification
              manifest: |-
                {
                  "bucket": "${aws_s3_bucket.bucket.id}",
                  "queue": [
                    {
                      "events": [
                        "s3:ObjectCreated:*"
                      ],
                      "filter_prefix": "images/",
                      "id": "image-upload-event",
                      "queue_arn": "${aws_sqs_queue.queue.arn}"
                    },
                    {
                      "events": [
                        "s3:ObjectCreated:*"
                      ],
                      "filter_prefix": "videos/",
                      "id": "video-upload-event",
                      "queue_arn": "${aws_sqs_queue.queue.arn}"
                    }
                  ]
                }
              references:
                bucket: aws_s3_bucket.bucket.id
                queue.queue_arn: aws_sqs_queue.queue.arn
              dependencies:
                aws_s3_bucket.bucket: |-
                    {
                      "bucket": "your-bucket-name"
                    }
                aws_sqs_queue.queue: |-
                    {
                      "name": "s3-event-notification-queue",
                      "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Principal\": \"*\",\n      \"Action\": \"sqs:SendMessage\",\n\t  \"Resource\": \"arn:aws:sqs:*:*:s3-event-notification-queue\",\n      \"Condition\": {\n        \"ArnEquals\": { \"aws:SourceArn\": \"${aws_s3_bucket.bucket.arn}\" }\n      }\n    }\n  ]\n}\n"
                    }
        argumentDocs:
            bucket: '- (Required) Name of the bucket for notification configuration.'
            eventbridge: '- (Optional) Whether to enable Amazon EventBridge notifications.'
            lambda_function: '- (Optional, Multiple) Used to configure notifications to a Lambda Function. See below.'
            lambda_function.events: '- (Required) Event for which to send notifications.'
            lambda_function.filter_prefix: '- (Optional) Object key name prefix.'
            lambda_function.filter_suffix: '- (Optional) Object key name suffix.'
            lambda_function.id: '- (Optional) Unique identifier for each of the notification configurations.'
            lambda_function.lambda_function_arn: '- (Required) Lambda function ARN.'
            queue: '- (Optional) Notification configuration to SQS Queue. See below.'
            queue.events: '- (Required) Specifies event for which to send notifications.'
            queue.filter_prefix: '- (Optional) Object key name prefix.'
            queue.filter_suffix: '- (Optional) Object key name suffix.'
            queue.id: '- (Optional) Unique identifier for each of the notification configurations.'
            queue.queue_arn: '- (Required) SQS queue ARN.'
            topic: '- (Optional) Notification configuration to SNS Topic. See below.'
            topic.events: '- (Required) Event for which to send notifications.'
            topic.filter_prefix: '- (Optional) Object key name prefix.'
            topic.filter_suffix: '- (Optional) Object key name suffix.'
            topic.id: '- (Optional) Unique identifier for each of the notification configurations.'
            topic.topic_arn: '- (Required) SNS topic ARN.'
        importStatements: []
    aws_s3_bucket_object:
        subCategory: S3 (Simple Storage)
        description: Provides an S3 object resource.
        name: aws_s3_bucket_object
        title: aws_s3_bucket_object
        examples:
            - name: object
              manifest: |-
                {
                  "bucket": "your_bucket_name",
                  "etag": "${filemd5(\"path/to/file\")}",
                  "key": "new_object_key",
                  "source": "path/to/file"
                }
            - name: example
              manifest: |-
                {
                  "bucket": "${aws_s3_bucket.examplebucket.id}",
                  "key": "someobject",
                  "kms_key_id": "${aws_kms_key.examplekms.arn}",
                  "source": "index.html"
                }
              references:
                bucket: aws_s3_bucket.examplebucket.id
                kms_key_id: aws_kms_key.examplekms.arn
              dependencies:
                aws_kms_key.examplekms: |-
                    {
                      "deletion_window_in_days": 7,
                      "description": "KMS key 1"
                    }
                aws_s3_bucket.examplebucket: |-
                    {
                      "bucket": "examplebuckettftest"
                    }
                aws_s3_bucket_acl.example: |-
                    {
                      "acl": "private",
                      "bucket": "${aws_s3_bucket.examplebucket.id}"
                    }
            - name: example
              manifest: |-
                {
                  "bucket": "${aws_s3_bucket.examplebucket.id}",
                  "key": "someobject",
                  "server_side_encryption": "aws:kms",
                  "source": "index.html"
                }
              references:
                bucket: aws_s3_bucket.examplebucket.id
              dependencies:
                aws_s3_bucket.examplebucket: |-
                    {
                      "bucket": "examplebuckettftest"
                    }
                aws_s3_bucket_acl.example: |-
                    {
                      "acl": "private",
                      "bucket": "${aws_s3_bucket.examplebucket.id}"
                    }
            - name: example
              manifest: |-
                {
                  "bucket": "${aws_s3_bucket.examplebucket.id}",
                  "key": "someobject",
                  "server_side_encryption": "AES256",
                  "source": "index.html"
                }
              references:
                bucket: aws_s3_bucket.examplebucket.id
              dependencies:
                aws_s3_bucket.examplebucket: |-
                    {
                      "bucket": "examplebuckettftest"
                    }
                aws_s3_bucket_acl.example: |-
                    {
                      "acl": "private",
                      "bucket": "${aws_s3_bucket.examplebucket.id}"
                    }
            - name: example
              manifest: |-
                {
                  "bucket": "${aws_s3_bucket.examplebucket.id}",
                  "depends_on": [
                    "${aws_s3_bucket_versioning.example}"
                  ],
                  "force_destroy": true,
                  "key": "someobject",
                  "object_lock_legal_hold_status": "ON",
                  "object_lock_mode": "GOVERNANCE",
                  "object_lock_retain_until_date": "2021-12-31T23:59:60Z",
                  "source": "important.txt"
                }
              references:
                bucket: aws_s3_bucket.examplebucket.id
              dependencies:
                aws_s3_bucket.examplebucket: |-
                    {
                      "bucket": "examplebuckettftest",
                      "object_lock_enabled": true
                    }
                aws_s3_bucket_acl.example: |-
                    {
                      "acl": "private",
                      "bucket": "${aws_s3_bucket.examplebucket.id}"
                    }
                aws_s3_bucket_versioning.example: |-
                    {
                      "bucket": "${aws_s3_bucket.examplebucket.id}",
                      "versioning_configuration": [
                        {
                          "status": "Enabled"
                        }
                      ]
                    }
        argumentDocs:
            acl: '- (Optional) Canned ACL to apply. Valid values are private, public-read, public-read-write, aws-exec-read, authenticated-read, bucket-owner-read, and bucket-owner-full-control. Defaults to private.'
            bucket: '- (Required) Name of the bucket to put the file in. Alternatively, an S3 access point ARN can be specified.'
            bucket_key_enabled: '- (Optional) Whether or not to use Amazon S3 Bucket Keys for SSE-KMS.'
            cache_control: '- (Optional) Caching behavior along the request/reply chain Read w3c cache_control for further details.'
            content: '- (Optional, conflicts with source and content_base64) Literal string value to use as the object content, which will be uploaded as UTF-8-encoded text.'
            content_base64: '- (Optional, conflicts with source and content) Base64-encoded data that will be decoded and uploaded as raw bytes for the object content. This allows safely uploading non-UTF8 binary data, but is recommended only for small content such as the result of the gzipbase64 function with small text strings. For larger objects, use source to stream the content from a disk file.'
            content_disposition: '- (Optional) Presentational information for the object. Read w3c content_disposition for further information.'
            content_encoding: '- (Optional) Content encodings that have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field. Read w3c content encoding for further information.'
            content_language: '- (Optional) Language the content is in e.g., en-US or en-GB.'
            content_type: '- (Optional) Standard MIME type describing the format of the object data, e.g., application/octet-stream. All Valid MIME Types are valid for this input.'
            etag: '- (Optional) Triggers updates when the value changes. The only meaningful value is filemd5("path/to/file") (Terraform 0.11.12 or later) or ${md5(file("path/to/file"))} (Terraform 0.11.11 or earlier). This attribute is not compatible with KMS encryption, kms_key_id or server_side_encryption = "aws:kms" (see source_hash instead).'
            force_destroy: '- (Optional) Whether to allow the object to be deleted by removing any legal hold on any object version. Default is false. This value should be set to true only if the bucket has S3 object lock enabled.'
            id: '- key of the resource supplied above'
            key: '- (Required) Name of the object once it is in the bucket.'
            kms_key_id: '- (Optional) ARN of the KMS Key to use for object encryption. If the S3 Bucket has server-side encryption enabled, that value will automatically be used. If referencing the aws_kms_key resource, use the arn attribute. If referencing the aws_kms_alias data source or resource, use the target_key_arn attribute. Terraform will only perform drift detection if a configuration value is provided.'
            metadata: '- (Optional) Map of keys/values to provision metadata (will be automatically prefixed by x-amz-meta-, note that only lowercase label are currently supported by the AWS Go API).'
            object_lock_legal_hold_status: '- (Optional) Legal hold status that you want to apply to the specified object. Valid values are ON and OFF.'
            object_lock_mode: '- (Optional) Object lock retention mode that you want to apply to this object. Valid values are GOVERNANCE and COMPLIANCE.'
            object_lock_retain_until_date: '- (Optional) Date and time, in RFC3339 format, when this object''s object lock will expire.'
            server_side_encryption: '- (Optional) Server-side encryption of the object in S3. Valid values are "AES256" and "aws:kms".'
            source: '- (Optional, conflicts with content and content_base64) Path to a file that will be read and uploaded as raw bytes for the object content.'
            source_hash: '- (Optional) Triggers updates like etag but useful to address etag encryption limitations. Set using filemd5("path/to/source") (Terraform 0.11.12 or later). (The value is only stored in state and not saved by AWS.)'
            storage_class: '- (Optional) Storage Class for the object. Defaults to "STANDARD".'
            tags: '- (Optional) Map of tags to assign to the object. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            version_id: '- Unique version ID value for the object, if bucket versioning is enabled.'
            website_redirect: '- (Optional) Target URL for website redirect.'
        importStatements: []
    aws_s3_bucket_object_lock_configuration:
        subCategory: S3 (Simple Storage)
        description: Provides an S3 bucket Object Lock configuration resource.
        name: aws_s3_bucket_object_lock_configuration
        title: aws_s3_bucket_object_lock_configuration
        examples:
            - name: example
              manifest: |-
                {
                  "bucket": "${aws_s3_bucket.example.bucket}",
                  "rule": [
                    {
                      "default_retention": [
                        {
                          "days": 5,
                          "mode": "COMPLIANCE"
                        }
                      ]
                    }
                  ]
                }
              references:
                bucket: aws_s3_bucket.example.bucket
              dependencies:
                aws_s3_bucket.example: |-
                    {
                      "bucket": "mybucket",
                      "object_lock_enabled": true
                    }
            - name: example
              manifest: |-
                {
                  "bucket": "${aws_s3_bucket.example.bucket}",
                  "rule": [
                    {
                      "default_retention": [
                        {
                          "days": 5,
                          "mode": "COMPLIANCE"
                        }
                      ]
                    }
                  ],
                  "token": "NG2MKsfoLqV3A+aquXneSG4LOu/ekrlXkRXwIPFVfERT7XOPos+/k444d7RIH0E3W3p5QU6ml2exS2F/eYCFmMWHJ3hFZGk6al1sIJkmNhUMYmsv0jYVQyTTZNLM+DnfooA6SATt39mM1VW1yJh4E+XljMlWzaBwHKbss3/EjlGDjOmVhaSs4Z6427mMCaFD0RLwsYY7zX49gEc31YfOMJGxbXCXSeyNwAhhM/A8UH7gQf38RmjHjjAFbbbLtl8arsxTPW8F1IYohqwmKIr9DnotLLj8Tg44U2SPwujVaqmlKKP9s41rfgb4UbIm7khSafDBng0LGfxC4pMlT9Ny2w=="
                }
              references:
                bucket: aws_s3_bucket.example.bucket
        argumentDocs:
            bucket: '- (Required, Forces new resource) The name of the bucket.'
            expected_bucket_owner: '- (Optional, Forces new resource) The account ID of the expected bucket owner.'
            id: '- The bucket or bucket and expected_bucket_owner separated by a comma (,) if the latter is provided.'
            object_lock_enabled: '- (Optional, Forces new resource) Indicates whether this bucket has an Object Lock configuration enabled. Defaults to Enabled. Valid values: Enabled.'
            rule: '- (Required) Configuration block for specifying the Object Lock rule for the specified object detailed below.'
            rule.default_retention: '- (Required) A configuration block for specifying the default Object Lock retention settings for new objects placed in the specified bucket detailed below.'
            rule.default_retention.days: '- (Optional, Required if years is not specified) The number of days that you want to specify for the default retention period.'
            rule.default_retention.mode: '- (Required) The default Object Lock retention mode you want to apply to new objects placed in the specified bucket. Valid values: COMPLIANCE, GOVERNANCE.'
            rule.default_retention.years: '- (Optional, Required if days is not specified) The number of years that you want to specify for the default retention period.'
            token: |-
                - (Optional) A token to allow Object Lock to be enabled for an existing bucket. You must contact AWS support for the bucket's "Object Lock token".
                The token is generated in the back-end when versioning is enabled on a bucket. For more details on versioning, see the aws_s3_bucket_versioning resource.
        importStatements: []
    aws_s3_bucket_ownership_controls:
        subCategory: S3 (Simple Storage)
        description: Manages S3 Bucket Ownership Controls.
        name: aws_s3_bucket_ownership_controls
        title: aws_s3_bucket_ownership_controls
        examples:
            - name: example
              manifest: |-
                {
                  "bucket": "${aws_s3_bucket.example.id}",
                  "rule": [
                    {
                      "object_ownership": "BucketOwnerPreferred"
                    }
                  ]
                }
              references:
                bucket: aws_s3_bucket.example.id
              dependencies:
                aws_s3_bucket.example: |-
                    {
                      "bucket": "example"
                    }
        argumentDocs:
            BucketOwnerEnforced: '- The bucket owner automatically owns and has full control over every object in the bucket. ACLs no longer affect permissions to data in the S3 bucket.'
            BucketOwnerPreferred: '- Objects uploaded to the bucket change ownership to the bucket owner if the objects are uploaded with the bucket-owner-full-control canned ACL.'
            ObjectWriter: '- The uploading account will own the object if the object is uploaded with the bucket-owner-full-control canned ACL.'
            bucket: '- (Required) The name of the bucket that you want to associate this access point with.'
            id: '- S3 Bucket name.'
            rule: '- (Required) Configuration block(s) with Ownership Controls rules. Detailed below.'
            rule.object_ownership: '- (Required) Object ownership. Valid values: BucketOwnerPreferred, ObjectWriter or BucketOwnerEnforced'
        importStatements: []
    aws_s3_bucket_policy:
        subCategory: S3 (Simple Storage)
        description: Attaches a policy to an S3 bucket resource.
        name: aws_s3_bucket_policy
        title: aws_s3_bucket_policy
        examples:
            - name: allow_access_from_another_account
              manifest: |-
                {
                  "bucket": "${aws_s3_bucket.example.id}",
                  "policy": "${data.aws_iam_policy_document.allow_access_from_another_account.json}"
                }
              references:
                bucket: aws_s3_bucket.example.id
                policy: data.aws_iam_policy_document.allow_access_from_another_account.json
              dependencies:
                aws_s3_bucket.example: |-
                    {
                      "bucket": "my-tf-test-bucket"
                    }
        argumentDocs:
            bucket: '- (Required) The name of the bucket to which to apply the policy.'
            policy: '- (Required) The text of the policy. Although this is a bucket policy rather than an IAM policy, the aws_iam_policy_document data source may be used, so long as it specifies a principal. For more information about building AWS IAM policy documents with Terraform, see the AWS IAM Policy Document Guide. Note: Bucket policies are limited to 20 KB in size.'
        importStatements: []
    aws_s3_bucket_public_access_block:
        subCategory: S3 (Simple Storage)
        description: Manages S3 bucket-level Public Access Block Configuration
        name: aws_s3_bucket_public_access_block
        title: aws_s3_bucket_public_access_block
        examples:
            - name: example
              manifest: |-
                {
                  "block_public_acls": true,
                  "block_public_policy": true,
                  "bucket": "${aws_s3_bucket.example.id}"
                }
              references:
                bucket: aws_s3_bucket.example.id
              dependencies:
                aws_s3_bucket.example: |-
                    {
                      "bucket": "example"
                    }
        argumentDocs:
            block_public_acls: '- (Optional) Whether Amazon S3 should block public ACLs for this bucket. Defaults to false. Enabling this setting does not affect existing policies or ACLs. When set to true causes the following behavior:'
            block_public_policy: '- (Optional) Whether Amazon S3 should block public bucket policies for this bucket. Defaults to false. Enabling this setting does not affect the existing bucket policy. When set to true causes Amazon S3 to:'
            bucket: '- (Required) S3 Bucket to which this Public Access Block configuration should be applied.'
            id: '- Name of the S3 bucket the configuration is attached to'
            ignore_public_acls: '- (Optional) Whether Amazon S3 should ignore public ACLs for this bucket. Defaults to false. Enabling this setting does not affect the persistence of any existing ACLs and doesn''t prevent new public ACLs from being set. When set to true causes Amazon S3 to:'
            restrict_public_buckets: '- (Optional) Whether Amazon S3 should restrict public bucket policies for this bucket. Defaults to false. Enabling this setting does not affect the previously stored bucket policy, except that public and cross-account access within the public bucket policy, including non-public delegation to specific accounts, is blocked. When set to true:'
        importStatements: []
    aws_s3_bucket_replication_configuration:
        subCategory: S3 (Simple Storage)
        description: Provides a S3 bucket replication configuration resource.
        name: aws_s3_bucket_replication_configuration
        title: aws_s3_bucket_replication_configuration
        examples:
            - name: replication
              manifest: |-
                {
                  "bucket": "${aws_s3_bucket.source.id}",
                  "depends_on": [
                    "${aws_s3_bucket_versioning.source}"
                  ],
                  "provider": "${aws.central}",
                  "role": "${aws_iam_role.replication.arn}",
                  "rule": [
                    {
                      "destination": [
                        {
                          "bucket": "${aws_s3_bucket.destination.arn}",
                          "storage_class": "STANDARD"
                        }
                      ],
                      "filter": [
                        {
                          "prefix": "foo"
                        }
                      ],
                      "id": "foobar",
                      "status": "Enabled"
                    }
                  ]
                }
              references:
                bucket: aws_s3_bucket.source.id
                provider: aws.central
                role: aws_iam_role.replication.arn
                rule.destination.bucket: aws_s3_bucket.destination.arn
              dependencies:
                aws_iam_policy.replication: |-
                    {
                      "name": "tf-iam-role-policy-replication-12345",
                      "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": [\n        \"s3:GetReplicationConfiguration\",\n        \"s3:ListBucket\"\n      ],\n      \"Effect\": \"Allow\",\n      \"Resource\": [\n        \"${aws_s3_bucket.source.arn}\"\n      ]\n    },\n    {\n      \"Action\": [\n        \"s3:GetObjectVersionForReplication\",\n        \"s3:GetObjectVersionAcl\",\n         \"s3:GetObjectVersionTagging\"\n      ],\n      \"Effect\": \"Allow\",\n      \"Resource\": [\n        \"${aws_s3_bucket.source.arn}/*\"\n      ]\n    },\n    {\n      \"Action\": [\n        \"s3:ReplicateObject\",\n        \"s3:ReplicateDelete\",\n        \"s3:ReplicateTags\"\n      ],\n      \"Effect\": \"Allow\",\n      \"Resource\": \"${aws_s3_bucket.destination.arn}/*\"\n    }\n  ]\n}\n"
                    }
                aws_iam_role.replication: |-
                    {
                      "assume_role_policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"s3.amazonaws.com\"\n      },\n      \"Effect\": \"Allow\",\n      \"Sid\": \"\"\n    }\n  ]\n}\n",
                      "name": "tf-iam-role-replication-12345"
                    }
                aws_iam_role_policy_attachment.replication: |-
                    {
                      "policy_arn": "${aws_iam_policy.replication.arn}",
                      "role": "${aws_iam_role.replication.name}"
                    }
                aws_s3_bucket.destination: |-
                    {
                      "bucket": "tf-test-bucket-destination-12345"
                    }
                aws_s3_bucket.source: |-
                    {
                      "bucket": "tf-test-bucket-source-12345",
                      "provider": "${aws.central}"
                    }
                aws_s3_bucket_acl.source_bucket_acl: |-
                    {
                      "acl": "private",
                      "bucket": "${aws_s3_bucket.source.id}",
                      "provider": "${aws.central}"
                    }
                aws_s3_bucket_versioning.destination: |-
                    {
                      "bucket": "${aws_s3_bucket.destination.id}",
                      "versioning_configuration": [
                        {
                          "status": "Enabled"
                        }
                      ]
                    }
                aws_s3_bucket_versioning.source: |-
                    {
                      "bucket": "${aws_s3_bucket.source.id}",
                      "provider": "${aws.central}",
                      "versioning_configuration": [
                        {
                          "status": "Enabled"
                        }
                      ]
                    }
            - name: east_to_west
              manifest: |-
                {
                  "bucket": "${aws_s3_bucket.east.id}",
                  "depends_on": [
                    "${aws_s3_bucket_versioning.east}"
                  ],
                  "role": "${aws_iam_role.east_replication.arn}",
                  "rule": [
                    {
                      "destination": [
                        {
                          "bucket": "${aws_s3_bucket.west.arn}",
                          "storage_class": "STANDARD"
                        }
                      ],
                      "filter": [
                        {
                          "prefix": "foo"
                        }
                      ],
                      "id": "foobar",
                      "status": "Enabled"
                    }
                  ]
                }
              references:
                bucket: aws_s3_bucket.east.id
                role: aws_iam_role.east_replication.arn
                rule.destination.bucket: aws_s3_bucket.west.arn
              dependencies:
                aws_s3_bucket.east: |-
                    {
                      "bucket": "tf-test-bucket-east-12345"
                    }
                aws_s3_bucket.west: |-
                    {
                      "bucket": "tf-test-bucket-west-12345",
                      "provider": "${aws.west}"
                    }
                aws_s3_bucket_versioning.east: |-
                    {
                      "bucket": "${aws_s3_bucket.east.id}",
                      "versioning_configuration": [
                        {
                          "status": "Enabled"
                        }
                      ]
                    }
                aws_s3_bucket_versioning.west: |-
                    {
                      "bucket": "${aws_s3_bucket.west.id}",
                      "provider": "${aws.west}",
                      "versioning_configuration": [
                        {
                          "status": "Enabled"
                        }
                      ]
                    }
            - name: west_to_east
              manifest: |-
                {
                  "bucket": "${aws_s3_bucket.west.id}",
                  "depends_on": [
                    "${aws_s3_bucket_versioning.west}"
                  ],
                  "provider": "${aws.west}",
                  "role": "${aws_iam_role.west_replication.arn}",
                  "rule": [
                    {
                      "destination": [
                        {
                          "bucket": "${aws_s3_bucket.east.arn}",
                          "storage_class": "STANDARD"
                        }
                      ],
                      "filter": [
                        {
                          "prefix": "foo"
                        }
                      ],
                      "id": "foobar",
                      "status": "Enabled"
                    }
                  ]
                }
              references:
                bucket: aws_s3_bucket.west.id
                provider: aws.west
                role: aws_iam_role.west_replication.arn
                rule.destination.bucket: aws_s3_bucket.east.arn
              dependencies:
                aws_s3_bucket.east: |-
                    {
                      "bucket": "tf-test-bucket-east-12345"
                    }
                aws_s3_bucket.west: |-
                    {
                      "bucket": "tf-test-bucket-west-12345",
                      "provider": "${aws.west}"
                    }
                aws_s3_bucket_versioning.east: |-
                    {
                      "bucket": "${aws_s3_bucket.east.id}",
                      "versioning_configuration": [
                        {
                          "status": "Enabled"
                        }
                      ]
                    }
                aws_s3_bucket_versioning.west: |-
                    {
                      "bucket": "${aws_s3_bucket.west.id}",
                      "provider": "${aws.west}",
                      "versioning_configuration": [
                        {
                          "status": "Enabled"
                        }
                      ]
                    }
        argumentDocs:
            bucket: '- (Required) The name of the source S3 bucket you want Amazon S3 to monitor.'
            destination.access_control_translation: '- (Optional) A configuration block that specifies the overrides to use for object owners on replication documented below. Specify this only in a cross-account scenario (where source and destination bucket owners are not the same), and you want to change replica ownership to the AWS account that owns the destination bucket. If this is not specified in the replication configuration, the replicas are owned by same AWS account that owns the source object. Must be used in conjunction with account owner override configuration.'
            destination.access_control_translation.owner: '- (Required) Specifies the replica ownership. For default and valid values, see PUT bucket replication in the Amazon S3 API Reference. Valid values: Destination.'
            destination.account: '- (Optional) The Account ID to specify the replica ownership. Must be used in conjunction with access_control_translation override configuration.'
            destination.bucket: '- (Required) The ARN of the S3 bucket where you want Amazon S3 to store replicas of the objects identified by the rule.'
            destination.encryption_configuration: '- (Optional) A configuration block that provides information about encryption documented below. If source_selection_criteria is specified, you must specify this element.'
            destination.metrics: '- (Optional) A configuration block that specifies replication metrics-related settings enabling replication metrics and events documented below.'
            destination.replication_time: '- (Optional) A configuration block that specifies S3 Replication Time Control (S3 RTC), including whether S3 RTC is enabled and the time when all objects and operations on objects must be replicated documented below. Replication Time Control must be used in conjunction with metrics.'
            destination.storage_class: '- (Optional) The storage class used to store the object. By default, Amazon S3 uses the storage class of the source object to create the object replica.'
            encryption_configuration.replica_kms_key_id: '- (Required) The ID (Key ARN or Alias ARN) of the customer managed AWS KMS key stored in AWS Key Management Service (KMS) for the destination bucket.'
            existing_object_replication.status: '- (Required) Whether the existing objects should be replicated. Either "Enabled" or "Disabled".'
            filter.and: '- (Optional) A configuration block for specifying rule filters. This element is required only if you specify more than one filter. See and below for more details.'
            filter.and.prefix: '- (Optional) An object key name prefix that identifies subset of objects to which the rule applies. Must be less than or equal to 1024 characters in length.'
            filter.and.tags: '- (Optional, Required if prefix is configured) A map of tags (key and value pairs) that identifies a subset of objects to which the rule applies. The rule applies only to objects having all the tags in its tagset.'
            filter.prefix: '- (Optional) An object key name prefix that identifies subset of objects to which the rule applies. Must be less than or equal to 1024 characters in length.'
            filter.tag: '- (Optional) A configuration block for specifying a tag key and value documented below.'
            id: '- The S3 source bucket name.'
            metrics.event_threshold: '- (Optional) A configuration block that specifies the time threshold for emitting the s3:Replication:OperationMissedThreshold event documented below.'
            metrics.event_threshold.minutes: '- (Required) Time in minutes. Valid values: 15.'
            metrics.status: '- (Required) The status of the Destination Metrics. Either "Enabled" or "Disabled".'
            replica_modifications.status: '- (Required) Whether the existing objects should be replicated. Either "Enabled" or "Disabled".'
            replication_time.status: '- (Required) The status of the Replication Time Control. Either "Enabled" or "Disabled".'
            replication_time.time: '- (Required) A configuration block specifying the time by which replication should be complete for all objects and operations on objects documented below.'
            replication_time.time.minutes: '- (Required) Time in minutes. Valid values: 15.'
            role: '- (Required) The ARN of the IAM role for Amazon S3 to assume when replicating the objects.'
            rule: '- (Required) List of configuration blocks describing the rules managing the replication documented below.'
            rule.delete_marker_replication: '- (Optional) Whether delete markers are replicated. This argument is only valid with V2 replication configurations (i.e., when filter is used)documented below.'
            rule.delete_marker_replication.status: '- (Required) Whether delete markers should be replicated. Either "Enabled" or "Disabled".'
            rule.destination: '- (Required) Specifies the destination for the rule documented below.'
            rule.existing_object_replication: '- (Optional) Replicate existing objects in the source bucket according to the rule configurations documented below.'
            rule.filter: '- (Optional, Conflicts with prefix) Filter that identifies subset of objects to which the replication rule applies documented below. If not specified, the rule will default to using prefix.'
            rule.id: '- (Optional) Unique identifier for the rule. Must be less than or equal to 255 characters in length.'
            rule.prefix: '- (Optional, Conflicts with filter, Deprecated) Object key name prefix identifying one or more objects to which the rule applies. Must be less than or equal to 1024 characters in length. Defaults to an empty string ("") if filter is not specified.'
            rule.priority: '- (Optional) The priority associated with the rule. Priority should only be set if filter is configured. If not provided, defaults to 0. Priority must be unique between multiple rules.'
            rule.source_selection_criteria: '- (Optional) Specifies special object selection criteria documented below.'
            rule.status: '- (Required) The status of the rule. Either "Enabled" or "Disabled". The rule is ignored if status is not "Enabled".'
            source_selection_criteria.replica_modifications: '- (Optional) A configuration block that you can specify for selections for modifications on replicas. Amazon S3 doesn''t replicate replica modifications by default. In the latest version of replication configuration (when filter is specified), you can specify this element and set the status to Enabled to replicate modifications on replicas.'
            source_selection_criteria.sse_kms_encrypted_objects: '- (Optional) A configuration block for filter information for the selection of Amazon S3 objects encrypted with AWS KMS. If specified, replica_kms_key_id in destination encryption_configuration must be specified as well.'
            sse_kms_encrypted_objects.status: '- (Required) Whether the existing objects should be replicated. Either "Enabled" or "Disabled".'
            tag.key: '- (Required) Name of the object key.'
            tag.value: '- (Required) Value of the tag.'
            token: |-
                - (Optional) A token to allow replication to be enabled on an Object Lock-enabled bucket. You must contact AWS support for the bucket's "Object Lock token".
                For more details, see Using S3 Object Lock with replication.
        importStatements: []
    aws_s3_bucket_request_payment_configuration:
        subCategory: S3 (Simple Storage)
        description: Provides an S3 bucket request payment configuration resource.
        name: aws_s3_bucket_request_payment_configuration
        title: aws_s3_bucket_request_payment_configuration
        examples:
            - name: example
              manifest: |-
                {
                  "bucket": "${aws_s3_bucket.example.bucket}",
                  "payer": "Requester"
                }
              references:
                bucket: aws_s3_bucket.example.bucket
        argumentDocs:
            bucket: '- (Required, Forces new resource) The name of the bucket.'
            expected_bucket_owner: '- (Optional, Forces new resource) The account ID of the expected bucket owner.'
            id: '- The bucket or bucket and expected_bucket_owner separated by a comma (,) if the latter is provided.'
            payer: '- (Required) Specifies who pays for the download and request fees. Valid values: BucketOwner, Requester.'
        importStatements: []
    aws_s3_bucket_server_side_encryption_configuration:
        subCategory: S3 (Simple Storage)
        description: Provides a S3 bucket server-side encryption configuration resource.
        name: aws_s3_bucket_server_side_encryption_configuration
        title: aws_s3_bucket_server_side_encryption_configuration
        examples:
            - name: example
              manifest: |-
                {
                  "bucket": "${aws_s3_bucket.mybucket.bucket}",
                  "rule": [
                    {
                      "apply_server_side_encryption_by_default": [
                        {
                          "kms_master_key_id": "${aws_kms_key.mykey.arn}",
                          "sse_algorithm": "aws:kms"
                        }
                      ]
                    }
                  ]
                }
              references:
                bucket: aws_s3_bucket.mybucket.bucket
                rule.apply_server_side_encryption_by_default.kms_master_key_id: aws_kms_key.mykey.arn
              dependencies:
                aws_kms_key.mykey: |-
                    {
                      "deletion_window_in_days": 10,
                      "description": "This key is used to encrypt bucket objects"
                    }
                aws_s3_bucket.mybucket: |-
                    {
                      "bucket": "mybucket"
                    }
        argumentDocs:
            bucket: '- (Required, Forces new resource) The name of the bucket.'
            expected_bucket_owner: '- (Optional, Forces new resource) The account ID of the expected bucket owner.'
            id: '- The bucket or bucket and expected_bucket_owner separated by a comma (,) if the latter is provided.'
            rule: '- (Required) Set of server-side encryption configuration rules. documented below. Currently, only a single rule is supported.'
            rule.apply_server_side_encryption_by_default: '- (Optional) A single object for setting server-side encryption by default documented below'
            rule.apply_server_side_encryption_by_default.kms_master_key_id: '- (Optional) The AWS KMS master key ID used for the SSE-KMS encryption. This can only be used when you set the value of sse_algorithm as aws:kms. The default aws/s3 AWS KMS master key is used if this element is absent while the sse_algorithm is aws:kms.'
            rule.apply_server_side_encryption_by_default.sse_algorithm: '- (Required) The server-side encryption algorithm to use. Valid values are AES256 and aws:kms'
            rule.bucket_key_enabled: '- (Optional) Whether or not to use Amazon S3 Bucket Keys for SSE-KMS.'
        importStatements: []
    aws_s3_bucket_versioning:
        subCategory: S3 (Simple Storage)
        description: Provides an S3 bucket versioning resource.
        name: aws_s3_bucket_versioning
        title: aws_s3_bucket_versioning
        examples:
            - name: versioning_example
              manifest: |-
                {
                  "bucket": "${aws_s3_bucket.example.id}",
                  "versioning_configuration": [
                    {
                      "status": "Enabled"
                    }
                  ]
                }
              references:
                bucket: aws_s3_bucket.example.id
              dependencies:
                aws_s3_bucket.example: |-
                    {
                      "bucket": "example-bucket"
                    }
                aws_s3_bucket_acl.example: |-
                    {
                      "acl": "private",
                      "bucket": "${aws_s3_bucket.example.id}"
                    }
            - name: versioning_example
              manifest: |-
                {
                  "bucket": "${aws_s3_bucket.example.id}",
                  "versioning_configuration": [
                    {
                      "status": "Disabled"
                    }
                  ]
                }
              references:
                bucket: aws_s3_bucket.example.id
              dependencies:
                aws_s3_bucket.example: |-
                    {
                      "bucket": "example-bucket"
                    }
                aws_s3_bucket_acl.example: |-
                    {
                      "acl": "private",
                      "bucket": "${aws_s3_bucket.example.id}"
                    }
            - name: example
              manifest: |-
                {
                  "bucket": "${aws_s3_bucket.example.id}",
                  "versioning_configuration": [
                    {
                      "status": "Enabled"
                    }
                  ]
                }
              references:
                bucket: aws_s3_bucket.example.id
              dependencies:
                aws_s3_bucket.example: |-
                    {
                      "bucket": "yotto"
                    }
                aws_s3_object.example: |-
                    {
                      "bucket": "${aws_s3_bucket_versioning.example.bucket}",
                      "key": "droeloe",
                      "source": "example.txt"
                    }
        argumentDocs:
            bucket: '- (Required, Forces new resource) The name of the S3 bucket.'
            expected_bucket_owner: '- (Optional, Forces new resource) The account ID of the expected bucket owner.'
            id: '- The bucket or bucket and expected_bucket_owner separated by a comma (,) if the latter is provided.'
            mfa: '- (Optional, Required if versioning_configuration mfa_delete is enabled) The concatenation of the authentication device''s serial number, a space, and the value that is displayed on your authentication device.'
            versioning_configuration: '- (Required) Configuration block for the versioning parameters detailed below.'
            versioning_configuration.mfa_delete: '- (Optional) Specifies whether MFA delete is enabled in the bucket versioning configuration. Valid values: Enabled or Disabled.'
            versioning_configuration.status: '- (Required) The versioning state of the bucket. Valid values: Enabled, Suspended, or Disabled. Disabled should only be used when creating or importing resources that correspond to unversioned S3 buckets.'
        importStatements: []
    aws_s3_bucket_website_configuration:
        subCategory: S3 (Simple Storage)
        description: Provides an S3 bucket website configuration resource.
        name: aws_s3_bucket_website_configuration
        title: aws_s3_bucket_website_configuration
        examples:
            - name: example
              manifest: |-
                {
                  "bucket": "${aws_s3_bucket.example.bucket}",
                  "error_document": [
                    {
                      "key": "error.html"
                    }
                  ],
                  "index_document": [
                    {
                      "suffix": "index.html"
                    }
                  ],
                  "routing_rule": [
                    {
                      "condition": [
                        {
                          "key_prefix_equals": "docs/"
                        }
                      ],
                      "redirect": [
                        {
                          "replace_key_prefix_with": "documents/"
                        }
                      ]
                    }
                  ]
                }
              references:
                bucket: aws_s3_bucket.example.bucket
            - name: example
              manifest: |-
                {
                  "bucket": "${aws_s3_bucket.example.bucket}",
                  "error_document": [
                    {
                      "key": "error.html"
                    }
                  ],
                  "index_document": [
                    {
                      "suffix": "index.html"
                    }
                  ],
                  "routing_rules": "[{\n    \"Condition\": {\n        \"KeyPrefixEquals\": \"docs/\"\n    },\n    \"Redirect\": {\n        \"ReplaceKeyPrefixWith\": \"\"\n    }\n}]\n"
                }
              references:
                bucket: aws_s3_bucket.example.bucket
        argumentDocs:
            bucket: '- (Required, Forces new resource) The name of the bucket.'
            error_document: '- (Optional, Conflicts with redirect_all_requests_to) The name of the error document for the website detailed below.'
            error_document.key: '- (Required) The object key name to use when a 4XX class error occurs.'
            expected_bucket_owner: '- (Optional, Forces new resource) The account ID of the expected bucket owner.'
            id: '- The bucket or bucket and expected_bucket_owner separated by a comma (,) if the latter is provided.'
            index_document: '- (Optional, Required if redirect_all_requests_to is not specified) The name of the index document for the website detailed below.'
            index_document.suffix: |-
                - (Required) A suffix that is appended to a request that is for a directory on the website endpoint.
                For example, if the suffix is index.html and you make a request to samplebucket/images/, the data that is returned will be for the object with the key name images/index.html.
                The suffix must not be empty and must not include a slash character.
            redirect.host_name: '- (Optional) The host name to use in the redirect request.'
            redirect.http_redirect_code: '- (Optional) The HTTP redirect code to use on the response.'
            redirect.protocol: '- (Optional) Protocol to use when redirecting requests. The default is the protocol that is used in the original request. Valid values: http, https.'
            redirect.replace_key_prefix_with: '- (Optional, Conflicts with replace_key_with) The object key prefix to use in the redirect request. For example, to redirect requests for all pages with prefix docs/ (objects in the docs/ folder) to documents/, you can set a condition block with key_prefix_equals set to docs/ and in the redirect set replace_key_prefix_with to /documents.'
            redirect.replace_key_with: '- (Optional, Conflicts with replace_key_prefix_with) The specific object key to use in the redirect request. For example, redirect request to error.html.'
            redirect_all_requests_to: '- (Optional, Required if index_document is not specified) The redirect behavior for every request to this bucket''s website endpoint detailed below. Conflicts with error_document, index_document, and routing_rule.'
            redirect_all_requests_to.host_name: '- (Required) Name of the host where requests are redirected.'
            redirect_all_requests_to.protocol: '- (Optional) Protocol to use when redirecting requests. The default is the protocol that is used in the original request. Valid values: http, https.'
            routing_rule: '- (Optional, Conflicts with redirect_all_requests_to and routing_rules) List of rules that define when a redirect is applied and the redirect behavior detailed below.'
            routing_rule.condition: '- (Optional) A configuration block for describing a condition that must be met for the specified redirect to apply detailed below.'
            routing_rule.condition.http_error_code_returned_equals: '- (Optional, Required if key_prefix_equals is not specified) The HTTP error code when the redirect is applied. If specified with key_prefix_equals, then both must be true for the redirect to be applied.'
            routing_rule.condition.key_prefix_equals: '- (Optional, Required if http_error_code_returned_equals is not specified) The object key name prefix when the redirect is applied. If specified with http_error_code_returned_equals, then both must be true for the redirect to be applied.'
            routing_rule.redirect: '- (Required) A configuration block for redirect information detailed below.'
            routing_rules: |-
                - (Optional, Conflicts with routing_rule and redirect_all_requests_to) A json array containing routing rules
                describing redirect behavior and when redirects are applied. Use this parameter when your routing rules contain empty String values ("") as seen in the example above.
            website_domain: '- The domain of the website endpoint. This is used to create Route 53 alias records.'
            website_endpoint: '- The website endpoint.'
        importStatements: []
    aws_s3_object:
        subCategory: S3 (Simple Storage)
        description: Provides an S3 object resource.
        name: aws_s3_object
        title: aws_s3_object
        examples:
            - name: object
              manifest: |-
                {
                  "bucket": "your_bucket_name",
                  "etag": "${filemd5(\"path/to/file\")}",
                  "key": "new_object_key",
                  "source": "path/to/file"
                }
            - name: example
              manifest: |-
                {
                  "bucket": "${aws_s3_bucket.examplebucket.id}",
                  "key": "someobject",
                  "kms_key_id": "${aws_kms_key.examplekms.arn}",
                  "source": "index.html"
                }
              references:
                bucket: aws_s3_bucket.examplebucket.id
                kms_key_id: aws_kms_key.examplekms.arn
              dependencies:
                aws_kms_key.examplekms: |-
                    {
                      "deletion_window_in_days": 7,
                      "description": "KMS key 1"
                    }
                aws_s3_bucket.examplebucket: |-
                    {
                      "bucket": "examplebuckettftest"
                    }
                aws_s3_bucket_acl.example: |-
                    {
                      "acl": "private",
                      "bucket": "${aws_s3_bucket.examplebucket.id}"
                    }
            - name: example
              manifest: |-
                {
                  "bucket": "${aws_s3_bucket.examplebucket.id}",
                  "key": "someobject",
                  "server_side_encryption": "aws:kms",
                  "source": "index.html"
                }
              references:
                bucket: aws_s3_bucket.examplebucket.id
              dependencies:
                aws_s3_bucket.examplebucket: |-
                    {
                      "bucket": "examplebuckettftest"
                    }
                aws_s3_bucket_acl.example: |-
                    {
                      "acl": "private",
                      "bucket": "${aws_s3_bucket.examplebucket.id}"
                    }
            - name: example
              manifest: |-
                {
                  "bucket": "${aws_s3_bucket.examplebucket.id}",
                  "key": "someobject",
                  "server_side_encryption": "AES256",
                  "source": "index.html"
                }
              references:
                bucket: aws_s3_bucket.examplebucket.id
              dependencies:
                aws_s3_bucket.examplebucket: |-
                    {
                      "bucket": "examplebuckettftest"
                    }
                aws_s3_bucket_acl.example: |-
                    {
                      "acl": "private",
                      "bucket": "${aws_s3_bucket.examplebucket.id}"
                    }
            - name: examplebucket_object
              manifest: |-
                {
                  "bucket": "${aws_s3_bucket.examplebucket.id}",
                  "depends_on": [
                    "${aws_s3_bucket_versioning.example}"
                  ],
                  "force_destroy": true,
                  "key": "someobject",
                  "object_lock_legal_hold_status": "ON",
                  "object_lock_mode": "GOVERNANCE",
                  "object_lock_retain_until_date": "2021-12-31T23:59:60Z",
                  "source": "important.txt"
                }
              references:
                bucket: aws_s3_bucket.examplebucket.id
              dependencies:
                aws_s3_bucket.examplebucket: |-
                    {
                      "bucket": "examplebuckettftest",
                      "object_lock_enabled": true
                    }
                aws_s3_bucket_acl.example: |-
                    {
                      "acl": "private",
                      "bucket": "${aws_s3_bucket.examplebucket.id}"
                    }
                aws_s3_bucket_versioning.example: |-
                    {
                      "bucket": "${aws_s3_bucket.examplebucket.id}",
                      "versioning_configuration": [
                        {
                          "status": "Enabled"
                        }
                      ]
                    }
        argumentDocs:
            acl: '- (Optional) Canned ACL to apply. Valid values are private, public-read, public-read-write, aws-exec-read, authenticated-read, bucket-owner-read, and bucket-owner-full-control. Defaults to private.'
            bucket: '- (Required) Name of the bucket to put the file in. Alternatively, an S3 access point ARN can be specified.'
            bucket_key_enabled: '- (Optional) Whether or not to use Amazon S3 Bucket Keys for SSE-KMS.'
            cache_control: '- (Optional) Caching behavior along the request/reply chain Read w3c cache_control for further details.'
            content: '- (Optional, conflicts with source and content_base64) Literal string value to use as the object content, which will be uploaded as UTF-8-encoded text.'
            content_base64: '- (Optional, conflicts with source and content) Base64-encoded data that will be decoded and uploaded as raw bytes for the object content. This allows safely uploading non-UTF8 binary data, but is recommended only for small content such as the result of the gzipbase64 function with small text strings. For larger objects, use source to stream the content from a disk file.'
            content_disposition: '- (Optional) Presentational information for the object. Read w3c content_disposition for further information.'
            content_encoding: '- (Optional) Content encodings that have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field. Read w3c content encoding for further information.'
            content_language: '- (Optional) Language the content is in e.g., en-US or en-GB.'
            content_type: '- (Optional) Standard MIME type describing the format of the object data, e.g., application/octet-stream. All Valid MIME Types are valid for this input.'
            etag: '- (Optional) Triggers updates when the value changes. The only meaningful value is filemd5("path/to/file") (Terraform 0.11.12 or later) or ${md5(file("path/to/file"))} (Terraform 0.11.11 or earlier). This attribute is not compatible with KMS encryption, kms_key_id or server_side_encryption = "aws:kms", also if an object is larger than 16 MB, the AWS Management Console will upload or copy that object as a Multipart Upload, and therefore the ETag will not be an MD5 digest (see source_hash instead).'
            force_destroy: '- (Optional) Whether to allow the object to be deleted by removing any legal hold on any object version. Default is false. This value should be set to true only if the bucket has S3 object lock enabled.'
            id: '- key of the resource supplied above'
            key: '- (Required) Name of the object once it is in the bucket.'
            kms_key_id: '- (Optional) ARN of the KMS Key to use for object encryption. If the S3 Bucket has server-side encryption enabled, that value will automatically be used. If referencing the aws_kms_key resource, use the arn attribute. If referencing the aws_kms_alias data source or resource, use the target_key_arn attribute. Terraform will only perform drift detection if a configuration value is provided.'
            metadata: '- (Optional) Map of keys/values to provision metadata (will be automatically prefixed by x-amz-meta-, note that only lowercase label are currently supported by the AWS Go API).'
            object_lock_legal_hold_status: '- (Optional) Legal hold status that you want to apply to the specified object. Valid values are ON and OFF.'
            object_lock_mode: '- (Optional) Object lock retention mode that you want to apply to this object. Valid values are GOVERNANCE and COMPLIANCE.'
            object_lock_retain_until_date: '- (Optional) Date and time, in RFC3339 format, when this object''s object lock will expire.'
            server_side_encryption: '- (Optional) Server-side encryption of the object in S3. Valid values are "AES256" and "aws:kms".'
            source: '- (Optional, conflicts with content and content_base64) Path to a file that will be read and uploaded as raw bytes for the object content.'
            source_hash: '- (Optional) Triggers updates like etag but useful to address etag encryption limitations. Set using filemd5("path/to/source") (Terraform 0.11.12 or later). (The value is only stored in state and not saved by AWS.)'
            storage_class: '- (Optional) Storage Class for the object. Defaults to "STANDARD".'
            tags: '- (Optional) Map of tags to assign to the object. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            version_id: '- Unique version ID value for the object, if bucket versioning is enabled.'
            website_redirect: '- (Optional) Target URL for website redirect.'
        importStatements: []
    aws_s3_object_copy:
        subCategory: S3 (Simple Storage)
        description: Provides a resource for copying an S3 object.
        name: aws_s3_object_copy
        title: aws_s3_object_copy
        examples:
            - name: test
              manifest: |-
                {
                  "bucket": "destination_bucket",
                  "grant": [
                    {
                      "permissions": [
                        "READ"
                      ],
                      "type": "Group",
                      "uri": "http://acs.amazonaws.com/groups/global/AllUsers"
                    }
                  ],
                  "key": "destination_key",
                  "source": "source_bucket/source_key"
                }
        argumentDocs:
            acl: '- (Optional) Canned ACL to apply. Defaults to private. Valid values are private, public-read, public-read-write, authenticated-read, aws-exec-read, bucket-owner-read, and bucket-owner-full-control. Conflicts with grant.'
            bucket: '- (Required) Name of the bucket to put the file in.'
            cache_control: '- (Optional) Specifies caching behavior along the request/reply chain Read w3c cache_control for further details.'
            content_disposition: '- (Optional) Specifies presentational information for the object. Read w3c content_disposition for further information.'
            content_encoding: '- (Optional) Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field. Read w3c content encoding for further information.'
            content_language: '- (Optional) Language the content is in e.g., en-US or en-GB.'
            content_type: '- (Optional) Standard MIME type describing the format of the object data, e.g., application/octet-stream. All Valid MIME Types are valid for this input.'
            copy_if_match: '- (Optional) Copies the object if its entity tag (ETag) matches the specified tag.'
            copy_if_modified_since: '- (Optional) Copies the object if it has been modified since the specified time, in RFC3339 format.'
            copy_if_none_match: '- (Optional) Copies the object if its entity tag (ETag) is different than the specified ETag.'
            copy_if_unmodified_since: '- (Optional) Copies the object if it hasn''t been modified since the specified time, in RFC3339 format.'
            customer_algorithm: '- (Optional) Specifies the algorithm to use to when encrypting the object (for example, AES256).'
            customer_key: '- (Optional) Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon S3 does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side-encryption-customer-algorithm header.'
            customer_key_md5: '- (Optional) Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure that the encryption key was transmitted without error.'
            email: '- (Optional) Email address of the grantee. Used only when type is AmazonCustomerByEmail.'
            etag: '- The ETag generated for the object (an MD5 sum of the object content). For plaintext objects or objects encrypted with an AWS-managed key, the hash is an MD5 digest of the object data. For objects encrypted with a KMS key or objects created by either the Multipart Upload or Part Copy operation, the hash is not an MD5 digest, regardless of the method of encryption. More information on possible values can be found on Common Response Headers.'
            expected_bucket_owner: '- (Optional) Account id of the expected destination bucket owner. If the destination bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.'
            expected_source_bucket_owner: '- (Optional) Account id of the expected source bucket owner. If the source bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.'
            expiration: '- If the object expiration is configured, this attribute will be set.'
            expires: '- (Optional) Date and time at which the object is no longer cacheable, in RFC3339 format.'
            force_destroy: '- (Optional) Allow the object to be deleted by removing any legal hold on any object version. Default is false. This value should be set to true only if the bucket has S3 object lock enabled.'
            grant: '- (Optional) Configuration block for header grants. Documented below. Conflicts with acl.'
            id: '- (Optional) The canonical user ID of the grantee. Used only when type is CanonicalUser.'
            key: '- (Required) Name of the object once it is in the bucket.'
            kms_encryption_context: '- (Optional) Specifies the AWS KMS Encryption Context to use for object encryption. The value is a base64-encoded UTF-8 string holding JSON with the encryption context key-value pairs.'
            kms_key_id: '- (Optional) Specifies the AWS KMS Key ARN to use for object encryption. This value is a fully qualified ARN of the KMS Key. If using aws_kms_key, use the exported arn attribute: kms_key_id = aws_kms_key.foo.arn'
            last_modified: '- Returns the date that the object was last modified, in RFC3339 format.'
            metadata: '- (Optional) A map of keys/values to provision metadata (will be automatically prefixed by x-amz-meta-, note that only lowercase label are currently supported by the AWS Go API).'
            metadata_directive: '- (Optional) Specifies whether the metadata is copied from the source object or replaced with metadata provided in the request. Valid values are COPY and REPLACE.'
            object_lock_legal_hold_status: '- (Optional) The legal hold status that you want to apply to the specified object. Valid values are ON and OFF.'
            object_lock_mode: '- (Optional) The object lock retention mode that you want to apply to this object. Valid values are GOVERNANCE and COMPLIANCE.'
            object_lock_retain_until_date: '- (Optional) The date and time, in RFC3339 format, when this object''s object lock will expire.'
            permissions: '- (Required) List of permissions to grant to grantee. Valid values are READ, READ_ACP, WRITE_ACP, FULL_CONTROL.'
            request_charged: '- If present, indicates that the requester was successfully charged for the request.'
            request_payer: '- (Optional) Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from requester pays buckets, see Downloading Objects in Requestor Pays Buckets (https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html) in the Amazon S3 Developer Guide. If included, the only valid value is requester.'
            server_side_encryption: '- (Optional) Specifies server-side encryption of the object in S3. Valid values are AES256 and aws:kms.'
            source: '- (Required) Specifies the source object for the copy operation. You specify the value in one of two formats. For objects not accessed through an access point, specify the name of the source bucket and the key of the source object, separated by a slash (/). For example, testbucket/test1.json. For objects accessed through access points, specify the Amazon Resource Name (ARN) of the object as accessed through the access point, in the format arn:aws:s3:<Region>:<account-id>:accesspoint/<access-point-name>/object/<key>. For example, arn:aws:s3:us-west-2:9999912999:accesspoint/my-access-point/object/testbucket/test1.json.'
            source_customer_algorithm: '- (Optional) Specifies the algorithm to use when decrypting the source object (for example, AES256).'
            source_customer_key: '- (Optional) Specifies the customer-provided encryption key for Amazon S3 to use to decrypt the source object. The encryption key provided in this header must be one that was used when the source object was created.'
            source_customer_key_md5: '- (Optional) Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure that the encryption key was transmitted without error.'
            source_version_id: '- Version of the copied object in the source bucket.'
            storage_class: '- (Optional) Specifies the desired storage class for the object. Defaults to STANDARD.'
            tagging_directive: '- (Optional) Specifies whether the object tag-set are copied from the source object or replaced with tag-set provided in the request. Valid values are COPY and REPLACE.'
            tags: '- (Optional) A map of tags to assign to the object. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            type: '- (Required) - Type of grantee. Valid values are CanonicalUser, Group, and AmazonCustomerByEmail.'
            uri: '- (Optional) URI of the grantee group. Used only when type is Group.'
            version_id: '- Version ID of the newly created copy.'
            website_redirect: '- (Optional) Specifies a target URL for website redirect.'
        importStatements: []
    aws_sagemaker_app:
        subCategory: SageMaker
        description: Provides a SageMaker App resource.
        name: aws_sagemaker_app
        title: aws_sagemaker_app
        examples:
            - name: example
              manifest: |-
                {
                  "app_name": "example",
                  "app_type": "JupyterServer",
                  "domain_id": "${aws_sagemaker_domain.example.id}",
                  "user_profile_name": "${aws_sagemaker_user_profile.example.user_profile_name}"
                }
              references:
                domain_id: aws_sagemaker_domain.example.id
                user_profile_name: aws_sagemaker_user_profile.example.user_profile_name
        argumentDocs:
            app_name: '- (Required) The name of the app.'
            app_type: '- (Required) The type of app. Valid values are JupyterServer, KernelGateway and TensorBoard.'
            arn: '- The Amazon Resource Name (ARN) of the app.'
            domain_id: '- (Required) The domain ID.'
            id: '- The Amazon Resource Name (ARN) of the app.'
            instance_type: '- (Optional) The instance type that the image version runs on. For valid values see SageMaker Instance Types.'
            lifecycle_config_arn: '- (Optional) The Amazon Resource Name (ARN) of the Lifecycle Configuration attached to the Resource.'
            resource_spec: '- (Optional) The instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance.See Resource Spec below.'
            sagemaker_image_arn: '- (Optional) The ARN of the SageMaker image that the image version belongs to.'
            sagemaker_image_version_arn: '- (Optional) The ARN of the image version created on the instance.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            user_profile_name: '- (Required) The user profile name.'
        importStatements: []
    aws_sagemaker_app_image_config:
        subCategory: SageMaker
        description: Provides a SageMaker App Image Config resource.
        name: aws_sagemaker_app_image_config
        title: aws_sagemaker_app_image_config
        examples:
            - name: test
              manifest: |-
                {
                  "app_image_config_name": "example",
                  "kernel_gateway_image_config": [
                    {
                      "kernel_spec": [
                        {
                          "name": "example"
                        }
                      ]
                    }
                  ]
                }
            - name: test
              manifest: |-
                {
                  "app_image_config_name": "example",
                  "kernel_gateway_image_config": [
                    {
                      "file_system_config": [
                        {}
                      ],
                      "kernel_spec": [
                        {
                          "name": "example"
                        }
                      ]
                    }
                  ]
                }
        argumentDocs:
            app_image_config_name: '- (Required) The name of the App Image Config.'
            arn: '- The Amazon Resource Name (ARN) assigned by AWS to this App Image Config.'
            default_gid: '- (Optional) The default POSIX group ID (GID). If not specified, defaults to 100. Valid values are 0 and 100.'
            default_uid: '- (Optional) The default POSIX user ID (UID). If not specified, defaults to 1000. Valid values are 0 and 1000.'
            display_name: '- (Optional) The display name of the kernel.'
            file_system_config: '- (Optional) The URL where the Git repository is located. See File System Config details below.'
            id: '- The name of the App Image Config.'
            kernel_gateway_image_config: '- (Optional) The configuration for the file system and kernels in a SageMaker image running as a KernelGateway app. See Kernel Gateway Image Config details below.'
            kernel_spec: '- (Required) The default branch for the Git repository. See Kernel Spec details below.'
            mount_path: '- (Optional) The path within the image to mount the user''s EFS home directory. The directory should be empty. If not specified, defaults to /home/sagemaker-user.'
            name: '- (Required) The name of the kernel.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_sagemaker_code_repository:
        subCategory: SageMaker
        description: Provides a SageMaker Code Repository resource.
        name: aws_sagemaker_code_repository
        title: aws_sagemaker_code_repository
        examples:
            - name: example
              manifest: |-
                {
                  "code_repository_name": "example",
                  "git_config": [
                    {
                      "repository_url": "https://github.com/hashicorp/terraform-provider-aws.git"
                    }
                  ]
                }
            - name: example
              manifest: |-
                {
                  "code_repository_name": "example",
                  "depends_on": [
                    "${aws_secretsmanager_secret_version.example}"
                  ],
                  "git_config": [
                    {
                      "repository_url": "https://github.com/hashicorp/terraform-provider-aws.git",
                      "secret_arn": "${aws_secretsmanager_secret.example.arn}"
                    }
                  ]
                }
              references:
                git_config.secret_arn: aws_secretsmanager_secret.example.arn
              dependencies:
                aws_secretsmanager_secret.example: |-
                    {
                      "name": "example"
                    }
                aws_secretsmanager_secret_version.example: |-
                    {
                      "secret_id": "${aws_secretsmanager_secret.example.id}",
                      "secret_string": "${jsonencode({ username = \"example\", password = \"example\" })}"
                    }
        argumentDocs:
            arn: '- The Amazon Resource Name (ARN) assigned by AWS to this Code Repository.'
            branch: '- (Optional) The default branch for the Git repository.'
            code_repository_name: '- (Required) The name of the Code Repository (must be unique).'
            git_config: '- (Required) Specifies details about the repository. see Git Config details below.'
            id: '- The name of the Code Repository.'
            repository_url: '- (Required) The URL where the Git repository is located.'
            secret_arn: '- (Optional) The Amazon Resource Name (ARN) of the AWS Secrets Manager secret that contains the credentials used to access the git repository. The secret must have a staging label of AWSCURRENT and must be in the following format: {"username": UserName, "password": Password}'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_sagemaker_device:
        subCategory: SageMaker
        description: Provides a SageMaker Device resource.
        name: aws_sagemaker_device
        title: aws_sagemaker_device
        examples:
            - name: example
              manifest: |-
                {
                  "device": [
                    {
                      "device_name": "example"
                    }
                  ],
                  "device_fleet_name": "${aws_sagemaker_device_fleet.example.device_fleet_name}"
                }
              references:
                device_fleet_name: aws_sagemaker_device_fleet.example.device_fleet_name
        argumentDocs:
            arn: '- The Amazon Resource Name (ARN) assigned by AWS to this Device.'
            description: '- (Required) A description for the device.'
            device: '- (Required) The device to register with SageMaker Edge Manager. See Device details below.'
            device_fleet_name: '- (Required) The name of the Device Fleet.'
            device_name: '- (Optional) The name of the device.'
            id: '- The id is constructed from device-fleet-name/device-name.'
            iot_thing_name: '- (Optional) Amazon Web Services Internet of Things (IoT) object name.'
            role_arn: '- (Required) The Amazon Resource Name (ARN) that has access to AWS Internet of Things (IoT).'
        importStatements: []
    aws_sagemaker_device_fleet:
        subCategory: SageMaker
        description: Provides a SageMaker Device Fleet resource.
        name: aws_sagemaker_device_fleet
        title: aws_sagemaker_device_fleet
        examples:
            - name: example
              manifest: |-
                {
                  "device_fleet_name": "example",
                  "output_config": [
                    {
                      "s3_output_location": "s3://${aws_s3_bucket.example.bucket}/prefix/"
                    }
                  ],
                  "role_arn": "${aws_iam_role.test.arn}"
                }
              references:
                role_arn: aws_iam_role.test.arn
        argumentDocs:
            arn: '- The Amazon Resource Name (ARN) assigned by AWS to this Device Fleet.'
            description: '- (Optional) A description of the fleet.'
            device_fleet_name: '- (Required) The name of the Device Fleet (must be unique).'
            enable_iot_role_alias: '- (Optional) Whether to create an AWS IoT Role Alias during device fleet creation. The name of the role alias generated will match this pattern: "SageMakerEdge-{DeviceFleetName}".'
            id: '- The name of the Device Fleet.'
            kms_key_id: '- (Optional) The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt data on the storage volume after compilation job. If you don''t provide a KMS key ID, Amazon SageMaker uses the default KMS key for Amazon S3 for your role''s account.'
            output_config: '- (Required) Specifies details about the repository. see Output Config details below.'
            role_arn: '- (Required) The Amazon Resource Name (ARN) that has access to AWS Internet of Things (IoT).'
            s3_output_location: '- (Required) The Amazon Simple Storage (S3) bucker URI.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_sagemaker_domain:
        subCategory: SageMaker
        description: Provides a SageMaker Domain resource.
        name: aws_sagemaker_domain
        title: aws_sagemaker_domain
        examples:
            - name: example
              manifest: |-
                {
                  "auth_mode": "IAM",
                  "default_user_settings": [
                    {
                      "execution_role": "${aws_iam_role.test.arn}"
                    }
                  ],
                  "domain_name": "example",
                  "subnet_ids": [
                    "${aws_subnet.test.id}"
                  ],
                  "vpc_id": "${aws_vpc.test.id}"
                }
              references:
                default_user_settings.execution_role: aws_iam_role.test.arn
                vpc_id: aws_vpc.test.id
              dependencies:
                aws_iam_role.example: |-
                    {
                      "assume_role_policy": "${data.aws_iam_policy_document.example.json}",
                      "name": "example",
                      "path": "/"
                    }
            - name: test
              manifest: |-
                {
                  "auth_mode": "IAM",
                  "default_user_settings": [
                    {
                      "execution_role": "${aws_iam_role.test.arn}",
                      "kernel_gateway_app_settings": [
                        {
                          "custom_image": [
                            {
                              "app_image_config_name": "${aws_sagemaker_app_image_config.test.app_image_config_name}",
                              "image_name": "${aws_sagemaker_image_version.test.image_name}"
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "domain_name": "example",
                  "subnet_ids": [
                    "${aws_subnet.test.id}"
                  ],
                  "vpc_id": "${aws_vpc.test.id}"
                }
              references:
                default_user_settings.execution_role: aws_iam_role.test.arn
                default_user_settings.kernel_gateway_app_settings.custom_image.app_image_config_name: aws_sagemaker_app_image_config.test.app_image_config_name
                default_user_settings.kernel_gateway_app_settings.custom_image.image_name: aws_sagemaker_image_version.test.image_name
                vpc_id: aws_vpc.test.id
              dependencies:
                aws_sagemaker_app_image_config.test: |-
                    {
                      "app_image_config_name": "example",
                      "kernel_gateway_image_config": [
                        {
                          "kernel_spec": [
                            {
                              "name": "example"
                            }
                          ]
                        }
                      ]
                    }
                aws_sagemaker_image.test: |-
                    {
                      "image_name": "example",
                      "role_arn": "${aws_iam_role.test.arn}"
                    }
                aws_sagemaker_image_version.test: |-
                    {
                      "base_image": "base-image",
                      "image_name": "${aws_sagemaker_image.test.id}"
                    }
        argumentDocs:
            app_image_config_name: '- (Required) The name of the App Image Config.'
            app_network_access_type: '- (Optional) Specifies the VPC used for non-EFS traffic. The default value is PublicInternetOnly. Valid values are PublicInternetOnly and VpcOnly.'
            arn: '- The Amazon Resource Name (ARN) assigned by AWS to this Domain.'
            auth_mode: '- (Required) The mode of authentication that members use to access the domain. Valid values are IAM and SSO.'
            custom_image: '- (Optional) A list of custom SageMaker images that are configured to run as a KernelGateway app. see Custom Image below.'
            default_resource_spec: '- (Optional) The default instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance. see Default Resource Spec below.'
            default_user_settings: '- (Required) The default user settings. See Default User Settings below.'
            domain_name: '- (Required) The domain name.'
            execution_role: '- (Required) The execution role ARN for the user.'
            home_efs_file_system: '- (Optional) The retention policy for data stored on an Amazon Elastic File System (EFS) volume. Valid values are Retain or Delete.  Default value is Retain.'
            home_efs_file_system_id: '- The ID of the Amazon Elastic File System (EFS) managed by this Domain.'
            id: '- The ID of the Domain.'
            image_name: '- (Required) The name of the Custom Image.'
            image_version_number: '- (Optional) The version number of the Custom Image.'
            instance_type: '- (Optional) The instance type that the image version runs on.. For valid values see SageMaker Instance Types.'
            jupyter_server_app_settings: '- (Optional) The Jupyter server''s app settings. See Jupyter Server App Settings below.'
            kernel_gateway_app_settings: '- (Optional) The kernel gateway app settings. See Kernel Gateway App Settings below.'
            kms_key_id: '- (Optional) The AWS KMS customer managed CMK used to encrypt the EFS volume attached to the domain.'
            lifecycle_config_arn: '- (Optional) The Amazon Resource Name (ARN) of the Lifecycle Configuration attached to the Resource.'
            lifecycle_config_arns: '- (Optional) The Amazon Resource Name (ARN) of the Lifecycle Configurations.'
            notebook_output_option: '- (Optional) Whether to include the notebook cell output when sharing the notebook. The default is Disabled. Valid values are Allowed and Disabled.'
            retention_policy: '- (Optional) The retention policy for this domain, which specifies whether resources will be retained after the Domain is deleted. By default, all resources are retained. See Retention Policy below.'
            s3_kms_key_id: '- (Optional) When notebook_output_option is Allowed, the AWS Key Management Service (KMS) encryption key ID used to encrypt the notebook cell output in the Amazon S3 bucket.'
            s3_output_path: '- (Optional) When notebook_output_option is Allowed, the Amazon S3 bucket used to save the notebook cell output.'
            sagemaker_image_arn: '- (Optional) The ARN of the SageMaker image that the image version belongs to.'
            sagemaker_image_version_arn: '- (Optional) The ARN of the image version created on the instance.'
            security_groups: '- (Optional) The security groups.'
            sharing_settings: '- (Optional) The sharing settings. See Sharing Settings below.'
            single_sign_on_managed_application_instance_id: '- The SSO managed application instance ID.'
            subnet_ids: '- (Required) The VPC subnets that Studio uses for communication.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            tensor_board_app_settings: '- (Optional) The TensorBoard app settings. See TensorBoard App Settings below.'
            url: '- The domain''s URL.'
            vpc_id: '- (Required) The ID of the Amazon Virtual Private Cloud (VPC) that Studio uses for communication.'
        importStatements: []
    aws_sagemaker_endpoint:
        subCategory: SageMaker
        description: Provides a SageMaker Endpoint resource.
        name: aws_sagemaker_endpoint
        title: aws_sagemaker_endpoint
        examples:
            - name: e
              manifest: |-
                {
                  "endpoint_config_name": "${aws_sagemaker_endpoint_configuration.ec.name}",
                  "name": "my-endpoint",
                  "tags": {
                    "Name": "foo"
                  }
                }
              references:
                endpoint_config_name: aws_sagemaker_endpoint_configuration.ec.name
        argumentDocs:
            alarm_name: '- (Required) The name of a CloudWatch alarm in your account.'
            alarms: '- (Required) List of CloudWatch alarms in your account that are configured to monitor metrics on an endpoint. If any alarms are tripped during a deployment, SageMaker rolls back the deployment. See Alarms.'
            arn: '- The Amazon Resource Name (ARN) assigned by AWS to this endpoint.'
            auto_rollback_configuration: '- (Optional) Automatic rollback configuration for handling endpoint deployment failures and recovery. See Auto Rollback Configuration.'
            blue_green_update_policy: '- (Required) Update policy for a blue/green deployment. If this update policy is specified, SageMaker creates a new fleet during the deployment while maintaining the old fleet. See Blue Green Update Config.'
            canary_size: '- (Optional) Batch size for the first step to turn on traffic on the new endpoint fleet. Value must be less than or equal to 50% of the variant''s total instance count. See Canary Size.'
            deployment_config: '- (Optional) The deployment configuration for an endpoint, which contains the desired deployment strategy and rollback configurations. See Deployment Config.'
            endpoint_config_name: '- (Required) The name of the endpoint configuration to use.'
            linear_step_size: '- (Optional) Batch size for each step to turn on traffic on the new endpoint fleet. Value must be 10-50% of the variant''s total instance count. See Linear Step Size.'
            maximum_execution_timeout_in_seconds: '- (Optional) Maximum execution timeout for the deployment. Note that the timeout value should be larger than the total waiting time specified in termination_wait_in_seconds and wait_interval_in_seconds. Valid values are between 600 and 14400.'
            name: '- (Optional) The name of the endpoint. If omitted, Terraform will assign a random, unique name.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            termination_wait_in_seconds: '- (Optional) Additional waiting time in seconds after the completion of an endpoint deployment before terminating the old endpoint fleet. Default is 0. Valid values are between 0 and 3600.'
            traffic_routing_configuration: '- (Required) Defines the traffic routing strategy to shift traffic from the old fleet to the new fleet during an endpoint deployment. See Traffic Routing Configuration.'
            type: '- (Required) Traffic routing strategy type. Valid values are: ALL_AT_ONCE, CANARY, and LINEAR.'
            value: '- (Required) Defines the capacity size, either as a number of instances or a capacity percentage.'
            wait_interval_in_seconds: '- (Required) The waiting time (in seconds) between incremental steps to turn on traffic on the new endpoint fleet. Valid values are between 0 and 3600.'
        importStatements: []
    aws_sagemaker_endpoint_configuration:
        subCategory: SageMaker
        description: Provides a SageMaker Endpoint Configuration resource.
        name: aws_sagemaker_endpoint_configuration
        title: aws_sagemaker_endpoint_configuration
        examples:
            - name: ec
              manifest: |-
                {
                  "name": "my-endpoint-config",
                  "production_variants": [
                    {
                      "initial_instance_count": 1,
                      "instance_type": "ml.t2.medium",
                      "model_name": "${aws_sagemaker_model.m.name}",
                      "variant_name": "variant-1"
                    }
                  ],
                  "tags": {
                    "Name": "foo"
                  }
                }
              references:
                production_variants.model_name: aws_sagemaker_model.m.name
        argumentDocs:
            arn: '- The Amazon Resource Name (ARN) assigned by AWS to this endpoint configuration.'
            async_inference_config: '- (Optional) Specifies configuration for how an endpoint performs asynchronous inference.'
            async_inference_config.client_config: '- (Optional) Configures the behavior of the client used by Amazon SageMaker to interact with the model container during asynchronous inference.'
            async_inference_config.client_config.max_concurrent_invocations_per_instance: '- (Optional) The maximum number of concurrent requests sent by the SageMaker client to the model container. If no value is provided, Amazon SageMaker will choose an optimal value for you.'
            async_inference_config.output_config: '- (Required) Specifies the configuration for asynchronous inference invocation outputs.'
            async_inference_config.output_config.kms_key_id: '- (Optional) The Amazon Web Services Key Management Service (Amazon Web Services KMS) key that Amazon SageMaker uses to encrypt the asynchronous inference output in Amazon S3.'
            async_inference_config.output_config.notification_config: '- (Optional) Specifies the configuration for notifications of inference results for asynchronous inference.'
            async_inference_config.output_config.notification_config.error_topic: '- (Optional) Amazon SNS topic to post a notification to when inference fails. If no topic is provided, no notification is sent on failure.'
            async_inference_config.output_config.notification_config.success_topic: '- (Optional) Amazon SNS topic to post a notification to when inference completes successfully. If no topic is provided, no notification is sent on success.'
            async_inference_config.output_config.s3_output_path: '- (Required) The Amazon S3 location to upload inference responses to.'
            data_capture_config: '- (Optional) Specifies the parameters to capture input/output of SageMaker models endpoints. Fields are documented below.'
            data_capture_config.capture_content_type_header: '- (Optional) The content type headers to capture. Fields are documented below.'
            data_capture_config.capture_content_type_header.csv_content_types: '- (Optional) The CSV content type headers to capture.'
            data_capture_config.capture_content_type_header.json_content_types: '- (Optional) The JSON content type headers to capture.'
            data_capture_config.capture_options: '- (Required) Specifies what data to capture. Fields are documented below.'
            data_capture_config.capture_options.capture_mode: '- (Required) Specifies the data to be captured. Should be one of Input or Output.'
            data_capture_config.destination_s3_uri: '- (Required) The URL for S3 location where the captured data is stored.'
            data_capture_config.enable_capture: '- (Optional) Flag to enable data capture. Defaults to false.'
            data_capture_config.initial_sampling_percentage: '- (Required) Portion of data to capture. Should be between 0 and 100.'
            data_capture_config.kms_key_id: '- (Optional) Amazon Resource Name (ARN) of a AWS Key Management Service key that Amazon SageMaker uses to encrypt the captured data on Amazon S3.'
            kms_key_arn: '- (Optional) Amazon Resource Name (ARN) of a AWS Key Management Service key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance that hosts the endpoint.'
            name: '- (Optional) The name of the endpoint configuration. If omitted, Terraform will assign a random, unique name.'
            production_variants: '- (Required) Fields are documented below.'
            production_variants.accelerator_type: (Optional) - The size of the Elastic Inference (EI) instance to use for the production variant.
            production_variants.initial_instance_count: '- (Optional) Initial number of instances used for auto-scaling.'
            production_variants.initial_variant_weight: (Optional) - Determines initial traffic distribution among all of the models that you specify in the endpoint configuration. If unspecified, it defaults to 1.0.
            production_variants.instance_type: (Optional) - The type of instance to start.
            production_variants.model_name: '- (Required) The name of the model to use.'
            production_variants.serverless_config: '- (Optional) Specifies configuration for how an endpoint performs asynchronous inference.'
            production_variants.serverless_config.max_concurrency: '- (Required) The maximum number of concurrent invocations your serverless endpoint can process. Valid values are between 1 and 200.'
            production_variants.serverless_config.memory_size_in_mb: '- (Required) The memory size of your serverless endpoint. Valid values are in 1 GB increments: 1024 MB, 2048 MB, 3072 MB, 4096 MB, 5120 MB, or 6144 MB.'
            production_variants.variant_name: '- (Optional) The name of the variant. If omitted, Terraform will assign a random, unique name.'
            tags: '- (Optional) A mapping of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_sagemaker_feature_group:
        subCategory: SageMaker
        description: Provides a SageMaker Feature Group resource.
        name: aws_sagemaker_feature_group
        title: aws_sagemaker_feature_group
        examples:
            - name: example
              manifest: |-
                {
                  "event_time_feature_name": "example",
                  "feature_definition": [
                    {
                      "feature_name": "example",
                      "feature_type": "String"
                    }
                  ],
                  "feature_group_name": "example",
                  "online_store_config": [
                    {
                      "enable_online_store": true
                    }
                  ],
                  "record_identifier_feature_name": "example",
                  "role_arn": "${aws_iam_role.test.arn}"
                }
              references:
                role_arn: aws_iam_role.test.arn
        argumentDocs:
            arn: '- The Amazon Resource Name (ARN) assigned by AWS to this feature_group.'
            catalog: '- (Optional) The name of the Glue table catalog.'
            data_catalog_config: '- (Optional) The meta data of the Glue table that is autogenerated when an OfflineStore is created. See Data Catalog Config Below.'
            database: '- (Optional) The name of the Glue table database.'
            description: (Optional) - A free-form description of a Feature Group.
            disable_glue_table_creation: '- (Optional) Set to true to turn Online Store On.'
            enable_online_store: '- (Optional) Set to true to disable the automatic creation of an AWS Glue table when configuring an OfflineStore.'
            event_time_feature_name: '- (Required) The name of the feature that stores the EventTime of a Record in a Feature Group.'
            feature_definition: (Optional) - A list of Feature names and types. See Feature Definition Below.
            feature_group_name: '- (Required) The name of the Feature Group. The name must be unique within an AWS Region in an AWS account.'
            feature_name: '- (Required) The name of a feature. feature_name cannot be any of the following: is_deleted, write_time, api_invocation_time.'
            feature_type: '- (Required) The value type of a feature. Valid values are Integral, Fractional, or String.'
            kms_key_id: '- (Optional) The AWS Key Management Service (KMS) key ID of the key used to encrypt any objects written into the OfflineStore S3 location.'
            name: '- The name of the Feature Group.'
            offline_store_config: (Optional) - The Offline Feature Store Configuration. See Offline Store Config Below.
            online_store_config: (Optional) - The Online Feature Store Configuration. See Online Store Config Below.
            record_identifier_feature_name: '- (Required) The name of the Feature whose value uniquely identifies a Record defined in the Feature Store. Only the latest record per identifier value will be stored in the Online Store.'
            role_arn: (Required) - The Amazon Resource Name (ARN) of the IAM execution role used to persist data into the Offline Store if an offline_store_config is provided.
            s3_storage_config: '- (Required) The Amazon Simple Storage (Amazon S3) location of OfflineStore. See S3 Storage Config Below.'
            s3_uri: '- (Required) The S3 URI, or location in Amazon S3, of OfflineStore.'
            security_config: '- (Required) Security config for at-rest encryption of your OnlineStore. See Security Config Below.'
            table_name: '- (Optional) The name of the Glue table.'
            tags: '- (Optional) Map of resource tags for the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_sagemaker_flow_definition:
        subCategory: SageMaker
        description: Provides a SageMaker Flow Definition resource.
        name: aws_sagemaker_flow_definition
        title: aws_sagemaker_flow_definition
        examples:
            - name: example
              manifest: |-
                {
                  "flow_definition_name": "example",
                  "human_loop_config": [
                    {
                      "human_task_ui_arn": "${aws_sagemaker_human_task_ui.example.arn}",
                      "task_availability_lifetime_in_seconds": 1,
                      "task_count": 1,
                      "task_description": "example",
                      "task_title": "example",
                      "workteam_arn": "${aws_sagemaker_workteam.example.arn}"
                    }
                  ],
                  "output_config": [
                    {
                      "s3_output_path": "s3://${aws_s3_bucket.example.bucket}/"
                    }
                  ],
                  "role_arn": "${aws_iam_role.example.arn}"
                }
              references:
                human_loop_config.human_task_ui_arn: aws_sagemaker_human_task_ui.example.arn
                human_loop_config.workteam_arn: aws_sagemaker_workteam.example.arn
                role_arn: aws_iam_role.example.arn
            - name: example
              manifest: |-
                {
                  "flow_definition_name": "example",
                  "human_loop_config": [
                    {
                      "human_task_ui_arn": "${aws_sagemaker_human_task_ui.example.arn}",
                      "public_workforce_task_price": [
                        {
                          "amount_in_usd": [
                            {
                              "cents": 1,
                              "tenth_fractions_of_a_cent": 2
                            }
                          ]
                        }
                      ],
                      "task_availability_lifetime_in_seconds": 1,
                      "task_count": 1,
                      "task_description": "example",
                      "task_title": "example",
                      "workteam_arn": "arn:aws:sagemaker:${data.aws_region.current.name}:394669845002:workteam/public-crowd/default"
                    }
                  ],
                  "output_config": [
                    {
                      "s3_output_path": "s3://${aws_s3_bucket.example.bucket}/"
                    }
                  ],
                  "role_arn": "${aws_iam_role.example.arn}"
                }
              references:
                human_loop_config.human_task_ui_arn: aws_sagemaker_human_task_ui.example.arn
                role_arn: aws_iam_role.example.arn
            - name: example
              manifest: |-
                {
                  "flow_definition_name": "example",
                  "human_loop_activation_config": [
                    {
                      "human_loop_activation_conditions_config": [
                        {
                          "human_loop_activation_conditions": "        {\n\t\t\t\"Conditions\": [\n\t\t\t  {\n\t\t\t\t\"ConditionType\": \"Sampling\",\n\t\t\t\t\"ConditionParameters\": {\n\t\t\t\t  \"RandomSamplingPercentage\": 5\n\t\t\t\t}\n\t\t\t  }\n\t\t\t]\n\t\t}\n"
                        }
                      ]
                    }
                  ],
                  "human_loop_config": [
                    {
                      "human_task_ui_arn": "${aws_sagemaker_human_task_ui.example.arn}",
                      "task_availability_lifetime_in_seconds": 1,
                      "task_count": 1,
                      "task_description": "example",
                      "task_title": "example",
                      "workteam_arn": "${aws_sagemaker_workteam.example.arn}"
                    }
                  ],
                  "human_loop_request_source": [
                    {
                      "aws_managed_human_loop_request_source": "AWS/Textract/AnalyzeDocument/Forms/V1"
                    }
                  ],
                  "output_config": [
                    {
                      "s3_output_path": "s3://${aws_s3_bucket.example.bucket}/"
                    }
                  ],
                  "role_arn": "${aws_iam_role.example.arn}"
                }
              references:
                human_loop_config.human_task_ui_arn: aws_sagemaker_human_task_ui.example.arn
                human_loop_config.workteam_arn: aws_sagemaker_workteam.example.arn
                role_arn: aws_iam_role.example.arn
        argumentDocs:
            amount_in_usd: '- (Optional) Defines the amount of money paid to an Amazon Mechanical Turk worker in United States dollars. See Amount In Usd details below.'
            arn: '- The Amazon Resource Name (ARN) assigned by AWS to this Flow Definition.'
            aws_managed_human_loop_request_source: '- (Required) Specifies whether Amazon Rekognition or Amazon Textract are used as the integration source. Valid values are: AWS/Rekognition/DetectModerationLabels/Image/V3 and AWS/Textract/AnalyzeDocument/Forms/V1.'
            cents: '- (Optional) The fractional portion, in cents, of the amount. Valid value range between 0 and 99.'
            dollars: '- (Optional) The whole number of dollars in the amount. Valid value range between 0 and 2.'
            flow_definition_name: '- (Required) The name of your flow definition.'
            human_loop_activation_conditions: '- (Required) A JSON expressing use-case specific conditions declaratively. If any condition is matched, atomic tasks are created against the configured work team. For more information about how to structure the JSON, see JSON Schema for Human Loop Activation Conditions in Amazon Augmented AI.'
            human_loop_activation_conditions_config: '- (Required) defines under what conditions SageMaker creates a human loop. See Human Loop Activation Conditions Config details below.'
            human_loop_activation_config: '- (Optional) An object containing information about the events that trigger a human workflow. See Human Loop Activation Config details below.'
            human_loop_config: '- (Required)  An object containing information about the tasks the human reviewers will perform. See Human Loop Config details below.'
            human_loop_request_source: '- (Optional) Container for configuring the source of human task requests. Use to specify if Amazon Rekognition or Amazon Textract is used as an integration source. See Human Loop Request Source details below.'
            human_task_ui_arn: '- (Required) The Amazon Resource Name (ARN) of the human task user interface.'
            id: '- The name of the Flow Definition.'
            kms_key_id: '- (Optional) The Amazon Key Management Service (KMS) key ARN for server-side encryption.'
            output_config: '- (Required) An object containing information about where the human review results will be uploaded. See Output Config details below.'
            public_workforce_task_price: '- (Optional) Defines the amount of money paid to an Amazon Mechanical Turk worker for each task performed. See Public Workforce Task Price details below.'
            role_arn: '- (Required) The Amazon Resource Name (ARN) of the role needed to call other services on your behalf.'
            s3_output_path: '- (Required) The Amazon S3 path where the object containing human output will be made available.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            task_availability_lifetime_in_seconds: '- (Required) The length of time that a task remains available for review by human workers. Valid value range between 1 and 864000.'
            task_count: '- (Required) The number of distinct workers who will perform the same task on each object. Valid value range between 1 and 3.'
            task_description: '- (Required) A description for the human worker task.'
            task_keywords: '- (Optional) An array of keywords used to describe the task so that workers can discover the task.'
            task_time_limit_in_seconds: '- (Optional) The amount of time that a worker has to complete a task. The default value is 3600 seconds.'
            task_title: '- (Required) A title for the human worker task.'
            tenth_fractions_of_a_cent: '- (Optional) Fractions of a cent, in tenths. Valid value range between 0 and 9.'
            workteam_arn: '- (Required) The Amazon Resource Name (ARN) of the human task user interface. Amazon Resource Name (ARN) of a team of workers. For Public workforces see AWS Docs.'
        importStatements: []
    aws_sagemaker_human_task_ui:
        subCategory: SageMaker
        description: Provides a SageMaker Human Task UI resource.
        name: aws_sagemaker_human_task_ui
        title: aws_sagemaker_human_task_ui
        examples:
            - name: example
              manifest: |-
                {
                  "human_task_ui_name": "example",
                  "ui_template": [
                    {
                      "content": "${file(\"sagemaker-human-task-ui-template.html\")}"
                    }
                  ]
                }
        argumentDocs:
            arn: '- The Amazon Resource Name (ARN) assigned by AWS to this Human Task UI.'
            content: '- (Required) The content of the Liquid template for the worker user interface.'
            content_sha256: '- The SHA-256 digest of the contents of the template.'
            human_task_ui_name: '- (Required) The name of the Human Task UI.'
            id: '- The name of the Human Task UI.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            ui_template: '- (Required) The Liquid template for the worker user interface. See UI Template below.'
            url: '- The URL for the user interface template.'
        importStatements: []
    aws_sagemaker_image:
        subCategory: SageMaker
        description: Provides a SageMaker Image resource.
        name: aws_sagemaker_image
        title: aws_sagemaker_image
        examples:
            - name: example
              manifest: |-
                {
                  "image_name": "example",
                  "role_arn": "${aws_iam_role.test.arn}"
                }
              references:
                role_arn: aws_iam_role.test.arn
        argumentDocs:
            arn: '- The Amazon Resource Name (ARN) assigned by AWS to this Image.'
            description: '- (Optional) The description of the image.'
            display_name: '- (Optional) The display name of the image. When the image is added to a domain (must be unique to the domain).'
            id: '- The name of the Image.'
            image_name: '- (Required) The name of the image. Must be unique to your account.'
            role_arn: '- (Required) The Amazon Resource Name (ARN) of an IAM role that enables Amazon SageMaker to perform tasks on your behalf.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_sagemaker_image_version:
        subCategory: SageMaker
        description: Provides a SageMaker Image Version resource.
        name: aws_sagemaker_image_version
        title: aws_sagemaker_image_version
        examples:
            - name: test
              manifest: |-
                {
                  "base_image": "012345678912.dkr.ecr.us-west-2.amazonaws.com/image:latest",
                  "image_name": "${aws_sagemaker_image.test.id}"
                }
              references:
                image_name: aws_sagemaker_image.test.id
        argumentDocs:
            arn: '- The Amazon Resource Name (ARN) assigned by AWS to this Image Version.'
            base_image: '- (Required) The registry path of the container image on which this image version is based.'
            container_image: '- The registry path of the container image that contains this image version.'
            id: '- The name of the Image.'
            image_arn: '- The Amazon Resource Name (ARN) of the image the version is based on.'
            image_name: '- (Required) The name of the image. Must be unique to your account.'
        importStatements: []
    aws_sagemaker_model:
        subCategory: SageMaker
        description: Provides a SageMaker model resource.
        name: aws_sagemaker_model
        title: aws_sagemaker_model
        examples:
            - name: example
              manifest: |-
                {
                  "execution_role_arn": "${aws_iam_role.example.arn}",
                  "name": "my-model",
                  "primary_container": [
                    {
                      "image": "${data.aws_sagemaker_prebuilt_ecr_image.test.registry_path}"
                    }
                  ]
                }
              references:
                execution_role_arn: aws_iam_role.example.arn
                primary_container.image: data.aws_sagemaker_prebuilt_ecr_image.test.registry_path
              dependencies:
                aws_iam_role.example: |-
                    {
                      "assume_role_policy": "${data.aws_iam_policy_document.assume_role.json}"
                    }
        argumentDocs:
            arn: '- The Amazon Resource Name (ARN) assigned by AWS to this model.'
            container: (Optional) -  Specifies containers in the inference pipeline. If not specified, the primary_container argument is required. Fields are documented below.
            enable_network_isolation: (Optional) - Isolates the model container. No inbound or outbound network calls can be made to or from the model container.
            execution_role_arn: '- (Required) A role that SageMaker can assume to access model artifacts and docker images for deployment.'
            inference_execution_config: '- (Optional) Specifies details of how containers in a multi-container endpoint are called. see Inference Execution Config.'
            mode: '- (Required) How containers in a multi-container are run. The following values are valid Serial and Direct.'
            name: '- (Optional) The name of the model (must be unique). If omitted, Terraform will assign a random, unique name.'
            primary_container: '- (Optional) The primary docker image containing inference code that is used when the model is deployed for predictions.  If not specified, the container argument is required. Fields are documented below.'
            primary_container.container_hostname: '- (Optional) The DNS host name for the container.'
            primary_container.environment: |-
                - (Optional) Environment variables for the Docker container.
                A list of key value pairs.
            primary_container.image: '- (Required) The registry path where the inference code image is stored in Amazon ECR.'
            primary_container.image_config: '- (Optional) Specifies whether the model container is in Amazon ECR or a private Docker registry accessible from your Amazon Virtual Private Cloud (VPC). For more information see Using a Private Docker Registry for Real-Time Inference Containers. see Image Config.'
            primary_container.mode: '- (Optional) The container hosts value SingleModel/MultiModel. The default value is SingleModel.'
            primary_container.model_data_url: '- (Optional) The URL for the S3 location where model artifacts are stored.'
            repository_access_mode: '- (Required) Specifies whether the model container is in Amazon ECR or a private Docker registry accessible from your Amazon Virtual Private Cloud (VPC). Allowed values are: Platform and Vpc.'
            repository_auth_config: '- (Optional) Specifies an authentication configuration for the private docker registry where your model image is hosted. Specify a value for this property only if you specified Vpc as the value for the RepositoryAccessMode field, and the private Docker registry where the model image is hosted requires authentication. see Repository Auth Config.'
            repository_credentials_provider_arn: '- (Required) The Amazon Resource Name (ARN) of an AWS Lambda function that provides credentials to authenticate to the private Docker registry where your model image is hosted. For information about how to create an AWS Lambda function, see Create a Lambda function with the console in the AWS Lambda Developer Guide.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            vpc_config: (Optional) - Specifies the VPC that you want your model to connect to. VpcConfig is used in hosting services and in batch transform.
        importStatements: []
    aws_sagemaker_model_package_group:
        subCategory: SageMaker
        description: Provides a SageMaker Model Package Group resource.
        name: aws_sagemaker_model_package_group
        title: aws_sagemaker_model_package_group
        examples:
            - name: example
              manifest: |-
                {
                  "model_package_group_name": "example"
                }
        argumentDocs:
            arn: '- The Amazon Resource Name (ARN) assigned by AWS to this Model Package Group.'
            id: '- The name of the Model Package Group.'
            model_package_group_description: '- (Optional) A description for the model group.'
            model_package_group_name: '- (Required) The name of the model group.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_sagemaker_model_package_group_policy:
        subCategory: SageMaker
        description: Provides a SageMaker Model Package Group Policy resource.
        name: aws_sagemaker_model_package_group_policy
        title: aws_sagemaker_model_package_group_policy
        examples:
            - name: example
              manifest: |-
                {
                  "model_package_group_name": "${aws_sagemaker_model_package_group.example.model_package_group_name}",
                  "resource_policy": "${jsonencode(jsondecode(data.aws_iam_policy_document.example.json))}"
                }
              references:
                model_package_group_name: aws_sagemaker_model_package_group.example.model_package_group_name
              dependencies:
                aws_sagemaker_model_package_group.example: |-
                    {
                      "model_package_group_name": "example"
                    }
        argumentDocs:
            id: '- The name of the Model Package Package Group.'
            model_package_group_name: '- (Required) The name of the model package group.'
        importStatements: []
    aws_sagemaker_notebook_instance:
        subCategory: SageMaker
        description: Provides a SageMaker Notebook Instance resource.
        name: aws_sagemaker_notebook_instance
        title: aws_sagemaker_notebook_instance
        examples:
            - name: ni
              manifest: |-
                {
                  "instance_type": "ml.t2.medium",
                  "name": "my-notebook-instance",
                  "role_arn": "${aws_iam_role.role.arn}",
                  "tags": {
                    "Name": "foo"
                  }
                }
              references:
                role_arn: aws_iam_role.role.arn
            - name: ni
              manifest: |-
                {
                  "default_code_repository": "${aws_sagemaker_code_repository.example.code_repository_name}",
                  "instance_type": "ml.t2.medium",
                  "name": "my-notebook-instance",
                  "role_arn": "${aws_iam_role.role.arn}",
                  "tags": {
                    "Name": "foo"
                  }
                }
              references:
                default_code_repository: aws_sagemaker_code_repository.example.code_repository_name
                role_arn: aws_iam_role.role.arn
              dependencies:
                aws_sagemaker_code_repository.example: |-
                    {
                      "code_repository_name": "my-notebook-instance-code-repo",
                      "git_config": [
                        {
                          "repository_url": "https://github.com/hashicorp/terraform-provider-aws.git"
                        }
                      ]
                    }
        argumentDocs:
            accelerator_types: '- (Optional) A list of Elastic Inference (EI) instance types to associate with this notebook instance. See Elastic Inference Accelerator for more details. Valid values: ml.eia1.medium, ml.eia1.large, ml.eia1.xlarge, ml.eia2.medium, ml.eia2.large, ml.eia2.xlarge.'
            additional_code_repositories: |-
                - (Optional) An array of up to three Git repositories to associate with the notebook instance.
                These can be either the names of Git repositories stored as resources in your account, or the URL of Git repositories in AWS CodeCommit or in any other Git repository. These repositories are cloned at the same level as the default repository of your notebook instance.
            arn: '- The Amazon Resource Name (ARN) assigned by AWS to this notebook instance.'
            default_code_repository: '- (Optional) The Git repository associated with the notebook instance as its default code repository. This can be either the name of a Git repository stored as a resource in your account, or the URL of a Git repository in AWS CodeCommit or in any other Git repository.'
            direct_internet_access: '- (Optional) Set to Disabled to disable internet access to notebook. Requires security_groups and subnet_id to be set. Supported values: Enabled (Default) or Disabled. If set to Disabled, the notebook instance will be able to access resources only in your VPC, and will not be able to connect to Amazon SageMaker training and endpoint services unless your configure a NAT Gateway in your VPC.'
            id: '- The name of the notebook instance.'
            instance_metadata_service_configuration: '- (Optional) Information on the IMDS configuration of the notebook instance. Conflicts with instance_metadata_service_configuration. see details below.'
            instance_metadata_service_configuration.minimum_instance_metadata_service_version: '- (Optional) Indicates the minimum IMDS version that the notebook instance supports. When passed "1" is passed. This means that both IMDSv1 and IMDSv2 are supported. Valid values are 1 and 2.'
            instance_type: '- (Required) The name of ML compute instance type.'
            kms_key_id: '- (Optional) The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption.'
            lifecycle_config_name: '- (Optional) The name of a lifecycle configuration to associate with the notebook instance.'
            name: '- (Required) The name of the notebook instance (must be unique).'
            network_interface_id: '- The network interface ID that Amazon SageMaker created at the time of creating the instance. Only available when setting subnet_id.'
            platform_identifier: '- (Optional) The platform identifier of the notebook instance runtime environment. This value can be either notebook-al1-v1, notebook-al2-v1, or  notebook-al2-v2, depending on which version of Amazon Linux you require.'
            role_arn: '- (Required) The ARN of the IAM role to be used by the notebook instance which allows SageMaker to call other services on your behalf.'
            root_access: '- (Optional) Whether root access is Enabled or Disabled for users of the notebook instance. The default value is Enabled.'
            security_groups: '- (Optional) The associated security groups.'
            subnet_id: '- (Optional) The VPC subnet ID.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            url: '- The URL that you use to connect to the Jupyter notebook that is running in your notebook instance.'
            volume_size: '- (Optional) The size, in GB, of the ML storage volume to attach to the notebook instance. The default value is 5 GB.'
        importStatements: []
    aws_sagemaker_notebook_instance_lifecycle_configuration:
        subCategory: SageMaker
        description: Provides a lifecycle configuration for SageMaker Notebook Instances.
        name: aws_sagemaker_notebook_instance_lifecycle_configuration
        title: aws_sagemaker_notebook_instance_lifecycle_configuration
        examples:
            - name: lc
              manifest: |-
                {
                  "name": "foo",
                  "on_create": "${base64encode(\"echo foo\")}",
                  "on_start": "${base64encode(\"echo bar\")}"
                }
        argumentDocs:
            arn: '- The Amazon Resource Name (ARN) assigned by AWS to this lifecycle configuration.'
            name: '- (Optional) The name of the lifecycle configuration (must be unique). If omitted, Terraform will assign a random, unique name.'
            on_create: '- (Optional) A shell script (base64-encoded) that runs only once when the SageMaker Notebook Instance is created.'
            on_start: '- (Optional) A shell script (base64-encoded) that runs every time the SageMaker Notebook Instance is started including the time it''s created.'
        importStatements: []
    aws_sagemaker_project:
        subCategory: SageMaker
        description: Provides a SageMaker Project resource.
        name: aws_sagemaker_project
        title: aws_sagemaker_project
        examples:
            - name: example
              manifest: |-
                {
                  "project_name": "example",
                  "service_catalog_provisioning_details": [
                    {
                      "product_id": "${aws_servicecatalog_product.example.id}"
                    }
                  ]
                }
              references:
                service_catalog_provisioning_details.product_id: aws_servicecatalog_product.example.id
        argumentDocs:
            arn: '- The Amazon Resource Name (ARN) assigned by AWS to this Project.'
            id: '- The name of the Project.'
            key: '- (Required) The key that identifies a provisioning parameter.'
            path_id: '- (Optional) The path identifier of the product. This value is optional if the product has a default path, and required if the product has more than one path.'
            product_id: '- (Required) The ID of the product to provision.'
            project_description: '- (Optional) A description for the project.'
            project_id: '- The ID of the project.'
            project_name: '- (Required) The name of the Project.'
            provisioning_artifact_id: '- (Optional) The ID of the provisioning artifact.'
            provisioning_parameter: '- (Optional) A list of key value pairs that you specify when you provision a product. See Provisioning Parameter below.'
            service_catalog_provisioning_details: '- (Required) The product ID and provisioning artifact ID to provision a service catalog. See Service Catalog Provisioning Details below.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            value: '- (Optional) The value of the provisioning parameter.'
        importStatements: []
    aws_sagemaker_studio_lifecycle_config:
        subCategory: SageMaker
        description: Provides a SageMaker Studio Lifecycle Config resource.
        name: aws_sagemaker_studio_lifecycle_config
        title: aws_sagemaker_studio_lifecycle_config
        examples:
            - name: example
              manifest: |-
                {
                  "studio_lifecycle_config_app_type": "JupyterServer",
                  "studio_lifecycle_config_content": "${base64encode(\"echo Hello\")}",
                  "studio_lifecycle_config_name": "example"
                }
        argumentDocs:
            arn: '- The Amazon Resource Name (ARN) assigned by AWS to this Studio Lifecycle Config.'
            id: '- The name of the Studio Lifecycle Config.'
            studio_lifecycle_config_app_type: '- (Required) The App type that the Lifecycle Configuration is attached to. Valid values are JupyterServer and KernelGateway.'
            studio_lifecycle_config_content: '- (Required) The content of your Studio Lifecycle Configuration script. This content must be base64 encoded.'
            studio_lifecycle_config_name: '- (Required) The name of the Studio Lifecycle Configuration to create.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_sagemaker_user_profile:
        subCategory: SageMaker
        description: Provides a SageMaker User Profile resource.
        name: aws_sagemaker_user_profile
        title: aws_sagemaker_user_profile
        examples:
            - name: example
              manifest: |-
                {
                  "domain_id": "${aws_sagemaker_domain.test.id}",
                  "user_profile_name": "example"
                }
              references:
                domain_id: aws_sagemaker_domain.test.id
        argumentDocs:
            app_image_config_name: '- (Required) The name of the App Image Config.'
            arn: '- The user profile Amazon Resource Name (ARN).'
            custom_image: '- (Optional) A list of custom SageMaker images that are configured to run as a KernelGateway app. see Custom Image below.'
            default_resource_spec: '- (Optional) The default instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance. see Default Resource Spec below.'
            domain_id: '- (Required) The ID of the associated Domain.'
            execution_role: '- (Required) The execution role ARN for the user.'
            home_efs_file_system_uid: '- The ID of the user''s profile in the Amazon Elastic File System (EFS) volume.'
            id: '- The user profile Amazon Resource Name (ARN).'
            image_name: '- (Required) The name of the Custom Image.'
            image_version_number: '- (Optional) The version number of the Custom Image.'
            instance_type: '- (Optional) The instance type.'
            jupyter_server_app_settings: '- (Optional) The Jupyter server''s app settings. See Jupyter Server App Settings below.'
            kernel_gateway_app_settings: '- (Optional) The kernel gateway app settings. See Kernel Gateway App Settings below.'
            lifecycle_config_arn: '- (Optional) The Amazon Resource Name (ARN) of the Lifecycle Configuration attached to the Resource.'
            lifecycle_config_arns: '- (Optional) The Amazon Resource Name (ARN) of the Lifecycle Configurations.'
            notebook_output_option: '- (Optional) Whether to include the notebook cell output when sharing the notebook. The default is Disabled. Valid values are Allowed and Disabled.'
            s3_kms_key_id: '- (Optional) When notebook_output_option is Allowed, the AWS Key Management Service (KMS) encryption key ID used to encrypt the notebook cell output in the Amazon S3 bucket.'
            s3_output_path: '- (Optional) When notebook_output_option is Allowed, the Amazon S3 bucket used to save the notebook cell output.'
            sagemaker_image_arn: '- (Optional) The Amazon Resource Name (ARN) of the SageMaker image created on the instance.'
            sagemaker_image_version_arn: '- (Optional) The ARN of the image version created on the instance.'
            security_groups: '- (Optional) The security groups.'
            sharing_settings: '- (Optional) The sharing settings. See Sharing Settings below.'
            single_sign_on_user_identifier: '- (Optional) A specifier for the type of value specified in single_sign_on_user_value. Currently, the only supported value is UserName. If the Domain''s AuthMode is SSO, this field is required. If the Domain''s AuthMode is not SSO, this field cannot be specified.'
            single_sign_on_user_value: '- (Required) The username of the associated AWS Single Sign-On User for this User Profile. If the Domain''s AuthMode is SSO, this field is required, and must match a valid username of a user in your directory. If the Domain''s AuthMode is not SSO, this field cannot be specified.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            tensor_board_app_settings: '- (Optional) The TensorBoard app settings. See TensorBoard App Settings below.'
            user_profile_name: '- (Required) The name for the User Profile.'
            user_settings: '- (Required) The user settings. See User Settings below.'
        importStatements: []
    aws_sagemaker_workforce:
        subCategory: SageMaker
        description: Provides a SageMaker Workforce resource.
        name: aws_sagemaker_workforce
        title: aws_sagemaker_workforce
        examples:
            - name: example
              manifest: |-
                {
                  "cognito_config": [
                    {
                      "client_id": "${aws_cognito_user_pool_client.example.id}",
                      "user_pool": "${aws_cognito_user_pool_domain.example.user_pool_id}"
                    }
                  ],
                  "workforce_name": "example"
                }
              references:
                cognito_config.client_id: aws_cognito_user_pool_client.example.id
                cognito_config.user_pool: aws_cognito_user_pool_domain.example.user_pool_id
              dependencies:
                aws_cognito_user_pool.example: |-
                    {
                      "name": "example"
                    }
                aws_cognito_user_pool_client.example: |-
                    {
                      "generate_secret": true,
                      "name": "example",
                      "user_pool_id": "${aws_cognito_user_pool.example.id}"
                    }
                aws_cognito_user_pool_domain.example: |-
                    {
                      "domain": "example",
                      "user_pool_id": "${aws_cognito_user_pool.example.id}"
                    }
            - name: example
              manifest: |-
                {
                  "oidc_config": [
                    {
                      "authorization_endpoint": "https://example.com",
                      "client_id": "example",
                      "client_secret": "example",
                      "issuer": "https://example.com",
                      "jwks_uri": "https://example.com",
                      "logout_endpoint": "https://example.com",
                      "token_endpoint": "https://example.com",
                      "user_info_endpoint": "https://example.com"
                    }
                  ],
                  "workforce_name": "example"
                }
        argumentDocs:
            arn: '- The Amazon Resource Name (ARN) assigned by AWS to this Workforce.'
            authorization_endpoint: '- (Required) The OIDC IdP authorization endpoint used to configure your private workforce.'
            cidrs: '- (Required) A list of up to 10 CIDR values.'
            client_id: '- (Required) The client ID for your Amazon Cognito user pool.'
            client_secret: '- (Required) The OIDC IdP client secret used to configure your private workforce.'
            cognito_config: '- (Required) Use this parameter to configure an Amazon Cognito private workforce. A single Cognito workforce is created using and corresponds to a single Amazon Cognito user pool. Conflicts with oidc_config. see Cognito Config details below.'
            id: '- The name of the Workforce.'
            issuer: '- (Required) The OIDC IdP issuer used to configure your private workforce.'
            jwks_uri: '- (Required) The OIDC IdP JSON Web Key Set (Jwks) URI used to configure your private workforce.'
            logout_endpoint: '- (Required) The OIDC IdP logout endpoint used to configure your private workforce.'
            oidc_config: '- (Required) Use this parameter to configure a private workforce using your own OIDC Identity Provider. Conflicts with cognito_config. see OIDC Config details below.'
            source_ip_config: '- (Required) A list of IP address ranges Used to create an allow list of IP addresses for a private workforce. By default, a workforce isn''t restricted to specific IP addresses. see Source Ip Config details below.'
            subdomain: '- The subdomain for your OIDC Identity Provider.'
            token_endpoint: '- (Required) The OIDC IdP token endpoint used to configure your private workforce.'
            user_info_endpoint: '- (Required) The OIDC IdP user information endpoint used to configure your private workforce.'
            user_pool: '- (Required) The id for your Amazon Cognito user pool.'
            workforce_name: '- (Required) The name of the Workforce (must be unique).'
        importStatements: []
    aws_sagemaker_workteam:
        subCategory: SageMaker
        description: Provides a SageMaker Workteam resource.
        name: aws_sagemaker_workteam
        title: aws_sagemaker_workteam
        examples:
            - name: example
              manifest: |-
                {
                  "description": "example",
                  "member_definition": [
                    {
                      "cognito_member_definition": [
                        {
                          "client_id": "${aws_cognito_user_pool_client.example.id}",
                          "user_group": "${aws_cognito_user_group.example.id}",
                          "user_pool": "${aws_cognito_user_pool_domain.example.user_pool_id}"
                        }
                      ]
                    }
                  ],
                  "workforce_name": "${aws_sagemaker_workforce.example.id}",
                  "workteam_name": "example"
                }
              references:
                member_definition.cognito_member_definition.client_id: aws_cognito_user_pool_client.example.id
                member_definition.cognito_member_definition.user_group: aws_cognito_user_group.example.id
                member_definition.cognito_member_definition.user_pool: aws_cognito_user_pool_domain.example.user_pool_id
                workforce_name: aws_sagemaker_workforce.example.id
            - name: example
              manifest: |-
                {
                  "description": "example",
                  "member_definition": [
                    {
                      "oidc_member_definition": [
                        {
                          "groups": [
                            "example"
                          ]
                        }
                      ]
                    }
                  ],
                  "workforce_name": "${aws_sagemaker_workforce.example.id}",
                  "workteam_name": "example"
                }
              references:
                workforce_name: aws_sagemaker_workforce.example.id
        argumentDocs:
            arn: '- The Amazon Resource Name (ARN) assigned by AWS to this Workteam.'
            client_id: '- (Required) An identifier for an application client. You must create the app client ID using Amazon Cognito.'
            cognito_member_definition: '- (Optional) The Amazon Cognito user group that is part of the work team. See Cognito Member Definition details below.'
            description: '- (Required) A description of the work team.'
            groups: '- (Required) A list of comma separated strings that identifies user groups in your OIDC IdP. Each user group is made up of a group of private workers.'
            id: '- The name of the Workteam.'
            member_definition: '- (Required) A list of Member Definitions that contains objects that identify the workers that make up the work team. Workforces can be created using Amazon Cognito or your own OIDC Identity Provider (IdP). For private workforces created using Amazon Cognito use cognito_member_definition. For workforces created using your own OIDC identity provider (IdP) use oidc_member_definition. Do not provide input for both of these parameters in a single request. see Member Definition details below.'
            notification_configuration: '- (Optional) Configures notification of workers regarding available or expiring work items. see Notification Configuration details below.'
            notification_topic_arn: '- (Required) The ARN for the SNS topic to which notifications should be published.'
            oidc_member_definition: '- (Optional) A list user groups that exist in your OIDC Identity Provider (IdP). One to ten groups can be used to create a single private work team. See Cognito Member Definition details below.'
            subdomain: '- The subdomain for your OIDC Identity Provider.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            user_group: '- (Required) An identifier for a user group.'
            user_pool: '- (Required) An identifier for a user pool. The user pool must be in the same region as the service that you are calling.'
            workforce_name: '- (Required) The name of the Workteam (must be unique).'
            workteam_name: '- (Required) The name of the workforce.'
        importStatements: []
    aws_schemas_discoverer:
        subCategory: EventBridge Schemas
        description: Provides an EventBridge Schema Discoverer resource.
        name: aws_schemas_discoverer
        title: aws_schemas_discoverer
        examples:
            - name: test
              manifest: |-
                {
                  "description": "Auto discover event schemas",
                  "source_arn": "${aws_cloudwatch_event_bus.messenger.arn}"
                }
              references:
                source_arn: aws_cloudwatch_event_bus.messenger.arn
              dependencies:
                aws_cloudwatch_event_bus.messenger: |-
                    {
                      "name": "chat-messages"
                    }
        argumentDocs:
            arn: '- The Amazon Resource Name (ARN) of the discoverer.'
            description: '- (Optional) The description of the discoverer. Maximum of 256 characters.'
            id: '- The ID of the discoverer.'
            source_arn: '- (Required) The ARN of the event bus to discover event schemas on.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_schemas_registry:
        subCategory: EventBridge Schemas
        description: Provides an EventBridge Custom Schema Registry resource.
        name: aws_schemas_registry
        title: aws_schemas_registry
        examples:
            - name: test
              manifest: |-
                {
                  "description": "A custom schema registry",
                  "name": "my_own_registry"
                }
        argumentDocs:
            arn: '- The Amazon Resource Name (ARN) of the discoverer.'
            description: '- (Optional) The description of the discoverer. Maximum of 256 characters.'
            name: '- (Required) The name of the custom event schema registry. Maximum of 64 characters consisting of lower case letters, upper case letters, 0-9, ., -, _.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_schemas_schema:
        subCategory: EventBridge Schemas
        description: Provides an EventBridge Schema resource.
        name: aws_schemas_schema
        title: aws_schemas_schema
        examples:
            - name: test
              manifest: |-
                {
                  "content": "${jsonencode({\n    \"openapi\" : \"3.0.0\",\n    \"info\" : {\n      \"version\" : \"1.0.0\",\n      \"title\" : \"Event\"\n    },\n    \"paths\" : {},\n    \"components\" : {\n      \"schemas\" : {\n        \"Event\" : {\n          \"type\" : \"object\",\n          \"properties\" : {\n            \"name\" : {\n              \"type\" : \"string\"\n            }\n          }\n        }\n      }\n    }\n  })}",
                  "description": "The schema definition for my event",
                  "name": "my_schema",
                  "registry_name": "${aws_schemas_registry.test.name}",
                  "type": "OpenApi3"
                }
              references:
                registry_name: aws_schemas_registry.test.name
              dependencies:
                aws_schemas_registry.test: |-
                    {
                      "name": "my_own_registry"
                    }
        argumentDocs:
            arn: '- The Amazon Resource Name (ARN) of the discoverer.'
            content: '- (Required) The schema specification. Must be a valid Open API 3.0 spec.'
            description: '- (Optional) The description of the schema. Maximum of 256 characters.'
            last_modified: '- The last modified date of the schema.'
            name: '- (Required) The name of the schema. Maximum of 385 characters consisting of lower case letters, upper case letters, ., -, _, @.'
            registry_name: '- (Required) The name of the registry in which this schema belongs.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            type: '- (Required) The type of the schema. Valid values: OpenApi3.'
            version: '- The version of the schema.'
            version_created_date: '- The created date of the version of the schema.'
        importStatements: []
    aws_secretsmanager_secret:
        subCategory: Secrets Manager
        description: Provides a resource to manage AWS Secrets Manager secret metadata
        name: aws_secretsmanager_secret
        title: aws_secretsmanager_secret
        examples:
            - name: example
              manifest: |-
                {
                  "name": "example"
                }
            - name: rotation-example
              manifest: |-
                {
                  "name": "rotation-example",
                  "rotation_lambda_arn": "${aws_lambda_function.example.arn}",
                  "rotation_rules": [
                    {
                      "automatically_after_days": 7
                    }
                  ]
                }
              references:
                rotation_lambda_arn: aws_lambda_function.example.arn
        argumentDocs:
            arn: '- ARN of the secret.'
            description: '- (Optional) Description of the secret.'
            force_overwrite_replica_secret: '- (Optional) Accepts boolean value to specify whether to overwrite a secret with the same name in the destination Region.'
            id: '- ARN of the secret.'
            kms_key_id: '- (Optional) ARN or Id of the AWS KMS key to be used to encrypt the secret values in the versions stored in this secret. If you don''t specify this value, then Secrets Manager defaults to using the AWS account''s default KMS key (the one named aws/secretsmanager). If the default KMS key with that name doesn''t yet exist, then AWS Secrets Manager creates it for you automatically the first time.'
            name: '- (Optional) Friendly name of the new secret. The secret name can consist of uppercase letters, lowercase letters, digits, and any of the following characters: /_+=.@- Conflicts with name_prefix.'
            name_prefix: '- (Optional) Creates a unique name beginning with the specified prefix. Conflicts with name.'
            policy: '- (Optional) Valid JSON document representing a resource policy. For more information about building AWS IAM policy documents with Terraform, see the AWS IAM Policy Document Guide. Removing policy from your configuration or setting policy to null or an empty string (i.e., policy = "") will not delete the policy since it could have been set by aws_secretsmanager_secret_policy. To delete the policy, set it to "{}" (an empty JSON document).'
            recovery_window_in_days: '- (Optional) Number of days that AWS Secrets Manager waits before it can delete the secret. This value can be 0 to force deletion without recovery or range from 7 to 30 days. The default value is 30.'
            replica: '- (Optional) Configuration block to support secret replication. See details below.'
            replica.kms_key_id: '- (Optional) ARN, Key ID, or Alias of the AWS KMS key within the region secret is replicated to. If one is not specified, then Secrets Manager defaults to using the AWS account''s default KMS key (aws/secretsmanager) in the region or creates one for use if non-existent.'
            replica.last_accessed_date: '- Date that you last accessed the secret in the Region.'
            replica.region: '- (Required) Region for replicating the secret.'
            replica.status: '- Status can be InProgress, Failed, or InSync.'
            replica.status_message: '- Message such as Replication succeeded or Secret with this name already exists in this region.'
            rotation_enabled: '- Whether automatic rotation is enabled for this secret.'
            rotation_lambda_arn: '- (Optional, DEPRECATED) ARN of the Lambda function that can rotate the secret. Use the aws_secretsmanager_secret_rotation resource to manage this configuration instead. As of version 2.67.0, removal of this configuration will no longer remove rotation due to supporting the new resource. Either import the new resource and remove the configuration or manually remove rotation.'
            rotation_rules: '- (Optional, DEPRECATED) Configuration block for the rotation configuration of this secret. Defined below. Use the aws_secretsmanager_secret_rotation resource to manage this configuration instead. As of version 2.67.0, removal of this configuration will no longer remove rotation due to supporting the new resource. Either import the new resource and remove the configuration or manually remove rotation.'
            rotation_rules.automatically_after_days: '- (Required) Specifies the number of days between automatic scheduled rotations of the secret.'
            tags: '- (Optional) Key-value map of user-defined tags that are attached to the secret. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_secretsmanager_secret_policy:
        subCategory: Secrets Manager
        description: Provides a resource to manage AWS Secrets Manager secret policy
        name: aws_secretsmanager_secret_policy
        title: aws_secretsmanager_secret_policy
        examples:
            - name: example
              manifest: |-
                {
                  "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n\t{\n\t  \"Sid\": \"EnableAnotherAWSAccountToReadTheSecret\",\n\t  \"Effect\": \"Allow\",\n\t  \"Principal\": {\n\t\t\"AWS\": \"arn:aws:iam::123456789012:root\"\n\t  },\n\t  \"Action\": \"secretsmanager:GetSecretValue\",\n\t  \"Resource\": \"*\"\n\t}\n  ]\n}\n",
                  "secret_arn": "${aws_secretsmanager_secret.example.arn}"
                }
              references:
                secret_arn: aws_secretsmanager_secret.example.arn
              dependencies:
                aws_secretsmanager_secret.example: |-
                    {
                      "name": "example"
                    }
        argumentDocs:
            block_public_policy: '- (Optional) Makes an optional API call to Zelkova to validate the Resource Policy to prevent broad access to your secret.'
            id: '- Amazon Resource Name (ARN) of the secret.'
            policy: '- (Required) Valid JSON document representing a resource policy. For more information about building AWS IAM policy documents with Terraform, see the AWS IAM Policy Document Guide. Unlike aws_secretsmanager_secret, where policy can be set to "{}" to delete the policy, "{}" is not a valid policy since policy is required.'
            secret_arn: '- (Required) Secret ARN.'
        importStatements: []
    aws_secretsmanager_secret_rotation:
        subCategory: Secrets Manager
        description: Provides a resource to manage AWS Secrets Manager secret rotation
        name: aws_secretsmanager_secret_rotation
        title: aws_secretsmanager_secret_rotation
        examples:
            - name: example
              manifest: |-
                {
                  "rotation_lambda_arn": "${aws_lambda_function.example.arn}",
                  "rotation_rules": [
                    {
                      "automatically_after_days": 30
                    }
                  ],
                  "secret_id": "${aws_secretsmanager_secret.example.id}"
                }
              references:
                rotation_lambda_arn: aws_lambda_function.example.arn
                secret_id: aws_secretsmanager_secret.example.id
        argumentDocs:
            arn: '- Amazon Resource Name (ARN) of the secret.'
            id: '- Amazon Resource Name (ARN) of the secret.'
            rotation_enabled: '- Specifies whether automatic rotation is enabled for this secret.'
            rotation_lambda_arn: '- (Required) Specifies the ARN of the Lambda function that can rotate the secret.'
            rotation_rules: '- (Required) A structure that defines the rotation configuration for this secret. Defined below.'
            rotation_rules.automatically_after_days: '- (Required) Specifies the number of days between automatic scheduled rotations of the secret.'
            secret_id: '- (Required) Specifies the secret to which you want to add a new version. You can specify either the Amazon Resource Name (ARN) or the friendly name of the secret. The secret must already exist.'
        importStatements: []
    aws_secretsmanager_secret_version:
        subCategory: Secrets Manager
        description: Provides a resource to manage AWS Secrets Manager secret version including its secret value
        name: aws_secretsmanager_secret_version
        title: aws_secretsmanager_secret_version
        examples:
            - name: example
              manifest: |-
                {
                  "secret_id": "${aws_secretsmanager_secret.example.id}",
                  "secret_string": "example-string-to-protect"
                }
              references:
                secret_id: aws_secretsmanager_secret.example.id
            - name: example
              manifest: |-
                {
                  "secret_id": "${aws_secretsmanager_secret.example.id}",
                  "secret_string": "${jsonencode(var.example)}"
                }
              references:
                secret_id: aws_secretsmanager_secret.example.id
        argumentDocs:
            arn: '- The ARN of the secret.'
            id: '- A pipe delimited combination of secret ID and version ID.'
            secret_binary: '- (Optional) Specifies binary data that you want to encrypt and store in this version of the secret. This is required if secret_string is not set. Needs to be encoded to base64.'
            secret_id: '- (Required) Specifies the secret to which you want to add a new version. You can specify either the Amazon Resource Name (ARN) or the friendly name of the secret. The secret must already exist.'
            secret_string: '- (Optional) Specifies text data that you want to encrypt and store in this version of the secret. This is required if secret_binary is not set.'
            version_id: '- The unique identifier of the version of the secret.'
            version_stages: '- (Optional) Specifies a list of staging labels that are attached to this version of the secret. A staging label must be unique to a single version of the secret. If you specify a staging label that''s already associated with a different version of the same secret then that staging label is automatically removed from the other version and attached to this version. If you do not specify a value, then AWS Secrets Manager automatically moves the staging label AWSCURRENT to this new version on creation.'
        importStatements: []
    aws_security_group:
        subCategory: VPC (Virtual Private Cloud)
        description: Provides a security group resource.
        name: aws_security_group
        title: aws_security_group
        examples:
            - name: allow_tls
              manifest: |-
                {
                  "description": "Allow TLS inbound traffic",
                  "egress": [
                    {
                      "cidr_blocks": [
                        "0.0.0.0/0"
                      ],
                      "from_port": 0,
                      "ipv6_cidr_blocks": [
                        "::/0"
                      ],
                      "protocol": "-1",
                      "to_port": 0
                    }
                  ],
                  "ingress": [
                    {
                      "cidr_blocks": [
                        "${aws_vpc.main.cidr_block}"
                      ],
                      "description": "TLS from VPC",
                      "from_port": 443,
                      "ipv6_cidr_blocks": [
                        "${aws_vpc.main.ipv6_cidr_block}"
                      ],
                      "protocol": "tcp",
                      "to_port": 443
                    }
                  ],
                  "name": "allow_tls",
                  "tags": {
                    "Name": "allow_tls"
                  },
                  "vpc_id": "${aws_vpc.main.id}"
                }
              references:
                vpc_id: aws_vpc.main.id
            - name: example
              manifest: |-
                {
                  "egress": [
                    {
                      "cidr_blocks": [
                        "0.0.0.0/0"
                      ],
                      "from_port": 0,
                      "ipv6_cidr_blocks": [
                        "::/0"
                      ],
                      "protocol": "-1",
                      "to_port": 0
                    }
                  ]
                }
            - name: example
              manifest: |-
                {
                  "egress": [
                    {
                      "from_port": 0,
                      "prefix_list_ids": [
                        "${aws_vpc_endpoint.my_endpoint.prefix_list_id}"
                      ],
                      "protocol": "-1",
                      "to_port": 0
                    }
                  ]
                }
              dependencies:
                aws_vpc_endpoint.my_endpoint: '{}'
            - name: sg_with_changeable_name
              manifest: |-
                {
                  "lifecycle": [
                    {
                      "create_before_destroy": true
                    }
                  ],
                  "name": "changeable-name"
                }
        argumentDocs:
            arn: '- ARN of the security group.'
            cidr_blocks: '- (Optional) List of CIDR blocks.'
            create: '- (Default 10m) How long to wait for a security group to be created.'
            delete: '- (Default 15m) How long to retry on DependencyViolation errors during security group deletion from lingering ENIs left by certain AWS services such as Elastic Load Balancing. NOTE: Lambda ENIs can take up to 45 minutes to delete, which is not affected by changing this customizable timeout (in version 2.31.0 and later of the Terraform AWS Provider) unless it is increased above 45 minutes.'
            description: '- (Optional, Forces new resource) Security group description. Defaults to Managed by Terraform. Cannot be "". NOTE: This field maps to the AWS GroupDescription attribute, for which there is no Update API. If you''d like to classify your security groups in a way that can be updated, use tags.'
            egress: '- (Optional, VPC only) Configuration block for egress rules. Can be specified multiple times for each egress rule. Each egress block supports fields documented below. This argument is processed in attribute-as-blocks mode.'
            from_port: '- (Required) Start port (or ICMP type number if protocol is icmp or icmpv6).'
            id: '- ID of the security group.'
            ingress: '- (Optional) Configuration block for ingress rules. Can be specified multiple times for each ingress rule. Each ingress block supports fields documented below. This argument is processed in attribute-as-blocks mode.'
            ipv6_cidr_blocks: '- (Optional) List of IPv6 CIDR blocks.'
            name: '- (Optional, Forces new resource) Name of the security group. If omitted, Terraform will assign a random, unique name.'
            name_prefix: '- (Optional, Forces new resource) Creates a unique name beginning with the specified prefix. Conflicts with name.'
            owner_id: '- Owner ID.'
            prefix_list_ids: '- (Optional) List of Prefix List IDs.'
            protocol: '- (Required) Protocol. If you select a protocol of -1 (semantically equivalent to all, which is not a valid value here), you must specify a from_port and to_port equal to 0.  The supported values are defined in the IpProtocol argument on the IpPermission API reference. This argument is normalized to a lowercase value to match the AWS API requirement when using with Terraform 0.12.x and above, please make sure that the value of the protocol is specified as lowercase when using with older version of Terraform to avoid an issue during upgrade.'
            revoke_rules_on_delete: '- (Optional) Instruct Terraform to revoke all of the Security Groups attached ingress and egress rules before deleting the rule itself. This is normally not needed, however certain AWS services such as Elastic Map Reduce may automatically add required rules to security groups used with the service, and those rules may contain a cyclic dependency that prevent the security groups from being destroyed without removing the dependency first. Default false.'
            security_groups: '- (Optional) List of security group Group Names if using EC2-Classic, or Group IDs if using a VPC.'
            self: '- (Optional) Whether the security group itself will be added as a source to this ingress rule.'
            tags: '- (Optional) Map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            to_port: '- (Required) End range port (or ICMP code if protocol is icmp).'
            vpc_id: '- (Optional, Forces new resource) VPC ID.'
        importStatements: []
    aws_security_group_rule:
        subCategory: VPC (Virtual Private Cloud)
        description: Provides an security group rule resource.
        name: aws_security_group_rule
        title: aws_security_group_rule
        examples:
            - name: example
              manifest: |-
                {
                  "cidr_blocks": [
                    "${aws_vpc.example.cidr_block}"
                  ],
                  "from_port": 0,
                  "ipv6_cidr_blocks": [
                    "${aws_vpc.example.ipv6_cidr_block}"
                  ],
                  "protocol": "tcp",
                  "security_group_id": "sg-123456",
                  "to_port": 65535,
                  "type": "ingress"
                }
            - name: allow_all
              manifest: |-
                {
                  "from_port": 0,
                  "prefix_list_ids": [
                    "${aws_vpc_endpoint.my_endpoint.prefix_list_id}"
                  ],
                  "protocol": "-1",
                  "security_group_id": "sg-123456",
                  "to_port": 0,
                  "type": "egress"
                }
              dependencies:
                aws_vpc_endpoint.my_endpoint: '{}'
            - name: s3_gateway_egress
              manifest: |-
                {
                  "description": "S3 Gateway Egress",
                  "from_port": 443,
                  "prefix_list_ids": [
                    "${data.aws_prefix_list.s3.id}"
                  ],
                  "protocol": "tcp",
                  "security_group_id": "sg-123456",
                  "to_port": 443,
                  "type": "egress"
                }
        argumentDocs:
            cidr_blocks: '- (Optional) List of CIDR blocks. Cannot be specified with source_security_group_id or self.'
            description: '- (Optional) Description of the rule.'
            from_port: '- (Required) Start port (or ICMP type number if protocol is "icmp" or "icmpv6").'
            id: '- ID of the security group rule.'
            ipv6_cidr_blocks: '- (Optional) List of IPv6 CIDR blocks. Cannot be specified with source_security_group_id or self.'
            prefix_list_ids: '- (Optional) List of Prefix List IDs.'
            protocol: '- (Required) Protocol. If not icmp, icmpv6, tcp, udp, or all use the protocol number'
            security_group_id: '- (Required) Security group to apply this rule to.'
            self: '- (Optional) Whether the security group itself will be added as a source to this ingress rule. Cannot be specified with cidr_blocks, ipv6_cidr_blocks, or source_security_group_id.'
            source_security_group_id: '- (Optional) Security group id to allow access to/from, depending on the type. Cannot be specified with cidr_blocks, ipv6_cidr_blocks, or self.'
            to_port: '- (Required) End port (or ICMP code if protocol is "icmp").'
            type: |-
                - (Required) Type of rule being created. Valid options are ingress (inbound)
                or egress (outbound).
        importStatements: []
    aws_securityhub_account:
        subCategory: Security Hub
        description: Enables Security Hub for an AWS account.
        name: aws_securityhub_account
        title: aws_securityhub_account
        examples:
            - name: example
              manifest: '{}'
        argumentDocs:
            id: '- AWS Account ID.'
        importStatements: []
    aws_securityhub_action_target:
        subCategory: Security Hub
        description: Creates Security Hub custom action.
        name: aws_securityhub_action_target
        title: aws_securityhub_action_target
        examples:
            - name: example
              manifest: |-
                {
                  "depends_on": [
                    "${aws_securityhub_account.example}"
                  ],
                  "description": "This is custom action sends selected findings to chat",
                  "identifier": "SendToChat",
                  "name": "Send notification to chat"
                }
              dependencies:
                aws_securityhub_account.example: '{}'
        argumentDocs:
            arn: '- Amazon Resource Name (ARN) of the Security Hub custom action target.'
            description: '- (Required) The name of the custom action target.'
            identifier: '- (Required) The ID for the custom action target.'
            name: '- (Required) The description for the custom action target.'
        importStatements: []
    aws_securityhub_finding_aggregator:
        subCategory: Security Hub
        description: Manages a Security Hub finding aggregator
        name: aws_securityhub_finding_aggregator
        title: aws_securityhub_finding_aggregator
        examples:
            - name: example
              manifest: |-
                {
                  "depends_on": [
                    "${aws_securityhub_account.example}"
                  ],
                  "linking_mode": "ALL_REGIONS"
                }
              dependencies:
                aws_securityhub_account.example: '{}'
            - name: example
              manifest: |-
                {
                  "depends_on": [
                    "${aws_securityhub_account.example}"
                  ],
                  "linking_mode": "ALL_REGIONS_EXCEPT_SPECIFIED",
                  "specified_regions": [
                    "eu-west-1",
                    "eu-west-2"
                  ]
                }
              dependencies:
                aws_securityhub_account.example: '{}'
            - name: example
              manifest: |-
                {
                  "depends_on": [
                    "${aws_securityhub_account.example}"
                  ],
                  "linking_mode": "SPECIFIED_REGIONS",
                  "specified_regions": [
                    "eu-west-1",
                    "eu-west-2"
                  ]
                }
              dependencies:
                aws_securityhub_account.example: '{}'
        argumentDocs:
            arn: '- Amazon Resource Name (ARN) of the Security Hub finding aggregator.'
            linking_mode: '- (Required) Indicates whether to aggregate findings from all of the available Regions or from a specified list. The options are ALL_REGIONS, ALL_REGIONS_EXCEPT_SPECIFIED or SPECIFIED_REGIONS. When ALL_REGIONS or ALL_REGIONS_EXCEPT_SPECIFIED are used, Security Hub will automatically aggregate findings from new Regions as Security Hub supports them and you opt into them.'
            specified_regions: '- (Optional) List of regions to include or exclude (required if linking_mode is set to ALL_REGIONS_EXCEPT_SPECIFIED or SPECIFIED_REGIONS)'
        importStatements: []
    aws_securityhub_insight:
        subCategory: Security Hub
        description: Provides a Security Hub custom insight resource.
        name: aws_securityhub_insight
        title: aws_securityhub_insight
        examples:
            - name: example
              manifest: |-
                {
                  "depends_on": [
                    "${aws_securityhub_account.example}"
                  ],
                  "filters": [
                    {
                      "aws_account_id": [
                        {
                          "comparison": "EQUALS",
                          "value": "1234567890"
                        },
                        {
                          "comparison": "EQUALS",
                          "value": "09876543210"
                        }
                      ]
                    }
                  ],
                  "group_by_attribute": "AwsAccountId",
                  "name": "example-insight"
                }
              dependencies:
                aws_securityhub_account.example: '{}'
            - name: example
              manifest: |-
                {
                  "depends_on": [
                    "${aws_securityhub_account.example}"
                  ],
                  "filters": [
                    {
                      "created_at": [
                        {
                          "date_range": [
                            {
                              "unit": "DAYS",
                              "value": 5
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "group_by_attribute": "CreatedAt",
                  "name": "example-insight"
                }
              dependencies:
                aws_securityhub_account.example: '{}'
            - name: example
              manifest: |-
                {
                  "depends_on": [
                    "${aws_securityhub_account.example}"
                  ],
                  "filters": [
                    {
                      "network_destination_ipv4": [
                        {
                          "cidr": "10.0.0.0/16"
                        }
                      ]
                    }
                  ],
                  "group_by_attribute": "NetworkDestinationIpV4",
                  "name": "example-insight"
                }
              dependencies:
                aws_securityhub_account.example: '{}'
            - name: example
              manifest: |-
                {
                  "depends_on": [
                    "${aws_securityhub_account.example}"
                  ],
                  "filters": [
                    {
                      "confidence": [
                        {
                          "gte": "80"
                        }
                      ]
                    }
                  ],
                  "group_by_attribute": "Confidence",
                  "name": "example-insight"
                }
              dependencies:
                aws_securityhub_account.example: '{}'
            - name: example
              manifest: |-
                {
                  "depends_on": [
                    "${aws_securityhub_account.example}"
                  ],
                  "filters": [
                    {
                      "resource_tags": [
                        {
                          "comparison": "EQUALS",
                          "key": "Environment",
                          "value": "Production"
                        }
                      ]
                    }
                  ],
                  "group_by_attribute": "ResourceTags",
                  "name": "example-insight"
                }
              dependencies:
                aws_securityhub_account.example: '{}'
        argumentDocs:
            arn: '- ARN of the insight.'
            cidr: '- (Required) A finding''s CIDR value.'
            comparison: '- (Required) The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.'
            date_range: '- (Optional) A configuration block of the date range for the date filter. See date_range below for more details.'
            date_range.unit: '- (Required) A date range unit for the date filter. Valid values: DAYS.'
            date_range.value: '- (Required) A date range value for the date filter, provided as an Integer.'
            end: '- (Optional) An end date for the date filter. Required with start if date_range is not specified.'
            eq: '- (Optional) The equal-to condition to be applied to a single field when querying for findings, provided as a String.'
            filters: '- (Required) A configuration block including one or more (up to 10 distinct) attributes used to filter the findings included in the insight. The insight only includes findings that match criteria defined in the filters. See filters below for more details.'
            filters.aws_account_id: '- (Optional) AWS account ID that a finding is generated in. See String_Filter below for more details.'
            filters.company_name: '- (Optional) The name of the findings provider (company) that owns the solution (product) that generates findings. See String_Filter below for more details.'
            filters.compliance_status: '- (Optional) Exclusive to findings that are generated as the result of a check run against a specific rule in a supported standard, such as CIS AWS Foundations. Contains security standard-related finding details. See String Filter below for more details.'
            filters.confidence: '- (Optional) A finding''s confidence. Confidence is defined as the likelihood that a finding accurately identifies the behavior or issue that it was intended to identify. Confidence is scored on a 0-100 basis using a ratio scale, where 0 means zero percent confidence and 100 means 100 percent confidence. See Number Filter below for more details.'
            filters.created_at: '- (Optional) An ISO8601-formatted timestamp that indicates when the security-findings provider captured the potential security issue that a finding captured. See Date Filter below for more details.'
            filters.criticality: '- (Optional) The level of importance assigned to the resources associated with the finding. A score of 0 means that the underlying resources have no criticality, and a score of 100 is reserved for the most critical resources. See Number Filter below for more details.'
            filters.description: '- (Optional) A finding''s description. See String Filter below for more details.'
            filters.finding_provider_fields_confidence: '- (Optional) The finding provider value for the finding confidence. Confidence is defined as the likelihood that a finding accurately identifies the behavior or issue that it was intended to identify. Confidence is scored on a 0-100 basis using a ratio scale, where 0 means zero percent confidence and 100 means 100 percent confidence. See Number Filter below for more details.'
            filters.finding_provider_fields_criticality: '- (Optional) The finding provider value for the level of importance assigned to the resources associated with the findings. A score of 0 means that the underlying resources have no criticality, and a score of 100 is reserved for the most critical resources. See Number Filter below for more details.'
            filters.finding_provider_fields_related_findings_id: '- (Optional) The finding identifier of a related finding that is identified by the finding provider. See String Filter below for more details.'
            filters.finding_provider_fields_related_findings_product_arn: '- (Optional) The ARN of the solution that generated a related finding that is identified by the finding provider. See String Filter below for more details.'
            filters.finding_provider_fields_severity_label: '- (Optional) The finding provider value for the severity label. See String Filter below for more details.'
            filters.finding_provider_fields_severity_original: '- (Optional) The finding provider''s original value for the severity. See String Filter below for more details.'
            filters.finding_provider_fields_types: '- (Optional) One or more finding types that the finding provider assigned to the finding. Uses the format of namespace/category/classifier that classify a finding. Valid namespace values include: Software and Configuration Checks, TTPs, Effects, Unusual Behaviors, and Sensitive Data Identifications. See String Filter below for more details.'
            filters.first_observed_at: '- (Optional) An ISO8601-formatted timestamp that indicates when the security-findings provider first observed the potential security issue that a finding captured. See Date Filter below for more details.'
            filters.generator_id: '- (Optional) The identifier for the solution-specific component (a discrete unit of logic) that generated a finding. See String Filter below for more details.'
            filters.id: '- (Optional) The security findings provider-specific identifier for a finding. See String Filter below for more details.'
            filters.keyword: '- (Optional) A keyword for a finding. See Keyword Filter below for more details.'
            filters.last_observed_at: '- (Optional) An ISO8601-formatted timestamp that indicates when the security-findings provider most recently observed the potential security issue that a finding captured. See Date Filter below for more details.'
            filters.malware_name: '- (Optional) The name of the malware that was observed. See String Filter below for more details.'
            filters.malware_path: '- (Optional) The filesystem path of the malware that was observed. See String Filter below for more details.'
            filters.malware_state: '- (Optional) The state of the malware that was observed. See String Filter below for more details.'
            filters.malware_type: '- (Optional) The type of the malware that was observed. See String Filter below for more details.'
            filters.network_destination_domain: '- (Optional) The destination domain of network-related information about a finding. See String Filter below for more details.'
            filters.network_destination_ipv4: '- (Optional) The destination IPv4 address of network-related information about a finding. See Ip Filter below for more details.'
            filters.network_destination_ipv6: '- (Optional) The destination IPv6 address of network-related information about a finding. See Ip Filter below for more details.'
            filters.network_destination_port: '- (Optional) The destination port of network-related information about a finding. See Number Filter below for more details.'
            filters.network_direction: '- (Optional) Indicates the direction of network traffic associated with a finding. See String Filter below for more details.'
            filters.network_protocol: '- (Optional) The protocol of network-related information about a finding. See String Filter below for more details.'
            filters.network_source_domain: '- (Optional) The source domain of network-related information about a finding. See String Filter below for more details.'
            filters.network_source_ipv4: '- (Optional) The source IPv4 address of network-related information about a finding. See Ip Filter below for more details.'
            filters.network_source_ipv6: '- (Optional) The source IPv6 address of network-related information about a finding. See Ip Filter below for more details.'
            filters.network_source_mac: '- (Optional) The source media access control (MAC) address of network-related information about a finding. See String Filter below for more details.'
            filters.network_source_port: '- (Optional) The source port of network-related information about a finding. See Number Filter below for more details.'
            filters.note_text: '- (Optional) The text of a note. See String Filter below for more details.'
            filters.note_updated_at: '- (Optional) The timestamp of when the note was updated. See Date Filter below for more details.'
            filters.note_updated_by: '- (Optional) The principal that created a note. See String Filter below for more details.'
            filters.process_launched_at: '- (Optional) The date/time that the process was launched. See Date Filter below for more details.'
            filters.process_name: '- (Optional) The name of the process. See String Filter below for more details.'
            filters.process_parent_pid: '- (Optional) The parent process ID. See Number Filter below for more details.'
            filters.process_path: '- (Optional) The path to the process executable. See String Filter below for more details.'
            filters.process_pid: '- (Optional) The process ID. See Number Filter below for more details.'
            filters.process_terminated_at: '- (Optional) The date/time that the process was terminated. See Date Filter below for more details.'
            filters.product_arn: '- (Optional) The ARN generated by Security Hub that uniquely identifies a third-party company (security findings provider) after this provider''s product (solution that generates findings) is registered with Security Hub. See String Filter below for more details.'
            filters.product_fields: '- (Optional) A data type where security-findings providers can include additional solution-specific details that aren''t part of the defined AwsSecurityFinding format. See Map Filter below for more details.'
            filters.product_name: '- (Optional) The name of the solution (product) that generates findings. See String Filter below for more details.'
            filters.recommendation_text: '- (Optional) The recommendation of what to do about the issue described in a finding. See String Filter below for more details.'
            filters.record_state: '- (Optional) The updated record state for the finding. See String Filter below for more details.'
            filters.related_findings_id: '- (Optional) The solution-generated identifier for a related finding. See String Filter below for more details.'
            filters.related_findings_product_arn: '- (Optional) The ARN of the solution that generated a related finding. See String Filter below for more details.'
            filters.resource_aws_ec2_instance_iam_instance_profile_arn: '- (Optional) The IAM profile ARN of the instance. See String Filter below for more details.'
            filters.resource_aws_ec2_instance_image_id: '- (Optional) The Amazon Machine Image (AMI) ID of the instance. See String Filter below for more details.'
            filters.resource_aws_ec2_instance_ipv4_addresses: '- (Optional) The IPv4 addresses associated with the instance. See Ip Filter below for more details.'
            filters.resource_aws_ec2_instance_ipv6_addresses: '- (Optional) The IPv6 addresses associated with the instance. See Ip Filter below for more details.'
            filters.resource_aws_ec2_instance_key_name: '- (Optional) The key name associated with the instance. See String Filter below for more details.'
            filters.resource_aws_ec2_instance_launched_at: '- (Optional) The date and time the instance was launched. See Date Filter below for more details.'
            filters.resource_aws_ec2_instance_subnet_id: '- (Optional) The identifier of the subnet that the instance was launched in. See String Filter below for more details.'
            filters.resource_aws_ec2_instance_type: '- (Optional) The instance type of the instance. See String Filter below for more details.'
            filters.resource_aws_ec2_instance_vpc_id: '- (Optional) The identifier of the VPC that the instance was launched in. See String Filter below for more details.'
            filters.resource_aws_iam_access_key_created_at: '- (Optional) The creation date/time of the IAM access key related to a finding. See Date Filter below for more details.'
            filters.resource_aws_iam_access_key_status: '- (Optional) The status of the IAM access key related to a finding. See String Filter below for more details.'
            filters.resource_aws_iam_access_key_user_name: '- (Optional) The user associated with the IAM access key related to a finding. See String Filter below for more details.'
            filters.resource_aws_s3_bucket_owner_id: '- (Optional) The canonical user ID of the owner of the S3 bucket. See String Filter below for more details.'
            filters.resource_aws_s3_bucket_owner_name: '- (Optional) The display name of the owner of the S3 bucket. See String Filter below for more details.'
            filters.resource_container_image_id: '- (Optional) The identifier of the image related to a finding. See String Filter below for more details.'
            filters.resource_container_image_name: '- (Optional) The name of the image related to a finding. See String Filter below for more details.'
            filters.resource_container_launched_at: '- (Optional) The date/time that the container was started. See Date Filter below for more details.'
            filters.resource_container_name: '- (Optional) The name of the container related to a finding. See String Filter below for more details.'
            filters.resource_details_other: '- (Optional) The details of a resource that doesn''t have a specific subfield for the resource type defined. See Map Filter below for more details.'
            filters.resource_id: '- (Optional) The canonical identifier for the given resource type. See String Filter below for more details.'
            filters.resource_partition: '- (Optional) The canonical AWS partition name that the Region is assigned to. See String Filter below for more details.'
            filters.resource_region: '- (Optional) The canonical AWS external Region name where this resource is located. See String Filter below for more details.'
            filters.resource_tags: '- (Optional) A list of AWS tags associated with a resource at the time the finding was processed. See Map Filter below for more details.'
            filters.resource_type: '- (Optional) Specifies the type of the resource that details are provided for. See String Filter below for more details.'
            filters.severity_label: '- (Optional) The label of a finding''s severity. See String Filter below for more details.'
            filters.source_url: '- (Optional) A URL that links to a page about the current finding in the security-findings provider''s solution. See String Filter below for more details.'
            filters.threat_intel_indicator_category: '- (Optional) The category of a threat intelligence indicator. See String Filter below for more details.'
            filters.threat_intel_indicator_last_observed_at: '- (Optional) The date/time of the last observation of a threat intelligence indicator. See Date Filter below for more details.'
            filters.threat_intel_indicator_source: '- (Optional) The source of the threat intelligence. See String Filter below for more details.'
            filters.threat_intel_indicator_source_url: '- (Optional) The URL for more details from the source of the threat intelligence. See String Filter below for more details.'
            filters.threat_intel_indicator_type: '- (Optional) The type of a threat intelligence indicator. See String Filter below for more details.'
            filters.threat_intel_indicator_value: '- (Optional) The value of a threat intelligence indicator. See String Filter below for more details.'
            filters.title: '- (Optional) A finding''s title. See String Filter below for more details.'
            filters.type: '- (Optional) A finding type in the format of namespace/category/classifier that classifies a finding. See String Filter below for more details.'
            filters.updated_at: '- (Optional) An ISO8601-formatted timestamp that indicates when the security-findings provider last updated the finding record. See Date Filter below for more details.'
            filters.user_defined_values: '- (Optional) A list of name/value string pairs associated with the finding. These are custom, user-defined fields added to a finding. See Map Filter below for more details.'
            filters.verification_state: '- (Optional) The veracity of a finding. See String Filter below for more details.'
            filters.workflow_status: '- (Optional) The status of the investigation into a finding. See Workflow Status Filter below for more details.'
            group_by_attribute: '- (Required) The attribute used to group the findings for the insight e.g., if an insight is grouped by ResourceId, then the insight produces a list of resource identifiers.'
            gte: '- (Optional) The greater-than-equal condition to be applied to a single field when querying for findings, provided as a String.'
            id: '- ARN of the insight.'
            key: '- (Required) The key of the map filter. For example, for ResourceTags, Key identifies the name of the tag. For UserDefinedFields, Key is the name of the field.'
            lte: '- (Optional) The less-than-equal condition to be applied to a single field when querying for findings, provided as a String.'
            name: '- (Required) The name of the custom insight.'
            start: '- (Optional) A start date for the date filter. Required with end if date_range is not specified.'
            value: '- (Required) A value for the keyword.'
        importStatements: []
    aws_securityhub_invite_accepter:
        subCategory: Security Hub
        description: Accepts a Security Hub invitation.
        name: aws_securityhub_invite_accepter
        title: aws_securityhub_invite_accepter
        examples:
            - name: invitee
              manifest: |-
                {
                  "depends_on": [
                    "${aws_securityhub_account.invitee}"
                  ],
                  "master_id": "${aws_securityhub_member.example.master_id}",
                  "provider": "aws.invitee"
                }
              references:
                master_id: aws_securityhub_member.example.master_id
              dependencies:
                aws_securityhub_account.example: '{}'
                aws_securityhub_account.invitee: |-
                    {
                      "provider": "aws.invitee"
                    }
                aws_securityhub_member.example: |-
                    {
                      "account_id": "123456789012",
                      "email": "example@example.com",
                      "invite": true
                    }
        argumentDocs:
            invitation_id: '- The ID of the invitation.'
            master_id: '- (Required) The account ID of the master Security Hub account whose invitation you''re accepting.'
        importStatements: []
    aws_securityhub_member:
        subCategory: Security Hub
        description: Provides a Security Hub member resource.
        name: aws_securityhub_member
        title: aws_securityhub_member
        examples:
            - name: example
              manifest: |-
                {
                  "account_id": "123456789012",
                  "depends_on": [
                    "${aws_securityhub_account.example}"
                  ],
                  "email": "example@example.com",
                  "invite": true
                }
              dependencies:
                aws_securityhub_account.example: '{}'
        argumentDocs:
            account_id: '- (Required) The ID of the member AWS account.'
            email: '- (Required) The email of the member AWS account.'
            id: '- The ID of the member AWS account (matches account_id).'
            invite: '- (Optional) Boolean whether to invite the account to Security Hub as a member. Defaults to false.'
            master_id: '- The ID of the master Security Hub AWS account.'
            member_status: '- The status of the member account relationship.'
        importStatements: []
    aws_securityhub_organization_admin_account:
        subCategory: Security Hub
        description: Manages a Security Hub administrator account for an organization.
        name: aws_securityhub_organization_admin_account
        title: aws_securityhub_organization_admin_account
        examples:
            - name: example
              manifest: |-
                {
                  "admin_account_id": "123456789012",
                  "depends_on": [
                    "${aws_organizations_organization.example}"
                  ]
                }
              dependencies:
                aws_organizations_organization.example: |-
                    {
                      "aws_service_access_principals": [
                        "securityhub.amazonaws.com"
                      ],
                      "feature_set": "ALL"
                    }
                aws_securityhub_account.example: '{}'
                aws_securityhub_organization_configuration.example: |-
                    {
                      "auto_enable": true
                    }
        argumentDocs:
            admin_account_id: '- (Required) The AWS account identifier of the account to designate as the Security Hub administrator account.'
            id: '- AWS account identifier.'
        importStatements: []
    aws_securityhub_organization_configuration:
        subCategory: Security Hub
        description: Manages the Security Hub Organization Configuration
        name: aws_securityhub_organization_configuration
        title: aws_securityhub_organization_configuration
        examples:
            - name: example
              manifest: |-
                {
                  "auto_enable": true
                }
              dependencies:
                aws_organizations_organization.example: |-
                    {
                      "aws_service_access_principals": [
                        "securityhub.amazonaws.com"
                      ],
                      "feature_set": "ALL"
                    }
                aws_securityhub_organization_admin_account.example: |-
                    {
                      "admin_account_id": "123456789012",
                      "depends_on": [
                        "${aws_organizations_organization.example}"
                      ]
                    }
        argumentDocs:
            auto_enable: '- (Required) Whether to automatically enable Security Hub for new accounts in the organization.'
            id: '- AWS Account ID.'
        importStatements: []
    aws_securityhub_product_subscription:
        subCategory: Security Hub
        description: Subscribes to a Security Hub product.
        name: aws_securityhub_product_subscription
        title: aws_securityhub_product_subscription
        examples:
            - name: example
              manifest: |-
                {
                  "depends_on": [
                    "${aws_securityhub_account.example}"
                  ],
                  "product_arn": "arn:aws:securityhub:${data.aws_region.current.name}:733251395267:product/alertlogic/althreatmanagement"
                }
              dependencies:
                aws_securityhub_account.example: '{}'
        argumentDocs:
            arn: '- The ARN of a resource that represents your subscription to the product that generates the findings that you want to import into Security Hub.'
            product_arn: '- (Required) The ARN of the product that generates findings that you want to import into Security Hub - see below.'
        importStatements: []
    aws_securityhub_standards_control:
        subCategory: Security Hub
        description: Enable/disable Security Hub standards controls.
        name: aws_securityhub_standards_control
        title: aws_securityhub_standards_control
        examples:
            - name: ensure_iam_password_policy_prevents_password_reuse
              manifest: |-
                {
                  "control_status": "DISABLED",
                  "depends_on": [
                    "${aws_securityhub_standards_subscription.cis_aws_foundations_benchmark}"
                  ],
                  "disabled_reason": "We handle password policies within Okta",
                  "standards_control_arn": "arn:aws:securityhub:us-east-1:111111111111:control/cis-aws-foundations-benchmark/v/1.2.0/1.10"
                }
              dependencies:
                aws_securityhub_account.example: '{}'
                aws_securityhub_standards_subscription.cis_aws_foundations_benchmark: |-
                    {
                      "depends_on": [
                        "${aws_securityhub_account.example}"
                      ],
                      "standards_arn": "arn:aws:securityhub:::ruleset/cis-aws-foundations-benchmark/v/1.2.0"
                    }
        argumentDocs:
            control_id: – The identifier of the security standard control.
            control_status: – (Required) The control status could be ENABLED or DISABLED. You have to specify disabled_reason argument for DISABLED control status.
            control_status_updated_at: – The date and time that the status of the security standard control was most recently updated.
            description: – The standard control longer description. Provides information about what the control is checking for.
            disabled_reason: – (Optional) A description of the reason why you are disabling a security standard control. If you specify this attribute, control_status will be set to DISABLED automatically.
            id: '- The standard control ARN.'
            related_requirements: – The list of requirements that are related to this control.
            remediation_url: – A link to remediation information for the control in the Security Hub user documentation.
            severity_rating: – The severity of findings generated from this security standard control.
            standards_control_arn: '- (Required) The standards control ARN.'
            title: – The standard control title.
        importStatements: []
    aws_securityhub_standards_subscription:
        subCategory: Security Hub
        description: Subscribes to a Security Hub standard.
        name: aws_securityhub_standards_subscription
        title: aws_securityhub_standards_subscription
        examples:
            - name: cis
              manifest: |-
                {
                  "depends_on": [
                    "${aws_securityhub_account.example}"
                  ],
                  "standards_arn": "arn:aws:securityhub:::ruleset/cis-aws-foundations-benchmark/v/1.2.0"
                }
              dependencies:
                aws_securityhub_account.example: '{}'
            - name: pci_321
              manifest: |-
                {
                  "depends_on": [
                    "${aws_securityhub_account.example}"
                  ],
                  "standards_arn": "arn:aws:securityhub:us-east-1::standards/pci-dss/v/3.2.1"
                }
              dependencies:
                aws_securityhub_account.example: '{}'
        argumentDocs:
            id: '- The ARN of a resource that represents your subscription to a supported standard.'
            standards_arn: '- (Required) The ARN of a standard - see below.'
        importStatements: []
    aws_serverlessapplicationrepository_cloudformation_stack:
        subCategory: Serverless Application Repository
        description: Deploys an Application CloudFormation Stack from the Serverless Application Repository.
        name: aws_serverlessapplicationrepository_cloudformation_stack
        title: aws_serverlessapplicationrepository_cloudformation_stack
        examples:
            - name: postgres-rotator
              manifest: |-
                {
                  "application_id": "arn:aws:serverlessrepo:us-east-1:297356227824:applications/SecretsManagerRDSPostgreSQLRotationSingleUser",
                  "capabilities": [
                    "CAPABILITY_IAM",
                    "CAPABILITY_RESOURCE_POLICY"
                  ],
                  "name": "postgres-rotator",
                  "parameters": {
                    "endpoint": "secretsmanager.${data.aws_region.current.name}.${data.aws_partition.current.dns_suffix}",
                    "functionName": "func-postgres-rotator"
                  }
                }
        argumentDocs:
            application_id: '- (Required) The ARN of the application from the Serverless Application Repository.'
            capabilities: '- (Required) A list of capabilities. Valid values are CAPABILITY_IAM, CAPABILITY_NAMED_IAM, CAPABILITY_RESOURCE_POLICY, or CAPABILITY_AUTO_EXPAND'
            id: '- A unique identifier of the stack.'
            name: '- (Required) The name of the stack to create. The resource deployed in AWS will be prefixed with serverlessrepo-'
            outputs: '- A map of outputs from the stack.'
            parameters: '- (Optional) A map of Parameter structures that specify input parameters for the stack.'
            semantic_version: '- (Optional) The version of the application to deploy. If not supplied, deploys the latest version.'
            tags: '- (Optional) A list of tags to associate with this stack. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_service_discovery_http_namespace:
        subCategory: Cloud Map
        description: Provides a Service Discovery HTTP Namespace resource.
        name: aws_service_discovery_http_namespace
        title: aws_service_discovery_http_namespace
        examples:
            - name: example
              manifest: |-
                {
                  "description": "example",
                  "name": "development"
                }
        argumentDocs:
            arn: '- The ARN that Amazon Route 53 assigns to the namespace when you create it.'
            description: '- (Optional) The description that you specify for the namespace when you create it.'
            http_name: '- The name of an HTTP namespace.'
            id: '- The ID of a namespace.'
            name: '- (Required) The name of the http namespace.'
            tags: '- (Optional) A map of tags to assign to the namespace. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_service_discovery_instance:
        subCategory: Cloud Map
        description: Provides a Service Discovery Instance resource.
        name: aws_service_discovery_instance
        title: aws_service_discovery_instance
        examples:
            - name: example
              manifest: |-
                {
                  "attributes": {
                    "AWS_INSTANCE_IPV4": "172.18.0.1",
                    "custom_attribute": "custom"
                  },
                  "instance_id": "example-instance-id",
                  "service_id": "${aws_service_discovery_service.example.id}"
                }
              references:
                service_id: aws_service_discovery_service.example.id
              dependencies:
                aws_service_discovery_private_dns_namespace.example: |-
                    {
                      "description": "example",
                      "name": "example.terraform.local",
                      "vpc": "${aws_vpc.example.id}"
                    }
                aws_service_discovery_service.example: |-
                    {
                      "dns_config": [
                        {
                          "dns_records": [
                            {
                              "ttl": 10,
                              "type": "A"
                            }
                          ],
                          "namespace_id": "${aws_service_discovery_private_dns_namespace.example.id}",
                          "routing_policy": "MULTIVALUE"
                        }
                      ],
                      "health_check_custom_config": [
                        {
                          "failure_threshold": 1
                        }
                      ],
                      "name": "example"
                    }
                aws_vpc.example: |-
                    {
                      "cidr_block": "10.0.0.0/16",
                      "enable_dns_hostnames": true,
                      "enable_dns_support": true
                    }
            - name: example
              manifest: |-
                {
                  "attributes": {
                    "AWS_EC2_INSTANCE_ID": "i-0abdg374kd892cj6dl"
                  },
                  "instance_id": "example-instance-id",
                  "service_id": "${aws_service_discovery_service.example.id}"
                }
              references:
                service_id: aws_service_discovery_service.example.id
              dependencies:
                aws_service_discovery_http_namespace.example: |-
                    {
                      "description": "example",
                      "name": "example.terraform.com"
                    }
                aws_service_discovery_service.example: |-
                    {
                      "name": "example",
                      "namespace_id": "${aws_service_discovery_http_namespace.example.id}"
                    }
        argumentDocs:
            attributes: '- (Required) A map contains the attributes of the instance. Check the doc for the supported attributes and syntax.'
            id: '- The ID of the instance.'
            instance_id: '- (Required, ForceNew) The ID of the service instance.'
            service_id: '- (Required, ForceNew) The ID of the service that you want to use to create the instance.'
        importStatements: []
    aws_service_discovery_private_dns_namespace:
        subCategory: Cloud Map
        description: Provides a Service Discovery Private DNS Namespace resource.
        name: aws_service_discovery_private_dns_namespace
        title: aws_service_discovery_private_dns_namespace
        examples:
            - name: example
              manifest: |-
                {
                  "description": "example",
                  "name": "hoge.example.local",
                  "vpc": "${aws_vpc.example.id}"
                }
              references:
                vpc: aws_vpc.example.id
              dependencies:
                aws_vpc.example: |-
                    {
                      "cidr_block": "10.0.0.0/16"
                    }
        argumentDocs:
            arn: '- The ARN that Amazon Route 53 assigns to the namespace when you create it.'
            description: '- (Optional) The description that you specify for the namespace when you create it.'
            hosted_zone: '- The ID for the hosted zone that Amazon Route 53 creates when you create a namespace.'
            id: '- The ID of a namespace.'
            name: '- (Required) The name of the namespace.'
            tags: '- (Optional) A map of tags to assign to the namespace. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            vpc: '- (Required) The ID of VPC that you want to associate the namespace with.'
        importStatements: []
    aws_service_discovery_public_dns_namespace:
        subCategory: Cloud Map
        description: Provides a Service Discovery Public DNS Namespace resource.
        name: aws_service_discovery_public_dns_namespace
        title: aws_service_discovery_public_dns_namespace
        examples:
            - name: example
              manifest: |-
                {
                  "description": "example",
                  "name": "hoge.example.com"
                }
        argumentDocs:
            arn: '- The ARN that Amazon Route 53 assigns to the namespace when you create it.'
            description: '- (Optional) The description that you specify for the namespace when you create it.'
            hosted_zone: '- The ID for the hosted zone that Amazon Route 53 creates when you create a namespace.'
            id: '- The ID of a namespace.'
            name: '- (Required) The name of the namespace.'
            tags: '- (Optional) A map of tags to assign to the namespace. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_service_discovery_service:
        subCategory: Cloud Map
        description: Provides a Service Discovery Service resource.
        name: aws_service_discovery_service
        title: aws_service_discovery_service
        examples:
            - name: example
              manifest: |-
                {
                  "dns_config": [
                    {
                      "dns_records": [
                        {
                          "ttl": 10,
                          "type": "A"
                        }
                      ],
                      "namespace_id": "${aws_service_discovery_private_dns_namespace.example.id}",
                      "routing_policy": "MULTIVALUE"
                    }
                  ],
                  "health_check_custom_config": [
                    {
                      "failure_threshold": 1
                    }
                  ],
                  "name": "example"
                }
              references:
                dns_config.namespace_id: aws_service_discovery_private_dns_namespace.example.id
              dependencies:
                aws_service_discovery_private_dns_namespace.example: |-
                    {
                      "description": "example",
                      "name": "example.terraform.local",
                      "vpc": "${aws_vpc.example.id}"
                    }
                aws_vpc.example: |-
                    {
                      "cidr_block": "10.0.0.0/16",
                      "enable_dns_hostnames": true,
                      "enable_dns_support": true
                    }
            - name: example
              manifest: |-
                {
                  "dns_config": [
                    {
                      "dns_records": [
                        {
                          "ttl": 10,
                          "type": "A"
                        }
                      ],
                      "namespace_id": "${aws_service_discovery_public_dns_namespace.example.id}"
                    }
                  ],
                  "health_check_config": [
                    {
                      "failure_threshold": 10,
                      "resource_path": "path",
                      "type": "HTTP"
                    }
                  ],
                  "name": "example"
                }
              references:
                dns_config.namespace_id: aws_service_discovery_public_dns_namespace.example.id
              dependencies:
                aws_service_discovery_public_dns_namespace.example: |-
                    {
                      "description": "example",
                      "name": "example.terraform.com"
                    }
        argumentDocs:
            arn: '- The ARN of the service.'
            description: '- (Optional) The description of the service.'
            dns_config: '- (Optional) A complex type that contains information about the resource record sets that you want Amazon Route 53 to create when you register an instance.'
            dns_config.dns_records: '- (Required) An array that contains one DnsRecord object for each resource record set.'
            dns_config.dns_records.ttl: '- (Required) The amount of time, in seconds, that you want DNS resolvers to cache the settings for this resource record set.'
            dns_config.dns_records.type: '- (Required, ForceNew) The type of the resource, which indicates the value that Amazon Route 53 returns in response to DNS queries. Valid Values: A, AAAA, SRV, CNAME'
            dns_config.namespace_id: '- (Required, ForceNew) The ID of the namespace to use for DNS configuration.'
            dns_config.routing_policy: '- (Optional) The routing policy that you want to apply to all records that Route 53 creates when you register an instance and specify the service. Valid Values: MULTIVALUE, WEIGHTED'
            force_destroy: '- (Optional, Default:false ) A boolean that indicates all instances should be deleted from the service so that the service can be destroyed without error. These instances are not recoverable.'
            health_check_config: '- (Optional) A complex type that contains settings for an optional health check. Only for Public DNS namespaces.'
            health_check_config.failure_threshold: '- (Optional) The number of consecutive health checks. Maximum value of 10.'
            health_check_config.resource_path: '- (Optional) The path that you want Route 53 to request when performing health checks. Route 53 automatically adds the DNS name for the service. If you don''t specify a value, the default value is /.'
            health_check_config.type: '- (Optional, ForceNew) The type of health check that you want to create, which indicates how Route 53 determines whether an endpoint is healthy. Valid Values: HTTP, HTTPS, TCP'
            health_check_custom_config: '- (Optional, ForceNew) A complex type that contains settings for ECS managed health checks.'
            health_check_custom_config.failure_threshold: '- (Optional, ForceNew) The number of 30-second intervals that you want service discovery to wait before it changes the health status of a service instance.  Maximum value of 10.'
            id: '- The ID of the service.'
            name: '- (Required, ForceNew) The name of the service.'
            namespace_id: '- (Optional) The ID of the namespace that you want to use to create the service.'
            tags: '- (Optional) A map of tags to assign to the service. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_servicecatalog_budget_resource_association:
        subCategory: Service Catalog
        description: Manages a Service Catalog Budget Resource Association
        name: aws_servicecatalog_budget_resource_association
        title: aws_servicecatalog_budget_resource_association
        examples:
            - name: example
              manifest: |-
                {
                  "budget_name": "budget-pjtvyakdlyo3m",
                  "resource_id": "prod-dnigbtea24ste"
                }
        argumentDocs:
            budget_name: '- (Required) Budget name.'
            create: '- (Default 3 minutes)'
            delete: '- (Default 3 minutes)'
            id: '- Identifier of the association.'
            read: '- (Default 10 minutes)'
            resource_id: '- (Required) Resource identifier.'
        importStatements: []
    aws_servicecatalog_constraint:
        subCategory: Service Catalog
        description: Manages a Service Catalog Constraint
        name: aws_servicecatalog_constraint
        title: aws_servicecatalog_constraint
        examples:
            - name: example
              manifest: |-
                {
                  "description": "Back off, man. I'm a scientist.",
                  "parameters": "${jsonencode({\n    \"RoleArn\" : \"arn:aws:iam::123456789012:role/LaunchRole\"\n  })}",
                  "portfolio_id": "${aws_servicecatalog_portfolio.example.id}",
                  "product_id": "${aws_servicecatalog_product.example.id}",
                  "type": "LAUNCH"
                }
              references:
                portfolio_id: aws_servicecatalog_portfolio.example.id
                product_id: aws_servicecatalog_product.example.id
        argumentDocs:
            accept_language: '- (Optional) Language code. Valid values: en (English), jp (Japanese), zh (Chinese). Default value is en.'
            create: '- (Default 3 minutes)'
            delete: '- (Default 3 minutes)'
            description: '- (Optional) Description of the constraint.'
            id: '- Constraint identifier.'
            owner: '- Owner of the constraint.'
            parameters: '- (Required) Constraint parameters in JSON format. The syntax depends on the constraint type. See details below.'
            parameters.LAUNCH: ': You are required to specify either the RoleArn or the LocalRoleName but can''t use both. If you specify the LocalRoleName property, when an account uses the launch constraint, the IAM role with that name in the account will be used. This allows launch-role constraints to be account-agnostic so the administrator can create fewer resources per shared account. The given role name must exist in the account used to create the launch constraint and the account of the user who launches a product with this launch constraint. You cannot have both a LAUNCH and a STACKSET constraint. You also cannot have more than one LAUNCH constraint on an aws_servicecatalog_product and aws_servicecatalog_portfolio. Specify the RoleArn and LocalRoleName properties as follows:'
            parameters.NOTIFICATION: ': Specify the NotificationArns property as follows:'
            parameters.RESOURCE_UPDATE: ': Specify the TagUpdatesOnProvisionedProduct property as follows. The TagUpdatesOnProvisionedProduct property accepts a string value of ALLOWED or NOT_ALLOWED.'
            parameters.STACKSET: ': Specify the Parameters property as follows. You cannot have both a LAUNCH and a STACKSET constraint. You also cannot have more than one STACKSET constraint on on an aws_servicecatalog_product and aws_servicecatalog_portfolio. Products with a STACKSET constraint will launch an AWS CloudFormation stack set.'
            parameters.TEMPLATE: ': Specify the Rules property. For more information, see Template Constraint Rules.'
            portfolio_id: '- (Required) Portfolio identifier.'
            product_id: '- (Required) Product identifier.'
            read: '- (Default 10 minutes)'
            type: '- (Required) Type of constraint. Valid values are LAUNCH, NOTIFICATION, RESOURCE_UPDATE, STACKSET, and TEMPLATE.'
            update: '- (Default 3 minutes)'
        importStatements: []
    aws_servicecatalog_organizations_access:
        subCategory: Service Catalog
        description: Manages Service Catalog Organizations Access
        name: aws_servicecatalog_organizations_access
        title: aws_servicecatalog_organizations_access
        examples:
            - name: example
              manifest: |-
                {
                  "enabled": "true"
                }
        argumentDocs:
            enabled: '- (Required) Whether to enable AWS Organizations access.'
            id: '- Account ID for the account using the resource.'
            read: '- (Default 10 minutes)'
        importStatements: []
    aws_servicecatalog_portfolio:
        subCategory: Service Catalog
        description: Provides a resource to create a Service Catalog portfolio
        name: aws_servicecatalog_portfolio
        title: aws_servicecatalog_portfolio
        examples:
            - name: portfolio
              manifest: |-
                {
                  "description": "List of my organizations apps",
                  "name": "My App Portfolio",
                  "provider_name": "Brett"
                }
        argumentDocs:
            create: '- (Default 30 minutes)'
            delete: '- (Default 30 minutes)'
            description: '- (Required) Description of the portfolio'
            id: '- The ID of the Service Catalog Portfolio.'
            name: '- (Required) The name of the portfolio.'
            provider_name: '- (Required) Name of the person or organization who owns the portfolio.'
            read: '- (Default 10 minutes)'
            tags: '- (Optional) Tags to apply to the connection. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            update: '- (Default 30 minutes)'
        importStatements: []
    aws_servicecatalog_portfolio_share:
        subCategory: Service Catalog
        description: Manages a Service Catalog Portfolio Share
        name: aws_servicecatalog_portfolio_share
        title: aws_servicecatalog_portfolio_share
        examples:
            - name: example
              manifest: |-
                {
                  "portfolio_id": "${aws_servicecatalog_portfolio.example.id}",
                  "principal_id": "012128675309",
                  "type": "ACCOUNT"
                }
              references:
                portfolio_id: aws_servicecatalog_portfolio.example.id
        argumentDocs:
            accept_language: '- (Optional) Language code. Valid values: en (English), jp (Japanese), zh (Chinese). Default value is en.'
            accepted: '- Whether the shared portfolio is imported by the recipient account. If the recipient is organizational, the share is automatically imported, and the field is always set to true.'
            create: '- (Default 3 minutes)'
            delete: '- (Default 3 minutes)'
            portfolio_id: '- (Required) Portfolio identifier.'
            principal_id: '- (Required) Identifier of the principal with whom you will share the portfolio. Valid values AWS account IDs and ARNs of AWS Organizations and organizational units.'
            read: '- (Default 10 minutes)'
            share_tag_options: '- (Optional) Whether to enable sharing of aws_servicecatalog_tag_option resources when creating the portfolio share.'
            type: '- (Required) Type of portfolio share. Valid values are ACCOUNT (an external account), ORGANIZATION (a share to every account in an organization), ORGANIZATIONAL_UNIT, ORGANIZATION_MEMBER_ACCOUNT (a share to an account in an organization).'
            update: '- (Default 3 minutes)'
            wait_for_acceptance: '- (Optional) Whether to wait (up to the timeout) for the share to be accepted. Organizational shares are automatically accepted.'
        importStatements: []
    aws_servicecatalog_principal_portfolio_association:
        subCategory: Service Catalog
        description: Manages a Service Catalog Principal Portfolio Association
        name: aws_servicecatalog_principal_portfolio_association
        title: aws_servicecatalog_principal_portfolio_association
        examples:
            - name: example
              manifest: |-
                {
                  "portfolio_id": "port-68656c6c6f",
                  "principal_arn": "arn:aws:iam::123456789012:user/Eleanor"
                }
        argumentDocs:
            accept_language: '- (Optional) Language code. Valid values: en (English), jp (Japanese), zh (Chinese). Default value is en.'
            create: '- (Default 3 minutes)'
            delete: '- (Default 3 minutes)'
            id: '- Identifier of the association.'
            portfolio_id: '- (Required) Portfolio identifier.'
            principal_arn: '- (Required) Principal ARN.'
            principal_type: '- (Optional) Principal type. Setting this argument empty (e.g., principal_type = "") will result in an error. Valid value is IAM. Default is IAM.'
            read: '- (Default 10 minutes)'
        importStatements: []
    aws_servicecatalog_product:
        subCategory: Service Catalog
        description: Manages a Service Catalog Product
        name: aws_servicecatalog_product
        title: aws_servicecatalog_product
        examples:
            - name: example
              manifest: |-
                {
                  "name": "example",
                  "owner": [
                    "${aws_security_group.example.id}"
                  ],
                  "provisioning_artifact_parameters": [
                    {
                      "template_url": "https://s3.amazonaws.com/cf-templates-ozkq9d3hgiq2-us-east-1/temp1.json"
                    }
                  ],
                  "tags": {
                    "foo": "bar"
                  },
                  "type": "${aws_subnet.main.id}"
                }
              references:
                type: aws_subnet.main.id
        argumentDocs:
            accept_language: '- (Optional) Language code. Valid values: en (English), jp (Japanese), zh (Chinese). Default value is en.'
            arn: '- ARN of the product.'
            create: '- (Default 5 minutes)'
            created_time: '- Time when the product was created.'
            delete: '- (Default 5 minutes)'
            description: '- (Optional) Description of the product.'
            distributor: '- (Optional) Distributor (i.e., vendor) of the product.'
            has_default_path: '- Whether the product has a default path. If the product does not have a default path, call ListLaunchPaths to disambiguate between paths.  Otherwise, ListLaunchPaths is not required, and the output of ProductViewSummary can be used directly with DescribeProvisioningParameters.'
            id: '- Product ID. For example, prod-dnigbtea24ste.'
            name: '- (Required) Name of the product.'
            owner: '- (Required) Owner of the product.'
            provisioning_artifact_parameters: '- (Required) Configuration block for provisioning artifact (i.e., version) parameters. Detailed below.'
            provisioning_artifact_parameters.description: '- (Optional) Description of the provisioning artifact (i.e., version), including how it differs from the previous provisioning artifact.'
            provisioning_artifact_parameters.disable_template_validation: '- (Optional) Whether AWS Service Catalog stops validating the specified provisioning artifact template even if it is invalid.'
            provisioning_artifact_parameters.name: '- (Optional) Name of the provisioning artifact (for example, v1, v2beta). No spaces are allowed.'
            provisioning_artifact_parameters.template_physical_id: '- (Required if template_url is not provided) Template source as the physical ID of the resource that contains the template. Currently only supports CloudFormation stack ARN. Specify the physical ID as arn:[partition]:cloudformation:[region]:[account ID]:stack/[stack name]/[resource ID].'
            provisioning_artifact_parameters.template_url: '- (Required if template_physical_id is not provided) Template source as URL of the CloudFormation template in Amazon S3.'
            provisioning_artifact_parameters.type: '- (Optional) Type of provisioning artifact. Valid values: CLOUD_FORMATION_TEMPLATE, MARKETPLACE_AMI, MARKETPLACE_CAR (Marketplace Clusters and AWS Resources).'
            read: '- (Default 10 minutes)'
            status: '- Status of the product.'
            support_description: '- (Optional) Support information about the product.'
            support_email: '- (Optional) Contact email for product support.'
            support_url: '- (Optional) Contact URL for product support.'
            tags: '- (Optional) Tags to apply to the product. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            type: '- (Required) Type of product. Valid values are CLOUD_FORMATION_TEMPLATE, MARKETPLACE.'
            update: '- (Default 5 minutes)'
        importStatements: []
    aws_servicecatalog_product_portfolio_association:
        subCategory: Service Catalog
        description: Manages a Service Catalog Product Portfolio Association
        name: aws_servicecatalog_product_portfolio_association
        title: aws_servicecatalog_product_portfolio_association
        examples:
            - name: example
              manifest: |-
                {
                  "portfolio_id": "port-68656c6c6f",
                  "product_id": "prod-dnigbtea24ste"
                }
        argumentDocs:
            accept_language: '- (Optional) Language code. Valid values: en (English), jp (Japanese), zh (Chinese). Default value is en.'
            create: '- (Default 3 minutes)'
            delete: '- (Default 3 minutes)'
            id: '- Identifier of the association.'
            portfolio_id: '- (Required) Portfolio identifier.'
            product_id: '- (Required) Product identifier.'
            read: '- (Default 10 minutes)'
            source_portfolio_id: '- (Optional) Identifier of the source portfolio.'
        importStatements: []
    aws_servicecatalog_provisioned_product:
        subCategory: Service Catalog
        description: Manages a Service Catalog Provisioned Product
        name: aws_servicecatalog_provisioned_product
        title: aws_servicecatalog_provisioned_product
        examples:
            - name: example
              manifest: |-
                {
                  "name": "example",
                  "product_name": "Example product",
                  "provisioning_artifact_name": "Example version",
                  "provisioning_parameters": [
                    {
                      "key": "foo",
                      "value": "bar"
                    }
                  ],
                  "tags": {
                    "foo": "bar"
                  }
                }
        argumentDocs:
            AVAILABLE: '- Stable state, ready to perform any operation. The most recent operation succeeded and completed.'
            ERROR: '- An unexpected error occurred. The provisioned product exists but the stack is not running. For example, CloudFormation received a parameter value that was not valid and could not launch the stack.'
            PLAN_IN_PROGRESS: '- Transitive state. The plan operations were performed to provision a new product, but resources have not yet been created. After reviewing the list of resources to be created, execute the plan. Wait for an AVAILABLE status before performing operations.'
            TAINTED: '- Stable state, ready to perform any operation. The stack has completed the requested operation but is not exactly what was requested. For example, a request to update to a new version failed and the stack rolled back to the current version.'
            UNDER_CHANGE: |-
                - Transitive state. Operations performed might not have
                valid results. Wait for an AVAILABLE status before performing operations.
            accept_language: '- (Optional) Language code. Valid values: en (English), jp (Japanese), zh (Chinese). Default value is en.'
            arn: '- ARN of the provisioned product.'
            cloudwatch_dashboard_names: '- Set of CloudWatch dashboards that were created when provisioning the product.'
            create: '- (Default 30 minutes)'
            created_time: '- Time when the provisioned product was created.'
            delete: '- (Default 30 minutes)'
            description: '-  The description of the output.'
            id: '- Provisioned Product ID.'
            ignore_errors: '- (Optional) Only applies to deleting. If set to true, AWS Service Catalog stops managing the specified provisioned product even if it cannot delete the underlying resources. The default value is false.'
            key: '- The output key.'
            last_provisioning_record_id: '- Record identifier of the last request performed on this provisioned product of the following types: ProvisionedProduct, UpdateProvisionedProduct, ExecuteProvisionedProductPlan, TerminateProvisionedProduct.'
            last_record_id: '- Record identifier of the last request performed on this provisioned product.'
            last_successful_provisioning_record_id: '- Record identifier of the last successful request performed on this provisioned product of the following types: ProvisionedProduct, UpdateProvisionedProduct, ExecuteProvisionedProductPlan, TerminateProvisionedProduct.'
            launch_role_arn: '- ARN of the launch role associated with the provisioned product.'
            name: '- (Required) User-friendly name of the provisioned product.'
            notification_arns: '- (Optional) Passed to CloudFormation. The SNS topic ARNs to which to publish stack-related events.'
            outputs: '- The set of outputs for the product created.'
            path_id: '- (Optional) Path identifier of the product. This value is optional if the product has a default path, and required if the product has more than one path. To list the paths for a product, use aws_servicecatalog_launch_paths. When required, you must provide path_id or path_name, but not both.'
            path_name: '- (Optional) Name of the path. You must provide path_id or path_name, but not both.'
            product_id: '- (Optional) Product identifier. For example, prod-abcdzk7xy33qa. You must provide product_id or product_name, but not both.'
            product_name: '- (Optional) Name of the product. You must provide product_id or product_name, but not both.'
            provisioning_artifact_id: '- (Optional) Identifier of the provisioning artifact. For example, pa-4abcdjnxjj6ne. You must provide the provisioning_artifact_id or provisioning_artifact_name, but not both.'
            provisioning_artifact_name: '- (Optional) Name of the provisioning artifact. You must provide the provisioning_artifact_id or provisioning_artifact_name, but not both.'
            provisioning_parameters: '- (Optional) Configuration block with parameters specified by the administrator that are required for provisioning the product. See details below.'
            provisioning_parameters.key: '- (Required) Parameter key.'
            provisioning_parameters.use_previous_value: '- (Optional) Whether to ignore value and keep the previous parameter value. Ignored when initially provisioning a product.'
            provisioning_parameters.value: '- (Optional) Parameter value.'
            read: '- (Default 10 minutes)'
            retain_physical_resources: '- (Optional) Only applies to deleting. Whether to delete the Service Catalog provisioned product but leave the CloudFormation stack, stack set, or the underlying resources of the deleted provisioned product. The default value is false.'
            stack_set_provisioning_preferences: '- (Optional) Configuration block with information about the provisioning preferences for a stack set. See details below.'
            stack_set_provisioning_preferences.accounts: '- (Optional) One or more AWS accounts that will have access to the provisioned product. The AWS accounts specified should be within the list of accounts in the STACKSET constraint. To get the list of accounts in the STACKSET constraint, use the aws_servicecatalog_provisioning_parameters data source. If no values are specified, the default value is all accounts from the STACKSET constraint.'
            stack_set_provisioning_preferences.failure_tolerance_count: '- (Optional) Number of accounts, per region, for which this operation can fail before AWS Service Catalog stops the operation in that region. If the operation is stopped in a region, AWS Service Catalog doesn''t attempt the operation in any subsequent regions. You must specify either failure_tolerance_count or failure_tolerance_percentage, but not both. The default value is 0 if no value is specified.'
            stack_set_provisioning_preferences.failure_tolerance_percentage: '- (Optional) Percentage of accounts, per region, for which this stack operation can fail before AWS Service Catalog stops the operation in that region. If the operation is stopped in a region, AWS Service Catalog doesn''t attempt the operation in any subsequent regions. When calculating the number of accounts based on the specified percentage, AWS Service Catalog rounds down to the next whole number. You must specify either failure_tolerance_count or failure_tolerance_percentage, but not both.'
            stack_set_provisioning_preferences.max_concurrency_count: '- (Optional) Maximum number of accounts in which to perform this operation at one time. This is dependent on the value of failure_tolerance_count. max_concurrency_count is at most one more than the failure_tolerance_count. Note that this setting lets you specify the maximum for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling. You must specify either max_concurrency_count or max_concurrency_percentage, but not both.'
            stack_set_provisioning_preferences.max_concurrency_percentage: '- (Optional) Maximum percentage of accounts in which to perform this operation at one time. When calculating the number of accounts based on the specified percentage, AWS Service Catalog rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, AWS Service Catalog sets the number as 1 instead. Note that this setting lets you specify the maximum for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling. You must specify either max_concurrency_count or max_concurrency_percentage, but not both.'
            stack_set_provisioning_preferences.regions: '- (Optional) One or more AWS Regions where the provisioned product will be available. The specified regions should be within the list of regions from the STACKSET constraint. To get the list of regions in the STACKSET constraint, use the aws_servicecatalog_provisioning_parameters data source. If no values are specified, the default value is all regions from the STACKSET constraint.'
            status: '- Current status of the provisioned product. See meanings below.'
            status_message: '- Current status message of the provisioned product.'
            tags: '- (Optional) Tags to apply to the provisioned product. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            type: '- Type of provisioned product. Valid values are CFN_STACK and CFN_STACKSET.'
            update: '- (Default 30 minutes)'
            value: '- The output value.'
        importStatements: []
    aws_servicecatalog_provisioning_artifact:
        subCategory: Service Catalog
        description: Manages a Service Catalog Provisioning Artifact
        name: aws_servicecatalog_provisioning_artifact
        title: aws_servicecatalog_provisioning_artifact
        examples:
            - name: example
              manifest: |-
                {
                  "name": "example",
                  "product_id": "${aws_servicecatalog_product.example.id}",
                  "template_url": "https://${aws_s3_bucket.example.bucket_regional_domain_name}/${aws_s3_object.example.key}",
                  "type": "CLOUD_FORMATION_TEMPLATE"
                }
              references:
                product_id: aws_servicecatalog_product.example.id
        argumentDocs:
            accept_language: '- (Optional) Language code. Valid values: en (English), jp (Japanese), zh (Chinese). The default value is en.'
            active: '- (Optional) Whether the product version is active. Inactive provisioning artifacts are invisible to end users. End users cannot launch or update a provisioned product from an inactive provisioning artifact. Default is true.'
            create: '- (Default 3 minutes)'
            created_time: '- Time when the provisioning artifact was created.'
            delete: '- (Default 3 minutes)'
            description: '- (Optional) Description of the provisioning artifact (i.e., version), including how it differs from the previous provisioning artifact.'
            disable_template_validation: '- (Optional) Whether AWS Service Catalog stops validating the specified provisioning artifact template even if it is invalid.'
            guidance: '- (Optional) Information set by the administrator to provide guidance to end users about which provisioning artifacts to use. Valid values are DEFAULT and DEPRECATED. The default is DEFAULT. Users are able to make updates to a provisioned product of a deprecated version but cannot launch new provisioned products using a deprecated version.'
            id: '- Provisioning Artifact identifier and product identifier separated by a colon.'
            name: '- (Optional) Name of the provisioning artifact (for example, v1, v2beta). No spaces are allowed.'
            product_id: '- (Required) Identifier of the product.'
            read: '- (Default 10 minutes)'
            status: '- Status of the provisioning artifact.'
            template_physical_id: '- (Required if template_url is not provided) Template source as the physical ID of the resource that contains the template. Currently only supports CloudFormation stack ARN. Specify the physical ID as arn:[partition]:cloudformation:[region]:[account ID]:stack/[stack name]/[resource ID].'
            template_url: '- (Required if template_physical_id is not provided) Template source as URL of the CloudFormation template in Amazon S3.'
            type: '- (Optional) Type of provisioning artifact. Valid values: CLOUD_FORMATION_TEMPLATE, MARKETPLACE_AMI, MARKETPLACE_CAR (Marketplace Clusters and AWS Resources).'
            update: '- (Default 3 minutes)'
        importStatements: []
    aws_servicecatalog_service_action:
        subCategory: Service Catalog
        description: Manages a Service Catalog Service Action
        name: aws_servicecatalog_service_action
        title: aws_servicecatalog_service_action
        examples:
            - name: example
              manifest: |-
                {
                  "definition": [
                    {
                      "name": "AWS-RestartEC2Instance"
                    }
                  ],
                  "description": "Motor generator unit",
                  "name": "MGU"
                }
        argumentDocs:
            accept_language: '- (Optional) Language code. Valid values are en (English), jp (Japanese), and zh (Chinese). Default is en.'
            create: '- (Default 3 minutes)'
            definition: '- (Required) Self-service action definition configuration block. Detailed below.'
            definition.assume_role: '- (Optional) ARN of the role that performs the self-service actions on your behalf. For example, arn:aws:iam::12345678910:role/ActionRole. To reuse the provisioned product launch role, set to LAUNCH_ROLE.'
            definition.name: '- (Required) Name of the SSM document. For example, AWS-RestartEC2Instance. If you are using a shared SSM document, you must provide the ARN instead of the name.'
            definition.parameters: '- (Optional) List of parameters in JSON format. For example: [{\"Name\":\"InstanceId\",\"Type\":\"TARGET\"}] or [{\"Name\":\"InstanceId\",\"Type\":\"TEXT_VALUE\"}].'
            definition.type: '- (Optional) Service action definition type. Valid value is SSM_AUTOMATION. Default is SSM_AUTOMATION.'
            definition.version: '- (Required) SSM document version. For example, 1.'
            delete: '- (Default 3 minutes)'
            description: '- (Optional) Self-service action description.'
            id: '- Identifier of the service action.'
            name: '- (Required) Self-service action name.'
            read: '- (Default 10 minutes)'
            update: '- (Default 3 minutes)'
        importStatements: []
    aws_servicecatalog_tag_option:
        subCategory: Service Catalog
        description: Manages a Service Catalog Tag Option
        name: aws_servicecatalog_tag_option
        title: aws_servicecatalog_tag_option
        examples:
            - name: example
              manifest: |-
                {
                  "key": "nyckel",
                  "value": "värde"
                }
        argumentDocs:
            active: '- (Optional) Whether tag option is active. Default is true.'
            create: '- (Default 3 minutes)'
            delete: '- (Default 3 minutes)'
            id: '- Identifier (e.g., tag-pjtvagohlyo3m).'
            key: '- (Required) Tag option key.'
            owner_id: '- AWS account ID of the owner account that created the tag option.'
            read: '- (Default 10 minutes)'
            update: '- (Default 3 minutes)'
            value: '- (Required) Tag option value.'
        importStatements: []
    aws_servicecatalog_tag_option_resource_association:
        subCategory: Service Catalog
        description: Manages a Service Catalog Tag Option Resource Association
        name: aws_servicecatalog_tag_option_resource_association
        title: aws_servicecatalog_tag_option_resource_association
        examples:
            - name: example
              manifest: |-
                {
                  "resource_id": "prod-dnigbtea24ste",
                  "tag_option_id": "tag-pjtvyakdlyo3m"
                }
        argumentDocs:
            create: '- (Default 3 minutes)'
            delete: '- (Default 3 minutes)'
            id: '- Identifier of the association.'
            read: '- (Default 10 minutes)'
            resource_arn: '- ARN of the resource.'
            resource_created_time: '- Creation time of the resource.'
            resource_description: '- Description of the resource.'
            resource_id: '- (Required) Resource identifier.'
            resource_name: '- Description of the resource.'
            tag_option_id: '- (Required) Tag Option identifier.'
        importStatements: []
    aws_servicequotas_service_quota:
        subCategory: Service Quotas
        description: Manages an individual Service Quota
        name: aws_servicequotas_service_quota
        title: aws_servicequotas_service_quota
        examples:
            - name: example
              manifest: |-
                {
                  "quota_code": "L-F678F1CE",
                  "service_code": "vpc",
                  "value": 75
                }
        argumentDocs:
            adjustable: '- Whether the service quota can be increased.'
            arn: '- Amazon Resource Name (ARN) of the service quota.'
            default_value: '- Default value of the service quota.'
            id: '- Service code and quota code, separated by a front slash (/)'
            quota_code: '- (Required) Code of the service quota to track. For example: L-F678F1CE. Available values can be found with the AWS CLI service-quotas list-service-quotas command.'
            quota_name: '- Name of the quota.'
            service_code: '- (Required) Code of the service to track. For example: vpc. Available values can be found with the AWS CLI service-quotas list-services command.'
            service_name: '- Name of the service.'
            value: '- (Required) Float specifying the desired value for the service quota. If the desired value is higher than the current value, a quota increase request is submitted. When a known request is submitted and pending, the value reflects the desired value of the pending request.'
        importStatements: []
    aws_ses_active_receipt_rule_set:
        subCategory: SES (Simple Email)
        description: Provides a resource to designate the active SES receipt rule set
        name: aws_ses_active_receipt_rule_set
        title: aws_ses_active_receipt_rule_set
        examples:
            - name: main
              manifest: |-
                {
                  "rule_set_name": "primary-rules"
                }
        argumentDocs:
            arn: '- The SES receipt rule set ARN.'
            id: '- The SES receipt rule set name.'
            rule_set_name: '- (Required) The name of the rule set'
        importStatements: []
    aws_ses_configuration_set:
        subCategory: SES (Simple Email)
        description: Provides an SES configuration set
        name: aws_ses_configuration_set
        title: aws_ses_configuration_set
        examples:
            - name: test
              manifest: |-
                {
                  "name": "some-configuration-set-test"
                }
            - name: test
              manifest: |-
                {
                  "delivery_options": [
                    {
                      "tls_policy": "Require"
                    }
                  ],
                  "name": "some-configuration-set-test"
                }
        argumentDocs:
            arn: '- SES configuration set ARN.'
            delivery_options: '- (Optional) Configuration block. Detailed below.'
            delivery_options.tls_policy: '- (Optional) Specifies whether messages that use the configuration set are required to use Transport Layer Security (TLS). If the value is Require, messages are only delivered if a TLS connection can be established. If the value is Optional, messages can be delivered in plain text if a TLS connection can''t be established. Valid values: Require or Optional. Defaults to Optional.'
            id: '- SES configuration set name.'
            last_fresh_start: '- The date and time at which the reputation metrics for the configuration set were last reset. Resetting these metrics is known as a fresh start.'
            name: '- (Required) Name of the configuration set.'
            reputation_metrics_enabled: '- (Optional) Whether or not Amazon SES publishes reputation metrics for the configuration set, such as bounce and complaint rates, to Amazon CloudWatch. The default value is false.'
            sending_enabled: '- (Optional) Whether email sending is enabled or disabled for the configuration set. The default value is true.'
        importStatements: []
    aws_ses_domain_dkim:
        subCategory: SES (Simple Email)
        description: Provides an SES domain DKIM generation resource
        name: aws_ses_domain_dkim
        title: aws_ses_domain_dkim
        examples:
            - name: example
              manifest: |-
                {
                  "domain": "${aws_ses_domain_identity.example.domain}"
                }
              references:
                domain: aws_ses_domain_identity.example.domain
              dependencies:
                aws_route53_record.example_amazonses_dkim_record: |-
                    {
                      "count": 3,
                      "name": "${element(aws_ses_domain_dkim.example.dkim_tokens, count.index)}._domainkey",
                      "records": [
                        "${element(aws_ses_domain_dkim.example.dkim_tokens, count.index)}.dkim.amazonses.com"
                      ],
                      "ttl": "600",
                      "type": "CNAME",
                      "zone_id": "ABCDEFGHIJ123"
                    }
                aws_ses_domain_identity.example: |-
                    {
                      "domain": "example.com"
                    }
        argumentDocs:
            dkim_tokens: |-
                - DKIM tokens generated by SES.
                These tokens should be used to create CNAME records used to verify SES Easy DKIM.
                See below for an example of how this might be achieved
                when the domain is hosted in Route 53 and managed by Terraform.
                Find out more about verifying domains in Amazon SES
                in the AWS SES docs.
            domain: '- (Required) Verified domain name to generate DKIM tokens for.'
        importStatements: []
    aws_ses_domain_identity:
        subCategory: SES (Simple Email)
        description: Provides an SES domain identity resource
        name: aws_ses_domain_identity
        title: aws_ses_domain_identity
        examples:
            - name: example
              manifest: |-
                {
                  "domain": "example.com"
                }
              dependencies:
                aws_route53_record.example_amazonses_verification_record: |-
                    {
                      "name": "_amazonses.example.com",
                      "records": [
                        "${aws_ses_domain_identity.example.verification_token}"
                      ],
                      "ttl": "600",
                      "type": "TXT",
                      "zone_id": "ABCDEFGHIJ123"
                    }
        argumentDocs:
            arn: '- The ARN of the domain identity.'
            domain: '- (Required) The domain name to assign to SES'
            verification_token: |-
                - A code which when added to the domain as a TXT record
                will signal to SES that the owner of the domain has authorised SES to act on
                their behalf. The domain identity will be in state "verification pending"
                until this is done. See below for an example of how this might be achieved
                when the domain is hosted in Route 53 and managed by Terraform.  Find out
                more about verifying domains in Amazon SES in the AWS SES
                docs.
        importStatements: []
    aws_ses_domain_identity_verification:
        subCategory: SES (Simple Email)
        description: Waits for and checks successful verification of an SES domain identity.
        name: aws_ses_domain_identity_verification
        title: aws_ses_domain_identity_verification
        examples:
            - name: example_verification
              manifest: |-
                {
                  "depends_on": [
                    "${aws_route53_record.example_amazonses_verification_record}"
                  ],
                  "domain": "${aws_ses_domain_identity.example.id}"
                }
              references:
                domain: aws_ses_domain_identity.example.id
              dependencies:
                aws_route53_record.example_amazonses_verification_record: |-
                    {
                      "name": "_amazonses.${aws_ses_domain_identity.example.id}",
                      "records": [
                        "${aws_ses_domain_identity.example.verification_token}"
                      ],
                      "ttl": "600",
                      "type": "TXT",
                      "zone_id": "${aws_route53_zone.example.zone_id}"
                    }
                aws_ses_domain_identity.example: |-
                    {
                      "domain": "example.com"
                    }
        argumentDocs:
            arn: '- The ARN of the domain identity.'
            create: '- (Default 45m) How long to wait for a domain identity to be verified.'
            domain: '- (Required) The domain name of the SES domain identity to verify.'
            id: '- The domain name of the domain identity.'
        importStatements: []
    aws_ses_domain_mail_from:
        subCategory: SES (Simple Email)
        description: Provides an SES domain MAIL FROM resource
        name: aws_ses_domain_mail_from
        title: aws_ses_domain_mail_from
        examples:
            - name: example
              manifest: |-
                {
                  "domain": "${aws_ses_domain_identity.example.domain}",
                  "mail_from_domain": "bounce.${aws_ses_domain_identity.example.domain}"
                }
              references:
                domain: aws_ses_domain_identity.example.domain
              dependencies:
                aws_route53_record.example_ses_domain_mail_from_mx: |-
                    {
                      "name": "${aws_ses_domain_mail_from.example.mail_from_domain}",
                      "records": [
                        "10 feedback-smtp.us-east-1.amazonses.com"
                      ],
                      "ttl": "600",
                      "type": "MX",
                      "zone_id": "${aws_route53_zone.example.id}"
                    }
                aws_route53_record.example_ses_domain_mail_from_txt: |-
                    {
                      "name": "${aws_ses_domain_mail_from.example.mail_from_domain}",
                      "records": [
                        "v=spf1 include:amazonses.com -all"
                      ],
                      "ttl": "600",
                      "type": "TXT",
                      "zone_id": "${aws_route53_zone.example.id}"
                    }
                aws_ses_domain_identity.example: |-
                    {
                      "domain": "example.com"
                    }
            - name: example
              manifest: |-
                {
                  "domain": "${aws_ses_email_identity.example.email}",
                  "mail_from_domain": "mail.example.com"
                }
              references:
                domain: aws_ses_email_identity.example.email
              dependencies:
                aws_ses_email_identity.example: |-
                    {
                      "email": "user@example.com"
                    }
        argumentDocs:
            behavior_on_mx_failure: '- (Optional) The action that you want Amazon SES to take if it cannot successfully read the required MX record when you send an email. Defaults to UseDefaultValue. See the SES API documentation for more information.'
            domain: '- (Required) Verified domain name or email identity to generate DKIM tokens for.'
            id: '- The domain name.'
            mail_from_domain: '- (Required) Subdomain (of above domain) which is to be used as MAIL FROM address (Required for DMARC validation)'
        importStatements: []
    aws_ses_email_identity:
        subCategory: SES (Simple Email)
        description: Provides an SES email identity resource
        name: aws_ses_email_identity
        title: aws_ses_email_identity
        examples:
            - name: example
              manifest: |-
                {
                  "email": "email@example.com"
                }
        argumentDocs:
            arn: '- The ARN of the email identity.'
            email: '- (Required) The email address to assign to SES'
        importStatements: []
    aws_ses_event_destination:
        subCategory: SES (Simple Email)
        description: Provides an SES event destination
        name: aws_ses_event_destination
        title: aws_ses_event_destination
        examples:
            - name: cloudwatch
              manifest: |-
                {
                  "cloudwatch_destination": [
                    {
                      "default_value": "default",
                      "dimension_name": "dimension",
                      "value_source": "emailHeader"
                    }
                  ],
                  "configuration_set_name": "${aws_ses_configuration_set.example.name}",
                  "enabled": true,
                  "matching_types": [
                    "bounce",
                    "send"
                  ],
                  "name": "event-destination-cloudwatch"
                }
              references:
                configuration_set_name: aws_ses_configuration_set.example.name
            - name: kinesis
              manifest: |-
                {
                  "configuration_set_name": "${aws_ses_configuration_set.example.name}",
                  "enabled": true,
                  "kinesis_destination": [
                    {
                      "role_arn": "${aws_iam_role.example.arn}",
                      "stream_arn": "${aws_kinesis_firehose_delivery_stream.example.arn}"
                    }
                  ],
                  "matching_types": [
                    "bounce",
                    "send"
                  ],
                  "name": "event-destination-kinesis"
                }
              references:
                configuration_set_name: aws_ses_configuration_set.example.name
                kinesis_destination.role_arn: aws_iam_role.example.arn
                kinesis_destination.stream_arn: aws_kinesis_firehose_delivery_stream.example.arn
            - name: sns
              manifest: |-
                {
                  "configuration_set_name": "${aws_ses_configuration_set.example.name}",
                  "enabled": true,
                  "matching_types": [
                    "bounce",
                    "send"
                  ],
                  "name": "event-destination-sns",
                  "sns_destination": [
                    {
                      "topic_arn": "${aws_sns_topic.example.arn}"
                    }
                  ]
                }
              references:
                configuration_set_name: aws_ses_configuration_set.example.name
                sns_destination.topic_arn: aws_sns_topic.example.arn
        argumentDocs:
            arn: '- The SES event destination ARN.'
            cloudwatch_destination: '- (Optional) CloudWatch destination for the events'
            configuration_set_name: '- (Required) The name of the configuration set'
            default_value: '- (Required) The default value for the event'
            dimension_name: '- (Required) The name for the dimension'
            enabled: '- (Optional) If true, the event destination will be enabled'
            id: '- The SES event destination name.'
            kinesis_destination: '- (Optional) Send the events to a kinesis firehose destination'
            matching_types: '- (Required) A list of matching types. May be any of "send", "reject", "bounce", "complaint", "delivery", "open", "click", or "renderingFailure".'
            name: '- (Required) The name of the event destination'
            role_arn: '- (Required) The ARN of the role that has permissions to access the Kinesis Stream'
            sns_destination: '- (Optional) Send the events to an SNS Topic destination'
            stream_arn: '- (Required) The ARN of the Kinesis Stream'
            topic_arn: '- (Required) The ARN of the SNS topic'
            value_source: '- (Required) The source for the value. May be any of "messageTag", "emailHeader" or "linkTag".'
        importStatements: []
    aws_ses_identity_notification_topic:
        subCategory: SES (Simple Email)
        description: Setting AWS SES Identity Notification Topic
        name: aws_ses_identity_notification_topic
        title: aws_ses_identity_notification_topic
        examples:
            - name: test
              manifest: |-
                {
                  "identity": "${aws_ses_domain_identity.example.domain}",
                  "include_original_headers": true,
                  "notification_type": "Bounce",
                  "topic_arn": "${aws_sns_topic.example.arn}"
                }
              references:
                identity: aws_ses_domain_identity.example.domain
                topic_arn: aws_sns_topic.example.arn
        argumentDocs:
            identity: '- (Required) The identity for which the Amazon SNS topic will be set. You can specify an identity by using its name or by using its Amazon Resource Name (ARN).'
            include_original_headers: '- (Optional) Whether SES should include original email headers in SNS notifications of this type. false by default.'
            notification_type: '- (Required) The type of notifications that will be published to the specified Amazon SNS topic. Valid Values: Bounce, Complaint or Delivery.'
            topic_arn: '- (Optional) The Amazon Resource Name (ARN) of the Amazon SNS topic. Can be set to "" (an empty string) to disable publishing.'
        importStatements: []
    aws_ses_identity_policy:
        subCategory: SES (Simple Email)
        description: Manages a SES Identity Policy
        name: aws_ses_identity_policy
        title: aws_ses_identity_policy
        examples:
            - name: example
              manifest: |-
                {
                  "identity": "${aws_ses_domain_identity.example.arn}",
                  "name": "example",
                  "policy": "${data.aws_iam_policy_document.example.json}"
                }
              references:
                identity: aws_ses_domain_identity.example.arn
                policy: data.aws_iam_policy_document.example.json
              dependencies:
                aws_ses_domain_identity.example: |-
                    {
                      "domain": "example.com"
                    }
        argumentDocs:
            identity: '- (Required) Name or Amazon Resource Name (ARN) of the SES Identity.'
            name: '- (Required) Name of the policy.'
            policy: '- (Required) JSON string of the policy. For more information about building AWS IAM policy documents with Terraform, see the AWS IAM Policy Document Guide.'
        importStatements: []
    aws_ses_receipt_filter:
        subCategory: SES (Simple Email)
        description: Provides an SES receipt filter
        name: aws_ses_receipt_filter
        title: aws_ses_receipt_filter
        examples:
            - name: filter
              manifest: |-
                {
                  "cidr": "10.10.10.10",
                  "name": "block-spammer",
                  "policy": "Block"
                }
        argumentDocs:
            arn: '- The SES receipt filter ARN.'
            cidr: '- (Required) The IP address or address range to filter, in CIDR notation'
            id: '- The SES receipt filter name.'
            name: '- (Required) The name of the filter'
            policy: '- (Required) Block or Allow'
        importStatements: []
    aws_ses_receipt_rule:
        subCategory: SES (Simple Email)
        description: Provides an SES receipt rule resource
        name: aws_ses_receipt_rule
        title: aws_ses_receipt_rule
        examples:
            - name: store
              manifest: |-
                {
                  "add_header_action": [
                    {
                      "header_name": "Custom-Header",
                      "header_value": "Added by SES",
                      "position": 1
                    }
                  ],
                  "enabled": true,
                  "name": "store",
                  "recipients": [
                    "karen@example.com"
                  ],
                  "rule_set_name": "default-rule-set",
                  "s3_action": [
                    {
                      "bucket_name": "emails",
                      "position": 2
                    }
                  ],
                  "scan_enabled": true
                }
        argumentDocs:
            add_header_action: '- (Optional) A list of Add Header Action blocks. Documented below.'
            after: '- (Optional) The name of the rule to place this rule after'
            arn: '- The SES receipt rule ARN.'
            bounce_action: '- (Optional) A list of Bounce Action blocks. Documented below.'
            bucket_name: '- (Required) The name of the S3 bucket'
            enabled: '- (Optional) If true, the rule will be enabled'
            encoding: '- (Optional) The encoding to use for the email within the Amazon SNS notification. Default value is UTF-8.'
            function_arn: '- (Required) The ARN of the Lambda function to invoke'
            header_name: '- (Required) The name of the header to add'
            header_value: '- (Required) The value of the header to add'
            id: '- The SES receipt rule name.'
            invocation_type: '- (Optional) Event or RequestResponse'
            kms_key_arn: '- (Optional) The ARN of the KMS key'
            lambda_action: '- (Optional) A list of Lambda Action blocks. Documented below.'
            message: '- (Required) The message to send'
            name: '- (Required) The name of the rule'
            object_key_prefix: '- (Optional) The key prefix of the S3 bucket'
            organization_arn: '- (Required) The ARN of the WorkMail organization'
            position: '- (Required) The position of the action in the receipt rule'
            recipients: '- (Optional) A list of email addresses'
            rule_set_name: '- (Required) The name of the rule set'
            s3_action: '- (Optional) A list of S3 Action blocks. Documented below.'
            scan_enabled: '- (Optional) If true, incoming emails will be scanned for spam and viruses'
            scope: '- (Required) The scope to apply. The only acceptable value is RuleSet.'
            sender: '- (Required) The email address of the sender'
            smtp_reply_code: '- (Required) The RFC 5321 SMTP reply code'
            sns_action: '- (Optional) A list of SNS Action blocks. Documented below.'
            status_code: '- (Optional) The RFC 3463 SMTP enhanced status code'
            stop_action: '- (Optional) A list of Stop Action blocks. Documented below.'
            tls_policy: '- (Optional) Require or Optional'
            topic_arn: '- (Optional) The ARN of an SNS topic to notify'
            workmail_action: '- (Optional) A list of WorkMail Action blocks. Documented below.'
        importStatements: []
    aws_ses_receipt_rule_set:
        subCategory: SES (Simple Email)
        description: Provides an SES receipt rule set resource
        name: aws_ses_receipt_rule_set
        title: aws_ses_receipt_rule_set
        examples:
            - name: main
              manifest: |-
                {
                  "rule_set_name": "primary-rules"
                }
        argumentDocs:
            arn: '- SES receipt rule set ARN.'
            id: '- SES receipt rule set name.'
            rule_set_name: '- (Required) Name of the rule set.'
        importStatements: []
    aws_ses_template:
        subCategory: SES (Simple Email)
        description: Provides a resource to create a SES template
        name: aws_ses_template
        title: aws_ses_template
        examples:
            - name: MyTemplate
              manifest: |-
                {
                  "html": "\u003ch1\u003eHello {{name}},\u003c/h1\u003e\u003cp\u003eYour favorite animal is {{favoriteanimal}}.\u003c/p\u003e",
                  "name": "MyTemplate",
                  "subject": "Greetings, {{name}}!",
                  "text": "Hello {{name}},\r\nYour favorite animal is {{favoriteanimal}}."
                }
        argumentDocs:
            arn: '- The ARN of the SES template'
            html: '- (Optional) The HTML body of the email. Must be less than 500KB in size, including both the text and HTML parts.'
            id: '- The name of the SES template'
            name: '- (Required) The name of the template. Cannot exceed 64 characters. You will refer to this name when you send email.'
            subject: '- (Optional) The subject line of the email.'
            text: '- (Optional) The email body that will be visible to recipients whose email clients do not display HTML. Must be less than 500KB in size, including both the text and HTML parts.'
        importStatements: []
    aws_sfn_activity:
        subCategory: SFN (Step Functions)
        description: Provides a Step Function Activity resource.
        name: aws_sfn_activity
        title: aws_sfn_activity
        examples:
            - name: sfn_activity
              manifest: |-
                {
                  "name": "my-activity"
                }
        argumentDocs:
            creation_date: '- The date the activity was created.'
            id: '- The Amazon Resource Name (ARN) that identifies the created activity.'
            name: '- (Required) The name of the activity to create.'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_sfn_state_machine:
        subCategory: SFN (Step Functions)
        description: Provides a Step Function State Machine resource.
        name: aws_sfn_state_machine
        title: aws_sfn_state_machine
        examples:
            - name: sfn_state_machine
              manifest: |-
                {
                  "definition": "{\n  \"Comment\": \"A Hello World example of the Amazon States Language using an AWS Lambda Function\",\n  \"StartAt\": \"HelloWorld\",\n  \"States\": {\n    \"HelloWorld\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"${aws_lambda_function.lambda.arn}\",\n      \"End\": true\n    }\n  }\n}\n",
                  "name": "my-state-machine",
                  "role_arn": "${aws_iam_role.iam_for_sfn.arn}"
                }
              references:
                role_arn: aws_iam_role.iam_for_sfn.arn
            - name: sfn_state_machine
              manifest: |-
                {
                  "definition": "{\n  \"Comment\": \"A Hello World example of the Amazon States Language using an AWS Lambda Function\",\n  \"StartAt\": \"HelloWorld\",\n  \"States\": {\n    \"HelloWorld\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"${aws_lambda_function.lambda.arn}\",\n      \"End\": true\n    }\n  }\n}\n",
                  "name": "my-state-machine",
                  "role_arn": "${aws_iam_role.iam_for_sfn.arn}",
                  "type": "EXPRESS"
                }
              references:
                role_arn: aws_iam_role.iam_for_sfn.arn
            - name: sfn_state_machine
              manifest: |-
                {
                  "definition": "{\n  \"Comment\": \"A Hello World example of the Amazon States Language using an AWS Lambda Function\",\n  \"StartAt\": \"HelloWorld\",\n  \"States\": {\n    \"HelloWorld\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"${aws_lambda_function.lambda.arn}\",\n      \"End\": true\n    }\n  }\n}\n",
                  "logging_configuration": [
                    {
                      "include_execution_data": true,
                      "level": "ERROR",
                      "log_destination": "${aws_cloudwatch_log_group.log_group_for_sfn.arn}:*"
                    }
                  ],
                  "name": "my-state-machine",
                  "role_arn": "${aws_iam_role.iam_for_sfn.arn}"
                }
              references:
                role_arn: aws_iam_role.iam_for_sfn.arn
        argumentDocs:
            arn: '- The ARN of the state machine.'
            creation_date: '- The date the state machine was created.'
            definition: '- (Required) The Amazon States Language definition of the state machine.'
            id: '- The ARN of the state machine.'
            logging_configuration: '- (Optional) Defines what execution history events are logged and where they are logged. The logging_configuration parameter is only valid when type is set to EXPRESS. Defaults to OFF. For more information see Logging Express Workflows and Log Levels in the AWS Step Functions User Guide.'
            logging_configuration.include_execution_data: '- (Optional) Determines whether execution data is included in your log. When set to false, data is excluded.'
            logging_configuration.level: '- (Optional) Defines which category of execution history events are logged. Valid values: ALL, ERROR, FATAL, OFF'
            logging_configuration.log_destination: '- (Optional) Amazon Resource Name (ARN) of a CloudWatch log group. Make sure the State Machine has the correct IAM policies for logging. The ARN must end with :*'
            name: '- (Required) The name of the state machine. To enable logging with CloudWatch Logs, the name should only contain 0-9, A-Z, a-z, - and _.'
            role_arn: '- (Required) The Amazon Resource Name (ARN) of the IAM role to use for this state machine.'
            status: '- The current status of the state machine. Either ACTIVE or DELETING.'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            tracing_configuration: '- (Optional) Selects whether AWS X-Ray tracing is enabled.'
            tracing_configuration.enabled: '- (Optional) When set to true, AWS X-Ray tracing is enabled. Make sure the State Machine has the correct IAM policies for logging. See the AWS Step Functions Developer Guide for details.'
            type: '- (Optional) Determines whether a Standard or Express state machine is created. The default is STANDARD. You cannot update the type of a state machine once it has been created. Valid values: STANDARD, EXPRESS.'
        importStatements: []
    aws_shield_protection:
        subCategory: Shield
        description: Enables AWS Shield Advanced for a specific AWS resource.
        name: aws_shield_protection
        title: aws_shield_protection
        examples:
            - name: example
              manifest: |-
                {
                  "name": "example",
                  "resource_arn": "arn:aws:ec2:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:eip-allocation/${aws_eip.example.id}",
                  "tags": {
                    "Environment": "Dev"
                  }
                }
              dependencies:
                aws_eip.example: |-
                    {
                      "vpc": true
                    }
        argumentDocs:
            arn: '- The ARN of the Protection.'
            id: '- The unique identifier (ID) for the Protection object that is created.'
            name: '- (Required) A friendly name for the Protection you are creating.'
            resource_arn: '- (Required) The ARN (Amazon Resource Name) of the resource to be protected.'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_shield_protection_group:
        subCategory: Shield
        description: Creates a grouping of protected resources so they can be handled as a collective.
        name: aws_shield_protection_group
        title: aws_shield_protection_group
        examples:
            - name: example
              manifest: |-
                {
                  "aggregation": "MAX",
                  "pattern": "ALL",
                  "protection_group_id": "example"
                }
            - name: example
              manifest: |-
                {
                  "aggregation": "MEAN",
                  "depends_on": [
                    "${aws_shield_protection.example}"
                  ],
                  "members": [
                    "arn:aws:ec2:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:eip-allocation/${aws_eip.example.id}"
                  ],
                  "pattern": "ARBITRARY",
                  "protection_group_id": "example"
                }
              dependencies:
                aws_eip.example: |-
                    {
                      "vpc": true
                    }
                aws_shield_protection.example: |-
                    {
                      "name": "example",
                      "resource_arn": "arn:aws:ec2:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:eip-allocation/${aws_eip.example.id}"
                    }
            - name: example
              manifest: |-
                {
                  "aggregation": "SUM",
                  "pattern": "BY_RESOURCE_TYPE",
                  "protection_group_id": "example",
                  "resource_type": "ELASTIC_IP_ALLOCATION"
                }
        argumentDocs:
            aggregation: '- (Required) Defines how AWS Shield combines resource data for the group in order to detect, mitigate, and report events.'
            members: '- (Optional) The Amazon Resource Names (ARNs) of the resources to include in the protection group. You must set this when you set pattern to ARBITRARY and you must not set it for any other pattern setting.'
            pattern: '- (Required) The criteria to use to choose the protected resources for inclusion in the group.'
            protection_group_arn: '- The ARN (Amazon Resource Name) of the protection group.'
            protection_group_id: '- (Required) The name of the protection group.'
            resource_type: '- (Optional) The resource type to include in the protection group. You must set this when you set pattern to BY_RESOURCE_TYPE and you must not set it for any other pattern setting.'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_shield_protection_health_check_association:
        subCategory: Shield
        description: Creates an association between a Route53 Health Check and a Shield Advanced protected resource.
        name: aws_shield_protection_health_check_association
        title: aws_shield_protection_health_check_association
        examples:
            - name: example
              manifest: |-
                {
                  "health_check_arn": "${aws_route53_health_check.example.arn}",
                  "shield_protection_id": "${aws_shield_protection.example.id}"
                }
              references:
                health_check_arn: aws_route53_health_check.example.arn
                shield_protection_id: aws_shield_protection.example.id
              dependencies:
                aws_eip.example: |-
                    {
                      "tags": {
                        "Name": "example"
                      },
                      "vpc": true
                    }
                aws_route53_health_check.example: |-
                    {
                      "failure_threshold": "3",
                      "ip_address": "${aws_eip.example.public_ip}",
                      "port": 80,
                      "request_interval": "30",
                      "resource_path": "/ready",
                      "tags": {
                        "Name": "tf-example-health-check"
                      },
                      "type": "HTTP"
                    }
                aws_shield_protection.example: |-
                    {
                      "name": "example-protection",
                      "resource_arn": "arn:${data.aws_partition.current.partition}:ec2:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:eip-allocation/${aws_eip.example.id}"
                    }
        argumentDocs:
            health_check_arn: '- (Required) The ARN (Amazon Resource Name) of the Route53 Health Check resource which will be associated to the protected resource.'
            id: '- The unique identifier (ID) for the Protection object that is created.'
            shield_protection_id: '- (Required) The ID of the protected resource.'
        importStatements: []
    aws_signer_signing_job:
        subCategory: Signer
        description: Creates a Signer Signing Job.
        name: aws_signer_signing_job
        title: aws_signer_signing_job
        examples:
            - name: build_signing_job
              manifest: |-
                {
                  "destination": [
                    {
                      "s3": [
                        {
                          "bucket": "s3-bucket-name",
                          "prefix": "signed/"
                        }
                      ]
                    }
                  ],
                  "ignore_signing_job_failure": true,
                  "profile_name": "${aws_signer_signing_profile.test_sp.name}",
                  "source": [
                    {
                      "s3": [
                        {
                          "bucket": "s3-bucket-name",
                          "key": "object-to-be-signed.zip",
                          "version": "jADjFYYYEXAMPLETszPjOmCMFDzd9dN1"
                        }
                      ]
                    }
                  ]
                }
              references:
                profile_name: aws_signer_signing_profile.test_sp.name
              dependencies:
                aws_signer_signing_profile.test_sp: |-
                    {
                      "platform_id": "AWSLambda-SHA384-ECDSA"
                    }
        argumentDocs:
            bucket: '- (Required) Name of the S3 bucket.'
            completed_at: '- Date and time in RFC3339 format that the signing job was completed.'
            created_at: '- Date and time in RFC3339 format that the signing job was created.'
            destination: '- (Required) The S3 bucket in which to save your signed object. See Destination below for details.'
            ignore_signing_job_failure: '- (Optional) Set this argument to true to ignore signing job failures and retrieve failed status and reason. Default false.'
            job_id: '- The ID of the signing job on output.'
            job_invoker: '- The IAM entity that initiated the signing job.'
            job_owner: '- The AWS account ID of the job owner.'
            key: '- (Required) Key name of the object that contains your unsigned code.'
            platform_display_name: '- A human-readable name for the signing platform associated with the signing job.'
            platform_id: '- The platform to which your signed code image will be distributed.'
            prefix: '- (Optional) An Amazon S3 object key prefix that you can use to limit signed objects keys to begin with the specified prefix.'
            profile_name: '- (Required) The name of the profile to initiate the signing operation.'
            profile_version: '- The version of the signing profile used to initiate the signing job.'
            requested_by: '- The IAM principal that requested the signing job.'
            revocation_record: '- A revocation record if the signature generated by the signing job has been revoked. Contains a timestamp and the ID of the IAM entity that revoked the signature.'
            s3: '- (Required) A configuration block describing the S3 Source object: See S3 Source below for details.'
            signature_expires_at: '- The time when the signature of a signing job expires.'
            signed_object: '- Name of the S3 bucket where the signed code image is saved by code signing.'
            source: '- (Required) The S3 bucket that contains the object to sign. See Source below for details.'
            status: '- Status of the signing job.'
            status_reason: '- String value that contains the status reason.'
            version: '- (Required) Version of your source image in your version enabled S3 bucket.'
        importStatements: []
    aws_signer_signing_profile:
        subCategory: Signer
        description: Creates a Signer Signing Profile.
        name: aws_signer_signing_profile
        title: aws_signer_signing_profile
        examples:
            - name: test_sp
              manifest: |-
                {
                  "platform_id": "AWSLambda-SHA384-ECDSA"
                }
            - name: prod_sp
              manifest: |-
                {
                  "name_prefix": "prod_sp_",
                  "platform_id": "AWSLambda-SHA384-ECDSA",
                  "signature_validity_period": [
                    {
                      "type": "YEARS",
                      "value": 5
                    }
                  ],
                  "tags": {
                    "tag1": "value1",
                    "tag2": "value2"
                  }
                }
        argumentDocs:
            arn: '- The Amazon Resource Name (ARN) for the signing profile.'
            name: '- (Optional) A unique signing profile name. By default generated by Terraform. Signing profile names are immutable and cannot be reused after canceled.'
            name_prefix: '- (Optional) A signing profile name prefix. Terraform will generate a unique suffix. Conflicts with name.'
            platform_display_name: '- A human-readable name for the signing platform associated with the signing profile.'
            platform_id: '- (Required) The ID of the platform that is used by the target signing profile.'
            revocation_record: '- Revocation information for a signing profile.'
            signature_validity_period: '- (Optional) The validity period for a signing job.'
            status: '- The status of the target signing profile.'
            tags: '- (Optional) A list of tags associated with the signing profile. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            version: '- The current version of the signing profile.'
            version_arn: '- The signing profile ARN, including the profile version.'
        importStatements: []
    aws_signer_signing_profile_permission:
        subCategory: Signer
        description: Creates a Signer Signing Profile Permission.
        name: aws_signer_signing_profile_permission
        title: aws_signer_signing_profile_permission
        examples:
            - name: sp_permission_1
              manifest: |-
                {
                  "action": "signer:StartSigningJob",
                  "principal": "${var.aws_account}",
                  "profile_name": "${aws_signer_signing_profile.prod_sp.name}"
                }
              references:
                principal: var.aws_account
                profile_name: aws_signer_signing_profile.prod_sp.name
              dependencies:
                aws_signer_signing_profile.prod_sp: |-
                    {
                      "name_prefix": "prod_sp_",
                      "platform_id": "AWSLambda-SHA384-ECDSA",
                      "signature_validity_period": [
                        {
                          "type": "YEARS",
                          "value": 5
                        }
                      ],
                      "tags": {
                        "tag1": "value1",
                        "tag2": "value2"
                      }
                    }
            - name: sp_permission_2
              manifest: |-
                {
                  "action": "signer:GetSigningProfile",
                  "principal": "${var.aws_team_role_arn}",
                  "profile_name": "${aws_signer_signing_profile.prod_sp.name}",
                  "statement_id": "ProdAccountStartSigningJob_StatementId"
                }
              references:
                principal: var.aws_team_role_arn
                profile_name: aws_signer_signing_profile.prod_sp.name
              dependencies:
                aws_signer_signing_profile.prod_sp: |-
                    {
                      "name_prefix": "prod_sp_",
                      "platform_id": "AWSLambda-SHA384-ECDSA",
                      "signature_validity_period": [
                        {
                          "type": "YEARS",
                          "value": 5
                        }
                      ],
                      "tags": {
                        "tag1": "value1",
                        "tag2": "value2"
                      }
                    }
            - name: sp_permission_3
              manifest: |-
                {
                  "action": "signer:RevokeSignature",
                  "principal": "123456789012",
                  "profile_name": "${aws_signer_signing_profile.prod_sp.name}",
                  "profile_version": "${aws_signer_signing_profile.prod_sp.version}",
                  "statement_id_prefix": "version-permission-"
                }
              references:
                profile_name: aws_signer_signing_profile.prod_sp.name
                profile_version: aws_signer_signing_profile.prod_sp.version
              dependencies:
                aws_signer_signing_profile.prod_sp: |-
                    {
                      "name_prefix": "prod_sp_",
                      "platform_id": "AWSLambda-SHA384-ECDSA",
                      "signature_validity_period": [
                        {
                          "type": "YEARS",
                          "value": 5
                        }
                      ],
                      "tags": {
                        "tag1": "value1",
                        "tag2": "value2"
                      }
                    }
        argumentDocs:
            action: '- (Required) An AWS Signer action permitted as part of cross-account permissions. Valid values: signer:StartSigningJob, signer:GetSigningProfile, or signer:RevokeSignature.'
            principal: '- (Required) The AWS principal to be granted a cross-account permission.'
            profile_name: '- (Required) Name of the signing profile to add the cross-account permissions.'
            profile_version: '- (Optional) The signing profile version that a permission applies to.'
            statement_id: '- (Optional) A unique statement identifier. By default generated by Terraform.'
            statement_id_prefix: '- (Optional) A statement identifier prefix. Terraform will generate a unique suffix. Conflicts with statement_id.'
        importStatements: []
    aws_simpledb_domain:
        subCategory: SDB (SimpleDB)
        description: Provides a SimpleDB domain resource.
        name: aws_simpledb_domain
        title: aws_simpledb_domain
        examples:
            - name: users
              manifest: |-
                {
                  "name": "users"
                }
        argumentDocs:
            id: '- The name of the SimpleDB domain'
            name: '- (Required) The name of the SimpleDB domain'
        importStatements: []
    aws_snapshot_create_volume_permission:
        subCategory: EBS (EC2)
        description: Adds create volume permission to an EBS Snapshot
        name: aws_snapshot_create_volume_permission
        title: aws_snapshot_create_volume_permission
        examples:
            - name: example_perm
              manifest: |-
                {
                  "account_id": "12345678",
                  "snapshot_id": "${aws_ebs_snapshot.example_snapshot.id}"
                }
              references:
                snapshot_id: aws_ebs_snapshot.example_snapshot.id
              dependencies:
                aws_ebs_snapshot.example_snapshot: |-
                    {
                      "volume_id": "${aws_ebs_volume.example.id}"
                    }
                aws_ebs_volume.example: |-
                    {
                      "availability_zone": "us-west-2a",
                      "size": 40
                    }
        argumentDocs:
            account_id: '- (required) An AWS Account ID to add create volume permissions. The AWS Account cannot be the snapshot''s owner'
            id: '- A combination of "snapshot_id-account_id".'
            snapshot_id: '- (required) A snapshot ID'
        importStatements: []
    aws_sns_platform_application:
        subCategory: SNS (Simple Notification)
        description: Provides an SNS platform application resource.
        name: aws_sns_platform_application
        title: aws_sns_platform_application
        examples:
            - name: apns_application
              manifest: |-
                {
                  "name": "apns_application",
                  "platform": "APNS",
                  "platform_credential": "\u003cAPNS PRIVATE KEY\u003e",
                  "platform_principal": "\u003cAPNS CERTIFICATE\u003e"
                }
            - name: gcm_application
              manifest: |-
                {
                  "name": "gcm_application",
                  "platform": "GCM",
                  "platform_credential": "\u003cGCM API KEY\u003e"
                }
        argumentDocs:
            arn: '- The ARN of the SNS platform application'
            event_delivery_failure_topic_arn: '- (Optional) The ARN of the SNS Topic triggered when a delivery to any of the platform endpoints associated with your platform application encounters a permanent failure.'
            event_endpoint_created_topic_arn: '- (Optional) The ARN of the SNS Topic triggered when a new platform endpoint is added to your platform application.'
            event_endpoint_deleted_topic_arn: '- (Optional) The ARN of the SNS Topic triggered when an existing platform endpoint is deleted from your platform application.'
            event_endpoint_updated_topic_arn: '- (Optional) The ARN of the SNS Topic triggered when an existing platform endpoint is changed from your platform application.'
            failure_feedback_role_arn: '- (Optional) The IAM role ARN permitted to receive failure feedback for this application and give SNS write access to use CloudWatch logs on your behalf.'
            id: '- The ARN of the SNS platform application'
            name: '- (Required) The friendly name for the SNS platform application'
            platform: '- (Required) The platform that the app is registered with. See Platform for supported platforms.'
            platform_credential: '- (Required) Application Platform credential. See Credential for type of credential required for platform. The value of this attribute when stored into the Terraform state is only a hash of the real value, so therefore it is not practical to use this as an attribute for other resources.'
            platform_principal: '- (Optional) Application Platform principal. See Principal for type of principal required for platform. The value of this attribute when stored into the Terraform state is only a hash of the real value, so therefore it is not practical to use this as an attribute for other resources.'
            success_feedback_role_arn: '- (Optional) The IAM role ARN permitted to receive success feedback for this application and give SNS write access to use CloudWatch logs on your behalf.'
            success_feedback_sample_rate: '- (Optional) The sample rate percentage (0-100) of successfully delivered messages.'
        importStatements: []
    aws_sns_sms_preferences:
        subCategory: SNS (Simple Notification)
        description: Provides a way to set SNS SMS preferences.
        name: aws_sns_sms_preferences
        title: aws_sns_sms_preferences
        examples:
            - name: update_sms_prefs
              manifest: '{}'
        argumentDocs:
            default_sender_id: '- (Optional) A string, such as your business brand, that is displayed as the sender on the receiving device.'
            default_sms_type: '- (Optional) The type of SMS message that you will send by default. Possible values are: Promotional, Transactional'
            delivery_status_iam_role_arn: '- (Optional) The ARN of the IAM role that allows Amazon SNS to write logs about SMS deliveries in CloudWatch Logs.'
            delivery_status_success_sampling_rate: '- (Optional) The percentage of successful SMS deliveries for which Amazon SNS will write logs in CloudWatch Logs. The value must be between 0 and 100.'
            monthly_spend_limit: '- (Optional) The maximum amount in USD that you are willing to spend each month to send SMS messages.'
            usage_report_s3_bucket: '- (Optional) The name of the Amazon S3 bucket to receive daily SMS usage reports from Amazon SNS.'
        importStatements: []
    aws_sns_topic:
        subCategory: SNS (Simple Notification)
        description: Provides an SNS topic resource.
        name: aws_sns_topic
        title: aws_sns_topic
        examples:
            - name: user_updates
              manifest: |-
                {
                  "name": "user-updates-topic"
                }
            - name: user_updates
              manifest: |-
                {
                  "delivery_policy": "{\n  \"http\": {\n    \"defaultHealthyRetryPolicy\": {\n      \"minDelayTarget\": 20,\n      \"maxDelayTarget\": 20,\n      \"numRetries\": 3,\n      \"numMaxDelayRetries\": 0,\n      \"numNoDelayRetries\": 0,\n      \"numMinDelayRetries\": 0,\n      \"backoffFunction\": \"linear\"\n    },\n    \"disableSubscriptionOverrides\": false,\n    \"defaultThrottlePolicy\": {\n      \"maxReceivesPerSecond\": 1\n    }\n  }\n}\n",
                  "name": "user-updates-topic"
                }
            - name: user_updates
              manifest: |-
                {
                  "kms_master_key_id": "alias/aws/sns",
                  "name": "user-updates-topic"
                }
            - name: user_updates
              manifest: |-
                {
                  "content_based_deduplication": true,
                  "fifo_topic": true,
                  "name": "user-updates-topic.fifo"
                }
        argumentDocs:
            application_failure_feedback_role_arn: '- (Optional) IAM role for failure feedback'
            application_success_feedback_role_arn: '- (Optional) The IAM role permitted to receive success feedback for this topic'
            application_success_feedback_sample_rate: '- (Optional) Percentage of success to sample'
            arn: '- The ARN of the SNS topic, as a more obvious property (clone of id)'
            content_based_deduplication: '- (Optional) Enables content-based deduplication for FIFO topics. For more information, see the related documentation'
            delivery_policy: '- (Optional) The SNS delivery policy. More on AWS documentation'
            display_name: '- (Optional) The display name for the topic'
            fifo_topic: '- (Optional) Boolean indicating whether or not to create a FIFO (first-in-first-out) topic (default is false).'
            firehose_failure_feedback_role_arn: '- (Optional) IAM role for failure feedback'
            firehose_success_feedback_role_arn: '- (Optional) The IAM role permitted to receive success feedback for this topic'
            firehose_success_feedback_sample_rate: '- (Optional) Percentage of success to sample'
            http_failure_feedback_role_arn: '- (Optional) IAM role for failure feedback'
            http_success_feedback_role_arn: '- (Optional) The IAM role permitted to receive success feedback for this topic'
            http_success_feedback_sample_rate: '- (Optional) Percentage of success to sample'
            id: '- The ARN of the SNS topic'
            kms_master_key_id: '- (Optional) The ID of an AWS-managed customer master key (CMK) for Amazon SNS or a custom CMK. For more information, see Key Terms'
            lambda_failure_feedback_role_arn: '- (Optional) IAM role for failure feedback'
            lambda_success_feedback_role_arn: '- (Optional) The IAM role permitted to receive success feedback for this topic'
            lambda_success_feedback_sample_rate: '- (Optional) Percentage of success to sample'
            name: '- (Optional) The name of the topic. Topic names must be made up of only uppercase and lowercase ASCII letters, numbers, underscores, and hyphens, and must be between 1 and 256 characters long. For a FIFO (first-in-first-out) topic, the name must end with the .fifo suffix. If omitted, Terraform will assign a random, unique name. Conflicts with name_prefix'
            name_prefix: '- (Optional) Creates a unique name beginning with the specified prefix. Conflicts with name'
            owner: '- The AWS Account ID of the SNS topic owner'
            policy: '- (Optional) The fully-formed AWS policy as JSON. For more information about building AWS IAM policy documents with Terraform, see the AWS IAM Policy Document Guide.'
            sqs_failure_feedback_role_arn: '- (Optional) IAM role for failure feedback'
            sqs_success_feedback_role_arn: '- (Optional) The IAM role permitted to receive success feedback for this topic'
            sqs_success_feedback_sample_rate: '- (Optional) Percentage of success to sample'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_sns_topic_policy:
        subCategory: SNS (Simple Notification)
        description: Provides an SNS topic policy resource.
        name: aws_sns_topic_policy
        title: aws_sns_topic_policy
        examples:
            - name: default
              manifest: |-
                {
                  "arn": "${aws_sns_topic.test.arn}",
                  "policy": "${data.aws_iam_policy_document.sns_topic_policy.json}"
                }
              references:
                arn: aws_sns_topic.test.arn
                policy: data.aws_iam_policy_document.sns_topic_policy.json
              dependencies:
                aws_sns_topic.test: |-
                    {
                      "name": "my-topic-with-policy"
                    }
        argumentDocs:
            arn: '- (Required) The ARN of the SNS topic'
            owner: '- The AWS Account ID of the SNS topic owner'
            policy: '- (Required) The fully-formed AWS policy as JSON. For more information about building AWS IAM policy documents with Terraform, see the AWS IAM Policy Document Guide.'
        importStatements: []
    aws_sns_topic_subscription:
        subCategory: SNS (Simple Notification)
        description: Provides a resource for subscribing to SNS topics.
        name: aws_sns_topic_subscription
        title: aws_sns_topic_subscription
        examples:
            - name: user_updates_sqs_target
              manifest: |-
                {
                  "endpoint": "arn:aws:sqs:us-west-2:432981146916:terraform-queue-too",
                  "protocol": "sqs",
                  "topic_arn": "arn:aws:sns:us-west-2:432981146916:user-updates-topic"
                }
            - name: user_updates_sqs_target
              manifest: |-
                {
                  "endpoint": "${aws_sqs_queue.user_updates_queue.arn}",
                  "protocol": "sqs",
                  "topic_arn": "${aws_sns_topic.user_updates.arn}"
                }
              references:
                endpoint: aws_sqs_queue.user_updates_queue.arn
                topic_arn: aws_sns_topic.user_updates.arn
              dependencies:
                aws_sns_topic.user_updates: |-
                    {
                      "name": "user-updates-topic"
                    }
                aws_sqs_queue.user_updates_queue: |-
                    {
                      "name": "user-updates-queue"
                    }
            - name: sns-topic
              manifest: |-
                {
                  "endpoint": "${aws_sqs_queue.sqs-queue.arn}",
                  "protocol": "sqs",
                  "provider": "aws.sns2sqs",
                  "topic_arn": "${aws_sns_topic.sns-topic.arn}"
                }
              references:
                endpoint: aws_sqs_queue.sqs-queue.arn
                topic_arn: aws_sns_topic.sns-topic.arn
              dependencies:
                aws_sns_topic.sns-topic: |-
                    {
                      "display_name": "${var.sns[\"display_name\"]}",
                      "name": "${var.sns[\"name\"]}",
                      "policy": "${data.aws_iam_policy_document.sns-topic-policy.json}",
                      "provider": "aws.sns"
                    }
                aws_sqs_queue.sqs-queue: |-
                    {
                      "name": "${var.sqs[\"name\"]}",
                      "policy": "${data.aws_iam_policy_document.sqs-queue-policy.json}",
                      "provider": "aws.sqs"
                    }
        argumentDocs:
            application: '- Delivers JSON-encoded messages. endpoint is the endpoint ARN of a mobile app and device.'
            arn: '- ARN of the subscription.'
            confirmation_timeout_in_minutes: '- (Optional) Integer indicating number of minutes to wait in retrying mode for fetching subscription arn before marking it as failure. Only applicable for http and https protocols. Default is 1.'
            confirmation_was_authenticated: '- Whether the subscription confirmation request was authenticated.'
            delivery_policy: '- (Optional) JSON String with the delivery policy (retries, backoff, etc.) that will be used in the subscription - this only applies to HTTP/S subscriptions. Refer to the SNS docs for more details.'
            email: '- Delivers messages via SMTP. endpoint is an email address.'
            email-json: '- Delivers JSON-encoded messages via SMTP. endpoint is an email address.'
            endpoint: '- (Required) Endpoint to send data to. The contents vary with the protocol. See details below.'
            endpoint_auto_confirms: '- (Optional) Whether the endpoint is capable of auto confirming subscription (e.g., PagerDuty). Default is false.'
            filter_policy: '- (Optional) JSON String with the filter policy that will be used in the subscription to filter messages seen by the target resource. Refer to the SNS docs for more details.'
            firehose: |-
                - Delivers JSON-encoded messages. endpoint is the ARN of an Amazon Kinesis Data Firehose delivery stream (e.g.,
                arn:aws:firehose:us-east-1:123456789012:deliverystream/ticketUploadStream).
            http: -- Delivers JSON-encoded messages via HTTP POST. endpoint is a URL beginning with http://.
            https: -- Delivers JSON-encoded messages via HTTPS POST. endpoint is a URL beginning with https://.
            id: '- ARN of the subscription.'
            lambda: '- Delivers JSON-encoded messages. endpoint is the ARN of an AWS Lambda function.'
            owner_id: '- AWS account ID of the subscription''s owner.'
            pending_confirmation: '- Whether the subscription has not been confirmed.'
            protocol: '- (Required) Protocol to use. Valid values are: sqs, sms, lambda, firehose, and application. Protocols email, email-json, http and https are also valid but partially supported. See details below.'
            raw_message_delivery: '- (Optional) Whether to enable raw message delivery (the original message is directly passed, not wrapped in JSON with the original message in the message property). Default is false.'
            redrive_policy: '- (Optional) JSON String with the redrive policy that will be used in the subscription. Refer to the SNS docs for more details.'
            sms: '- Delivers text messages via SMS. endpoint is the phone number of an SMS-enabled device.'
            sqs: '- Delivers JSON-encoded messages. endpoint is the ARN of an Amazon SQS queue (e.g., arn:aws:sqs:us-west-2:123456789012:terraform-queue-too).'
            subscription_role_arn: '- (Required if protocol is firehose) ARN of the IAM role to publish to Kinesis Data Firehose delivery stream. Refer to SNS docs.'
            topic_arn: '- (Required) ARN of the SNS topic to subscribe to.'
        importStatements: []
    aws_spot_datafeed_subscription:
        subCategory: EC2 (Elastic Compute Cloud)
        description: Provides a Spot Datafeed Subscription resource.
        name: aws_spot_datafeed_subscription
        title: aws_spot_datafeed_subscription
        examples:
            - name: default
              manifest: |-
                {
                  "bucket": "${aws_s3_bucket.default.bucket}",
                  "prefix": "my_subdirectory"
                }
              references:
                bucket: aws_s3_bucket.default.bucket
              dependencies:
                aws_s3_bucket.default: |-
                    {
                      "bucket": "tf-spot-datafeed"
                    }
        argumentDocs:
            bucket: '- (Required) The Amazon S3 bucket in which to store the Spot instance data feed.'
            prefix: '- (Optional) Path of folder inside bucket to place spot pricing data.'
        importStatements: []
    aws_spot_fleet_request:
        subCategory: EC2 (Elastic Compute Cloud)
        description: Provides a Spot Fleet Request resource.
        name: aws_spot_fleet_request
        title: aws_spot_fleet_request
        examples:
            - name: cheap_compute
              manifest: |-
                {
                  "allocation_strategy": "diversified",
                  "iam_fleet_role": "arn:aws:iam::12345678:role/spot-fleet",
                  "launch_specification": [
                    {
                      "ami": "ami-1234",
                      "iam_instance_profile_arn": "${aws_iam_instance_profile.example.arn}",
                      "instance_type": "m4.10xlarge",
                      "placement_tenancy": "dedicated",
                      "spot_price": "2.793"
                    },
                    {
                      "ami": "ami-5678",
                      "availability_zone": "us-west-1a",
                      "iam_instance_profile_arn": "${aws_iam_instance_profile.example.arn}",
                      "instance_type": "m4.4xlarge",
                      "key_name": "my-key",
                      "root_block_device": [
                        {
                          "volume_size": "300",
                          "volume_type": "gp2"
                        }
                      ],
                      "spot_price": "1.117",
                      "subnet_id": "subnet-1234",
                      "tags": {
                        "Name": "spot-fleet-example"
                      },
                      "weighted_capacity": 35
                    }
                  ],
                  "spot_price": "0.03",
                  "target_capacity": 6,
                  "valid_until": "2019-11-04T20:44:20Z"
                }
              references:
                launch_specification.iam_instance_profile_arn: aws_iam_instance_profile.example.arn
            - name: foo
              manifest: |-
                {
                  "depends_on": [
                    "${aws_iam_policy_attachment.test-attach}"
                  ],
                  "iam_fleet_role": "arn:aws:iam::12345678:role/spot-fleet",
                  "launch_template_config": [
                    {
                      "launch_template_specification": [
                        {
                          "id": "${aws_launch_template.foo.id}",
                          "version": "${aws_launch_template.foo.latest_version}"
                        }
                      ]
                    }
                  ],
                  "spot_price": "0.005",
                  "target_capacity": 2,
                  "valid_until": "2019-11-04T20:44:20Z"
                }
              references:
                launch_template_config.launch_template_specification.id: aws_launch_template.foo.id
                launch_template_config.launch_template_specification.version: aws_launch_template.foo.latest_version
              dependencies:
                aws_launch_template.foo: |-
                    {
                      "image_id": "ami-516b9131",
                      "instance_type": "m1.small",
                      "key_name": "some-key",
                      "name": "launch-template"
                    }
            - name: foo
              manifest: |-
                {
                  "iam_fleet_role": "arn:aws:iam::12345678:role/spot-fleet",
                  "launch_specification": [
                    {
                      "ami": "ami-d06a90b0",
                      "availability_zone": "us-west-2a",
                      "instance_type": "m1.small",
                      "key_name": "my-key"
                    },
                    {
                      "ami": "ami-d06a90b0",
                      "availability_zone": "us-west-2a",
                      "instance_type": "m5.large",
                      "key_name": "my-key"
                    }
                  ],
                  "spot_price": "0.005",
                  "target_capacity": 2,
                  "valid_until": "2019-11-04T20:44:20Z"
                }
            - name: example
              manifest: |-
                {
                  "allocation_strategy": "lowestPrice",
                  "dynamic": {
                    "launch_specification": [
                      {
                        "content": [
                          {
                            "ami": "ami-1234",
                            "instance_type": "m4.4xlarge",
                            "root_block_device": [
                              {
                                "delete_on_termination": "true",
                                "volume_size": "8",
                                "volume_type": "gp2"
                              }
                            ],
                            "subnet_id": "${launch_specification.value.subnet_id}",
                            "tags": {
                              "Name": "Spot Node",
                              "tag_builder": "builder"
                            },
                            "vpc_security_group_ids": "sg-123456"
                          }
                        ],
                        "for_each": "${[for s in var.subnets : {\n      subnet_id = s[1]\n    }]}"
                      }
                    ]
                  },
                  "fleet_type": "request",
                  "iam_fleet_role": "arn:aws:iam::12345678:role/spot-fleet",
                  "target_capacity": 3,
                  "terminate_instances_with_expiration": "true",
                  "valid_until": "2019-11-04T20:44:20Z",
                  "wait_for_fulfillment": "true"
                }
              references:
                dynamic.content.subnet_id: launch_specification.value.subnet_id
            - name: foo
              manifest: |-
                {
                  "depends_on": [
                    "${aws_iam_policy_attachment.test-attach}"
                  ],
                  "iam_fleet_role": "arn:aws:iam::12345678:role/spot-fleet",
                  "launch_template_config": [
                    {
                      "launch_template_specification": [
                        {
                          "id": "${aws_launch_template.foo.id}",
                          "version": "${aws_launch_template.foo.latest_version}"
                        }
                      ],
                      "overrides": [
                        {
                          "subnet_id": "${data.aws_subnets.example.ids[0]}"
                        },
                        {
                          "subnet_id": "${data.aws_subnets.example.ids[1]}"
                        },
                        {
                          "subnet_id": "${data.aws_subnets.example.ids[2]}"
                        }
                      ]
                    }
                  ],
                  "spot_price": "0.005",
                  "target_capacity": 2,
                  "valid_until": "2019-11-04T20:44:20Z"
                }
              references:
                launch_template_config.launch_template_specification.id: aws_launch_template.foo.id
                launch_template_config.launch_template_specification.version: aws_launch_template.foo.latest_version
                launch_template_config.overrides.subnet_id: data.aws_subnets.example.ids[2]
              dependencies:
                aws_launch_template.foo: |-
                    {
                      "image_id": "ami-516b9131",
                      "instance_type": "m1.small",
                      "key_name": "some-key",
                      "name": "launch-template"
                    }
        argumentDocs:
            accelerator_count: '- (Optional) Block describing the minimum and maximum number of accelerators (GPUs, FPGAs, or AWS Inferentia chips). Default is no minimum or maximum.'
            accelerator_count.max: '- (Optional) Maximum. Set to 0 to exclude instance types with accelerators.'
            accelerator_count.min: '- (Optional) Minimum.'
            accelerator_manufacturers: '- (Optional) List of accelerator manufacturer names. Default is any manufacturer.'
            accelerator_names: '- (Optional) List of accelerator names. Default is any acclerator.'
            accelerator_total_memory_mib: '- (Optional) Block describing the minimum and maximum total memory of the accelerators. Default is no minimum or maximum.'
            accelerator_total_memory_mib.max: '- (Optional) Maximum.'
            accelerator_total_memory_mib.min: '- (Optional) Minimum.'
            accelerator_types: '- (Optional) List of accelerator types. Default is any accelerator type.'
            allocation_strategy: |-
                - Indicates how to allocate the target capacity across
                the Spot pools specified by the Spot fleet request. The default is
                lowestPrice.
            availability_zone: '- (Optional) The availability zone in which to place the request.'
            bare_metal: '- (Optional) Indicate whether bare metal instace types should be included, excluded, or required. Default is excluded.'
            baseline_ebs_bandwidth_mbps: '- (Optional) Block describing the minimum and maximum baseline EBS bandwidth, in Mbps. Default is no minimum or maximum.'
            baseline_ebs_bandwidth_mbps.max: '- (Optional) Maximum.'
            baseline_ebs_bandwidth_mbps.min: '- (Optional) Minimum.'
            burstable_performance: '- (Optional) Indicate whether burstable performance instance types should be included, excluded, or required. Default is excluded.'
            cpu_manufacturers: (Optional) List of CPU manufacturer names. Default is any manufacturer.
            excess_capacity_termination_policy: |-
                - Indicates whether running Spot
                instances should be terminated if the target capacity of the Spot fleet
                request is decreased below the current size of the Spot fleet.
            excluded_instance_types: '- (Optional) List of instance types to exclude. You can use strings with one or more wild cards, represented by an asterisk (*). The following are examples: c5*, m5a.*, r*, *3*. For example, if you specify c5*, you are excluding the entire C5 instance family, which includes all C5a and C5n instance types. If you specify m5a.*, you are excluding all the M5a instance types, but not the M5n instance types. Maximum of 400 entries in the list; each entry is limited to 30 characters. Default is no excluded instance types.'
            fleet_type: |-
                - (Optional) The type of fleet request. Indicates whether the Spot Fleet only requests the target
                capacity or also attempts to maintain it. Default is maintain.
            iam_fleet_role: |-
                - (Required) Grants the Spot fleet permission to terminate
                Spot instances on your behalf when you cancel its Spot fleet request using
                CancelSpotFleetRequests or when the Spot fleet request expires, if you set
                terminateInstancesWithExpiration.
            iam_instance_profile_arn: takes aws_iam_instance_profile attribute arn as input.
            id: '- The ID of the launch template. Conflicts with name.'
            instance_generations: '- (Optional) List of instance generation names. Default is any generation.'
            instance_initiated_shutdown_behavior: is confirmed unsupported.
            instance_interruption_behaviour: |-
                - (Optional) Indicates whether a Spot
                instance stops or terminates when it is interrupted. Default is
                terminate.
            instance_pools_to_use_count: |-
                - (Optional; Default: 1)
                The number of Spot pools across which to allocate your target Spot capacity.
                Valid only when allocation_strategy is set to lowestPrice. Spot Fleet selects
                the cheapest Spot pools and evenly allocates your target Spot capacity across
                the number of Spot pools that you specify.
            instance_requirements: '- (Optional) The instance requirements. See below.'
            instance_type: '- (Optional) The type of instance to request.'
            launch_specification: |-
                - (Optional) Used to define the launch configuration of the
                spot-fleet request. Can be specified multiple times to define different bids
                across different markets and instance types. Conflicts with launch_template_config. At least one of launch_specification or launch_template_config is required.
            launch_template_config: '- (Optional) Launch template configuration block. See Launch Template Configs below for more details. Conflicts with launch_specification. At least one of launch_specification or launch_template_config is required.'
            launch_template_config.launch_template_specification: '- (Required) Launch template specification. See Launch Template Specification below for more details.'
            launch_template_config.overrides: '- (Optional) One or more override configurations. See Overrides below for more details.'
            load_balancers: (Optional) A list of elastic load balancer names to add to the Spot fleet.
            local_storage: '- (Optional) Indicate whether instance types with local storage volumes are included, excluded, or required. Default is included.'
            local_storage_types: '- (Optional) List of local storage type names. Default any storage type.'
            memory_gib_per_vcpu: '- (Optional) Block describing the minimum and maximum amount of memory (GiB) per vCPU. Default is no minimum or maximum.'
            memory_gib_per_vcpu.max: '- (Optional) Maximum. May be a decimal number, e.g. 0.5.'
            memory_gib_per_vcpu.min: '- (Optional) Minimum. May be a decimal number, e.g. 0.5.'
            memory_mib: '- (Optional) Block describing the minimum and maximum amount of memory (MiB). Default is no maximum.'
            memory_mib.max: '- (Optional) Maximum.'
            memory_mib.min: '- (Optional) Minimum.'
            name: '- The name of the launch template. Conflicts with id.'
            network_interface_count: '- (Optional) Block describing the minimum and maximum number of network interfaces. Default is no minimum or maximum.'
            network_interface_count.max: '- (Optional) Maximum.'
            network_interface_count.min: '- (Optional) Minimum.'
            on_demand_allocation_strategy: '- The order of the launch template overrides to use in fulfilling On-Demand capacity. the possible values are: lowestPrice and prioritized. the default is lowestPrice.'
            on_demand_max_price_percentage_over_lowest_price: '- (Optional) The price protection threshold for On-Demand Instances. This is the maximum you’ll pay for an On-Demand Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Default is 20.'
            on_demand_max_total_price: '- The maximum amount per hour for On-Demand Instances that you''re willing to pay. When the maximum amount you''re willing to pay is reached, the fleet stops launching instances even if it hasn’t met the target capacity.'
            on_demand_target_capacity: '- The number of On-Demand units to request. If the request type is maintain, you can specify a target capacity of 0 and add capacity later.'
            priority: '- (Optional) The priority for the launch template override. The lower the number, the higher the priority. If no number is set, the launch template override has the lowest priority.'
            replace_unhealthy_instances: '- (Optional) Indicates whether Spot fleet should replace unhealthy instances. Default false.'
            require_hibernate_support: '- (Optional) Indicate whether instance types must support On-Demand Instance Hibernation, either true or false. Default is false.'
            spot_maintenance_strategies: '- (Optional) Nested argument containing maintenance strategies for managing your Spot Instances that are at an elevated risk of being interrupted. Defined below.'
            spot_maintenance_strategies.capacity_rebalance: '- (Optional) Nested argument containing the capacity rebalance for your fleet request. Defined below.'
            spot_maintenance_strategies.capacity_rebalance.replacement_strategy: '- (Optional) The replacement strategy to use. Only available for spot fleets with fleet_type set to maintain. Valid values: launch.'
            spot_max_price_percentage_over_lowest_price: '- (Optional) The price protection threshold for Spot Instances. This is the maximum you’ll pay for a Spot Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Default is 100.'
            spot_price: '- (Optional; Default: On-demand price) The maximum bid price per unit hour.'
            spot_request_state: '- The state of the Spot fleet request.'
            subnet_id: '- (Optional) The subnet in which to launch the requested instance.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            target_capacity: |-
                - The number of units to request. You can choose to set the
                target capacity in terms of instances or a performance characteristic that is
                important to your application workload, such as vCPUs, memory, or I/O.
            target_group_arns: (Optional) A list of aws_alb_target_group ARNs, for use with Application Load Balancing.
            terminate_instances_on_delete: |-
                - (Optional) Indicates whether running Spot
                instances should be terminated when the resource is deleted (and the Spot fleet request cancelled).
                If no value is specified, the value of the terminate_instances_with_expiration argument is used.
            terminate_instances_with_expiration: |-
                - (Optional) Indicates whether running Spot
                instances should be terminated when the Spot fleet request expires.
            timeouts.create: '- (Defaults to 10 mins) Used when requesting the spot instance (only valid if wait_for_fulfillment = true)'
            timeouts.delete: '- (Defaults to 15 mins) Used when destroying the spot instance'
            total_local_storage_gb: '- (Optional) Block describing the minimum and maximum total local storage (GB). Default is no minimum or maximum.'
            total_local_storage_gb.max: '- (Optional) Maximum. May be a decimal number, e.g. 0.5.'
            total_local_storage_gb.min: '- (Optional) Minimum. May be a decimal number, e.g. 0.5.'
            valid_from: '- (Optional) The start date and time of the request, in UTC RFC3339 format(for example, YYYY-MM-DDTHH:MM:SSZ). The default is to start fulfilling the request immediately.'
            valid_until: '- (Optional) The end date and time of the request, in UTC RFC3339 format(for example, YYYY-MM-DDTHH:MM:SSZ). At this point, no new Spot instance requests are placed or enabled to fulfill the request.'
            vcpu_count: '- (Optional) Block describing the minimum and maximum number of vCPUs. Default is no maximum.'
            vcpu_count.max: '- (Optional) Maximum.'
            vcpu_count.min: '- (Optional) Minimum.'
            version: '- (Optional) Template version. Unlike the autoscaling equivalent, does not support $Latest or $Default, so use the launch_template resource''s attribute, e.g., "${aws_launch_template.foo.latest_version}". It will use the default version if omitted.'
            wait_for_fulfillment: |-
                - (Optional; Default: false) If set, Terraform will
                wait for the Spot Request to be fulfilled, and will throw an error if the
                timeout of 10m is reached.
            weighted_capacity: '- (Optional) The capacity added to the fleet by a fulfilled request.'
        importStatements: []
    aws_spot_instance_request:
        subCategory: EC2 (Elastic Compute Cloud)
        description: Provides a Spot Instance Request resource.
        name: aws_spot_instance_request
        title: aws_spot_instance_request
        examples:
            - name: cheap_worker
              manifest: |-
                {
                  "ami": "ami-1234",
                  "instance_type": "c4.xlarge",
                  "spot_price": "0.03",
                  "tags": {
                    "Name": "CheapWorker"
                  }
                }
        argumentDocs:
            block_duration_minutes: |-
                - (Optional) The required duration for the Spot instances, in minutes. This value must be a multiple of 60 (60, 120, 180, 240, 300, or 360).
                The duration period starts as soon as your Spot instance receives its instance ID. At the end of the duration period, Amazon EC2 marks the Spot instance for termination and provides a Spot instance termination notice, which gives the instance a two-minute warning before it terminates.
                Note that you can't specify an Availability Zone group or a launch group if you specify a duration.
            id: '- The Spot Instance Request ID.'
            instance_interruption_behavior: '- (Optional) Indicates Spot instance behavior when it is interrupted. Valid values are terminate, stop, or hibernate. Default value is terminate.'
            launch_group: |-
                - (Optional) A launch group is a group of spot instances that launch together and terminate together.
                If left empty instances are launched and terminated individually.
            private_dns: |-
                - The private DNS name assigned to the instance. Can only be
                used inside the Amazon EC2, and only available if you've enabled DNS hostnames
                for your VPC
            private_ip: '- The private IP address assigned to the instance'
            public_dns: |-
                - The public DNS name assigned to the instance. For EC2-VPC, this
                is only available if you've enabled DNS hostnames for your VPC
            public_ip: '- The public IP address assigned to the instance, if applicable.'
            spot_bid_status: |-
                - The current bid
                status
                of the Spot Instance Request.
            spot_instance_id: |-
                - The Instance ID (if any) that is currently fulfilling
                the Spot Instance request.
            spot_price: '- (Optional; Default: On-demand price) The maximum price to request on the spot market.'
            spot_request_state: |-
                The current request
                state
                of the Spot Instance Request.
            spot_type: |-
                - (Optional; Default: persistent) If set to one-time, after
                the instance is terminated, the spot request will be closed.
            tags: '- (Optional) A map of tags to assign to the Spot Instance Request. These tags are not automatically applied to the launched Instance. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            timeouts.create: '- (Defaults to 10 mins) Used when requesting the spot instance (only valid if wait_for_fulfillment = true)'
            timeouts.delete: '- (Defaults to 20 mins) Used when terminating all instances launched via the given spot instance request'
            valid_from: '- (Optional) The start date and time of the request, in UTC RFC3339 format(for example, YYYY-MM-DDTHH:MM:SSZ). The default is to start fulfilling the request immediately.'
            valid_until: '- (Optional) The end date and time of the request, in UTC RFC3339 format(for example, YYYY-MM-DDTHH:MM:SSZ). At this point, no new Spot instance requests are placed or enabled to fulfill the request. The default end date is 7 days from the current date.'
            wait_for_fulfillment: |-
                - (Optional; Default: false) If set, Terraform will
                wait for the Spot Request to be fulfilled, and will throw an error if the
                timeout of 10m is reached.
        importStatements: []
    aws_sqs_queue:
        subCategory: SQS (Simple Queue)
        description: Provides a SQS resource.
        name: aws_sqs_queue
        title: aws_sqs_queue
        examples:
            - name: terraform_queue
              manifest: |-
                {
                  "delay_seconds": 90,
                  "max_message_size": 2048,
                  "message_retention_seconds": 86400,
                  "name": "terraform-example-queue",
                  "receive_wait_time_seconds": 10,
                  "redrive_policy": "${jsonencode({\n    deadLetterTargetArn = aws_sqs_queue.terraform_queue_deadletter.arn\n    maxReceiveCount     = 4\n  })}",
                  "tags": {
                    "Environment": "production"
                  }
                }
            - name: terraform_queue
              manifest: |-
                {
                  "content_based_deduplication": true,
                  "fifo_queue": true,
                  "name": "terraform-example-queue.fifo"
                }
            - name: terraform_queue
              manifest: |-
                {
                  "deduplication_scope": "messageGroup",
                  "fifo_queue": true,
                  "fifo_throughput_limit": "perMessageGroupId",
                  "name": "terraform-example-queue.fifo"
                }
            - name: terraform_queue_deadletter
              manifest: |-
                {
                  "name": "terraform-example-deadletter-queue",
                  "redrive_allow_policy": "${jsonencode({\n    redrivePermission = \"byQueue\",\n    sourceQueueArns   = [aws_sqs_queue.terraform_queue.arn]\n  })}"
                }
            - name: terraform_queue
              manifest: |-
                {
                  "name": "terraform-example-queue",
                  "sqs_managed_sse_enabled": true
                }
            - name: terraform_queue
              manifest: |-
                {
                  "kms_data_key_reuse_period_seconds": 300,
                  "kms_master_key_id": "alias/aws/sqs",
                  "name": "terraform-example-queue"
                }
        argumentDocs:
            arn: '- The ARN of the SQS queue'
            content_based_deduplication: '- (Optional) Enables content-based deduplication for FIFO queues. For more information, see the related documentation'
            deduplication_scope: '- (Optional) Specifies whether message deduplication occurs at the message group or queue level. Valid values are messageGroup and queue (default).'
            delay_seconds: '- (Optional) The time in seconds that the delivery of all messages in the queue will be delayed. An integer from 0 to 900 (15 minutes). The default for this attribute is 0 seconds.'
            fifo_queue: '- (Optional) Boolean designating a FIFO queue. If not set, it defaults to false making it standard.'
            fifo_throughput_limit: '- (Optional) Specifies whether the FIFO queue throughput quota applies to the entire queue or per message group. Valid values are perQueue (default) and perMessageGroupId.'
            id: '- The URL for the created Amazon SQS queue.'
            kms_data_key_reuse_period_seconds: '- (Optional) The length of time, in seconds, for which Amazon SQS can reuse a data key to encrypt or decrypt messages before calling AWS KMS again. An integer representing seconds, between 60 seconds (1 minute) and 86,400 seconds (24 hours). The default is 300 (5 minutes).'
            kms_master_key_id: '- (Optional) The ID of an AWS-managed customer master key (CMK) for Amazon SQS or a custom CMK. For more information, see Key Terms.'
            max_message_size: '- (Optional) The limit of how many bytes a message can contain before Amazon SQS rejects it. An integer from 1024 bytes (1 KiB) up to 262144 bytes (256 KiB). The default for this attribute is 262144 (256 KiB).'
            message_retention_seconds: '- (Optional) The number of seconds Amazon SQS retains a message. Integer representing seconds, from 60 (1 minute) to 1209600 (14 days). The default for this attribute is 345600 (4 days).'
            name: '- (Optional) The name of the queue. Queue names must be made up of only uppercase and lowercase ASCII letters, numbers, underscores, and hyphens, and must be between 1 and 80 characters long. For a FIFO (first-in-first-out) queue, the name must end with the .fifo suffix. If omitted, Terraform will assign a random, unique name. Conflicts with name_prefix'
            name_prefix: '- (Optional) Creates a unique name beginning with the specified prefix. Conflicts with name'
            policy: '- (Optional) The JSON policy for the SQS queue. For more information about building AWS IAM policy documents with Terraform, see the AWS IAM Policy Document Guide.'
            receive_wait_time_seconds: '- (Optional) The time for which a ReceiveMessage call will wait for a message to arrive (long polling) before returning. An integer from 0 to 20 (seconds). The default for this attribute is 0, meaning that the call will return immediately.'
            redrive_allow_policy: '- (Optional) The JSON policy to set up the Dead Letter Queue redrive permission, see AWS docs.'
            redrive_policy: '- (Optional) The JSON policy to set up the Dead Letter Queue, see AWS docs. Note: when specifying maxReceiveCount, you must specify it as an integer (5), and not a string ("5").'
            sqs_managed_sse_enabled: '- (Optional) Boolean to enable server-side encryption (SSE) of message content with SQS-owned encryption keys. Defaults to false. See Encryption at rest.'
            tags: '- (Optional) A map of tags to assign to the queue. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            url: '- Same as id: The URL for the created Amazon SQS queue.'
            visibility_timeout_seconds: '- (Optional) The visibility timeout for the queue. An integer from 0 to 43200 (12 hours). The default for this attribute is 30. For more information about visibility timeout, see AWS docs.'
        importStatements: []
    aws_sqs_queue_policy:
        subCategory: SQS (Simple Queue)
        description: Provides a SQS Queue Policy resource.
        name: aws_sqs_queue_policy
        title: aws_sqs_queue_policy
        examples:
            - name: test
              manifest: |-
                {
                  "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Id\": \"sqspolicy\",\n  \"Statement\": [\n    {\n      \"Sid\": \"First\",\n      \"Effect\": \"Allow\",\n      \"Principal\": \"*\",\n      \"Action\": \"sqs:SendMessage\",\n      \"Resource\": \"${aws_sqs_queue.q.arn}\",\n      \"Condition\": {\n        \"ArnEquals\": {\n          \"aws:SourceArn\": \"${aws_sns_topic.example.arn}\"\n        }\n      }\n    }\n  ]\n}\n",
                  "queue_url": "${aws_sqs_queue.q.id}"
                }
              references:
                queue_url: aws_sqs_queue.q.id
              dependencies:
                aws_sqs_queue.q: |-
                    {
                      "name": "examplequeue"
                    }
        argumentDocs:
            policy: '- (Required) The JSON policy for the SQS queue. For more information about building AWS IAM policy documents with Terraform, see the AWS IAM Policy Document Guide.'
            queue_url: '- (Required) The URL of the SQS Queue to which to attach the policy'
        importStatements: []
    aws_ssm_activation:
        subCategory: SSM (Systems Manager)
        description: Registers an on-premises server or virtual machine with Amazon EC2 so that it can be managed using Run Command.
        name: aws_ssm_activation
        title: aws_ssm_activation
        examples:
            - name: foo
              manifest: |-
                {
                  "depends_on": [
                    "${aws_iam_role_policy_attachment.test_attach}"
                  ],
                  "description": "Test",
                  "iam_role": "${aws_iam_role.test_role.id}",
                  "name": "test_ssm_activation",
                  "registration_limit": "5"
                }
              references:
                iam_role: aws_iam_role.test_role.id
              dependencies:
                aws_iam_role.test_role: |-
                    {
                      "assume_role_policy": "  {\n    \"Version\": \"2012-10-17\",\n    \"Statement\": {\n      \"Effect\": \"Allow\",\n      \"Principal\": {\"Service\": \"ssm.amazonaws.com\"},\n      \"Action\": \"sts:AssumeRole\"\n    }\n  }\n",
                      "name": "test_role"
                    }
                aws_iam_role_policy_attachment.test_attach: |-
                    {
                      "policy_arn": "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore",
                      "role": "${aws_iam_role.test_role.name}"
                    }
        argumentDocs:
            activation_code: '- The code the system generates when it processes the activation.'
            description: '- (Optional) The description of the resource that you want to register.'
            expiration_date: '- (Optional) UTC timestamp in RFC3339 format by which this activation request should expire. The default value is 24 hours from resource creation time. Terraform will only perform drift detection of its value when present in a configuration.'
            expired: '- If the current activation has expired.'
            iam_role: '- (Required) The IAM Role to attach to the managed instance.'
            id: '- The activation ID.'
            name: '- (Optional) The default name of the registered managed instance.'
            registration_count: '- The number of managed instances that are currently registered using this activation.'
            registration_limit: '- (Optional) The maximum number of managed instances you want to register. The default value is 1 instance.'
            tags: '- (Optional) A map of tags to assign to the object. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_ssm_association:
        subCategory: SSM (Systems Manager)
        description: Associates an SSM Document to an instance or EC2 tag.
        name: aws_ssm_association
        title: aws_ssm_association
        examples:
            - name: example
              manifest: |-
                {
                  "name": "${aws_ssm_document.example.name}",
                  "targets": [
                    {
                      "key": "InstanceIds",
                      "values": [
                        "${aws_instance.example.id}"
                      ]
                    }
                  ]
                }
              references:
                name: aws_ssm_document.example.name
            - name: example
              manifest: |-
                {
                  "name": "AmazonCloudWatch-ManageAgent",
                  "targets": [
                    {
                      "key": "InstanceIds",
                      "values": [
                        "*"
                      ]
                    }
                  ]
                }
            - name: example
              manifest: |-
                {
                  "name": "AmazonCloudWatch-ManageAgent",
                  "targets": [
                    {
                      "key": "tag:Environment",
                      "values": [
                        "Development"
                      ]
                    }
                  ]
                }
        argumentDocs:
            apply_only_at_cron_interval: '- (Optional) By default, when you create a new or update associations, the system runs it immediately and then according to the schedule you specified. Enable this option if you do not want an association to run immediately after you create or update it. This parameter is not supported for rate expressions. Default: false.'
            arn: '- The ARN of the SSM association'
            association_id: '- The ID of the SSM association.'
            association_name: '- (Optional) The descriptive name for the association.'
            automation_target_parameter_name: '- (Optional) Specify the target for the association. This target is required for associations that use an Automation document and target resources by using rate controls. This should be set to the SSM document parameter that will define how your automation will branch out.'
            compliance_severity: '- (Optional) The compliance severity for the association. Can be one of the following: UNSPECIFIED, LOW, MEDIUM, HIGH or CRITICAL'
            document_version: '- (Optional) The document version you want to associate with the target(s). Can be a specific version or the default version.'
            instance_id: '- (Optional) The instance ID to apply an SSM document to. Use targets with key InstanceIds for document schema versions 2.0 and above.'
            key: '- (Required) Either InstanceIds or tag:Tag Name to specify an EC2 tag.'
            max_concurrency: '- (Optional) The maximum number of targets allowed to run the association at the same time. You can specify a number, for example 10, or a percentage of the target set, for example 10%.'
            max_errors: '- (Optional) The number of errors that are allowed before the system stops sending requests to run the association on additional targets. You can specify a number, for example 10, or a percentage of the target set, for example 10%.'
            name: '- (Required) The name of the SSM document to apply.'
            output_location: '- (Optional) An output location block. Output Location is documented below.'
            parameters: '- (Optional) A block of arbitrary string parameters to pass to the SSM document.'
            s3_bucket_name: '- (Required) The S3 bucket name.'
            s3_key_prefix: '- (Optional) The S3 bucket prefix. Results stored in the root if not configured.'
            s3_region: '- (Optional) The S3 bucket region.'
            schedule_expression: '- (Optional) A cron expression when the association will be applied to the target(s).'
            targets: '- (Optional) A block containing the targets of the SSM association. Targets are documented below. AWS currently supports a maximum of 5 targets.'
            values: '- (Required) A list of instance IDs or tag values. AWS currently limits this list size to one value.'
            wait_for_success_timeout_seconds: '- (Optional) The number of seconds to wait for the association status to be Success. If Success status is not reached within the given time, create opration will fail.'
        importStatements: []
    aws_ssm_document:
        subCategory: SSM (Systems Manager)
        description: Provides an SSM Document resource
        name: aws_ssm_document
        title: aws_ssm_document
        examples:
            - name: foo
              manifest: |-
                {
                  "content": "  {\n    \"schemaVersion\": \"1.2\",\n    \"description\": \"Check ip configuration of a Linux instance.\",\n    \"parameters\": {\n\n    },\n    \"runtimeConfig\": {\n      \"aws:runShellScript\": {\n        \"properties\": [\n          {\n            \"id\": \"0.aws:runShellScript\",\n            \"runCommand\": [\"ifconfig\"]\n          }\n        ]\n      }\n    }\n  }\n",
                  "document_type": "Command",
                  "name": "test_document"
                }
            - name: foo
              manifest: |-
                {
                  "content": "schemaVersion: '1.2'\ndescription: Check ip configuration of a Linux instance.\nparameters: {}\nruntimeConfig:\n  'aws:runShellScript':\n    properties:\n      - id: '0.aws:runShellScript'\n        runCommand:\n          - ifconfig\n",
                  "document_format": "YAML",
                  "document_type": "Command",
                  "name": "test_document"
                }
            - name: test
              manifest: |-
                {
                  "attachments_source": [
                    {
                      "key": "SourceUrl",
                      "values": [
                        "s3://${aws_s3_bucket.object_bucket.bucket}/test.zip"
                      ]
                    }
                  ],
                  "document_type": "Package",
                  "lifecycle": [
                    {
                      "ignore_changes": [
                        "${attachments_source}"
                      ]
                    }
                  ],
                  "name": "test_document"
                }
        argumentDocs:
            account_ids: '- The AWS user accounts that should have access to the document. The account IDs can either be a group of account IDs or All.'
            attachments_source: '- (Optional) One or more configuration blocks describing attachments sources to a version of a document. Defined below.'
            attachments_source.key: '- (Required) The key describing the location of an attachment to a document. Valid key types include: SourceUrl and S3FileUrl'
            attachments_source.name: '- (Optional) The name of the document attachment file'
            attachments_source.values: '- (Required) The value describing the location of an attachment to a document'
            content: '- (Required) The JSON or YAML content of the document.'
            created_date: '- The date the document was created.'
            default_version: '- The default version of the document.'
            description: '- The description of the document.'
            document_format: '- (Optional, defaults to JSON) The format of the document. Valid document types include: JSON and YAML'
            document_type: '- (Required) The type of the document. Valid document types include: Automation, Command, Package, Policy, and Session'
            document_version: '- The document version.'
            hash: '- The sha1 or sha256 of the document content'
            hash_type: '- "Sha1" "Sha256". The hashing algorithm used when hashing the content.'
            latest_version: '- The latest version of the document.'
            name: '- (Required) The name of the document.'
            owner: '- The AWS user account of the person who created the document.'
            parameter: '- The parameters that are available to this document.'
            permissions: '- (Optional) Additional Permissions to attach to the document. See Permissions below for details.'
            platform_types: '- A list of OS platforms compatible with this SSM document, either "Windows" or "Linux".'
            schema_version: '- The schema version of the document.'
            status: '- "Creating", "Active" or "Deleting". The current status of the document.'
            tags: '- (Optional) A map of tags to assign to the object. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            target_type: '- (Optional) The target type which defines the kinds of resources the document can run on. For example, /AWS::EC2::Instance. For a list of valid resource types, see AWS Resource Types Reference (http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html)'
            type: '- The permission type for the document. The permission type can be Share.'
            version_name: '- (Optional) A field specifying the version of the artifact you are creating with the document. For example, "Release 12, Update 6". This value is unique across all versions of a document and cannot be changed for an existing document version.'
        importStatements: []
    aws_ssm_maintenance_window:
        subCategory: SSM (Systems Manager)
        description: Provides an SSM Maintenance Window resource
        name: aws_ssm_maintenance_window
        title: aws_ssm_maintenance_window
        examples:
            - name: production
              manifest: |-
                {
                  "cutoff": 1,
                  "duration": 3,
                  "name": "maintenance-window-application",
                  "schedule": "cron(0 16 ? * TUE *)"
                }
        argumentDocs:
            allow_unassociated_targets: '- (Optional) Whether targets must be registered with the Maintenance Window before tasks can be defined for those targets.'
            cutoff: '- (Required) The number of hours before the end of the Maintenance Window that Systems Manager stops scheduling new tasks for execution.'
            description: '- (Optional) A description for the maintenance window.'
            duration: '- (Required) The duration of the Maintenance Window in hours.'
            enabled: '- (Optional) Whether the maintenance window is enabled. Default: true.'
            end_date: '- (Optional) Timestamp in ISO-8601 extended format when to no longer run the maintenance window.'
            id: '- The ID of the maintenance window.'
            name: '- (Required) The name of the maintenance window.'
            schedule: '- (Required) The schedule of the Maintenance Window in the form of a cron or rate expression.'
            schedule_offset: '- (Optional) The number of days to wait after the date and time specified by a CRON expression before running the maintenance window.'
            schedule_timezone: '- (Optional) Timezone for schedule in Internet Assigned Numbers Authority (IANA) Time Zone Database format. For example: America/Los_Angeles, etc/UTC, or Asia/Seoul.'
            start_date: '- (Optional) Timestamp in ISO-8601 extended format when to begin the maintenance window.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_ssm_maintenance_window_target:
        subCategory: SSM (Systems Manager)
        description: Provides an SSM Maintenance Window Target resource
        name: aws_ssm_maintenance_window_target
        title: aws_ssm_maintenance_window_target
        examples:
            - name: target1
              manifest: |-
                {
                  "description": "This is a maintenance window target",
                  "name": "maintenance-window-target",
                  "resource_type": "INSTANCE",
                  "targets": [
                    {
                      "key": "tag:Name",
                      "values": [
                        "acceptance_test"
                      ]
                    }
                  ],
                  "window_id": "${aws_ssm_maintenance_window.window.id}"
                }
              references:
                window_id: aws_ssm_maintenance_window.window.id
              dependencies:
                aws_ssm_maintenance_window.window: |-
                    {
                      "cutoff": 1,
                      "duration": 3,
                      "name": "maintenance-window-webapp",
                      "schedule": "cron(0 16 ? * TUE *)"
                    }
            - name: target1
              manifest: |-
                {
                  "description": "This is a maintenance window target",
                  "name": "maintenance-window-target",
                  "resource_type": "RESOURCE_GROUP",
                  "targets": [
                    {
                      "key": "resource-groups:ResourceTypeFilters",
                      "values": [
                        "AWS::EC2::Instance"
                      ]
                    }
                  ],
                  "window_id": "${aws_ssm_maintenance_window.window.id}"
                }
              references:
                window_id: aws_ssm_maintenance_window.window.id
              dependencies:
                aws_ssm_maintenance_window.window: |-
                    {
                      "cutoff": 1,
                      "duration": 3,
                      "name": "maintenance-window-webapp",
                      "schedule": "cron(0 16 ? * TUE *)"
                    }
        argumentDocs:
            description: '- (Optional) The description of the maintenance window target.'
            id: '- The ID of the maintenance window target.'
            name: '- (Optional) The name of the maintenance window target.'
            owner_information: '- (Optional) User-provided value that will be included in any CloudWatch events raised while running tasks for these targets in this Maintenance Window.'
            resource_type: '- (Required) The type of target being registered with the Maintenance Window. Possible values are INSTANCE and RESOURCE_GROUP.'
            targets: |-
                - (Required) The targets to register with the maintenance window. In other words, the instances to run commands on when the maintenance window runs. You can specify targets using instance IDs, resource group names, or tags that have been applied to instances. For more information about these examples formats see
                (https://docs.aws.amazon.com/systems-manager/latest/userguide/mw-cli-tutorial-targets-examples.html)
            window_id: '- (Required) The Id of the maintenance window to register the target with.'
        importStatements: []
    aws_ssm_maintenance_window_task:
        subCategory: SSM (Systems Manager)
        description: Provides an SSM Maintenance Window Task resource
        name: aws_ssm_maintenance_window_task
        title: aws_ssm_maintenance_window_task
        examples:
            - name: example
              manifest: |-
                {
                  "max_concurrency": 2,
                  "max_errors": 1,
                  "priority": 1,
                  "targets": [
                    {
                      "key": "InstanceIds",
                      "values": [
                        "${aws_instance.example.id}"
                      ]
                    }
                  ],
                  "task_arn": "AWS-RestartEC2Instance",
                  "task_invocation_parameters": [
                    {
                      "automation_parameters": [
                        {
                          "document_version": "$LATEST",
                          "parameter": [
                            {
                              "name": "InstanceId",
                              "values": [
                                "${aws_instance.example.id}"
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "task_type": "AUTOMATION",
                  "window_id": "${aws_ssm_maintenance_window.example.id}"
                }
              references:
                window_id: aws_ssm_maintenance_window.example.id
            - name: example
              manifest: |-
                {
                  "max_concurrency": 2,
                  "max_errors": 1,
                  "priority": 1,
                  "targets": [
                    {
                      "key": "InstanceIds",
                      "values": [
                        "${aws_instance.example.id}"
                      ]
                    }
                  ],
                  "task_arn": "${aws_lambda_function.example.arn}",
                  "task_invocation_parameters": [
                    {
                      "lambda_parameters": [
                        {
                          "client_context": "${base64encode(\"{\\\"key1\\\":\\\"value1\\\"}\")}",
                          "payload": "{\"key1\":\"value1\"}"
                        }
                      ]
                    }
                  ],
                  "task_type": "LAMBDA",
                  "window_id": "${aws_ssm_maintenance_window.example.id}"
                }
              references:
                task_arn: aws_lambda_function.example.arn
                window_id: aws_ssm_maintenance_window.example.id
            - name: example
              manifest: |-
                {
                  "max_concurrency": 2,
                  "max_errors": 1,
                  "priority": 1,
                  "targets": [
                    {
                      "key": "InstanceIds",
                      "values": [
                        "${aws_instance.example.id}"
                      ]
                    }
                  ],
                  "task_arn": "AWS-RunShellScript",
                  "task_invocation_parameters": [
                    {
                      "run_command_parameters": [
                        {
                          "notification_config": [
                            {
                              "notification_arn": "${aws_sns_topic.example.arn}",
                              "notification_events": [
                                "All"
                              ],
                              "notification_type": "Command"
                            }
                          ],
                          "output_s3_bucket": "${aws_s3_bucket.example.bucket}",
                          "output_s3_key_prefix": "output",
                          "parameter": [
                            {
                              "name": "commands",
                              "values": [
                                "date"
                              ]
                            }
                          ],
                          "service_role_arn": "${aws_iam_role.example.arn}",
                          "timeout_seconds": 600
                        }
                      ]
                    }
                  ],
                  "task_type": "RUN_COMMAND",
                  "window_id": "${aws_ssm_maintenance_window.example.id}"
                }
              references:
                task_invocation_parameters.run_command_parameters.notification_config.notification_arn: aws_sns_topic.example.arn
                task_invocation_parameters.run_command_parameters.output_s3_bucket: aws_s3_bucket.example.bucket
                task_invocation_parameters.run_command_parameters.service_role_arn: aws_iam_role.example.arn
                window_id: aws_ssm_maintenance_window.example.id
            - name: example
              manifest: |-
                {
                  "max_concurrency": 2,
                  "max_errors": 1,
                  "priority": 1,
                  "targets": [
                    {
                      "key": "InstanceIds",
                      "values": [
                        "${aws_instance.example.id}"
                      ]
                    }
                  ],
                  "task_arn": "${aws_sfn_activity.example.id}",
                  "task_invocation_parameters": [
                    {
                      "step_functions_parameters": [
                        {
                          "input": "{\"key1\":\"value1\"}",
                          "name": "example"
                        }
                      ]
                    }
                  ],
                  "task_type": "STEP_FUNCTIONS",
                  "window_id": "${aws_ssm_maintenance_window.example.id}"
                }
              references:
                task_arn: aws_sfn_activity.example.id
                window_id: aws_ssm_maintenance_window.example.id
        argumentDocs:
            arn: '- The ARN of the maintenance window task.'
            automation_parameters: '- (Optional) The parameters for an AUTOMATION task type. Documented below.'
            client_context: '- (Optional) Pass client-specific information to the Lambda function that you are invoking.'
            cloudwatch_config: '- (Optional) Configuration options for sending command output to CloudWatch Logs. Documented below.'
            cloudwatch_log_group_name: '- (Optional) The name of the CloudWatch log group where you want to send command output. If you don''t specify a group name, Systems Manager automatically creates a log group for you. The log group uses the following naming format: aws/ssm/SystemsManagerDocumentName.'
            cloudwatch_output_enabled: '- (Optional) Enables Systems Manager to send command output to CloudWatch Logs.'
            comment: '- (Optional) Information about the command(s) to execute.'
            cutoff_behavior: '- (Optional) Indicates whether tasks should continue to run after the cutoff time specified in the maintenance windows is reached. Valid values are CONTINUE_TASK and CANCEL_TASK.'
            description: '- (Optional) The description of the maintenance window task.'
            document_hash: '- (Optional) The SHA-256 or SHA-1 hash created by the system when the document was created. SHA-1 hashes have been deprecated.'
            document_hash_type: '- (Optional) SHA-256 or SHA-1. SHA-1 hashes have been deprecated. Valid values: Sha256 and Sha1'
            document_version: '- (Optional) The version of an Automation document to use during task execution.'
            id: '- The ID of the maintenance window task.'
            input: '- (Optional) The inputs for the STEP_FUNCTION task.'
            lambda_parameters: '- (Optional) The parameters for a LAMBDA task type. Documented below.'
            max_concurrency: '- (Optional) The maximum number of targets this task can be run for in parallel.'
            max_errors: '- (Optional) The maximum number of errors allowed before this task stops being scheduled.'
            name: '- (Optional) The name of the maintenance window task.'
            notification_arn: '- (Optional) An Amazon Resource Name (ARN) for a Simple Notification Service (SNS) topic. Run Command pushes notifications about command status changes to this topic.'
            notification_config: '- (Optional) Configurations for sending notifications about command status changes on a per-instance basis. Documented below.'
            notification_events: '- (Optional) The different events for which you can receive notifications. Valid values: All, InProgress, Success, TimedOut, Cancelled, and Failed'
            notification_type: '- (Optional) When specified with Command, receive notification when the status of a command changes. When specified with Invocation, for commands sent to multiple instances, receive notification on a per-instance basis when the status of a command changes. Valid values: Command and Invocation'
            output_s3_bucket: '- (Optional) The name of the Amazon S3 bucket.'
            output_s3_key_prefix: '- (Optional) The Amazon S3 bucket subfolder.'
            parameter: '- (Optional) The parameters for the RUN_COMMAND task execution. Documented below.'
            payload: '- (Optional) JSON to provide to your Lambda function as input.'
            priority: '- (Optional) The priority of the task in the Maintenance Window, the lower the number the higher the priority. Tasks in a Maintenance Window are scheduled in priority order with tasks that have the same priority scheduled in parallel.'
            qualifier: '- (Optional) Specify a Lambda function version or alias name.'
            run_command_parameters: '- (Optional) The parameters for a RUN_COMMAND task type. Documented below.'
            service_role_arn: '- (Optional) The role that should be assumed when executing the task. If a role is not provided, Systems Manager uses your account''s service-linked role. If no service-linked role for Systems Manager exists in your account, it is created for you.'
            step_functions_parameters: '- (Optional) The parameters for a STEP_FUNCTIONS task type. Documented below.'
            targets: '- (Optional) The targets (either instances or window target ids). Instances are specified using Key=InstanceIds,Values=instanceid1,instanceid2. Window target ids are specified using Key=WindowTargetIds,Values=window target id1, window target id2.'
            task_arn: '- (Required) The ARN of the task to execute.'
            task_invocation_parameters: '- (Optional) Configuration block with parameters for task execution.'
            task_type: '- (Required) The type of task being registered. Valid values: AUTOMATION, LAMBDA, RUN_COMMAND or STEP_FUNCTIONS.'
            timeout_seconds: '- (Optional) If this time is reached and the command has not already started executing, it doesn''t run.'
            values: '- (Required) The array of strings.'
            window_id: '- (Required) The Id of the maintenance window to register the task with.'
            window_task_id: '- The ID of the maintenance window task.'
        importStatements: []
    aws_ssm_parameter:
        subCategory: SSM (Systems Manager)
        description: Provides a SSM Parameter resource
        name: aws_ssm_parameter
        title: aws_ssm_parameter
        examples:
            - name: foo
              manifest: |-
                {
                  "name": "foo",
                  "type": "String",
                  "value": "bar"
                }
            - name: secret
              manifest: |-
                {
                  "description": "The parameter description",
                  "name": "/production/database/password/master",
                  "tags": {
                    "environment": "production"
                  },
                  "type": "SecureString",
                  "value": "${var.database_master_password}"
                }
              references:
                value: var.database_master_password
              dependencies:
                aws_db_instance.default: |-
                    {
                      "allocated_storage": 10,
                      "db_subnet_group_name": "my_database_subnet_group",
                      "engine": "mysql",
                      "engine_version": "5.7.16",
                      "instance_class": "db.t2.micro",
                      "name": "mydb",
                      "parameter_group_name": "default.mysql5.7",
                      "password": "${var.database_master_password}",
                      "storage_type": "gp2",
                      "username": "foo"
                    }
        argumentDocs:
            allowed_pattern: '- (Optional) Regular expression used to validate the parameter value.'
            arn: '- ARN of the parameter.'
            data_type: '- (Optional) Data type of the parameter. Valid values: text and aws:ec2:image for AMI format, see the Native parameter support for Amazon Machine Image IDs.'
            description: '- (Optional) Description of the parameter.'
            insecure_value: '- (Optional, exactly one of value or insecure_value is required) Value of the parameter. Use caution: This value is never marked as sensitive in the Terraform plan output. This argument is not valid with a type of SecureString.'
            key_id: '- (Optional) KMS key ID or ARN for encrypting a SecureString.'
            name: '- (Required) Name of the parameter. If the name contains a path (e.g., any forward slashes (/)), it must be fully qualified with a leading forward slash (/). For additional requirements and constraints, see the AWS SSM User Guide.'
            overwrite: '- (Optional) Overwrite an existing parameter. If not specified, will default to false if the resource has not been created by terraform to avoid overwrite of existing resource and will default to true otherwise (terraform lifecycle rules should then be used to manage the update behavior).'
            tags: '- (Optional) Map of tags to assign to the object. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            tier: '- (Optional) Parameter tier to assign to the parameter. If not specified, will use the default parameter tier for the region. Valid tiers are Standard, Advanced, and Intelligent-Tiering. Downgrading an Advanced tier parameter to Standard will recreate the resource. For more information on parameter tiers, see the AWS SSM Parameter tier comparison and guide.'
            type: '- (Required) Type of the parameter. Valid types are String, StringList and SecureString.'
            value: '- (Optional, exactly one of value or insecure_value is required) Value of the parameter. This value is always marked as sensitive in the Terraform plan output, regardless of type. In Terraform CLI version 0.15 and later, this may require additional configuration handling for certain scenarios. For more information, see the Terraform v0.15 Upgrade Guide.'
            version: '- Version of the parameter.'
        importStatements: []
    aws_ssm_patch_baseline:
        subCategory: SSM (Systems Manager)
        description: Provides an SSM Patch Baseline resource
        name: aws_ssm_patch_baseline
        title: aws_ssm_patch_baseline
        examples:
            - name: production
              manifest: |-
                {
                  "approved_patches": [
                    "KB123456"
                  ],
                  "name": "patch-baseline"
                }
            - name: production
              manifest: |-
                {
                  "approval_rule": [
                    {
                      "approve_after_days": 7,
                      "compliance_level": "HIGH",
                      "patch_filter": [
                        {
                          "key": "PRODUCT",
                          "values": [
                            "WindowsServer2016"
                          ]
                        },
                        {
                          "key": "CLASSIFICATION",
                          "values": [
                            "CriticalUpdates",
                            "SecurityUpdates",
                            "Updates"
                          ]
                        },
                        {
                          "key": "MSRC_SEVERITY",
                          "values": [
                            "Critical",
                            "Important",
                            "Moderate"
                          ]
                        }
                      ]
                    },
                    {
                      "approve_after_days": 7,
                      "patch_filter": [
                        {
                          "key": "PRODUCT",
                          "values": [
                            "WindowsServer2012"
                          ]
                        }
                      ]
                    }
                  ],
                  "approved_patches": [
                    "KB123456",
                    "KB456789"
                  ],
                  "description": "Patch Baseline Description",
                  "global_filter": [
                    {
                      "key": "PRODUCT",
                      "values": [
                        "WindowsServer2008"
                      ]
                    },
                    {
                      "key": "CLASSIFICATION",
                      "values": [
                        "ServicePacks"
                      ]
                    },
                    {
                      "key": "MSRC_SEVERITY",
                      "values": [
                        "Low"
                      ]
                    }
                  ],
                  "name": "patch-baseline",
                  "rejected_patches": [
                    "KB987654"
                  ]
                }
            - name: windows_os_apps
              manifest: |-
                {
                  "approval_rule": [
                    {
                      "approve_after_days": 7,
                      "patch_filter": [
                        {
                          "key": "CLASSIFICATION",
                          "values": [
                            "CriticalUpdates",
                            "SecurityUpdates"
                          ]
                        },
                        {
                          "key": "MSRC_SEVERITY",
                          "values": [
                            "Critical",
                            "Important"
                          ]
                        }
                      ]
                    },
                    {
                      "approve_after_days": 7,
                      "patch_filter": [
                        {
                          "key": "PATCH_SET",
                          "values": [
                            "APPLICATION"
                          ]
                        },
                        {
                          "key": "PRODUCT",
                          "values": [
                            "Office 2013",
                            "Office 2016"
                          ]
                        }
                      ]
                    }
                  ],
                  "description": "Patch both Windows and Microsoft apps",
                  "name": "WindowsOSAndMicrosoftApps",
                  "operating_system": "WINDOWS"
                }
            - name: al_2017_09
              manifest: |-
                {
                  "approval_rule": [
                    {}
                  ],
                  "description": "My patch repository for Amazon Linux 2017.09",
                  "name": "Amazon-Linux-2017.09",
                  "operating_system": "AMAZON_LINUX",
                  "source": [
                    {
                      "configuration": "[amzn-main]\nname=amzn-main-Base\nmirrorlist=http://repo./$awsregion./$awsdomain//$releasever/main/mirror.list\nmirrorlist_expire=300\nmetadata_expire=300\npriority=10\nfailovermethod=priority\nfastestmirror_enabled=0\ngpgcheck=1\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-amazon-ga\nenabled=1\nretries=3\ntimeout=5\nreport_instanceid=yes\n",
                      "name": "My-AL2017.09",
                      "products": [
                        "AmazonLinux2017.09"
                      ]
                    }
                  ]
                }
        argumentDocs:
            PATCH_SET: defaults to OS if unspecified
            approval_rule: '- (Optional) A set of rules used to include patches in the baseline. up to 10 approval rules can be specified. Each approval_rule block requires the fields documented below.'
            approval_rule.approve_after_days: '- (Optional) The number of days after the release date of each patch matched by the rule the patch is marked as approved in the patch baseline. Valid Range: 0 to 100. Conflicts with approve_until_date'
            approval_rule.approve_until_date: '- (Optional) The cutoff date for auto approval of released patches. Any patches released on or before this date are installed automatically. Date is formatted as YYYY-MM-DD. Conflicts with approve_after_days'
            approval_rule.compliance_level: '- (Optional) Defines the compliance level for patches approved by this rule. Valid compliance levels include the following: CRITICAL, HIGH, MEDIUM, LOW, INFORMATIONAL, UNSPECIFIED. The default value is UNSPECIFIED.'
            approval_rule.enable_non_security: '- (Optional) Boolean enabling the application of non-security updates. The default value is ''false''. Valid for Linux instances only.'
            approval_rule.patch_filter: '- (Required) The patch filter group that defines the criteria for the rule. Up to 5 patch filters can be specified per approval rule using Key/Value pairs. Valid combinations of these Keys and the operating_system value can be found in the SSM DescribePatchProperties API Reference. Valid Values are exact values for the patch property given as the key, or a wildcard *, which matches all values.'
            approved_patches: '- (Optional) A list of explicitly approved patches for the baseline.'
            approved_patches_compliance_level: '- (Optional) Defines the compliance level for approved patches. This means that if an approved patch is reported as missing, this is the severity of the compliance violation. Valid compliance levels include the following: CRITICAL, HIGH, MEDIUM, LOW, INFORMATIONAL, UNSPECIFIED. The default value is UNSPECIFIED.'
            approved_patches_enable_non_security: '- (Optional) Indicates whether the list of approved patches includes non-security updates that should be applied to the instances. Applies to Linux instances only.'
            arn: '- The ARN of the patch baseline.'
            description: '- (Optional) The description of the patch baseline.'
            global_filter: '- (Optional) A set of global filters used to exclude patches from the baseline. Up to 4 global filters can be specified using Key/Value pairs. Valid Keys are PRODUCT | CLASSIFICATION | MSRC_SEVERITY | PATCH_ID.'
            id: '- The ID of the patch baseline.'
            name: '- (Required) The name of the patch baseline.'
            operating_system: '- (Optional) Defines the operating system the patch baseline applies to. Supported operating systems include WINDOWS, AMAZON_LINUX, AMAZON_LINUX_2, SUSE, UBUNTU, CENTOS, and REDHAT_ENTERPRISE_LINUX. The Default value is WINDOWS.'
            rejected_patches: '- (Optional) A list of rejected patches.'
            rejected_patches_action: '- (Optional) The action for Patch Manager to take on patches included in the rejected_patches list. Allow values are ALLOW_AS_DEPENDENCY and BLOCK.'
            source: '- (Optional) Configuration block(s) with alternate sources for patches. Applies to Linux instances only. Documented below.'
            source.configuration: '- (Required) The value of the yum repo configuration. For information about other options available for your yum repository configuration, see the dnf.conf documentation'
            source.name: '- (Required) The name specified to identify the patch source.'
            source.products: '- (Required) The specific operating system versions a patch repository applies to, such as "Ubuntu16.04", "AmazonLinux2016.09", "RedhatEnterpriseLinux7.2" or "Suse12.7". For lists of supported product values, see PatchFilter.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_ssm_patch_group:
        subCategory: SSM (Systems Manager)
        description: Provides an SSM Patch Group resource
        name: aws_ssm_patch_group
        title: aws_ssm_patch_group
        examples:
            - name: patchgroup
              manifest: |-
                {
                  "baseline_id": "${aws_ssm_patch_baseline.production.id}",
                  "patch_group": "patch-group-name"
                }
              references:
                baseline_id: aws_ssm_patch_baseline.production.id
              dependencies:
                aws_ssm_patch_baseline.production: |-
                    {
                      "approved_patches": [
                        "KB123456"
                      ],
                      "name": "patch-baseline"
                    }
        argumentDocs:
            baseline_id: '- (Required) The ID of the patch baseline to register the patch group with.'
            id: '- The name of the patch group and ID of the patch baseline separated by a comma (,).'
            patch_group: '- (Required) The name of the patch group that should be registered with the patch baseline.'
        importStatements: []
    aws_ssm_resource_data_sync:
        subCategory: SSM (Systems Manager)
        description: Provides a SSM resource data sync.
        name: aws_ssm_resource_data_sync
        title: aws_ssm_resource_data_sync
        examples:
            - name: foo
              manifest: |-
                {
                  "name": "foo",
                  "s3_destination": [
                    {
                      "bucket_name": "${aws_s3_bucket.hoge.bucket}",
                      "region": "${aws_s3_bucket.hoge.region}"
                    }
                  ]
                }
              references:
                s3_destination.bucket_name: aws_s3_bucket.hoge.bucket
                s3_destination.region: aws_s3_bucket.hoge.region
              dependencies:
                aws_s3_bucket.hoge: |-
                    {
                      "bucket": "tf-test-bucket-1234"
                    }
                aws_s3_bucket_policy.hoge: |-
                    {
                      "bucket": "${aws_s3_bucket.hoge.bucket}",
                      "policy": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"SSMBucketPermissionsCheck\",\n            \"Effect\": \"Allow\",\n            \"Principal\": {\n                \"Service\": \"ssm.amazonaws.com\"\n            },\n            \"Action\": \"s3:GetBucketAcl\",\n            \"Resource\": \"arn:aws:s3:::tf-test-bucket-1234\"\n        },\n        {\n            \"Sid\": \" SSMBucketDelivery\",\n            \"Effect\": \"Allow\",\n            \"Principal\": {\n                \"Service\": \"ssm.amazonaws.com\"\n            },\n            \"Action\": \"s3:PutObject\",\n            \"Resource\": [\"arn:aws:s3:::tf-test-bucket-1234/*\"],\n            \"Condition\": {\n                \"StringEquals\": {\n                    \"s3:x-amz-acl\": \"bucket-owner-full-control\"\n                }\n            }\n        }\n    ]\n}\n"
                    }
        argumentDocs:
            name: '- (Required) Name for the configuration.'
            s3_destination: '- (Required) Amazon S3 configuration details for the sync.'
            s3_destination.bucket_name: '- (Required) Name of S3 bucket where the aggregated data is stored.'
            s3_destination.kms_key_arn: '- (Optional) ARN of an encryption key for a destination in Amazon S3.'
            s3_destination.prefix: '- (Optional) Prefix for the bucket.'
            s3_destination.region: '- (Required) Region with the bucket targeted by the Resource Data Sync.'
            s3_destination.sync_format: '- (Optional) A supported sync format. Only JsonSerDe is currently supported. Defaults to JsonSerDe.'
        importStatements: []
    aws_ssoadmin_account_assignment:
        subCategory: SSO Admin
        description: Manages a Single Sign-On (SSO) Account Assignment
        name: aws_ssoadmin_account_assignment
        title: aws_ssoadmin_account_assignment
        examples:
            - name: example
              manifest: |-
                {
                  "instance_arn": "${data.aws_ssoadmin_permission_set.example.instance_arn}",
                  "permission_set_arn": "${data.aws_ssoadmin_permission_set.example.arn}",
                  "principal_id": "${data.aws_identitystore_group.example.group_id}",
                  "principal_type": "GROUP",
                  "target_id": "012347678910",
                  "target_type": "AWS_ACCOUNT"
                }
              references:
                instance_arn: data.aws_ssoadmin_permission_set.example.instance_arn
                permission_set_arn: data.aws_ssoadmin_permission_set.example.arn
                principal_id: data.aws_identitystore_group.example.group_id
        argumentDocs:
            id: '- The identifier of the Account Assignment i.e., principal_id, principal_type, target_id, target_type, permission_set_arn, instance_arn separated by commas (,).'
            instance_arn: '- (Required, Forces new resource) The Amazon Resource Name (ARN) of the SSO Instance.'
            permission_set_arn: '- (Required, Forces new resource) The Amazon Resource Name (ARN) of the Permission Set that the admin wants to grant the principal access to.'
            principal_id: '- (Required, Forces new resource) An identifier for an object in SSO, such as a user or group. PrincipalIds are GUIDs (For example, f81d4fae-7dec-11d0-a765-00a0c91e6bf6).'
            principal_type: '- (Required, Forces new resource) The entity type for which the assignment will be created. Valid values: USER, GROUP.'
            target_id: '- (Required, Forces new resource) An AWS account identifier, typically a 10-12 digit string.'
            target_type: '- (Optional, Forces new resource) The entity type for which the assignment will be created. Valid values: AWS_ACCOUNT.'
        importStatements: []
    aws_ssoadmin_managed_policy_attachment:
        subCategory: SSO Admin
        description: Manages an IAM managed policy for a Single Sign-On (SSO) Permission Set
        name: aws_ssoadmin_managed_policy_attachment
        title: aws_ssoadmin_managed_policy_attachment
        examples:
            - name: example
              manifest: |-
                {
                  "instance_arn": "${tolist(data.aws_ssoadmin_instances.example.arns)[0]}",
                  "managed_policy_arn": "arn:aws:iam::aws:policy/AlexaForBusinessDeviceSetup",
                  "permission_set_arn": "${aws_ssoadmin_permission_set.example.arn}"
                }
              references:
                permission_set_arn: aws_ssoadmin_permission_set.example.arn
              dependencies:
                aws_ssoadmin_permission_set.example: |-
                    {
                      "instance_arn": "${tolist(data.aws_ssoadmin_instances.example.arns)[0]}",
                      "name": "Example"
                    }
        argumentDocs:
            id: '- The Amazon Resource Names (ARNs) of the Managed Policy, Permission Set, and SSO Instance, separated by a comma (,).'
            instance_arn: '- (Required, Forces new resource) The Amazon Resource Name (ARN) of the SSO Instance under which the operation will be executed.'
            managed_policy_arn: '- (Required, Forces new resource) The IAM managed policy Amazon Resource Name (ARN) to be attached to the Permission Set.'
            managed_policy_name: '- The name of the IAM Managed Policy.'
            permission_set_arn: '- (Required, Forces new resource) The Amazon Resource Name (ARN) of the Permission Set.'
        importStatements: []
    aws_ssoadmin_permission_set:
        subCategory: SSO Admin
        description: Manages a Single Sign-On (SSO) Permission Set
        name: aws_ssoadmin_permission_set
        title: aws_ssoadmin_permission_set
        examples:
            - name: example
              manifest: |-
                {
                  "description": "An example",
                  "instance_arn": "${tolist(data.aws_ssoadmin_instances.example.arns)[0]}",
                  "name": "Example",
                  "relay_state": "https://s3.console.aws.amazon.com/s3/home?region=us-east-1#",
                  "session_duration": "PT2H"
                }
        argumentDocs:
            arn: '- The Amazon Resource Name (ARN) of the Permission Set.'
            created_date: '- The date the Permission Set was created in RFC3339 format.'
            description: '- (Optional) The description of the Permission Set.'
            id: '- The Amazon Resource Names (ARNs) of the Permission Set and SSO Instance, separated by a comma (,).'
            instance_arn: '- (Required, Forces new resource) The Amazon Resource Name (ARN) of the SSO Instance under which the operation will be executed.'
            name: '- (Required, Forces new resource) The name of the Permission Set.'
            relay_state: '- (Optional) The relay state URL used to redirect users within the application during the federation authentication process.'
            session_duration: '- (Optional) The length of time that the application user sessions are valid in the ISO-8601 standard. Default: PT1H.'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_ssoadmin_permission_set_inline_policy:
        subCategory: SSO Admin
        description: Manages an IAM inline policy for a Single Sign-On (SSO) Permission Set
        name: aws_ssoadmin_permission_set_inline_policy
        title: aws_ssoadmin_permission_set_inline_policy
        examples:
            - name: example
              manifest: |-
                {
                  "inline_policy": "${data.aws_iam_policy_document.example.json}",
                  "instance_arn": "${aws_ssoadmin_permission_set.example.instance_arn}",
                  "permission_set_arn": "${aws_ssoadmin_permission_set.example.arn}"
                }
              references:
                inline_policy: data.aws_iam_policy_document.example.json
                instance_arn: aws_ssoadmin_permission_set.example.instance_arn
                permission_set_arn: aws_ssoadmin_permission_set.example.arn
              dependencies:
                aws_ssoadmin_permission_set.example: |-
                    {
                      "instance_arn": "${tolist(data.aws_ssoadmin_instances.example.arns)[0]}",
                      "name": "Example"
                    }
        argumentDocs:
            id: '- The Amazon Resource Names (ARNs) of the Permission Set and SSO Instance, separated by a comma (,).'
            inline_policy: '- (Required) The IAM inline policy to attach to a Permission Set.'
            instance_arn: '- (Required, Forces new resource) The Amazon Resource Name (ARN) of the SSO Instance under which the operation will be executed.'
            permission_set_arn: '- (Required, Forces new resource) The Amazon Resource Name (ARN) of the Permission Set.'
        importStatements: []
    aws_storagegateway_cache:
        subCategory: Storage Gateway
        description: Manages an AWS Storage Gateway cache
        name: aws_storagegateway_cache
        title: aws_storagegateway_cache
        examples:
            - name: example
              manifest: |-
                {
                  "disk_id": "${data.aws_storagegateway_local_disk.example.id}",
                  "gateway_arn": "${aws_storagegateway_gateway.example.arn}"
                }
              references:
                disk_id: data.aws_storagegateway_local_disk.example.id
                gateway_arn: aws_storagegateway_gateway.example.arn
        argumentDocs:
            disk_id: '- (Required) Local disk identifier. For example, pci-0000:03:00.0-scsi-0:0:0:0.'
            gateway_arn: '- (Required) The Amazon Resource Name (ARN) of the gateway.'
            id: '- Combined gateway Amazon Resource Name (ARN) and local disk identifier.'
        importStatements: []
    aws_storagegateway_cached_iscsi_volume:
        subCategory: Storage Gateway
        description: Manages an AWS Storage Gateway cached iSCSI volume
        name: aws_storagegateway_cached_iscsi_volume
        title: aws_storagegateway_cached_iscsi_volume
        examples:
            - name: example
              manifest: |-
                {
                  "gateway_arn": "${aws_storagegateway_cache.example.gateway_arn}",
                  "network_interface_id": "${aws_instance.example.private_ip}",
                  "target_name": "example",
                  "volume_size_in_bytes": 5368709120
                }
              references:
                gateway_arn: aws_storagegateway_cache.example.gateway_arn
                network_interface_id: aws_instance.example.private_ip
            - name: example
              manifest: |-
                {
                  "gateway_arn": "${aws_storagegateway_cache.example.gateway_arn}",
                  "network_interface_id": "${aws_instance.example.private_ip}",
                  "snapshot_id": "${aws_ebs_snapshot.example.id}",
                  "target_name": "example",
                  "volume_size_in_bytes": "${aws_ebs_snapshot.example.volume_size * 1024 * 1024 * 1024}"
                }
              references:
                gateway_arn: aws_storagegateway_cache.example.gateway_arn
                network_interface_id: aws_instance.example.private_ip
                snapshot_id: aws_ebs_snapshot.example.id
            - name: example
              manifest: |-
                {
                  "gateway_arn": "${aws_storagegateway_cache.example.gateway_arn}",
                  "network_interface_id": "${aws_instance.example.private_ip}",
                  "source_volume_arn": "${aws_storagegateway_cached_iscsi_volume.existing.arn}",
                  "target_name": "example",
                  "volume_size_in_bytes": "${aws_storagegateway_cached_iscsi_volume.existing.volume_size_in_bytes}"
                }
              references:
                gateway_arn: aws_storagegateway_cache.example.gateway_arn
                network_interface_id: aws_instance.example.private_ip
                source_volume_arn: aws_storagegateway_cached_iscsi_volume.existing.arn
                volume_size_in_bytes: aws_storagegateway_cached_iscsi_volume.existing.volume_size_in_bytes
        argumentDocs:
            arn: '- Volume Amazon Resource Name (ARN), e.g., arn:aws:storagegateway:us-east-1:123456789012:gateway/sgw-12345678/volume/vol-12345678.'
            chap_enabled: '- Whether mutual CHAP is enabled for the iSCSI target.'
            gateway_arn: '- (Required) The Amazon Resource Name (ARN) of the gateway.'
            id: '- Volume Amazon Resource Name (ARN), e.g., arn:aws:storagegateway:us-east-1:123456789012:gateway/sgw-12345678/volume/vol-12345678.'
            kms_encrypted: '- (Optional) Set to true to use Amazon S3 server side encryption with your own AWS KMS key, or false to use a key managed by Amazon S3.'
            kms_key: '- (Optional) The Amazon Resource Name (ARN) of the AWS KMS key used for Amazon S3 server side encryption. Is required when kms_encrypted is set.'
            lun_number: '- Logical disk number.'
            network_interface_id: '- (Required) The network interface of the gateway on which to expose the iSCSI target. Only IPv4 addresses are accepted.'
            network_interface_port: '- The port used to communicate with iSCSI targets.'
            snapshot_id: '- (Optional) The snapshot ID of the snapshot to restore as the new cached volumeE.g., snap-1122aabb.'
            source_volume_arn: '- (Optional) The ARN for an existing volume. Specifying this ARN makes the new volume into an exact copy of the specified existing volume''s latest recovery point. The volume_size_in_bytes value for this new volume must be equal to or larger than the size of the existing volume, in bytes.'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            target_arn: '- Target Amazon Resource Name (ARN), e.g., arn:aws:storagegateway:us-east-1:123456789012:gateway/sgw-12345678/target/iqn.1997-05.com.amazon:TargetName.'
            target_name: '- (Required) The name of the iSCSI target used by initiators to connect to the target and as a suffix for the target ARN. The target name must be unique across all volumes of a gateway.'
            volume_arn: '- Volume Amazon Resource Name (ARN), e.g., arn:aws:storagegateway:us-east-1:123456789012:gateway/sgw-12345678/volume/vol-12345678.'
            volume_id: '- Volume ID, e.g., vol-12345678.'
            volume_size_in_bytes: '- (Required) The size of the volume in bytes.'
        importStatements: []
    aws_storagegateway_file_system_association:
        subCategory: Storage Gateway
        description: Mananges an association between an Amazon FSx file system and an Amazon FSx File Gateway.
        name: aws_storagegateway_file_system_association
        title: aws_storagegateway_file_system_association
        examples:
            - name: example
              manifest: |-
                {
                  "audit_destination_arn": "${aws_s3_bucket.example.arn}",
                  "gateway_arn": "${aws_storagegateway_gateway.example.arn}",
                  "location_arn": "${aws_fsx_windows_file_system.example.arn}",
                  "password": "avoid-plaintext-passwords",
                  "username": "Admin"
                }
              references:
                audit_destination_arn: aws_s3_bucket.example.arn
                gateway_arn: aws_storagegateway_gateway.example.arn
                location_arn: aws_fsx_windows_file_system.example.arn
            - name: fsx
              manifest: |-
                {
                  "audit_destination_arn": "${aws_cloudwatch_log_group.test.arn}",
                  "cache_attributes": [
                    {
                      "cache_stale_timeout_in_seconds": 400
                    }
                  ],
                  "gateway_arn": "${aws_storagegateway_gateway.test.arn}",
                  "location_arn": "${aws_fsx_windows_file_system.test.arn}",
                  "password": "${aws_directory_service_directory.test.password}",
                  "username": "Admin"
                }
              references:
                audit_destination_arn: aws_cloudwatch_log_group.test.arn
                gateway_arn: aws_storagegateway_gateway.test.arn
                location_arn: aws_fsx_windows_file_system.test.arn
                password: aws_directory_service_directory.test.password
              dependencies:
                aws_fsx_windows_file_system.test: |-
                    {
                      "active_directory_id": "${aws_directory_service_directory.test.id}",
                      "security_group_ids": [
                        "${aws_security_group.test.id}"
                      ],
                      "skip_final_backup": true,
                      "storage_capacity": 32,
                      "subnet_ids": [
                        "${aws_subnet.test[0].id}"
                      ],
                      "throughput_capacity": 8
                    }
                aws_instance.test: |-
                    {
                      "ami": "${data.aws_ssm_parameter.aws_service_storagegateway_ami_FILE_S3_latest.value}",
                      "associate_public_ip_address": true,
                      "depends_on": [
                        "${aws_route.test}",
                        "${aws_vpc_dhcp_options_association.test}"
                      ],
                      "instance_type": "${data.aws_ec2_instance_type_offering.available.instance_type}",
                      "subnet_id": "${aws_subnet.test[0].id}",
                      "vpc_security_group_ids": [
                        "${aws_security_group.test.id}"
                      ]
                    }
                aws_storagegateway_gateway.test: |-
                    {
                      "gateway_ip_address": "${aws_instance.test.public_ip}",
                      "gateway_name": "test-sgw",
                      "gateway_timezone": "GMT",
                      "gateway_type": "FILE_FSX_SMB",
                      "smb_active_directory_settings": [
                        {
                          "domain_name": "${aws_directory_service_directory.test.name}",
                          "password": "${aws_directory_service_directory.test.password}",
                          "username": "Admin"
                        }
                      ]
                    }
        argumentDocs:
            arn: '- Amazon Resource Name (ARN) of the newly created file system association.'
            audit_destination_arn: '- (Optional) The Amazon Resource Name (ARN) of the storage used for the audit logs.'
            cache_attributes: '- (Optional) Refresh cache information. see Cache Attributes for more details.'
            cache_attributes.cache_stale_timeout_in_seconds: |-
                - (Optional) Refreshes a file share's cache by using Time To Live (TTL).
                TTL is the length of time since the last refresh after which access to the directory would cause the file gateway
                to first refresh that directory's contents from the Amazon S3 bucket. Valid Values: 0 or 300 to 2592000 seconds (5 minutes to 30 days). Defaults to 0
            gateway_arn: '- (Required) The Amazon Resource Name (ARN) of the gateway.'
            id: '- Amazon Resource Name (ARN) of the FSx file system association'
            location_arn: '- (Required) The Amazon Resource Name (ARN) of the Amazon FSx file system to associate with the FSx File Gateway.'
            password: '- (Required, sensitive) The password of the user credential.'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            username: '- (Required) The user name of the user credential that has permission to access the root share of the Amazon FSx file system. The user account must belong to the Amazon FSx delegated admin user group.'
        importStatements: []
    aws_storagegateway_gateway:
        subCategory: Storage Gateway
        description: Manages an AWS Storage Gateway file, tape, or volume gateway in the provider region
        name: aws_storagegateway_gateway
        title: aws_storagegateway_gateway
        examples:
            - name: example
              manifest: |-
                {
                  "gateway_ip_address": "1.2.3.4",
                  "gateway_name": "example",
                  "gateway_timezone": "GMT",
                  "gateway_type": "FILE_FSX_SMB",
                  "smb_active_directory_settings": [
                    {
                      "domain_name": "corp.example.com",
                      "password": "avoid-plaintext-passwords",
                      "username": "Admin"
                    }
                  ]
                }
            - name: example
              manifest: |-
                {
                  "gateway_ip_address": "1.2.3.4",
                  "gateway_name": "example",
                  "gateway_timezone": "GMT",
                  "gateway_type": "FILE_S3"
                }
            - name: example
              manifest: |-
                {
                  "gateway_ip_address": "1.2.3.4",
                  "gateway_name": "example",
                  "gateway_timezone": "GMT",
                  "gateway_type": "VTL",
                  "medium_changer_type": "AWS-Gateway-VTL",
                  "tape_drive_type": "IBM-ULT3580-TD5"
                }
            - name: example
              manifest: |-
                {
                  "gateway_ip_address": "1.2.3.4",
                  "gateway_name": "example",
                  "gateway_timezone": "GMT",
                  "gateway_type": "CACHED"
                }
            - name: example
              manifest: |-
                {
                  "gateway_ip_address": "1.2.3.4",
                  "gateway_name": "example",
                  "gateway_timezone": "GMT",
                  "gateway_type": "STORED"
                }
            - name: example
              manifest: |-
                {
                  "gateway_ip_address": "${aws_instance.sgw.private_ip}",
                  "lifecycle": [
                    {
                      "ignore_changes": [
                        "gateway_ip_address"
                      ]
                    }
                  ]
                }
              references:
                gateway_ip_address: aws_instance.sgw.private_ip
        argumentDocs:
            activation_key: '- (Optional) Gateway activation key during resource creation. Conflicts with gateway_ip_address. Additional information is available in the Storage Gateway User Guide.'
            arn: '- Amazon Resource Name (ARN) of the gateway.'
            average_download_rate_limit_in_bits_per_sec: '- (Optional) The average download bandwidth rate limit in bits per second. This is supported for the CACHED, STORED, and VTL gateway types.'
            average_upload_rate_limit_in_bits_per_sec: '- (Optional) The average upload bandwidth rate limit in bits per second. This is supported for the CACHED, STORED, and VTL gateway types.'
            cloudwatch_log_group_arn: '- (Optional) The Amazon Resource Name (ARN) of the Amazon CloudWatch log group to use to monitor and log events in the gateway.'
            create: '- (Default 10m) How long to wait for gateway activation and connection to Storage Gateway.'
            domain_controllers: |-
                - (Optional) List of IPv4 addresses, NetBIOS names, or host names of your domain server.
                If you need to specify the port number include it after the colon (“:”). For example, mydc.mydomain.com:389.
            domain_name: '- (Required) The name of the domain that you want the gateway to join.'
            ec2_instance_id: '- The ID of the Amazon EC2 instance that was used to launch the gateway.'
            endpoint_type: '- The type of endpoint for your gateway.'
            gateway_id: '- Identifier of the gateway.'
            gateway_ip_address: '- (Optional) Gateway IP address to retrieve activation key during resource creation. Conflicts with activation_key. Gateway must be accessible on port 80 from where Terraform is running. Additional information is available in the Storage Gateway User Guide.'
            gateway_name: '- (Required) Name of the gateway.'
            gateway_network_interface: '- An array that contains descriptions of the gateway network interfaces. See Gateway Network Interface.'
            gateway_timezone: '- (Required) Time zone for the gateway. The time zone is of the format "GMT", "GMT-hr:mm", or "GMT+hr:mm". For example, GMT-4:00 indicates the time is 4 hours behind GMT. The time zone is used, for example, for scheduling snapshots and your gateway''s maintenance schedule.'
            gateway_type: '- (Optional) Type of the gateway. The default value is STORED. Valid values: CACHED, FILE_FSX_SMB, FILE_S3, STORED, VTL.'
            gateway_vpc_endpoint: '- (Optional) VPC endpoint address to be used when activating your gateway. This should be used when your instance is in a private subnet. Requires HTTP access from client computer running terraform. More info on what ports are required by your VPC Endpoint Security group in Activating a Gateway in a Virtual Private Cloud.'
            host_environment: '- The type of hypervisor environment used by the host.'
            id: '- Amazon Resource Name (ARN) of the gateway.'
            ipv4_address: '- The Internet Protocol version 4 (IPv4) address of the interface.'
            maintenance_start_time: '- (Optional) The gateway''s weekly maintenance start time information, including day and time of the week. The maintenance time is the time in your gateway''s time zone. More details below.'
            maintenance_start_time.day_of_month: '- (Optional) The day of the month component of the maintenance start time represented as an ordinal number from 1 to 28, where 1 represents the first day of the month and 28 represents the last day of the month.'
            maintenance_start_time.day_of_week: '- (Optional) The day of the week component of the maintenance start time week represented as an ordinal number from 0 to 6, where 0 represents Sunday and 6 Saturday.'
            maintenance_start_time.hour_of_day: '- (Required) The hour component of the maintenance start time represented as hh, where hh is the hour (00 to 23). The hour of the day is in the time zone of the gateway.'
            maintenance_start_time.minute_of_hour: '- (Required) The minute component of the maintenance start time represented as mm, where mm is the minute (00 to 59). The minute of the hour is in the time zone of the gateway.'
            medium_changer_type: '- (Optional) Type of medium changer to use for tape gateway. Terraform cannot detect drift of this argument. Valid values: STK-L700, AWS-Gateway-VTL, IBM-03584L32-0402.'
            organizational_unit: |-
                - (Optional) The organizational unit (OU) is a container in an Active Directory that can hold users, groups,
                computers, and other OUs and this parameter specifies the OU that the gateway will join within the AD domain.
            password: '- (Required) The password of the user who has permission to add the gateway to the Active Directory domain.'
            smb_active_directory_settings: '- (Optional) Nested argument with Active Directory domain join information for Server Message Block (SMB) file shares. Only valid for FILE_S3 and FILE_FSX_SMB gateway types. Must be set before creating ActiveDirectory authentication SMB file shares. More details below.'
            smb_file_share_visibility: '- (Optional) Specifies whether the shares on this gateway appear when listing shares.'
            smb_guest_password: '- (Optional) Guest password for Server Message Block (SMB) file shares. Only valid for FILE_S3 and FILE_FSX_SMB gateway types. Must be set before creating GuestAccess authentication SMB file shares. Terraform can only detect drift of the existence of a guest password, not its actual value from the gateway. Terraform can however update the password with changing the argument.'
            smb_security_strategy: '- (Optional) Specifies the type of security strategy. Valid values are: ClientSpecified, MandatorySigning, and MandatoryEncryption. See Setting a Security Level for Your Gateway for more information.'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            tape_drive_type: '- (Optional) Type of tape drive to use for tape gateway. Terraform cannot detect drift of this argument. Valid values: IBM-ULT3580-TD5.'
            timeout_in_seconds: '- (Optional) Specifies the time in seconds, in which the JoinDomain operation must complete. The default is 20 seconds.'
            username: '- (Required) The user name of user who has permission to add the gateway to the Active Directory domain.'
        importStatements: []
    aws_storagegateway_nfs_file_share:
        subCategory: Storage Gateway
        description: Manages an AWS Storage Gateway NFS File Share
        name: aws_storagegateway_nfs_file_share
        title: aws_storagegateway_nfs_file_share
        examples:
            - name: example
              manifest: |-
                {
                  "client_list": [
                    "0.0.0.0/0"
                  ],
                  "gateway_arn": "${aws_storagegateway_gateway.example.arn}",
                  "location_arn": "${aws_s3_bucket.example.arn}",
                  "role_arn": "${aws_iam_role.example.arn}"
                }
              references:
                gateway_arn: aws_storagegateway_gateway.example.arn
                location_arn: aws_s3_bucket.example.arn
                role_arn: aws_iam_role.example.arn
        argumentDocs:
            arn: '- Amazon Resource Name (ARN) of the NFS File Share.'
            audit_destination_arn: '- (Optional) The Amazon Resource Name (ARN) of the storage used for audit logs.'
            bucket_region: '- (Optional) The region of the S3 bucket used by the file share. Required when specifying vpc_endpoint_dns_name.'
            cache_attributes: '- (Optional) Refresh cache information. see Cache Attributes for more details.'
            cache_attributes.cache_stale_timeout_in_seconds: |-
                - (Optional) Refreshes a file share's cache by using Time To Live (TTL).
                TTL is the length of time since the last refresh after which access to the directory would cause the file gateway
                to first refresh that directory's contents from the Amazon S3 bucket. Valid Values: 300 to 2,592,000 seconds (5 minutes to 30 days)
            client_list: '- (Required) The list of clients that are allowed to access the file gateway. The list must contain either valid IP addresses or valid CIDR blocks. Set to ["0.0.0.0/0"] to not limit access. Minimum 1 item. Maximum 100 items.'
            create: '- (Default 10m) How long to wait for file share creation.'
            default_storage_class: '- (Optional) The default storage class for objects put into an Amazon S3 bucket by the file gateway. Defaults to S3_STANDARD.'
            delete: '- (Default 10m) How long to wait for file share deletion.'
            file_share_name: '- (Optional) The name of the file share. Must be set if an S3 prefix name is set in location_arn.'
            fileshare_id: '- ID of the NFS File Share.'
            gateway_arn: '- (Required) Amazon Resource Name (ARN) of the file gateway.'
            guess_mime_type_enabled: '- (Optional) Boolean value that enables guessing of the MIME type for uploaded objects based on file extensions. Defaults to true.'
            id: '- Amazon Resource Name (ARN) of the NFS File Share.'
            kms_encrypted: '- (Optional) Boolean value if true to use Amazon S3 server side encryption with your own AWS KMS key, or false to use a key managed by Amazon S3. Defaults to false.'
            kms_key_arn: '- (Optional) Amazon Resource Name (ARN) for KMS key used for Amazon S3 server side encryption. This value can only be set when kms_encrypted is true.'
            location_arn: '- (Required) The ARN of the backed storage used for storing file data.'
            nfs_file_share_defaults: '- (Optional) Nested argument with file share default values. More information below. see NFS File Share Defaults for more details.'
            nfs_file_share_defaults.directory_mode: '- (Optional) The Unix directory mode in the string form "nnnn". Defaults to "0777".'
            nfs_file_share_defaults.file_mode: '- (Optional) The Unix file mode in the string form "nnnn". Defaults to "0666".'
            nfs_file_share_defaults.group_id: '- (Optional) The default group ID for the file share (unless the files have another group ID specified). Defaults to 65534 (nfsnobody). Valid values: 0 through 4294967294.'
            nfs_file_share_defaults.owner_id: '- (Optional) The default owner ID for the file share (unless the files have another owner ID specified). Defaults to 65534 (nfsnobody). Valid values: 0 through 4294967294.'
            notification_policy: '- (Optional) The notification policy of the file share. For more information see the AWS Documentation. Default value is {}.'
            object_acl: '- (Optional) Access Control List permission for S3 objects. Defaults to private.'
            path: '- File share path used by the NFS client to identify the mount point.'
            read_only: '- (Optional) Boolean to indicate write status of file share. File share does not accept writes if true. Defaults to false.'
            requester_pays: '- (Optional) Boolean who pays the cost of the request and the data download from the Amazon S3 bucket. Set this value to true if you want the requester to pay instead of the bucket owner. Defaults to false.'
            role_arn: '- (Required) The ARN of the AWS Identity and Access Management (IAM) role that a file gateway assumes when it accesses the underlying storage.'
            squash: '- (Optional) Maps a user to anonymous user. Defaults to RootSquash. Valid values: RootSquash (only root is mapped to anonymous user), NoSquash (no one is mapped to anonymous user), AllSquash (everyone is mapped to anonymous user)'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            update: '- (Default 10m) How long to wait for file share updates.'
            vpc_endpoint_dns_name: '- (Optional) The DNS name of the VPC endpoint for S3 PrivateLink.'
        importStatements: []
    aws_storagegateway_smb_file_share:
        subCategory: Storage Gateway
        description: Manages an AWS Storage Gateway SMB File Share
        name: aws_storagegateway_smb_file_share
        title: aws_storagegateway_smb_file_share
        examples:
            - name: example
              manifest: |-
                {
                  "authentication": "ActiveDirectory",
                  "gateway_arn": "${aws_storagegateway_gateway.example.arn}",
                  "location_arn": "${aws_s3_bucket.example.arn}",
                  "role_arn": "${aws_iam_role.example.arn}"
                }
              references:
                gateway_arn: aws_storagegateway_gateway.example.arn
                location_arn: aws_s3_bucket.example.arn
                role_arn: aws_iam_role.example.arn
            - name: example
              manifest: |-
                {
                  "authentication": "GuestAccess",
                  "gateway_arn": "${aws_storagegateway_gateway.example.arn}",
                  "location_arn": "${aws_s3_bucket.example.arn}",
                  "role_arn": "${aws_iam_role.example.arn}"
                }
              references:
                gateway_arn: aws_storagegateway_gateway.example.arn
                location_arn: aws_s3_bucket.example.arn
                role_arn: aws_iam_role.example.arn
        argumentDocs:
            access_based_enumeration: '- (Optional) The files and folders on this share will only be visible to users with read access. Default value is false.'
            admin_user_list: '- (Optional) A list of users in the Active Directory that have admin access to the file share. Only valid if authentication is set to ActiveDirectory.'
            arn: '- Amazon Resource Name (ARN) of the SMB File Share.'
            audit_destination_arn: '- (Optional) The Amazon Resource Name (ARN) of the CloudWatch Log Group used for the audit logs.'
            authentication: '- (Optional) The authentication method that users use to access the file share. Defaults to ActiveDirectory. Valid values: ActiveDirectory, GuestAccess.'
            bucket_region: '- (Optional) The region of the S3 buck used by the file share. Required when specifying a vpc_endpoint_dns_name.'
            cache_attributes: '- (Optional) Refresh cache information. see Cache Attributes for more details.'
            cache_attributes.cache_stale_timeout_in_seconds: |-
                - (Optional) Refreshes a file share's cache by using Time To Live (TTL).
                TTL is the length of time since the last refresh after which access to the directory would cause the file gateway
                to first refresh that directory's contents from the Amazon S3 bucket. Valid Values: 300 to 2,592,000 seconds (5 minutes to 30 days)
            case_sensitivity: '- (Optional) The case of an object name in an Amazon S3 bucket. For ClientSpecified, the client determines the case sensitivity. For CaseSensitive, the gateway determines the case sensitivity. The default value is ClientSpecified.'
            create: '- (Default 10m) How long to wait for file share creation.'
            default_storage_class: '- (Optional) The default storage class for objects put into an Amazon S3 bucket by the file gateway. Defaults to S3_STANDARD.'
            delete: '- (Default 15m) How long to wait for file share deletion.'
            file_share_name: '- (Optional) The name of the file share. Must be set if an S3 prefix name is set in location_arn.'
            fileshare_id: '- ID of the SMB File Share.'
            gateway_arn: '- (Required) Amazon Resource Name (ARN) of the file gateway.'
            guess_mime_type_enabled: '- (Optional) Boolean value that enables guessing of the MIME type for uploaded objects based on file extensions. Defaults to true.'
            id: '- Amazon Resource Name (ARN) of the SMB File Share.'
            invalid_user_list: '- (Optional) A list of users in the Active Directory that are not allowed to access the file share. Only valid if authentication is set to ActiveDirectory.'
            kms_encrypted: '- (Optional) Boolean value if true to use Amazon S3 server side encryption with your own AWS KMS key, or false to use a key managed by Amazon S3. Defaults to false.'
            kms_key_arn: '- (Optional) Amazon Resource Name (ARN) for KMS key used for Amazon S3 server side encryption. This value can only be set when kms_encrypted is true.'
            location_arn: '- (Required) The ARN of the backed storage used for storing file data.'
            notification_policy: '- (Optional) The notification policy of the file share. For more information see the AWS Documentation. Default value is {}.'
            object_acl: '- (Optional) Access Control List permission for S3 objects. Defaults to private.'
            oplocks_enabled: '- (Optional) Boolean to indicate Opportunistic lock (oplock) status. Defaults to true.'
            path: '- File share path used by the NFS client to identify the mount point.'
            read_only: '- (Optional) Boolean to indicate write status of file share. File share does not accept writes if true. Defaults to false.'
            requester_pays: '- (Optional) Boolean who pays the cost of the request and the data download from the Amazon S3 bucket. Set this value to true if you want the requester to pay instead of the bucket owner. Defaults to false.'
            role_arn: '- (Required) The ARN of the AWS Identity and Access Management (IAM) role that a file gateway assumes when it accesses the underlying storage.'
            smb_acl_enabled: '- (Optional) Set this value to true to enable ACL (access control list) on the SMB fileshare. Set it to false to map file and directory permissions to the POSIX permissions. This setting applies only to ActiveDirectory authentication type.'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            update: '- (Default 10m) How long to wait for file share updates.'
            valid_user_list: '- (Optional) A list of users in the Active Directory that are allowed to access the file share. If you need to specify an Active directory group, add ''@'' before the name of the group. It will be set on Allowed group in AWS console. Only valid if authentication is set to ActiveDirectory.'
            vpc_endpoint_dns_name: '- (Optional) The DNS name of the VPC endpoint for S3 private link.'
        importStatements: []
    aws_storagegateway_stored_iscsi_volume:
        subCategory: Storage Gateway
        description: Manages an AWS Storage Gateway stored iSCSI volume
        name: aws_storagegateway_stored_iscsi_volume
        title: aws_storagegateway_stored_iscsi_volume
        examples:
            - name: example
              manifest: |-
                {
                  "disk_id": "${data.aws_storagegateway_local_disk.test.id}",
                  "gateway_arn": "${aws_storagegateway_cache.example.gateway_arn}",
                  "network_interface_id": "${aws_instance.example.private_ip}",
                  "preserve_existing_data": false,
                  "target_name": "example"
                }
              references:
                disk_id: data.aws_storagegateway_local_disk.test.id
                gateway_arn: aws_storagegateway_cache.example.gateway_arn
                network_interface_id: aws_instance.example.private_ip
            - name: example
              manifest: |-
                {
                  "disk_id": "${data.aws_storagegateway_local_disk.test.id}",
                  "gateway_arn": "${aws_storagegateway_cache.example.gateway_arn}",
                  "network_interface_id": "${aws_instance.example.private_ip}",
                  "preserve_existing_data": false,
                  "snapshot_id": "${aws_ebs_snapshot.example.id}",
                  "target_name": "example"
                }
              references:
                disk_id: data.aws_storagegateway_local_disk.test.id
                gateway_arn: aws_storagegateway_cache.example.gateway_arn
                network_interface_id: aws_instance.example.private_ip
                snapshot_id: aws_ebs_snapshot.example.id
        argumentDocs:
            arn: '- Volume Amazon Resource Name (ARN), e.g., arn:aws:storagegateway:us-east-1:123456789012:gateway/sgw-12345678/volume/vol-12345678.'
            chap_enabled: '- Whether mutual CHAP is enabled for the iSCSI target.'
            disk_id: '- (Required) The unique identifier for the gateway local disk that is configured as a stored volume.'
            gateway_arn: '- (Required) The Amazon Resource Name (ARN) of the gateway.'
            id: '- Volume Amazon Resource Name (ARN), e.g., arn:aws:storagegateway:us-east-1:123456789012:gateway/sgw-12345678/volume/vol-12345678.'
            kms_encrypted: '- (Optional) true to use Amazon S3 server side encryption with your own AWS KMS key, or false to use a key managed by Amazon S3. Optional.'
            kms_key: '- (Optional) The Amazon Resource Name (ARN) of the AWS KMS key used for Amazon S3 server side encryption. This value can only be set when kms_encrypted is true.'
            lun_number: '- Logical disk number.'
            network_interface_id: '- (Required) The network interface of the gateway on which to expose the iSCSI target. Only IPv4 addresses are accepted.'
            network_interface_port: '- The port used to communicate with iSCSI targets.'
            preserve_existing_data: '- (Required) Specify this field as true if you want to preserve the data on the local disk. Otherwise, specifying this field as false creates an empty volume.'
            snapshot_id: '- (Optional) The snapshot ID of the snapshot to restore as the new stored volumeE.g., snap-1122aabb.'
            tags: '- (Optional) Key-value mapping of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            target_arn: '- Target Amazon Resource Name (ARN), e.g., arn:aws:storagegateway:us-east-1:123456789012:gateway/sgw-12345678/target/iqn.1997-05.com.amazon:TargetName.'
            target_name: '- (Required) The name of the iSCSI target used by initiators to connect to the target and as a suffix for the target ARN. The target name must be unique across all volumes of a gateway.'
            volume_arn: '- Volume Amazon Resource Name (ARN), e.g., arn:aws:storagegateway:us-east-1:123456789012:gateway/sgw-12345678/volume/vol-12345678.'
            volume_attachment_status: '- A value that indicates whether a storage volume is attached to, detached from, or is in the process of detaching from a gateway.'
            volume_id: '- Volume ID, e.g., vol-12345678.'
            volume_size_in_bytes: '- The size of the data stored on the volume in bytes.'
            volume_status: '- indicates the state of the storage volume.'
            volume_type: '- indicates the type of the volume.'
        importStatements: []
    aws_storagegateway_tape_pool:
        subCategory: Storage Gateway
        description: Manages an AWS Storage Gateway Tape Pool
        name: aws_storagegateway_tape_pool
        title: aws_storagegateway_tape_pool
        examples:
            - name: example
              manifest: |-
                {
                  "pool_name": "example",
                  "storage_class": "GLACIER"
                }
        argumentDocs:
            arn: '- Volume Amazon Resource Name (ARN), e.g., aws_storagegateway_tape_pool.example arn:aws:storagegateway:us-east-1:123456789012:tapepool/pool-12345678.'
            pool_name: '- (Required) The name of the new custom tape pool.'
            retention_lock_time_in_days: '- (Optional) Tape retention lock time is set in days. Tape retention lock can be enabled for up to 100 years (36,500 days). Default value is 0.'
            retention_lock_type: '- (Required) Tape retention lock can be configured in two modes. When configured in governance mode, AWS accounts with specific IAM permissions are authorized to remove the tape retention lock from archived virtual tapes. When configured in compliance mode, the tape retention lock cannot be removed by any user, including the root AWS account. Possible values are COMPLIANCE, GOVERNANCE, and NONE. Default value is NONE.'
            storage_class: '- (Required) The storage class that is associated with the new custom pool. When you use your backup application to eject the tape, the tape is archived directly into the storage class that corresponds to the pool. Possible values are DEEP_ARCHIVE or GLACIER.'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_storagegateway_upload_buffer:
        subCategory: Storage Gateway
        description: Manages an AWS Storage Gateway upload buffer
        name: aws_storagegateway_upload_buffer
        title: aws_storagegateway_upload_buffer
        examples:
            - name: test
              manifest: |-
                {
                  "disk_path": "${data.aws_storagegateway_local_disk.test.disk_path}",
                  "gateway_arn": "${aws_storagegateway_gateway.test.arn}"
                }
              references:
                disk_path: data.aws_storagegateway_local_disk.test.disk_path
                gateway_arn: aws_storagegateway_gateway.test.arn
            - name: example
              manifest: |-
                {
                  "disk_id": "${data.aws_storagegateway_local_disk.example.id}",
                  "gateway_arn": "${aws_storagegateway_gateway.example.arn}"
                }
              references:
                disk_id: data.aws_storagegateway_local_disk.example.id
                gateway_arn: aws_storagegateway_gateway.example.arn
        argumentDocs:
            disk_id: '- (Optional) Local disk identifier. For example, pci-0000:03:00.0-scsi-0:0:0:0.'
            disk_path: '- (Optional) Local disk path. For example, /dev/nvme1n1.'
            gateway_arn: '- (Required) The Amazon Resource Name (ARN) of the gateway.'
            id: '- Combined gateway Amazon Resource Name (ARN) and local disk identifier.'
        importStatements: []
    aws_storagegateway_working_storage:
        subCategory: Storage Gateway
        description: Manages an AWS Storage Gateway working storage
        name: aws_storagegateway_working_storage
        title: aws_storagegateway_working_storage
        examples:
            - name: example
              manifest: |-
                {
                  "disk_id": "${data.aws_storagegateway_local_disk.example.id}",
                  "gateway_arn": "${aws_storagegateway_gateway.example.arn}"
                }
              references:
                disk_id: data.aws_storagegateway_local_disk.example.id
                gateway_arn: aws_storagegateway_gateway.example.arn
        argumentDocs:
            disk_id: '- (Required) Local disk identifier. For example, pci-0000:03:00.0-scsi-0:0:0:0.'
            gateway_arn: '- (Required) The Amazon Resource Name (ARN) of the gateway.'
            id: '- Combined gateway Amazon Resource Name (ARN) and local disk identifier.'
        importStatements: []
    aws_subnet:
        subCategory: VPC (Virtual Private Cloud)
        description: Provides an VPC subnet resource.
        name: aws_subnet
        title: aws_subnet
        examples:
            - name: main
              manifest: |-
                {
                  "cidr_block": "10.0.1.0/24",
                  "tags": {
                    "Name": "Main"
                  },
                  "vpc_id": "${aws_vpc.main.id}"
                }
              references:
                vpc_id: aws_vpc.main.id
            - name: in_secondary_cidr
              manifest: |-
                {
                  "cidr_block": "172.2.0.0/24",
                  "vpc_id": "${aws_vpc_ipv4_cidr_block_association.secondary_cidr.vpc_id}"
                }
              references:
                vpc_id: aws_vpc_ipv4_cidr_block_association.secondary_cidr.vpc_id
              dependencies:
                aws_vpc_ipv4_cidr_block_association.secondary_cidr: |-
                    {
                      "cidr_block": "172.2.0.0/16",
                      "vpc_id": "${aws_vpc.main.id}"
                    }
        argumentDocs:
            arn: '- The ARN of the subnet.'
            assign_ipv6_address_on_creation: |-
                - (Optional) Specify true to indicate
                that network interfaces created in the specified subnet should be
                assigned an IPv6 address. Default is false
            availability_zone: '- (Optional) AZ for the subnet.'
            availability_zone_id: '- (Optional) AZ ID of the subnet. This argument is not supported in all regions or partitions. If necessary, use availability_zone instead.'
            cidr_block: '- (Optional) The IPv4 CIDR block for the subnet.'
            create: '- (Default 10m) How long to wait for a subnet to be created.'
            customer_owned_ipv4_pool: '- (Optional) The customer owned IPv4 address pool. Typically used with the map_customer_owned_ip_on_launch argument. The outpost_arn argument must be specified when configured.'
            delete: '- (Default 20m) How long to retry on DependencyViolation errors during subnet deletion from lingering ENIs left by certain AWS services such as Elastic Load Balancing. NOTE: Lambda ENIs can take up to 45 minutes to delete, which is not affected by changing this customizable timeout (in version 2.31.0 and later of the Terraform AWS Provider) unless it is increased above 45 minutes.'
            enable_dns64: '- (Optional) Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: false.'
            enable_resource_name_dns_a_record_on_launch: '- (Optional) Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: false.'
            enable_resource_name_dns_aaaa_record_on_launch: '- (Optional) Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: false.'
            id: '- The ID of the subnet'
            ipv6_cidr_block: |-
                - (Optional) The IPv6 network range for the subnet,
                in CIDR notation. The subnet size must use a /64 prefix length.
            ipv6_cidr_block_association_id: '- The association ID for the IPv6 CIDR block.'
            ipv6_native: '- (Optional) Indicates whether to create an IPv6-only subnet. Default: false.'
            map_customer_owned_ip_on_launch: '-  (Optional) Specify true to indicate that network interfaces created in the subnet should be assigned a customer owned IP address. The customer_owned_ipv4_pool and outpost_arn arguments must be specified when set to true. Default is false.'
            map_public_ip_on_launch: |-
                -  (Optional) Specify true to indicate
                that instances launched into the subnet should be assigned
                a public IP address. Default is false.
            outpost_arn: '- (Optional) The Amazon Resource Name (ARN) of the Outpost.'
            owner_id: '- The ID of the AWS account that owns the subnet.'
            private_dns_hostname_type_on_launch: '- (Optional) The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: ip-name, resource-name.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            vpc_id: '- (Required) The VPC ID.'
        importStatements: []
    aws_swf_domain:
        subCategory: SWF (Simple Workflow)
        description: Provides an SWF Domain resource
        name: aws_swf_domain
        title: aws_swf_domain
        examples:
            - name: foo
              manifest: |-
                {
                  "description": "Terraform SWF Domain",
                  "name": "foo",
                  "workflow_execution_retention_period_in_days": 30
                }
        argumentDocs:
            arn: '- Amazon Resource Name (ARN)'
            description: '- (Optional, Forces new resource) The domain description.'
            id: '- The name of the domain.'
            name: '- (Optional, Forces new resource) The name of the domain. If omitted, Terraform will assign a random, unique name.'
            name_prefix: '- (Optional, Forces new resource) Creates a unique name beginning with the specified prefix. Conflicts with name.'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            workflow_execution_retention_period_in_days: '- (Required, Forces new resource) Length of time that SWF will continue to retain information about the workflow execution after the workflow execution is complete, must be between 0 and 90 days.'
        importStatements: []
    aws_synthetics_canary:
        subCategory: CloudWatch Synthetics
        description: Provides a Synthetics Canary resource
        name: aws_synthetics_canary
        title: aws_synthetics_canary
        examples:
            - name: some
              manifest: |-
                {
                  "artifact_s3_location": "s3://some-bucket/",
                  "execution_role_arn": "some-role",
                  "handler": "exports.handler",
                  "name": "some-canary",
                  "runtime_version": "syn-1.0",
                  "schedule": [
                    {
                      "expression": "rate(0 minute)"
                    }
                  ],
                  "zip_file": "test-fixtures/lambdatest.zip"
                }
        argumentDocs:
            arn: '- Amazon Resource Name (ARN) of the Canary.'
            artifact_config: '- (Optional) configuration for canary artifacts, including the encryption-at-rest settings for artifacts that the canary uploads to Amazon S3. See Artifact Config.'
            artifact_config.s3_encryption: '- (Optional) Configuration of the encryption-at-rest settings for artifacts that the canary uploads to Amazon S3. See S3 Encryption.'
            artifact_config.s3_encryption.encryption_mode: '- (Optional) The encryption method to use for artifacts created by this canary. Valid values are: SSE_S3 and SSE_KMS.'
            artifact_config.s3_encryption.kms_key_arn: '- (Optional) The ARN of the customer-managed KMS key to use, if you specify SSE_KMS for encryption_mode.'
            artifact_s3_location: '- (Required) Location in Amazon S3 where Synthetics stores artifacts from the test runs of this canary.'
            delete_lambda: '- (Optional)  Specifies whether to also delete the Lambda functions and layers used by this canary. The default is false.'
            engine_arn: '- ARN of the Lambda function that is used as your canary''s engine.'
            execution_role_arn: '- (Required) ARN of the IAM role to be used to run the canary. see AWS Docs for permissions needs for IAM Role.'
            failure_retention_period: '- (Optional) Number of days to retain data about failed runs of this canary. If you omit this field, the default of 31 days is used. The valid range is 1 to 455 days.'
            handler: '- (Required) Entry point to use for the source code when running the canary. This value must end with the string .handler .'
            id: '- Name for this canary.'
            name: '- (Required) Name for this canary. Has a maximum length of 21 characters. Valid characters are lowercase alphanumeric, hyphen, or underscore.'
            run_config: '- (Optional) Configuration block for individual canary runs. Detailed below.'
            run_config.active_tracing: '- (Optional) Whether this canary is to use active AWS X-Ray tracing when it runs. You can enable active tracing only for canaries that use version syn-nodejs-2.0 or later for their canary runtime.'
            run_config.environment_variables: '- (Optional) Map of environment variables that are accessible from the canary during execution. Please see AWS Docs for variables reserved for Lambda.'
            run_config.memory_in_mb: '- (Optional) Maximum amount of memory available to the canary while it is running, in MB. The value you specify must be a multiple of 64.'
            run_config.timeout_in_seconds: '- (Optional) Number of seconds the canary is allowed to run before it must stop. If you omit this field, the frequency of the canary is used, up to a maximum of 840 (14 minutes).'
            runtime_version: '- (Required) Runtime version to use for the canary. Versions change often so consult the Amazon CloudWatch documentation for the latest valid versions. Values include syn-python-selenium-1.0, syn-nodejs-puppeteer-3.0, syn-nodejs-2.2, syn-nodejs-2.1, syn-nodejs-2.0, and syn-1.0.'
            s3_bucket: '- (Optional) Full bucket name which is used if your canary script is located in S3. The bucket must already exist. Specify the full bucket name including s3:// as the start of the bucket name. Conflicts with'
            s3_key: '- (Optional) S3 key of your script. Conflicts with'
            s3_version: '- (Optional) S3 version ID of your script. Conflicts with'
            schedule: '-  (Required) Configuration block providing how often the canary is to run and when these test runs are to stop. Detailed below.'
            schedule.duration_in_seconds: '- (Optional) Duration in seconds, for the canary to continue making regular runs according to the schedule in the Expression value.'
            schedule.expression: '- (Required) Rate expression or cron expression that defines how often the canary is to run. For rate expression, the syntax is rate(number unit). unit can be minute, minutes, or hour. For cron expression, the syntax is cron(expression). For more information about the syntax for cron expressions, see Scheduling canary runs using cron.'
            source_location_arn: '- ARN of the Lambda layer where Synthetics stores the canary script code.'
            start_canary: '- (Optional) Whether to run or stop the canary.'
            status: '- Canary status.'
            success_retention_period: '- (Optional) Number of days to retain data about successful runs of this canary. If you omit this field, the default of 31 days is used. The valid range is 1 to 455 days.'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            timeline: '- Structure that contains information about when the canary was created, modified, and most recently run. see Timeline.'
            timeline.created: '- Date and time the canary was created.'
            timeline.last_modified: '- Date and time the canary was most recently modified.'
            timeline.last_started: '- Date and time that the canary''s most recent run started.'
            timeline.last_stopped: '- Date and time that the canary''s most recent run ended.'
            vpc_config: '- (Optional) Configuration block. Detailed below.'
            vpc_config.security_group_ids: '- (Required) IDs of the security groups for this canary.'
            vpc_config.subnet_ids: '- (Required) IDs of the subnets where this canary is to run.'
            vpc_config.vpc_id: '- ID of the VPC where this canary is to run.'
            zip_file: .
        importStatements: []
    aws_timestreamwrite_database:
        subCategory: Timestream Write
        description: Provides a Timestream database resource.
        name: aws_timestreamwrite_database
        title: aws_timestreamwrite_database
        examples:
            - name: example
              manifest: |-
                {
                  "database_name": "database-example"
                }
            - name: example
              manifest: |-
                {
                  "database_name": "database-example",
                  "kms_key_id": "${aws_kms_key.example.arn}",
                  "tags": {
                    "Name": "value"
                  }
                }
              references:
                kms_key_id: aws_kms_key.example.arn
        argumentDocs:
            arn: '- The ARN that uniquely identifies this database.'
            database_name: – (Required) The name of the Timestream database. Minimum length of 3. Maximum length of 64.
            id: '- The name of the Timestream database.'
            kms_key_id: '- (Optional) The ARN (not Alias ARN) of the KMS key to be used to encrypt the data stored in the database. If the KMS key is not specified, the database will be encrypted with a Timestream managed KMS key located in your account. Refer to AWS managed KMS keys for more info.'
            table_count: '- The total number of tables found within the Timestream database.'
            tags: '- (Optional) Map of tags to assign to this resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_timestreamwrite_table:
        subCategory: Timestream Write
        description: Provides a Timestream table resource.
        name: aws_timestreamwrite_table
        title: aws_timestreamwrite_table
        examples:
            - name: example
              manifest: |-
                {
                  "database_name": "${aws_timestreamwrite_database.example.database_name}",
                  "table_name": "example"
                }
              references:
                database_name: aws_timestreamwrite_database.example.database_name
            - name: example
              manifest: |-
                {
                  "database_name": "${aws_timestreamwrite_database.example.database_name}",
                  "retention_properties": [
                    {
                      "magnetic_store_retention_period_in_days": 30,
                      "memory_store_retention_period_in_hours": 8
                    }
                  ],
                  "table_name": "example",
                  "tags": {
                    "Name": "example-timestream-table"
                  }
                }
              references:
                database_name: aws_timestreamwrite_database.example.database_name
        argumentDocs:
            arn: '- The ARN that uniquely identifies this table.'
            database_name: – (Required) The name of the Timestream database.
            id: '- The table_name and database_name separated by a colon (:).'
            magnetic_store_write_properties: '- (Optional) Contains properties to set on the table when enabling magnetic store writes. See Magnetic Store Write Properties below for more details.'
            magnetic_store_write_properties.enable_magnetic_store_writes: '- (Required) A flag to enable magnetic store writes.'
            magnetic_store_write_properties.magnetic_store_rejected_data_location: '- (Optional) The location to write error reports for records rejected asynchronously during magnetic store writes. See Magnetic Store Rejected Data Location below for more details.'
            magnetic_store_write_properties.magnetic_store_rejected_data_location.s3_configuration: '- (Optional) Configuration of an S3 location to write error reports for records rejected, asynchronously, during magnetic store writes. See S3 Configuration below for more details.'
            magnetic_store_write_properties.magnetic_store_rejected_data_location.s3_configuration.bucket_name: '- (Optional) Bucket name of the customer S3 bucket.'
            magnetic_store_write_properties.magnetic_store_rejected_data_location.s3_configuration.encryption_option: '- (Optional) Encryption option for the customer s3 location. Options are S3 server side encryption with an S3-managed key or KMS managed key. Valid values are SSE_KMS and SSE_S3.'
            magnetic_store_write_properties.magnetic_store_rejected_data_location.s3_configuration.kms_key_id: '- (Optional) KMS key arn for the customer s3 location when encrypting with a KMS managed key.'
            magnetic_store_write_properties.magnetic_store_rejected_data_location.s3_configuration.object_key_prefix: '- (Optional) Object key prefix for the customer S3 location.'
            retention_properties: '- (Optional) The retention duration for the memory store and magnetic store. See Retention Properties below for more details. If not provided, magnetic_store_retention_period_in_days default to 73000 and memory_store_retention_period_in_hours defaults to 6.'
            retention_properties.magnetic_store_retention_period_in_days: '- (Required) The duration for which data must be stored in the magnetic store. Minimum value of 1. Maximum value of 73000.'
            retention_properties.memory_store_retention_period_in_hours: '- (Required) The duration for which data must be stored in the memory store. Minimum value of 1. Maximum value of 8766.'
            table_name: '- (Required) The name of the Timestream table.'
            tags: '- (Optional) Map of tags to assign to this resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_transcribe_medical_vocabulary:
        subCategory: Transcribe
        description: Terraform resource for managing an AWS Transcribe MedicalVocabulary.
        name: aws_transcribe_medical_vocabulary
        title: aws_transcribe_medical_vocabulary
        examples:
            - name: example
              manifest: |-
                {
                  "depends_on": [
                    "${aws_s3_object.object}"
                  ],
                  "language_code": "en-US",
                  "tags": {
                    "tag1": "value1",
                    "tag2": "value3"
                  },
                  "vocabulary_file_uri": "s3://${aws_s3_bucket.example.id}/${aws_s3_object.object.key}",
                  "vocabulary_name": "example"
                }
              dependencies:
                aws_s3_bucket.example: |-
                    {
                      "bucket": "example-medical-vocab-123",
                      "force_destroy": true
                    }
                aws_s3_object.object: |-
                    {
                      "bucket": "${aws_s3_bucket.example.id}",
                      "key": "transcribe/test1.txt",
                      "source": "test.txt"
                    }
        argumentDocs:
            arn: '- ARN of the MedicalVocabulary.'
            create: '- (Optional, Default: 30m)'
            delete: '- (Optional, Default: 30m)'
            download_uri: '- Generated download URI.'
            id: '- Name of the MedicalVocabulary.'
            language_code: '- (Required) The language code you selected for your medical vocabulary. US English (en-US) is the only language supported with Amazon Transcribe Medical.'
            tags: '- (Optional) A map of tags to assign to the MedicalVocabulary. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            update: '- (Optional, Default: 30m)'
            vocabulary_file_uri: '- (Required) The Amazon S3 location (URI) of the text file that contains your custom medical vocabulary.'
            vocabulary_name: '- (Required) The name of the Medical Vocabulary.'
        importStatements: []
    aws_transfer_access:
        subCategory: Transfer Family
        description: Provides a AWS Transfer Access resource.
        name: aws_transfer_access
        title: aws_transfer_access
        examples:
            - name: example
              manifest: |-
                {
                  "external_id": "S-1-1-12-1234567890-123456789-1234567890-1234",
                  "home_directory": "/${aws_s3_bucket.example.id}/",
                  "role": "${aws_iam_role.example.arn}",
                  "server_id": "${aws_transfer_server.example.id}"
                }
              references:
                role: aws_iam_role.example.arn
                server_id: aws_transfer_server.example.id
            - name: test
              manifest: |-
                {
                  "external_id": "S-1-1-12-1234567890-123456789-1234567890-1234",
                  "home_directory": "/${aws_efs_file_system.test.id}/",
                  "posix_profile": [
                    {
                      "gid": 1000,
                      "uid": 1000
                    }
                  ],
                  "role": "${aws_iam_role.test.arn}",
                  "server_id": "${aws_transfer_server.test.id}"
                }
              references:
                role: aws_iam_role.test.arn
                server_id: aws_transfer_server.test.id
        argumentDocs:
            entry: '- (Required) Represents an entry and a target.'
            external_id: '- (Required) The SID of a group in the directory connected to the Transfer Server (e.g., S-1-1-12-1234567890-123456789-1234567890-1234)'
            gid: '- (Required) The POSIX group ID used for all EFS operations by this user.'
            home_directory: '- (Optional) The landing directory (folder) for a user when they log in to the server using their SFTP client.  It should begin with a /.  The first item in the path is the name of the home bucket (accessible as ${Transfer:HomeBucket} in the policy) and the rest is the home directory (accessible as ${Transfer:HomeDirectory} in the policy). For example, /example-bucket-1234/username would set the home bucket to example-bucket-1234 and the home directory to username.'
            home_directory_mappings: '- (Optional) Logical directory mappings that specify what S3 paths and keys should be visible to your user and how you want to make them visible. See Home Directory Mappings below.'
            home_directory_type: '- (Optional) The type of landing directory (folder) you mapped for your users'' home directory. Valid values are PATH and LOGICAL.'
            id: '- The ID of the resource'
            policy: '- (Optional) An IAM JSON policy document that scopes down user access to portions of their Amazon S3 bucket. IAM variables you can use inside this policy include ${Transfer:UserName}, ${Transfer:HomeDirectory}, and ${Transfer:HomeBucket}. Since the IAM variable syntax matches Terraform''s interpolation syntax, they must be escaped inside Terraform configuration strings ($${Transfer:UserName}).  These are evaluated on-the-fly when navigating the bucket.'
            posix_profile: '- (Optional) Specifies the full POSIX identity, including user ID (Uid), group ID (Gid), and any secondary groups IDs (SecondaryGids), that controls your users'' access to your Amazon EFS file systems. See Posix Profile below.'
            role: '- (Required) Amazon Resource Name (ARN) of an IAM role that allows the service to controls your user’s access to your Amazon S3 bucket.'
            secondary_gids: '- (Optional) The secondary POSIX group IDs used for all EFS operations by this user.'
            server_id: '- (Required) The Server ID of the Transfer Server (e.g., s-12345678)'
            target: '- (Required) Represents the map target.'
            uid: '- (Required) The POSIX user ID used for all EFS operations by this user.'
        importStatements: []
    aws_transfer_server:
        subCategory: Transfer Family
        description: Provides a AWS Transfer Server resource.
        name: aws_transfer_server
        title: aws_transfer_server
        examples:
            - name: example
              manifest: |-
                {
                  "tags": {
                    "Name": "Example"
                  }
                }
            - name: example
              manifest: |-
                {
                  "security_policy_name": "TransferSecurityPolicy-2020-06"
                }
            - name: example
              manifest: |-
                {
                  "endpoint_details": [
                    {
                      "address_allocation_ids": [
                        "${aws_eip.example.id}"
                      ],
                      "subnet_ids": [
                        "${aws_subnet.example.id}"
                      ],
                      "vpc_id": "${aws_vpc.example.id}"
                    }
                  ],
                  "endpoint_type": "VPC"
                }
              references:
                endpoint_details.vpc_id: aws_vpc.example.id
            - name: example
              manifest: |-
                {
                  "directory_id": "${aws_directory_service_directory.example.id}",
                  "identity_provider_type": "AWS_DIRECTORY_SERVICE"
                }
              references:
                directory_id: aws_directory_service_directory.example.id
            - name: example
              manifest: |-
                {
                  "function": "${aws_lambda_identity_provider.example.arn}",
                  "identity_provider_type": "AWS_LAMBDA"
                }
              references:
                function: aws_lambda_identity_provider.example.arn
            - name: example
              manifest: |-
                {
                  "certificate": "${aws_acm_certificate.example.arn}",
                  "endpoint_details": [
                    {
                      "subnet_ids": [
                        "${aws_subnet.example.id}"
                      ],
                      "vpc_id": "${aws_vpc.example.id}"
                    }
                  ],
                  "endpoint_type": "VPC",
                  "identity_provider_type": "API_GATEWAY",
                  "protocols": [
                    "FTP",
                    "FTPS"
                  ],
                  "url": "${aws_api_gateway_deployment.example.invoke_url}${aws_api_gateway_resource.example.path}"
                }
              references:
                certificate: aws_acm_certificate.example.arn
                endpoint_details.vpc_id: aws_vpc.example.id
        argumentDocs:
            FTP: ': Unencrypted file transfer'
            FTPS: ': File transfer with TLS encryption'
            SFTP: ': File transfer over SSH'
            address_allocation_ids: '- (Optional) A list of address allocation IDs that are required to attach an Elastic IP address to your SFTP server''s endpoint. This property can only be used when endpoint_type is set to VPC.'
            arn: '- Amazon Resource Name (ARN) of Transfer Server'
            certificate: '- (Optional) The Amazon Resource Name (ARN) of the AWS Certificate Manager (ACM) certificate. This is required when protocols is set to FTPS'
            directory_id: '- (Optional) The directory service ID of the directory service you want to connect to with an identity_provider_type of AWS_DIRECTORY_SERVICE.'
            domain: '- (Optional) The domain of the storage system that is used for file transfers. Valid values are: S3 and EFS. The default value is S3.'
            endpoint: '- The endpoint of the Transfer Server (e.g., s-12345678.server.transfer.REGION.amazonaws.com)'
            endpoint_details: '- (Optional) The virtual private cloud (VPC) endpoint settings that you want to configure for your SFTP server. Fields documented below.'
            endpoint_type: '- (Optional) The type of endpoint that you want your SFTP server connect to. If you connect to a VPC (or VPC_ENDPOINT), your SFTP server isn''t accessible over the public internet. If you want to connect your SFTP server via public internet, set PUBLIC.  Defaults to PUBLIC.'
            execution_role: '- (Required) Includes the necessary permissions for S3, EFS, and Lambda operations that Transfer can assume, so that all workflow steps can operate on the required resources.'
            force_destroy: '- (Optional) A boolean that indicates all users associated with the server should be deleted so that the Server can be destroyed without error. The default value is false. This option only applies to servers configured with a SERVICE_MANAGED identity_provider_type.'
            function: '- (Optional) The ARN for a lambda function to use for the Identity provider.'
            host_key: '- (Optional) RSA private key (e.g., as generated by the ssh-keygen -N "" -m PEM -f my-new-server-key command).'
            host_key_fingerprint: '- This value contains the message-digest algorithm (MD5) hash of the server''s host key. This value is equivalent to the output of the ssh-keygen -l -E md5 -f my-new-server-key command.'
            id: '- The Server ID of the Transfer Server (e.g., s-12345678)'
            identity_provider_type: '- (Optional) The mode of authentication enabled for this service. The default value is SERVICE_MANAGED, which allows you to store and access SFTP user credentials within the service. API_GATEWAY indicates that user authentication requires a call to an API Gateway endpoint URL provided by you to integrate an identity provider of your choice. Using AWS_DIRECTORY_SERVICE will allow for authentication against AWS Managed Active Directory or Microsoft Active Directory in your on-premises environment, or in AWS using AD Connectors. Use the AWS_LAMBDA value to directly use a Lambda function as your identity provider. If you choose this value, you must specify the ARN for the lambda function in the function argument.'
            invocation_role: '- (Optional) Amazon Resource Name (ARN) of the IAM role used to authenticate the user account with an identity_provider_type of API_GATEWAY.'
            logging_role: '- (Optional) Amazon Resource Name (ARN) of an IAM role that allows the service to write your SFTP users’ activity to your Amazon CloudWatch logs for monitoring and auditing purposes.'
            on_upload: '- (Optional) A trigger that starts a workflow: the workflow begins to execute after a file is uploaded. See Workflow Detail below.'
            post_authentication_login_banner: '- (Optional) Specify a string to display when users connect to a server. This string is displayed after the user authenticates. The SFTP protocol does not support post-authentication display banners.'
            pre_authentication_login_banner: '- (Optional) Specify a string to display when users connect to a server. This string is displayed before the user authenticates.'
            protocols: '- (Optional) Specifies the file transfer protocol or protocols over which your file transfer protocol client can connect to your server''s endpoint. This defaults to SFTP . The available protocols are:'
            security_group_ids: '- (Optional) A list of security groups IDs that are available to attach to your server''s endpoint. If no security groups are specified, the VPC''s default security groups are automatically assigned to your endpoint. This property can only be used when endpoint_type is set to VPC.'
            security_policy_name: '- (Optional) Specifies the name of the security policy that is attached to the server. Possible values are TransferSecurityPolicy-2018-11, TransferSecurityPolicy-2020-06, TransferSecurityPolicy-FIPS-2020-06 and TransferSecurityPolicy-2022-03. Default value is: TransferSecurityPolicy-2018-11.'
            subnet_ids: '- (Optional) A list of subnet IDs that are required to host your SFTP server endpoint in your VPC. This property can only be used when endpoint_type is set to VPC.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            url: '- (Optional) - URL of the service endpoint used to authenticate users with an identity_provider_type of API_GATEWAY.'
            vpc_endpoint_id: '- (Optional) The ID of the VPC endpoint. This property can only be used when endpoint_type is set to VPC_ENDPOINT'
            vpc_id: '- (Optional) The VPC ID of the virtual private cloud in which the SFTP server''s endpoint will be hosted. This property can only be used when endpoint_type is set to VPC.'
            workflow_details: '- (Optional) Specifies the workflow details. See Workflow Details below.'
            workflow_id: '- (Required)  A unique identifier for the workflow.'
        importStatements: []
    aws_transfer_ssh_key:
        subCategory: Transfer Family
        description: Provides a AWS Transfer SSH Public Key resource.
        name: aws_transfer_ssh_key
        title: aws_transfer_ssh_key
        examples:
            - name: example
              manifest: |-
                {
                  "body": "... SSH key ...",
                  "server_id": "${aws_transfer_server.example.id}",
                  "user_name": "${aws_transfer_user.example.user_name}"
                }
              references:
                server_id: aws_transfer_server.example.id
                user_name: aws_transfer_user.example.user_name
              dependencies:
                aws_iam_role.example: |-
                    {
                      "assume_role_policy": "{\n\t\"Version\": \"2012-10-17\",\n\t\"Statement\": [\n\t\t{\n\t\t\"Effect\": \"Allow\",\n\t\t\"Principal\": {\n\t\t\t\"Service\": \"transfer.amazonaws.com\"\n\t\t},\n\t\t\"Action\": \"sts:AssumeRole\"\n\t\t}\n\t]\n}\n",
                      "name": "tf-test-transfer-user-iam-role"
                    }
                aws_iam_role_policy.example: |-
                    {
                      "name": "tf-test-transfer-user-iam-policy",
                      "policy": "{\n\t\"Version\": \"2012-10-17\",\n\t\"Statement\": [\n\t\t{\n\t\t\t\"Sid\": \"AllowFullAccesstoS3\",\n\t\t\t\"Effect\": \"Allow\",\n\t\t\t\"Action\": [\n\t\t\t\t\"s3:*\"\n\t\t\t],\n\t\t\t\"Resource\": \"*\"\n\t\t}\n\t]\n}\n",
                      "role": "${aws_iam_role.example.id}"
                    }
                aws_transfer_server.example: |-
                    {
                      "identity_provider_type": "SERVICE_MANAGED",
                      "tags": {
                        "NAME": "tf-acc-test-transfer-server"
                      }
                    }
                aws_transfer_user.example: |-
                    {
                      "role": "${aws_iam_role.example.arn}",
                      "server_id": "${aws_transfer_server.example.id}",
                      "tags": {
                        "NAME": "tftestuser"
                      },
                      "user_name": "tftestuser"
                    }
        argumentDocs:
            body: '- (Requirement) The public key portion of an SSH key pair.'
            server_id: '- (Requirement) The Server ID of the Transfer Server (e.g., s-12345678)'
            user_name: '- (Requirement) The name of the user account that is assigned to one or more servers.'
        importStatements: []
    aws_transfer_user:
        subCategory: Transfer Family
        description: Provides a AWS Transfer User resource.
        name: aws_transfer_user
        title: aws_transfer_user
        examples:
            - name: foo
              manifest: |-
                {
                  "home_directory_mappings": [
                    {
                      "entry": "/test.pdf",
                      "target": "/bucket3/test-path/tftestuser.pdf"
                    }
                  ],
                  "home_directory_type": "LOGICAL",
                  "role": "${aws_iam_role.foo.arn}",
                  "server_id": "${aws_transfer_server.foo.id}",
                  "user_name": "tftestuser"
                }
              references:
                role: aws_iam_role.foo.arn
                server_id: aws_transfer_server.foo.id
              dependencies:
                aws_iam_role.foo: |-
                    {
                      "assume_role_policy": "{\n\t\"Version\": \"2012-10-17\",\n\t\"Statement\": [\n\t\t{\n\t\t\"Effect\": \"Allow\",\n\t\t\"Principal\": {\n\t\t\t\"Service\": \"transfer.amazonaws.com\"\n\t\t},\n\t\t\"Action\": \"sts:AssumeRole\"\n\t\t}\n\t]\n}\n",
                      "name": "tf-test-transfer-user-iam-role"
                    }
                aws_iam_role_policy.foo: |-
                    {
                      "name": "tf-test-transfer-user-iam-policy",
                      "policy": "{\n\t\"Version\": \"2012-10-17\",\n\t\"Statement\": [\n\t\t{\n\t\t\t\"Sid\": \"AllowFullAccesstoS3\",\n\t\t\t\"Effect\": \"Allow\",\n\t\t\t\"Action\": [\n\t\t\t\t\"s3:*\"\n\t\t\t],\n\t\t\t\"Resource\": \"*\"\n\t\t}\n\t]\n}\n",
                      "role": "${aws_iam_role.foo.id}"
                    }
                aws_transfer_server.foo: |-
                    {
                      "identity_provider_type": "SERVICE_MANAGED",
                      "tags": {
                        "NAME": "tf-acc-test-transfer-server"
                      }
                    }
        argumentDocs:
            arn: '- Amazon Resource Name (ARN) of Transfer User'
            entry: '- (Required) Represents an entry and a target.'
            gid: '- (Required) The POSIX group ID used for all EFS operations by this user.'
            home_directory: '- (Optional) The landing directory (folder) for a user when they log in to the server using their SFTP client.  It should begin with a /.  The first item in the path is the name of the home bucket (accessible as ${Transfer:HomeBucket} in the policy) and the rest is the home directory (accessible as ${Transfer:HomeDirectory} in the policy). For example, /example-bucket-1234/username would set the home bucket to example-bucket-1234 and the home directory to username.'
            home_directory_mappings: '- (Optional) Logical directory mappings that specify what S3 paths and keys should be visible to your user and how you want to make them visible. See Home Directory Mappings below.'
            home_directory_type: '- (Optional) The type of landing directory (folder) you mapped for your users'' home directory. Valid values are PATH and LOGICAL.'
            policy: '- (Optional) An IAM JSON policy document that scopes down user access to portions of their Amazon S3 bucket. IAM variables you can use inside this policy include ${Transfer:UserName}, ${Transfer:HomeDirectory}, and ${Transfer:HomeBucket}. Since the IAM variable syntax matches Terraform''s interpolation syntax, they must be escaped inside Terraform configuration strings ($${Transfer:UserName}).  These are evaluated on-the-fly when navigating the bucket.'
            posix_profile: '- (Optional) Specifies the full POSIX identity, including user ID (Uid), group ID (Gid), and any secondary groups IDs (SecondaryGids), that controls your users'' access to your Amazon EFS file systems. See Posix Profile below.'
            role: '- (Required) Amazon Resource Name (ARN) of an IAM role that allows the service to controls your user’s access to your Amazon S3 bucket.'
            secondary_gids: '- (Optional) The secondary POSIX group IDs used for all EFS operations by this user.'
            server_id: '- (Required) The Server ID of the Transfer Server (e.g., s-12345678)'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            target: '- (Required) Represents the map target.'
            uid: '- (Required) The POSIX user ID used for all EFS operations by this user.'
            user_name: '- (Required) The name used for log in to your SFTP server.'
        importStatements: []
    aws_transfer_workflow:
        subCategory: Transfer Family
        description: Provides a AWS Transfer Workflow resource.
        name: aws_transfer_workflow
        title: aws_transfer_workflow
        examples:
            - name: example
              manifest: |-
                {
                  "steps": [
                    {
                      "delete_step_details": [
                        {
                          "name": "example",
                          "source_file_location": "${original.file}"
                        }
                      ],
                      "type": "DELETE"
                    }
                  ]
                }
        argumentDocs:
            arn: '- The Workflow ARN.'
            bucket: '- (Optional) Specifies the S3 bucket for the customer input file.'
            copy_step_details: '- (Optional) Details for a step that performs a file copy. See Copy Step Details below.'
            custom_step_details: '- (Optional) Details for a step that invokes a lambda function.'
            delete_step_details: '- (Optional) Details for a step that deletes the file.'
            description: '- (Optional) A textual description for the workflow.'
            destination_file_location: '- (Optional) Specifies the location for the file being copied. Use ${Transfer:username} in this field to parametrize the destination prefix by username.'
            efs_file_location: '- (Optional) Specifies the details for the EFS file being copied.'
            file_system_id: '- (Optional) The ID of the file system, assigned by Amazon EFS.'
            id: '- The Workflow id.'
            key: '- (Optional) The name assigned to the file when it was created in S3. You use the object key to retrieve the object.'
            name: '- (Optional) The name of the step, used as an identifier.'
            on_exception_steps: '- (Optional) Specifies the steps (actions) to take if errors are encountered during execution of the workflow. See Workflow Steps below.'
            overwrite_existing: '- (Optional) A flag that indicates whether or not to overwrite an existing file of the same name. The default is FALSE. Valid values are TRUE and FALSE.'
            path: '- (Optional) The pathname for the folder being used by a workflow.'
            s3_file_location: '- (Optional) Specifies the details for the S3 file being copied.'
            source_file_location: '- (Optional) Specifies which file to use as input to the workflow step: either the output from the previous step, or the originally uploaded file for the workflow. Enter ${previous.file} to use the previous file as the input. In this case, this workflow step uses the output file from the previous workflow step as input. This is the default value. Enter ${original.file} to use the originally-uploaded file location as input for this step.'
            steps: '- (Required) Specifies the details for the steps that are in the specified workflow. See Workflow Steps below.'
            tag_step_details: '- (Optional) Details for a step that creates one or more tags.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            target: '- (Optional) The ARN for the lambda function that is being called.'
            timeout_seconds: '- (Optional) Timeout, in seconds, for the step.'
            type: '- (Required) One of the following step types are supported. COPY, CUSTOM, DELETE, and TAG.'
            value: '- (Required) The value that corresponds to the key.'
        importStatements: []
    aws_volume_attachment:
        subCategory: EBS (EC2)
        description: Provides an AWS EBS Volume Attachment
        name: aws_volume_attachment
        title: aws_volume_attachment
        examples:
            - name: ebs_att
              manifest: |-
                {
                  "device_name": "/dev/sdh",
                  "instance_id": "${aws_instance.web.id}",
                  "volume_id": "${aws_ebs_volume.example.id}"
                }
              references:
                instance_id: aws_instance.web.id
                volume_id: aws_ebs_volume.example.id
              dependencies:
                aws_ebs_volume.example: |-
                    {
                      "availability_zone": "us-west-2a",
                      "size": 1
                    }
                aws_instance.web: |-
                    {
                      "ami": "ami-21f78e11",
                      "availability_zone": "us-west-2a",
                      "instance_type": "t2.micro",
                      "tags": {
                        "Name": "HelloWorld"
                      }
                    }
        argumentDocs:
            device_name: |-
                - (Required) The device name to expose to the instance (for
                example, /dev/sdh or xvdh).  See Device Naming on Linux Instances and Device Naming on Windows Instances for more information.
            force_detach: |-
                - (Optional, Boolean) Set to true if you want to force the
                volume to detach. Useful if previous attempts failed, but use this option only
                as a last resort, as this can result in data loss. See
                Detaching an Amazon EBS Volume from an Instance for more information.
            instance_id: '- (Required) ID of the Instance to attach to'
            skip_destroy: |-
                - (Optional, Boolean) Set this to true if you do not wish
                to detach the volume from the instance to which it is attached at destroy
                time, and instead just remove the attachment from Terraform state. This is
                useful when destroying an instance which has volumes created by some other
                means attached.
            stop_instance_before_detaching: |-
                - (Optional, Boolean) Set this to true to ensure that the target instance is stopped
                before trying to detach the volume. Stops the instance, if it is not already stopped.
            volume_id: '- (Required) ID of the Volume to be attached'
        importStatements: []
    aws_vpc:
        subCategory: VPC (Virtual Private Cloud)
        description: Provides a VPC resource.
        name: aws_vpc
        title: aws_vpc
        examples:
            - name: main
              manifest: |-
                {
                  "cidr_block": "10.0.0.0/16"
                }
            - name: main
              manifest: |-
                {
                  "cidr_block": "10.0.0.0/16",
                  "instance_tenancy": "default",
                  "tags": {
                    "Name": "main"
                  }
                }
            - name: test
              manifest: |-
                {
                  "depends_on": [
                    "${aws_vpc_ipam_pool_cidr.test}"
                  ],
                  "ipv4_ipam_pool_id": "${aws_vpc_ipam_pool.test.id}",
                  "ipv4_netmask_length": 28
                }
              references:
                ipv4_ipam_pool_id: aws_vpc_ipam_pool.test.id
              dependencies:
                aws_vpc_ipam.test: |-
                    {
                      "operating_regions": [
                        {
                          "region_name": "${data.aws_region.current.name}"
                        }
                      ]
                    }
                aws_vpc_ipam_pool.test: |-
                    {
                      "address_family": "ipv4",
                      "ipam_scope_id": "${aws_vpc_ipam.test.private_default_scope_id}",
                      "locale": "${data.aws_region.current.name}"
                    }
                aws_vpc_ipam_pool_cidr.test: |-
                    {
                      "cidr": "172.2.0.0/16",
                      "ipam_pool_id": "${aws_vpc_ipam_pool.test.id}"
                    }
        argumentDocs:
            arn: '- Amazon Resource Name (ARN) of VPC'
            assign_generated_ipv6_cidr_block: '- (Optional) Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC. You cannot specify the range of IP addresses, or the size of the CIDR block. Default is false. Conflicts with ipv6_ipam_pool_id'
            cidr_block: '- (Optional) The IPv4 CIDR block for the VPC. CIDR can be explicitly set or it can be derived from IPAM using ipv4_netmask_length.'
            default_network_acl_id: '- The ID of the network ACL created by default on VPC creation'
            default_route_table_id: '- The ID of the route table created by default on VPC creation'
            default_security_group_id: '- The ID of the security group created by default on VPC creation'
            enable_classiclink: |-
                - (Optional) A boolean flag to enable/disable ClassicLink
                for the VPC. Only valid in regions and accounts that support EC2 Classic.
                See the ClassicLink documentation for more information. Defaults false.
            enable_classiclink_dns_support: |-
                - (Optional) A boolean flag to enable/disable ClassicLink DNS Support for the VPC.
                Only valid in regions and accounts that support EC2 Classic.
            enable_dns_hostnames: '- (Optional) A boolean flag to enable/disable DNS hostnames in the VPC. Defaults false.'
            enable_dns_support: '- (Optional) A boolean flag to enable/disable DNS support in the VPC. Defaults true.'
            id: '- The ID of the VPC'
            instance_tenancy: '- (Optional) A tenancy option for instances launched into the VPC. Default is default, which ensures that EC2 instances launched in this VPC use the EC2 instance tenancy attribute specified when the EC2 instance is launched. The only other option is dedicated, which ensures that EC2 instances launched in this VPC are run on dedicated tenancy instances regardless of the tenancy attribute specified at launch. This has a dedicated per region fee of $2 per hour, plus an hourly per instance usage fee.'
            ipv4_ipam_pool_id: '- (Optional) The ID of an IPv4 IPAM pool you want to use for allocating this VPC''s CIDR. IPAM is a VPC feature that you can use to automate your IP address management workflows including assigning, tracking, troubleshooting, and auditing IP addresses across AWS Regions and accounts. Using IPAM you can monitor IP address usage throughout your AWS Organization.'
            ipv4_netmask_length: '- (Optional) The netmask length of the IPv4 CIDR you want to allocate to this VPC. Requires specifying a ipv4_ipam_pool_id.'
            ipv6_association_id: '- The association ID for the IPv6 CIDR block.'
            ipv6_cidr_block: '- (Optional) IPv6 CIDR block to request from an IPAM Pool. Can be set explicitly or derived from IPAM using ipv6_netmask_length.'
            ipv6_cidr_block_network_border_group: '- (Optional) By default when an IPv6 CIDR is assigned to a VPC a default ipv6_cidr_block_network_border_group will be set to the region of the VPC. This can be changed to restrict advertisement of public addresses to specific Network Border Groups such as LocalZones.'
            ipv6_ipam_pool_id: '- (Optional) IPAM Pool ID for a IPv6 pool. Conflicts with assign_generated_ipv6_cidr_block.'
            ipv6_netmask_length: '- (Optional) Netmask length to request from IPAM Pool. Conflicts with ipv6_cidr_block. This can be omitted if IPAM pool as a allocation_default_netmask_length set. Valid values: 56.'
            main_route_table_id: |-
                - The ID of the main route table associated with
                this VPC. Note that you can change a VPC's main route table by using an
                aws_main_route_table_association.
            owner_id: '- The ID of the AWS account that owns the VPC.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_vpc_dhcp_options:
        subCategory: VPC (Virtual Private Cloud)
        description: Provides a VPC DHCP Options resource.
        name: aws_vpc_dhcp_options
        title: aws_vpc_dhcp_options
        examples:
            - name: dns_resolver
              manifest: |-
                {
                  "domain_name_servers": [
                    "8.8.8.8",
                    "8.8.4.4"
                  ]
                }
            - name: foo
              manifest: |-
                {
                  "domain_name": "service.consul",
                  "domain_name_servers": [
                    "127.0.0.1",
                    "10.0.0.2"
                  ],
                  "netbios_name_servers": [
                    "127.0.0.1"
                  ],
                  "netbios_node_type": 2,
                  "ntp_servers": [
                    "127.0.0.1"
                  ],
                  "tags": {
                    "Name": "foo-name"
                  }
                }
        argumentDocs:
            arn: '- The ARN of the DHCP Options Set.'
            default: DHCP Option Set.
            domain_name: '- (Optional) the suffix domain name to use by default when resolving non Fully Qualified Domain Names. In other words, this is what ends up being the search value in the /etc/resolv.conf file.'
            domain_name_servers: '- (Optional) List of name servers to configure in /etc/resolv.conf. If you want to use the default AWS nameservers you should set this to AmazonProvidedDNS.'
            id: '- The ID of the DHCP Options Set.'
            netbios_name_servers: '- (Optional) List of NETBIOS name servers.'
            netbios_node_type: '- (Optional) The NetBIOS node type (1, 2, 4, or 8). AWS recommends to specify 2 since broadcast and multicast are not supported in their network. For more information about these node types, see RFC 2132.'
            ntp_servers: '- (Optional) List of NTP servers to configure.'
            owner_id: '- The ID of the AWS account that owns the DHCP options set.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_vpc_dhcp_options_association:
        subCategory: VPC (Virtual Private Cloud)
        description: Provides a VPC DHCP Options Association resource.
        name: aws_vpc_dhcp_options_association
        title: aws_vpc_dhcp_options_association
        examples:
            - name: dns_resolver
              manifest: |-
                {
                  "dhcp_options_id": "${aws_vpc_dhcp_options.foo.id}",
                  "vpc_id": "${aws_vpc.foo.id}"
                }
              references:
                dhcp_options_id: aws_vpc_dhcp_options.foo.id
                vpc_id: aws_vpc.foo.id
        argumentDocs:
            default: DHCP Options Set to the VPC.
            dhcp_options_id: '- (Required) The ID of the DHCP Options Set to associate to the VPC.'
            id: '- The ID of the DHCP Options Set Association.'
            vpc_id: '- (Required) The ID of the VPC to which we would like to associate a DHCP Options Set.'
        importStatements: []
    aws_vpc_endpoint:
        subCategory: VPC (Virtual Private Cloud)
        description: Provides a VPC Endpoint resource.
        name: aws_vpc_endpoint
        title: aws_vpc_endpoint
        examples:
            - name: s3
              manifest: |-
                {
                  "service_name": "com.amazonaws.us-west-2.s3",
                  "vpc_id": "${aws_vpc.main.id}"
                }
              references:
                vpc_id: aws_vpc.main.id
            - name: s3
              manifest: |-
                {
                  "service_name": "com.amazonaws.us-west-2.s3",
                  "tags": {
                    "Environment": "test"
                  },
                  "vpc_id": "${aws_vpc.main.id}"
                }
              references:
                vpc_id: aws_vpc.main.id
            - name: ec2
              manifest: |-
                {
                  "private_dns_enabled": true,
                  "security_group_ids": [
                    "${aws_security_group.sg1.id}"
                  ],
                  "service_name": "com.amazonaws.us-west-2.ec2",
                  "vpc_endpoint_type": "Interface",
                  "vpc_id": "${aws_vpc.main.id}"
                }
              references:
                vpc_id: aws_vpc.main.id
            - name: example
              manifest: |-
                {
                  "service_name": "${aws_vpc_endpoint_service.example.service_name}",
                  "subnet_ids": [
                    "${aws_subnet.example.id}"
                  ],
                  "vpc_endpoint_type": "${aws_vpc_endpoint_service.example.service_type}",
                  "vpc_id": "${aws_vpc.example.id}"
                }
              references:
                service_name: aws_vpc_endpoint_service.example.service_name
                vpc_endpoint_type: aws_vpc_endpoint_service.example.service_type
                vpc_id: aws_vpc.example.id
              dependencies:
                aws_vpc_endpoint_service.example: |-
                    {
                      "acceptance_required": false,
                      "allowed_principals": [
                        "${data.aws_caller_identity.current.arn}"
                      ],
                      "gateway_load_balancer_arns": [
                        "${aws_lb.example.arn}"
                      ]
                    }
            - name: ptfe_service
              manifest: |-
                {
                  "private_dns_enabled": false,
                  "security_group_ids": [
                    "${aws_security_group.ptfe_service.id}"
                  ],
                  "service_name": "${var.ptfe_service}",
                  "subnet_ids": [
                    "${local.subnet_ids}"
                  ],
                  "vpc_endpoint_type": "Interface",
                  "vpc_id": "${var.vpc_id}"
                }
              references:
                service_name: var.ptfe_service
                vpc_id: var.vpc_id
              dependencies:
                aws_route53_record.ptfe_service: |-
                    {
                      "name": "ptfe.${data.aws_route53_zone.internal.name}",
                      "records": [
                        "${aws_vpc_endpoint.ptfe_service.dns_entry[0][\"dns_name\"]}"
                      ],
                      "ttl": "300",
                      "type": "CNAME",
                      "zone_id": "${data.aws_route53_zone.internal.zone_id}"
                    }
        argumentDocs:
            arn: '- The Amazon Resource Name (ARN) of the VPC endpoint.'
            auto_accept: '- (Optional) Accept the VPC endpoint (the VPC endpoint and service need to be in the same AWS account).'
            cidr_blocks: '- The list of CIDR blocks for the exposed AWS service. Applicable for endpoints of type Gateway.'
            create: '- (Default 10 minutes) Used for creating a VPC endpoint'
            delete: '- (Default 10 minutes) Used for destroying VPC endpoints'
            dns_entry: '- The DNS entries for the VPC Endpoint. Applicable for endpoints of type Interface. DNS blocks are documented below.'
            dns_entry.dns_name: '- The DNS name.'
            dns_entry.hosted_zone_id: '- The ID of the private hosted zone.'
            dns_options: '- (Optional) The DNS options for the endpoint. See dns_options below.'
            dns_options.dns_record_ip_type: '- (Optional) The DNS records created for the endpoint. Valid values are ipv4, dualstack, service-defined, and ipv6.'
            id: '- The ID of the VPC endpoint.'
            ip_address_type: '- (Optional) The IP address type for the endpoint. Valid values are ipv4, dualstack, and ipv6.'
            network_interface_ids: '- One or more network interfaces for the VPC Endpoint. Applicable for endpoints of type Interface.'
            owner_id: '- The ID of the AWS account that owns the VPC endpoint.'
            policy: '- (Optional) A policy to attach to the endpoint that controls access to the service. This is a JSON formatted string. Defaults to full access. All Gateway and some Interface endpoints support policies - see the relevant AWS documentation for more details. For more information about building AWS IAM policy documents with Terraform, see the AWS IAM Policy Document Guide.'
            prefix_list_id: '- The prefix list ID of the exposed AWS service. Applicable for endpoints of type Gateway.'
            private_dns_enabled: |-
                - (Optional; AWS services and AWS Marketplace partner services only) Whether or not to associate a private hosted zone with the specified VPC. Applicable for endpoints of type Interface.
                Defaults to false.
            requester_managed: '-  Whether or not the VPC Endpoint is being managed by its service - true or false.'
            route_table_ids: '- (Optional) One or more route table IDs. Applicable for endpoints of type Gateway.'
            security_group_ids: |-
                - (Optional) The ID of one or more security groups to associate with the network interface. Applicable for endpoints of type Interface.
                If no security groups are specified, the VPC's default security group is associated with the endpoint.
            service_name: '- (Required) The service name. For AWS services the service name is usually in the form com.amazonaws.<region>.<service> (the SageMaker Notebook service is an exception to this rule, the service name is in the form aws.sagemaker.<region>.notebook).'
            state: '- The state of the VPC endpoint.'
            subnet_ids: '- (Optional) The ID of one or more subnets in which to create a network interface for the endpoint. Applicable for endpoints of type GatewayLoadBalancer and Interface.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            update: '- (Default 10 minutes) Used for VPC endpoint modifications'
            vpc_endpoint_type: '- (Optional) The VPC endpoint type, Gateway, GatewayLoadBalancer, or Interface. Defaults to Gateway.'
            vpc_id: '- (Required) The ID of the VPC in which the endpoint will be used.'
        importStatements: []
    aws_vpc_endpoint_connection_accepter:
        subCategory: VPC (Virtual Private Cloud)
        description: Provides a resource to accept a pending VPC Endpoint accept request to VPC Endpoint Service.
        name: aws_vpc_endpoint_connection_accepter
        title: aws_vpc_endpoint_connection_accepter
        examples:
            - name: example
              manifest: |-
                {
                  "vpc_endpoint_id": "${aws_vpc_endpoint.example.id}",
                  "vpc_endpoint_service_id": "${aws_vpc_endpoint_service.example.id}"
                }
              references:
                vpc_endpoint_id: aws_vpc_endpoint.example.id
                vpc_endpoint_service_id: aws_vpc_endpoint_service.example.id
              dependencies:
                aws_vpc_endpoint.example: |-
                    {
                      "private_dns_enabled": false,
                      "provider": "aws.alternate",
                      "security_group_ids": [
                        "${aws_security_group.test.id}"
                      ],
                      "service_name": "${aws_vpc_endpoint_service.test.service_name}",
                      "vpc_endpoint_type": "Interface",
                      "vpc_id": "${aws_vpc.test_alternate.id}"
                    }
                aws_vpc_endpoint_service.example: |-
                    {
                      "acceptance_required": false,
                      "network_load_balancer_arns": [
                        "${aws_lb.example.arn}"
                      ]
                    }
        argumentDocs:
            id: '- The ID of the VPC Endpoint Connection.'
            vpc_endpoint_id: '- (Required) AWS VPC Endpoint ID.'
            vpc_endpoint_service_id: '- (Required) AWS VPC Endpoint Service ID.'
            vpc_endpoint_state: '- State of the VPC Endpoint.'
        importStatements: []
    aws_vpc_endpoint_connection_notification:
        subCategory: VPC (Virtual Private Cloud)
        description: Provides a VPC Endpoint connection notification resource.
        name: aws_vpc_endpoint_connection_notification
        title: aws_vpc_endpoint_connection_notification
        examples:
            - name: foo
              manifest: |-
                {
                  "connection_events": [
                    "Accept",
                    "Reject"
                  ],
                  "connection_notification_arn": "${aws_sns_topic.topic.arn}",
                  "vpc_endpoint_service_id": "${aws_vpc_endpoint_service.foo.id}"
                }
              references:
                connection_notification_arn: aws_sns_topic.topic.arn
                vpc_endpoint_service_id: aws_vpc_endpoint_service.foo.id
              dependencies:
                aws_sns_topic.topic: |-
                    {
                      "name": "vpce-notification-topic",
                      "policy": "{\n    \"Version\":\"2012-10-17\",\n    \"Statement\":[{\n        \"Effect\": \"Allow\",\n        \"Principal\": {\n            \"Service\": \"vpce.amazonaws.com\"\n        },\n        \"Action\": \"SNS:Publish\",\n        \"Resource\": \"arn:aws:sns:*:*:vpce-notification-topic\"\n    }]\n}\n"
                    }
                aws_vpc_endpoint_service.foo: |-
                    {
                      "acceptance_required": false,
                      "network_load_balancer_arns": [
                        "${aws_lb.test.arn}"
                      ]
                    }
        argumentDocs:
            connection_events: '- (Required) One or more endpoint events for which to receive notifications.'
            connection_notification_arn: '- (Required) The ARN of the SNS topic for the notifications.'
            id: '- The ID of the VPC connection notification.'
            notification_type: '- The type of notification.'
            state: '- The state of the notification.'
            vpc_endpoint_id: '- (Optional) The ID of the VPC Endpoint to receive notifications for.'
            vpc_endpoint_service_id: '- (Optional) The ID of the VPC Endpoint Service to receive notifications for.'
        importStatements: []
    aws_vpc_endpoint_policy:
        subCategory: VPC (Virtual Private Cloud)
        description: Provides a VPC Endpoint Policy resource.
        name: aws_vpc_endpoint_policy
        title: aws_vpc_endpoint_policy
        examples:
            - name: example
              manifest: |-
                {
                  "policy": "${jsonencode({\n    \"Version\" : \"2012-10-17\",\n    \"Statement\" : [\n      {\n        \"Sid\" : \"AllowAll\",\n        \"Effect\" : \"Allow\",\n        \"Principal\" : {\n          \"AWS\" : \"*\"\n        },\n        \"Action\" : [\n          \"dynamodb:*\"\n        ],\n        \"Resource\" : \"*\"\n      }\n    ]\n  })}",
                  "vpc_endpoint_id": "${aws_vpc_endpoint.example.id}"
                }
              references:
                vpc_endpoint_id: aws_vpc_endpoint.example.id
              dependencies:
                aws_vpc.example: |-
                    {
                      "cidr_block": "10.0.0.0/16"
                    }
                aws_vpc_endpoint.example: |-
                    {
                      "service_name": "${data.aws_vpc_endpoint_service.example.service_name}",
                      "vpc_id": "${aws_vpc.example.id}"
                    }
        argumentDocs:
            id: '- The ID of the VPC endpoint.'
            policy: '- (Optional) A policy to attach to the endpoint that controls access to the service. Defaults to full access. All Gateway and some Interface endpoints support policies - see the relevant AWS documentation for more details. For more information about building AWS IAM policy documents with Terraform, see the AWS IAM Policy Document Guide.'
            vpc_endpoint_id: '- (Required) The VPC Endpoint ID.'
        importStatements: []
    aws_vpc_endpoint_route_table_association:
        subCategory: VPC (Virtual Private Cloud)
        description: Manages a VPC Endpoint Route Table Association
        name: aws_vpc_endpoint_route_table_association
        title: aws_vpc_endpoint_route_table_association
        examples:
            - name: example
              manifest: |-
                {
                  "route_table_id": "${aws_route_table.example.id}",
                  "vpc_endpoint_id": "${aws_vpc_endpoint.example.id}"
                }
              references:
                route_table_id: aws_route_table.example.id
                vpc_endpoint_id: aws_vpc_endpoint.example.id
        argumentDocs:
            id: '- A hash of the EC2 Route Table and VPC Endpoint identifiers.'
            route_table_id: '- (Required) Identifier of the EC2 Route Table to be associated with the VPC Endpoint.'
            vpc_endpoint_id: '- (Required) Identifier of the VPC Endpoint with which the EC2 Route Table will be associated.'
        importStatements: []
    aws_vpc_endpoint_security_group_association:
        subCategory: VPC (Virtual Private Cloud)
        description: Provides a resource to create an association between a VPC endpoint and a security group.
        name: aws_vpc_endpoint_security_group_association
        title: aws_vpc_endpoint_security_group_association
        examples:
            - name: sg_ec2
              manifest: |-
                {
                  "security_group_id": "${aws_security_group.sg.id}",
                  "vpc_endpoint_id": "${aws_vpc_endpoint.ec2.id}"
                }
              references:
                security_group_id: aws_security_group.sg.id
                vpc_endpoint_id: aws_vpc_endpoint.ec2.id
        argumentDocs:
            id: '- The ID of the association.'
            replace_default_association: '- (Optional) Whether this association should replace the association with the VPC''s default security group that is created when no security groups are specified during VPC endpoint creation. At most 1 association per-VPC endpoint should be configured with replace_default_association = true.'
            security_group_id: '- (Required) The ID of the security group to be associated with the VPC endpoint.'
            vpc_endpoint_id: '- (Required) The ID of the VPC endpoint with which the security group will be associated.'
        importStatements: []
    aws_vpc_endpoint_service:
        subCategory: VPC (Virtual Private Cloud)
        description: Provides a VPC Endpoint Service resource.
        name: aws_vpc_endpoint_service
        title: aws_vpc_endpoint_service
        examples:
            - name: example
              manifest: |-
                {
                  "acceptance_required": false,
                  "network_load_balancer_arns": [
                    "${aws_lb.example.arn}"
                  ]
                }
            - name: example
              manifest: |-
                {
                  "acceptance_required": false,
                  "gateway_load_balancer_arns": [
                    "${aws_lb.example.arn}"
                  ]
                }
        argumentDocs:
            acceptance_required: '- (Required) Whether or not VPC endpoint connection requests to the service must be accepted by the service owner - true or false.'
            allowed_principals: '- (Optional) The ARNs of one or more principals allowed to discover the endpoint service.'
            arn: '- The Amazon Resource Name (ARN) of the VPC endpoint service.'
            availability_zones: '- A set of Availability Zones in which the service is available.'
            base_endpoint_dns_names: '- A set of DNS names for the service.'
            gateway_load_balancer_arns: '- (Optional) Amazon Resource Names (ARNs) of one or more Gateway Load Balancers for the endpoint service.'
            id: '- The ID of the VPC endpoint service.'
            manages_vpc_endpoints: '- Whether or not the service manages its VPC endpoints - true or false.'
            name: '- Name of the record subdomain the service provider needs to create.'
            network_load_balancer_arns: '- (Optional) Amazon Resource Names (ARNs) of one or more Network Load Balancers for the endpoint service.'
            private_dns_name: '- (Optional) The private DNS name for the service.'
            private_dns_name_configuration: '- List of objects containing information about the endpoint service private DNS name configuration.'
            service_name: '- The service name.'
            service_type: '- The service type, Gateway or Interface.'
            state: '- The state of the VPC endpoint service.'
            supported_ip_address_types: '- (Optional) The supported IP address types. The possible values are ipv4 and ipv6.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            type: '- Endpoint service verification type, for example TXT.'
            value: '- Value the service provider adds to the private DNS name domain record before verification.'
        importStatements: []
    aws_vpc_endpoint_service_allowed_principal:
        subCategory: VPC (Virtual Private Cloud)
        description: Provides a resource to allow a principal to discover a VPC endpoint service.
        name: aws_vpc_endpoint_service_allowed_principal
        title: aws_vpc_endpoint_service_allowed_principal
        examples:
            - name: allow_me_to_foo
              manifest: |-
                {
                  "principal_arn": "${data.aws_caller_identity.current.arn}",
                  "vpc_endpoint_service_id": "${aws_vpc_endpoint_service.foo.id}"
                }
              references:
                principal_arn: data.aws_caller_identity.current.arn
                vpc_endpoint_service_id: aws_vpc_endpoint_service.foo.id
        argumentDocs:
            id: '- The ID of the association.'
            principal_arn: '- (Required) The ARN of the principal to allow permissions.'
            vpc_endpoint_service_id: '- (Required) The ID of the VPC endpoint service to allow permission.'
        importStatements: []
    aws_vpc_endpoint_subnet_association:
        subCategory: VPC (Virtual Private Cloud)
        description: Provides a resource to create an association between a VPC endpoint and a subnet.
        name: aws_vpc_endpoint_subnet_association
        title: aws_vpc_endpoint_subnet_association
        examples:
            - name: sn_ec2
              manifest: |-
                {
                  "subnet_id": "${aws_subnet.sn.id}",
                  "vpc_endpoint_id": "${aws_vpc_endpoint.ec2.id}"
                }
              references:
                subnet_id: aws_subnet.sn.id
                vpc_endpoint_id: aws_vpc_endpoint.ec2.id
        argumentDocs:
            create: '- (Default 10 minutes) Used for creating the association'
            delete: '- (Default 10 minutes) Used for destroying the association'
            id: '- The ID of the association.'
            subnet_id: '- (Required) The ID of the subnet to be associated with the VPC endpoint.'
            vpc_endpoint_id: '- (Required) The ID of the VPC endpoint with which the subnet will be associated.'
        importStatements: []
    aws_vpc_ipam:
        subCategory: VPC IPAM (IP Address Manager)
        description: Provides an IPAM resource.
        name: aws_vpc_ipam
        title: aws_vpc_ipam
        examples:
            - name: main
              manifest: |-
                {
                  "description": "My IPAM",
                  "operating_regions": [
                    {
                      "region_name": "${data.aws_region.current.name}"
                    }
                  ],
                  "tags": {
                    "Test": "Main"
                  }
                }
              references:
                operating_regions.region_name: data.aws_region.current.name
            - name: example
              manifest: |-
                {
                  "description": "test4",
                  "dynamic": {
                    "operating_regions": [
                      {
                        "content": [
                          {
                            "region_name": "${operating_regions.value}"
                          }
                        ],
                        "for_each": "${var.ipam_regions}"
                      }
                    ]
                  }
                }
              references:
                dynamic.content.region_name: operating_regions.value
                dynamic.for_each: var.ipam_regions
        argumentDocs:
            arn: '- Amazon Resource Name (ARN) of IPAM'
            cascade: '- (Optional) Enables you to quickly delete an IPAM, private scopes, pools in private scopes, and any allocations in the pools in private scopes.'
            description: '- (Optional) A description for the IPAM.'
            id: '- The ID of the IPAM'
            operating_regions: '- (Required) Determines which locales can be chosen when you create pools. Locale is the Region where you want to make an IPAM pool available for allocations. You can only create pools with locales that match the operating Regions of the IPAM. You can only create VPCs from a pool whose locale matches the VPC''s Region. You specify a region using the region_name parameter. You must set your provider block region as an operating_region.'
            operating_regions.region_name: '- (Required) The name of the Region you want to add to the IPAM.'
            private_default_scope_id: '- The ID of the IPAM''s private scope. A scope is a top-level container in IPAM. Each scope represents an IP-independent network. Scopes enable you to represent networks where you have overlapping IP space. When you create an IPAM, IPAM automatically creates two scopes: public and private. The private scope is intended for private IP space. The public scope is intended for all internet-routable IP space.'
            public_default_scope_id: |-
                - The ID of the IPAM's public scope. A scope is a top-level container in IPAM. Each scope represents an IP-independent network. Scopes enable you to represent networks where you have overlapping IP space. When you create an IPAM, IPAM automatically creates two scopes: public and private. The private scope is intended for private
                IP space. The public scope is intended for all internet-routable IP space.
            scope_count: '- The number of scopes in the IPAM.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_vpc_ipam_organization_admin_account:
        subCategory: VPC IPAM (IP Address Manager)
        description: Enables the IPAM Service and promotes an account to delegated administrator for the service.
        name: aws_vpc_ipam_organization_admin_account
        title: aws_vpc_ipam_organization_admin_account
        examples:
            - name: example
              manifest: |-
                {
                  "delegated_admin_account_id": "${data.aws_caller_identity.delegated.account_id}"
                }
              references:
                delegated_admin_account_id: data.aws_caller_identity.delegated.account_id
        argumentDocs:
            arn: '- The Organizations ARN for the delegate account.'
            delegated_admin_account_id: '- (Required)'
            email: '- The Organizations email for the delegate account.'
            id: '- The Organizations member account ID that you want to enable as the IPAM account.'
            name: '- The Organizations name for the delegate account.'
            service_principal: '- The AWS service principal.'
        importStatements: []
    aws_vpc_ipam_pool:
        subCategory: VPC IPAM (IP Address Manager)
        description: Provides a IP address pool resource for IPAM.
        name: aws_vpc_ipam_pool
        title: aws_vpc_ipam_pool
        examples:
            - name: example
              manifest: |-
                {
                  "address_family": "ipv4",
                  "ipam_scope_id": "${aws_vpc_ipam.example.private_default_scope_id}",
                  "locale": "${data.aws_region.current.name}"
                }
              references:
                ipam_scope_id: aws_vpc_ipam.example.private_default_scope_id
                locale: data.aws_region.current.name
              dependencies:
                aws_vpc_ipam.example: |-
                    {
                      "operating_regions": [
                        {
                          "region_name": "${data.aws_region.current.name}"
                        }
                      ]
                    }
            - name: parent
              manifest: |-
                {
                  "address_family": "ipv4",
                  "ipam_scope_id": "${aws_vpc_ipam.example.private_default_scope_id}"
                }
              references:
                ipam_scope_id: aws_vpc_ipam.example.private_default_scope_id
              dependencies:
                aws_vpc_ipam.example: |-
                    {
                      "operating_regions": [
                        {
                          "region_name": "${data.aws_region.current.name}"
                        }
                      ]
                    }
                aws_vpc_ipam_pool_cidr.child_test: |-
                    {
                      "cidr": "172.2.0.0/24",
                      "ipam_pool_id": "${aws_vpc_ipam_pool.child.id}"
                    }
                aws_vpc_ipam_pool_cidr.parent_test: |-
                    {
                      "cidr": "172.2.0.0/16",
                      "ipam_pool_id": "${aws_vpc_ipam_pool.parent.id}"
                    }
            - name: child
              manifest: |-
                {
                  "address_family": "ipv4",
                  "ipam_scope_id": "${aws_vpc_ipam.example.private_default_scope_id}",
                  "locale": "${data.aws_region.current.name}",
                  "source_ipam_pool_id": "${aws_vpc_ipam_pool.parent.id}"
                }
              references:
                ipam_scope_id: aws_vpc_ipam.example.private_default_scope_id
                locale: data.aws_region.current.name
                source_ipam_pool_id: aws_vpc_ipam_pool.parent.id
              dependencies:
                aws_vpc_ipam.example: |-
                    {
                      "operating_regions": [
                        {
                          "region_name": "${data.aws_region.current.name}"
                        }
                      ]
                    }
                aws_vpc_ipam_pool_cidr.child_test: |-
                    {
                      "cidr": "172.2.0.0/24",
                      "ipam_pool_id": "${aws_vpc_ipam_pool.child.id}"
                    }
                aws_vpc_ipam_pool_cidr.parent_test: |-
                    {
                      "cidr": "172.2.0.0/16",
                      "ipam_pool_id": "${aws_vpc_ipam_pool.parent.id}"
                    }
        argumentDocs:
            address_family: '- (Optional) The IP protocol assigned to this pool. You must choose either IPv4 or IPv6 protocol for a pool.'
            allocation_default_netmask_length: '- (Optional) A default netmask length for allocations added to this pool. If, for example, the CIDR assigned to this pool is 10.0.0.0/8 and you enter 16 here, new allocations will default to 10.0.0.0/16 (unless you provide a different netmask value when you create the new allocation).'
            allocation_max_netmask_length: '- (Optional) The maximum netmask length that will be required for CIDR allocations in this pool.'
            allocation_min_netmask_length: '- (Optional) The minimum netmask length that will be required for CIDR allocations in this pool.'
            allocation_resource_tags: '- (Optional) Tags that are required for resources that use CIDRs from this IPAM pool. Resources that do not have these tags will not be allowed to allocate space from the pool. If the resources have their tags changed after they have allocated space or if the allocation tagging requirements are changed on the pool, the resource may be marked as noncompliant.'
            arn: '- Amazon Resource Name (ARN) of IPAM'
            auto_import: |-
                - (Optional) If you include this argument, IPAM automatically imports any VPCs you have in your scope that fall
                within the CIDR range in the pool.
            aws_service: '- (Optional) Limits which AWS service the pool can be used in. Only useable on public scopes. Valid Values: ec2.'
            description: '- (Optional) A description for the IPAM pool.'
            id: '- The ID of the IPAM'
            ipam_scope_id: '- (Optional) The ID of the scope in which you would like to create the IPAM pool.'
            locale: '- (Optional) The locale in which you would like to create the IPAM pool. Locale is the Region where you want to make an IPAM pool available for allocations. You can only create pools with locales that match the operating Regions of the IPAM. You can only create VPCs from a pool whose locale matches the VPC''s Region. Possible values: Any AWS region, such as us-east-1.'
            publicly_advertisable: '- (Optional) Defines whether or not IPv6 pool space is publicly advertisable over the internet. This option is not available for IPv4 pool space.'
            source_ipam_pool_id: '- (Optional) The ID of the source IPAM pool. Use this argument to create a child pool within an existing pool.'
            state: '- The ID of the IPAM'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_vpc_ipam_pool_cidr:
        subCategory: VPC IPAM (IP Address Manager)
        description: Provisions a CIDR from an IPAM address pool.
        name: aws_vpc_ipam_pool_cidr
        title: aws_vpc_ipam_pool_cidr
        examples:
            - name: example
              manifest: |-
                {
                  "cidr": "172.2.0.0/16",
                  "ipam_pool_id": "${aws_vpc_ipam_pool.example.id}"
                }
              references:
                ipam_pool_id: aws_vpc_ipam_pool.example.id
              dependencies:
                aws_vpc_ipam.example: |-
                    {
                      "operating_regions": [
                        {
                          "region_name": "${data.aws_region.current.name}"
                        }
                      ]
                    }
                aws_vpc_ipam_pool.example: |-
                    {
                      "address_family": "ipv4",
                      "ipam_scope_id": "${aws_vpc_ipam.example.private_default_scope_id}",
                      "locale": "${data.aws_region.current.name}"
                    }
            - name: ipv6_test_public
              manifest: |-
                {
                  "cidr": "${var.ipv6_cidr}",
                  "cidr_authorization_context": [
                    {
                      "message": "${var.message}",
                      "signature": "${var.signature}"
                    }
                  ],
                  "ipam_pool_id": "${aws_vpc_ipam_pool.ipv6_test_public.id}"
                }
              references:
                cidr: var.ipv6_cidr
                cidr_authorization_context.message: var.message
                cidr_authorization_context.signature: var.signature
                ipam_pool_id: aws_vpc_ipam_pool.ipv6_test_public.id
              dependencies:
                aws_vpc_ipam.example: |-
                    {
                      "operating_regions": [
                        {
                          "region_name": "${data.aws_region.current.name}"
                        }
                      ]
                    }
                aws_vpc_ipam_pool.ipv6_test_public: |-
                    {
                      "address_family": "ipv6",
                      "advertisable": false,
                      "aws_service": "ec2",
                      "description": "public ipv6",
                      "ipam_scope_id": "${aws_vpc_ipam.example.public_default_scope_id}",
                      "locale": "us-east-1"
                    }
        argumentDocs:
            cidr: '- (Optional) The CIDR you want to assign to the pool.'
            cidr_authorization_context: '- (Optional) A signed document that proves that you are authorized to bring the specified IP address range to Amazon using BYOIP. This is not stored in the state file. See cidr_authorization_context for more information.'
            cidr_authorization_context.message: '- (Optional) The plain-text authorization message for the prefix and account.'
            cidr_authorization_context.signature: '- (Optional) The signed authorization message for the prefix and account.'
            id: '- The ID of the IPAM Pool Cidr concatenated with the IPAM Pool ID.'
            ipam_pool_id: '- (Required) The ID of the pool to which you want to assign a CIDR.'
        importStatements: []
    aws_vpc_ipam_pool_cidr_allocation:
        subCategory: VPC IPAM (IP Address Manager)
        description: Allocates (reserves) a CIDR from an IPAM address pool, preventing usage by IPAM.
        name: aws_vpc_ipam_pool_cidr_allocation
        title: aws_vpc_ipam_pool_cidr_allocation
        examples:
            - name: example
              manifest: |-
                {
                  "cidr": "172.2.0.0/24",
                  "depends_on": [
                    "${aws_vpc_ipam_pool_cidr.example}"
                  ],
                  "ipam_pool_id": "${aws_vpc_ipam_pool.example.id}"
                }
              references:
                ipam_pool_id: aws_vpc_ipam_pool.example.id
              dependencies:
                aws_vpc_ipam.example: |-
                    {
                      "operating_regions": [
                        {
                          "region_name": "${data.aws_region.current.name}"
                        }
                      ]
                    }
                aws_vpc_ipam_pool.example: |-
                    {
                      "address_family": "ipv4",
                      "ipam_scope_id": "${aws_vpc_ipam.example.private_default_scope_id}",
                      "locale": "${data.aws_region.current.name}"
                    }
                aws_vpc_ipam_pool_cidr.example: |-
                    {
                      "cidr": "172.2.0.0/16",
                      "ipam_pool_id": "${aws_vpc_ipam_pool.example.id}"
                    }
            - name: example
              manifest: |-
                {
                  "depends_on": [
                    "${aws_vpc_ipam_pool_cidr.example}"
                  ],
                  "disallowed_cidrs": [
                    "172.2.0.0/28"
                  ],
                  "ipam_pool_id": "${aws_vpc_ipam_pool.example.id}",
                  "netmaskLength": 28
                }
              references:
                ipam_pool_id: aws_vpc_ipam_pool.example.id
              dependencies:
                aws_vpc_ipam.example: |-
                    {
                      "operating_regions": [
                        {
                          "region_name": "${data.aws_region.current.name}"
                        }
                      ]
                    }
                aws_vpc_ipam_pool.example: |-
                    {
                      "address_family": "ipv4",
                      "ipam_scope_id": "${aws_vpc_ipam.example.private_default_scope_id}",
                      "locale": "${data.aws_region.current.name}"
                    }
                aws_vpc_ipam_pool_cidr.example: |-
                    {
                      "cidr": "172.2.0.0/16",
                      "ipam_pool_id": "${aws_vpc_ipam_pool.example.id}"
                    }
        argumentDocs:
            cidr: '- (Optional) The CIDR you want to assign to the pool.'
            description: '- (Optional) The description for the allocation.'
            disallowed_cidrs: '- (Optional) Exclude a particular CIDR range from being returned by the pool.'
            id: '- The ID of the allocation.'
            ipam_pool_id: '- (Required) The ID of the pool to which you want to assign a CIDR.'
            netmask_length: '- (Optional) The netmask length of the CIDR you would like to allocate to the IPAM pool. Valid Values: 0-32.'
            resource_id: '- The ID of the resource.'
            resource_owner: '- The owner of the resource.'
            resource_type: '- The type of the resource.'
        importStatements: []
    aws_vpc_ipam_preview_next_cidr:
        subCategory: VPC IPAM (IP Address Manager)
        description: Previews a CIDR from an IPAM address pool.
        name: aws_vpc_ipam_preview_next_cidr
        title: aws_vpc_ipam_preview_next_cidr
        examples:
            - name: example
              manifest: |-
                {
                  "depends_on": [
                    "${aws_vpc_ipam_pool_cidr.example}"
                  ],
                  "disallowed_cidrs": [
                    "172.2.0.0/32"
                  ],
                  "ipam_pool_id": "${aws_vpc_ipam_pool.example.id}",
                  "netmask_length": 28
                }
              references:
                ipam_pool_id: aws_vpc_ipam_pool.example.id
              dependencies:
                aws_vpc_ipam.example: |-
                    {
                      "operating_regions": [
                        {
                          "region_name": "${data.aws_region.current.name}"
                        }
                      ]
                    }
                aws_vpc_ipam_pool.example: |-
                    {
                      "address_family": "ipv4",
                      "ipam_scope_id": "${aws_vpc_ipam.example.private_default_scope_id}",
                      "locale": "${data.aws_region.current.name}"
                    }
                aws_vpc_ipam_pool_cidr.example: |-
                    {
                      "cidr": "172.2.0.0/16",
                      "ipam_pool_id": "${aws_vpc_ipam_pool.example.id}"
                    }
        argumentDocs:
            cidr: '- The previewed CIDR from the pool.'
            disallowed_cidrs: '- (Optional) Exclude a particular CIDR range from being returned by the pool.'
            id: '- The ID of the preview.'
            ipam_pool_id: '- (Required) The ID of the pool to which you want to assign a CIDR.'
            netmask_length: '- (Optional) The netmask length of the CIDR you would like to preview from the IPAM pool.'
        importStatements: []
    aws_vpc_ipam_scope:
        subCategory: VPC IPAM (IP Address Manager)
        description: Creates a scope for AWS IPAM.
        name: aws_vpc_ipam_scope
        title: aws_vpc_ipam_scope
        examples:
            - name: example
              manifest: |-
                {
                  "description": "Another Scope",
                  "ipam_id": "${aws_vpc_ipam.example.id}"
                }
              references:
                ipam_id: aws_vpc_ipam.example.id
              dependencies:
                aws_vpc_ipam.example: |-
                    {
                      "operating_regions": [
                        {
                          "region_name": "${data.aws_region.current.name}"
                        }
                      ]
                    }
        argumentDocs:
            description: '- (Optional) A description for the scope you''re creating.'
            id: '- The ID of the IPAM Scope.'
            ipam_arn: '- The ARN of the IPAM for which you''re creating this scope.'
            ipam_id: '- The ID of the IPAM for which you''re creating this scope.'
            is_default: '- Defines if the scope is the default scope or not.'
            pool_count: '- Count of pools under this scope'
        importStatements: []
    aws_vpc_ipv4_cidr_block_association:
        subCategory: VPC (Virtual Private Cloud)
        description: Associate additional IPv4 CIDR blocks with a VPC
        name: aws_vpc_ipv4_cidr_block_association
        title: aws_vpc_ipv4_cidr_block_association
        examples:
            - name: secondary_cidr
              manifest: |-
                {
                  "cidr_block": "172.2.0.0/16",
                  "vpc_id": "${aws_vpc.main.id}"
                }
              references:
                vpc_id: aws_vpc.main.id
              dependencies:
                aws_vpc.main: |-
                    {
                      "cidr_block": "10.0.0.0/16"
                    }
        argumentDocs:
            aws_vpc_ipv4_cidr_block_association.create: '- (Default 10 minutes) Used for creating the association'
            aws_vpc_ipv4_cidr_block_association.delete: '- (Default 10 minutes) Used for destroying the association'
            cidr_block: '- (Optional) The IPv4 CIDR block for the VPC. CIDR can be explicitly set or it can be derived from IPAM using ipv4_netmask_length.'
            id: '- The ID of the VPC CIDR association'
            ipv4_ipam_pool_id: '- (Optional) The ID of an IPv4 IPAM pool you want to use for allocating this VPC''s CIDR. IPAM is a VPC feature that you can use to automate your IP address management workflows including assigning, tracking, troubleshooting, and auditing IP addresses across AWS Regions and accounts. Using IPAM you can monitor IP address usage throughout your AWS Organization.'
            ipv4_netmask_length: '- (Optional) The netmask length of the IPv4 CIDR you want to allocate to this VPC. Requires specifying a ipv4_ipam_pool_id.'
            vpc_id: '- (Required) The ID of the VPC to make the association with.'
        importStatements: []
    aws_vpc_ipv6_cidr_block_association:
        subCategory: VPC (Virtual Private Cloud)
        description: Associate additional IPv6 CIDR blocks with a VPC
        name: aws_vpc_ipv6_cidr_block_association
        title: aws_vpc_ipv6_cidr_block_association
        examples:
            - name: test
              manifest: |-
                {
                  "ipv6_ipam_pool_id": "${aws_vpc_ipam_pool.test.id}",
                  "vpc_id": "${aws_vpc.test.id}"
                }
              references:
                ipv6_ipam_pool_id: aws_vpc_ipam_pool.test.id
                vpc_id: aws_vpc.test.id
              dependencies:
                aws_vpc.test: |-
                    {
                      "cidr_block": "10.0.0.0/16"
                    }
        argumentDocs:
            aws_vpc_ipv6_cidr_block_association.create: '- (Default 10 minutes) Used for creating the association'
            aws_vpc_ipv6_cidr_block_association.delete: '- (Default 10 minutes) Used for destroying the association'
            id: '- The ID of the VPC CIDR association'
            ipv6_cidr_block: '- (Optional) The IPv6 CIDR block for the VPC. CIDR can be explicitly set or it can be derived from IPAM using ipv6_netmask_length. This parameter is required if ipv6_netmask_length is not set and he IPAM pool does not have allocation_default_netmask set.'
            ipv6_ipam_pool_id: '- (Required) The ID of an IPv6 IPAM pool you want to use for allocating this VPC''s CIDR. IPAM is a VPC feature that you can use to automate your IP address management workflows including assigning, tracking, troubleshooting, and auditing IP addresses across AWS Regions and accounts.'
            ipv6_netmask_length: '- (Optional) The netmask length of the IPv6 CIDR you want to allocate to this VPC. Requires specifying a ipv6_ipam_pool_id. This parameter is optional if the IPAM pool has allocation_default_netmask set, otherwise it or cidr_block are required'
            vpc_id: '- (Required) The ID of the VPC to make the association with.'
        importStatements: []
    aws_vpc_peering_connection:
        subCategory: VPC (Virtual Private Cloud)
        description: Provides a resource to manage a VPC peering connection.
        name: aws_vpc_peering_connection
        title: aws_vpc_peering_connection
        examples:
            - name: foo
              manifest: |-
                {
                  "peer_owner_id": "${var.peer_owner_id}",
                  "peer_vpc_id": "${aws_vpc.bar.id}",
                  "vpc_id": "${aws_vpc.foo.id}"
                }
              references:
                peer_owner_id: var.peer_owner_id
                peer_vpc_id: aws_vpc.bar.id
                vpc_id: aws_vpc.foo.id
            - name: foo
              manifest: |-
                {
                  "accepter": [
                    {
                      "allow_remote_vpc_dns_resolution": true
                    }
                  ],
                  "peer_owner_id": "${var.peer_owner_id}",
                  "peer_vpc_id": "${aws_vpc.bar.id}",
                  "requester": [
                    {
                      "allow_remote_vpc_dns_resolution": true
                    }
                  ],
                  "vpc_id": "${aws_vpc.foo.id}"
                }
              references:
                peer_owner_id: var.peer_owner_id
                peer_vpc_id: aws_vpc.bar.id
                vpc_id: aws_vpc.foo.id
            - name: foo
              manifest: |-
                {
                  "auto_accept": true,
                  "peer_owner_id": "${var.peer_owner_id}",
                  "peer_vpc_id": "${aws_vpc.bar.id}",
                  "tags": {
                    "Name": "VPC Peering between foo and bar"
                  },
                  "vpc_id": "${aws_vpc.foo.id}"
                }
              references:
                peer_owner_id: var.peer_owner_id
                peer_vpc_id: aws_vpc.bar.id
                vpc_id: aws_vpc.foo.id
              dependencies:
                aws_vpc.bar: |-
                    {
                      "cidr_block": "10.2.0.0/16"
                    }
                aws_vpc.foo: |-
                    {
                      "cidr_block": "10.1.0.0/16"
                    }
            - name: foo
              manifest: |-
                {
                  "peer_owner_id": "${var.peer_owner_id}",
                  "peer_region": "us-east-1",
                  "peer_vpc_id": "${aws_vpc.bar.id}",
                  "vpc_id": "${aws_vpc.foo.id}"
                }
              references:
                peer_owner_id: var.peer_owner_id
                peer_vpc_id: aws_vpc.bar.id
                vpc_id: aws_vpc.foo.id
              dependencies:
                aws_vpc.bar: |-
                    {
                      "cidr_block": "10.2.0.0/16",
                      "provider": "${aws.us-east-1}"
                    }
                aws_vpc.foo: |-
                    {
                      "cidr_block": "10.1.0.0/16",
                      "provider": "${aws.us-west-2}"
                    }
        argumentDocs:
            accept_status: '- The status of the VPC Peering Connection request.'
            accepter: |-
                (Optional) - An optional configuration block that allows for VPC Peering Connection options to be set for the VPC that accepts
                the peering connection (a maximum of one).
            allow_classic_link_to_remote_vpc: |-
                - (Optional) Allow a local linked EC2-Classic instance to communicate
                with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
                to the remote VPC.
            allow_remote_vpc_dns_resolution: |-
                - (Optional) Allow a local VPC to resolve public DNS hostnames to
                private IP addresses when queried from instances in the peer VPC.
            allow_vpc_to_remote_classic_link: |-
                - (Optional) Allow a local VPC to communicate with a linked EC2-Classic
                instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
                connection.
            auto_accept: '- (Optional) Accept the peering (both VPCs need to be in the same AWS account and region).'
            create: '- (Default 1 minute) Used for creating a peering connection'
            delete: '- (Default 1 minute) Used for destroying peering connections'
            id: '- The ID of the VPC Peering Connection.'
            peer_owner_id: |-
                - (Optional) The AWS account ID of the owner of the peer VPC.
                Defaults to the account ID the AWS provider is currently connected to.
            peer_region: |-
                - (Optional) The region of the accepter VPC of the VPC Peering Connection. auto_accept must be false,
                and use the aws_vpc_peering_connection_accepter to manage the accepter side.
            peer_vpc_id: '- (Required) The ID of the VPC with which you are creating the VPC Peering Connection.'
            requester: |-
                (Optional) - A optional configuration block that allows for VPC Peering Connection options to be set for the VPC that requests
                the peering connection (a maximum of one).
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            update: '- (Default 1 minute) Used for peering connection modifications'
            vpc_id: '- (Required) The ID of the requester VPC.'
        importStatements: []
    aws_vpc_peering_connection_accepter:
        subCategory: VPC (Virtual Private Cloud)
        description: Manage the accepter's side of a VPC Peering Connection.
        name: aws_vpc_peering_connection_accepter
        title: aws_vpc_peering_connection_accepter
        examples:
            - name: peer
              manifest: |-
                {
                  "auto_accept": true,
                  "provider": "${aws.peer}",
                  "tags": {
                    "Side": "Accepter"
                  },
                  "vpc_peering_connection_id": "${aws_vpc_peering_connection.peer.id}"
                }
              references:
                provider: aws.peer
                vpc_peering_connection_id: aws_vpc_peering_connection.peer.id
              dependencies:
                aws_vpc.main: |-
                    {
                      "cidr_block": "10.0.0.0/16"
                    }
                aws_vpc.peer: |-
                    {
                      "cidr_block": "10.1.0.0/16",
                      "provider": "${aws.peer}"
                    }
                aws_vpc_peering_connection.peer: |-
                    {
                      "auto_accept": false,
                      "peer_owner_id": "${data.aws_caller_identity.peer.account_id}",
                      "peer_region": "us-west-2",
                      "peer_vpc_id": "${aws_vpc.peer.id}",
                      "tags": {
                        "Side": "Requester"
                      },
                      "vpc_id": "${aws_vpc.main.id}"
                    }
            - name: example
              manifest: |-
                {
                  "lifecycle": [
                    {
                      "ignore_changes": [
                        "${auto_accept}"
                      ]
                    }
                  ]
                }
        argumentDocs:
            accept_status: '- The status of the VPC Peering Connection request.'
            accepter: |-
                - A configuration block that describes [VPC Peering Connection]
                (https://docs.aws.amazon.com/vpc/latest/peering/what-is-vpc-peering.html) options set for the accepter VPC.
            allow_classic_link_to_remote_vpc: |-
                - Indicates whether a local ClassicLink connection can communicate
                with the peer VPC over the VPC Peering Connection.
            allow_remote_vpc_dns_resolution: |-
                - Indicates whether a local VPC can resolve public DNS hostnames to
                private IP addresses when queried from instances in a peer VPC.
            allow_vpc_to_remote_classic_link: |-
                - Indicates whether a local VPC can communicate with a ClassicLink
                connection in the peer VPC over the VPC Peering Connection.
            auto_accept: '- (Optional) Whether or not to accept the peering request. Defaults to false.'
            id: '- The ID of the VPC Peering Connection.'
            peer_owner_id: '- The AWS account ID of the owner of the requester VPC.'
            peer_region: '- The region of the accepter VPC.'
            peer_vpc_id: '- The ID of the requester VPC.'
            requester: |-
                - A configuration block that describes [VPC Peering Connection]
                (https://docs.aws.amazon.com/vpc/latest/peering/what-is-vpc-peering.html) options set for the requester VPC.
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            vpc_id: '- The ID of the accepter VPC.'
            vpc_peering_connection_id: '- (Required) The VPC Peering Connection ID to manage.'
        importStatements: []
    aws_vpc_peering_connection_options:
        subCategory: VPC (Virtual Private Cloud)
        description: Provides a resource to manage VPC peering connection options.
        name: aws_vpc_peering_connection_options
        title: aws_vpc_peering_connection_options
        examples:
            - name: foo
              manifest: |-
                {
                  "accepter": [
                    {
                      "allow_remote_vpc_dns_resolution": true
                    }
                  ],
                  "requester": [
                    {
                      "allow_classic_link_to_remote_vpc": true,
                      "allow_vpc_to_remote_classic_link": true
                    }
                  ],
                  "vpc_peering_connection_id": "${aws_vpc_peering_connection.foo.id}"
                }
              references:
                vpc_peering_connection_id: aws_vpc_peering_connection.foo.id
              dependencies:
                aws_vpc.bar: |-
                    {
                      "cidr_block": "10.1.0.0/16"
                    }
                aws_vpc.foo: |-
                    {
                      "cidr_block": "10.0.0.0/16"
                    }
                aws_vpc_peering_connection.foo: |-
                    {
                      "auto_accept": true,
                      "peer_vpc_id": "${aws_vpc.bar.id}",
                      "vpc_id": "${aws_vpc.foo.id}"
                    }
            - name: requester
              manifest: |-
                {
                  "provider": "${aws.requester}",
                  "requester": [
                    {
                      "allow_remote_vpc_dns_resolution": true
                    }
                  ],
                  "vpc_peering_connection_id": "${aws_vpc_peering_connection_accepter.peer.id}"
                }
              references:
                provider: aws.requester
                vpc_peering_connection_id: aws_vpc_peering_connection_accepter.peer.id
              dependencies:
                aws_vpc.main: |-
                    {
                      "cidr_block": "10.0.0.0/16",
                      "enable_dns_hostnames": true,
                      "enable_dns_support": true,
                      "provider": "${aws.requester}"
                    }
                aws_vpc.peer: |-
                    {
                      "cidr_block": "10.1.0.0/16",
                      "enable_dns_hostnames": true,
                      "enable_dns_support": true,
                      "provider": "${aws.accepter}"
                    }
                aws_vpc_peering_connection.peer: |-
                    {
                      "auto_accept": false,
                      "peer_owner_id": "${data.aws_caller_identity.peer.account_id}",
                      "peer_vpc_id": "${aws_vpc.peer.id}",
                      "provider": "${aws.requester}",
                      "tags": {
                        "Side": "Requester"
                      },
                      "vpc_id": "${aws_vpc.main.id}"
                    }
                aws_vpc_peering_connection_accepter.peer: |-
                    {
                      "auto_accept": true,
                      "provider": "${aws.accepter}",
                      "tags": {
                        "Side": "Accepter"
                      },
                      "vpc_peering_connection_id": "${aws_vpc_peering_connection.peer.id}"
                    }
            - name: accepter
              manifest: |-
                {
                  "accepter": [
                    {
                      "allow_remote_vpc_dns_resolution": true
                    }
                  ],
                  "provider": "${aws.accepter}",
                  "vpc_peering_connection_id": "${aws_vpc_peering_connection_accepter.peer.id}"
                }
              references:
                provider: aws.accepter
                vpc_peering_connection_id: aws_vpc_peering_connection_accepter.peer.id
              dependencies:
                aws_vpc.main: |-
                    {
                      "cidr_block": "10.0.0.0/16",
                      "enable_dns_hostnames": true,
                      "enable_dns_support": true,
                      "provider": "${aws.requester}"
                    }
                aws_vpc.peer: |-
                    {
                      "cidr_block": "10.1.0.0/16",
                      "enable_dns_hostnames": true,
                      "enable_dns_support": true,
                      "provider": "${aws.accepter}"
                    }
                aws_vpc_peering_connection.peer: |-
                    {
                      "auto_accept": false,
                      "peer_owner_id": "${data.aws_caller_identity.peer.account_id}",
                      "peer_vpc_id": "${aws_vpc.peer.id}",
                      "provider": "${aws.requester}",
                      "tags": {
                        "Side": "Requester"
                      },
                      "vpc_id": "${aws_vpc.main.id}"
                    }
                aws_vpc_peering_connection_accepter.peer: |-
                    {
                      "auto_accept": true,
                      "provider": "${aws.accepter}",
                      "tags": {
                        "Side": "Accepter"
                      },
                      "vpc_peering_connection_id": "${aws_vpc_peering_connection.peer.id}"
                    }
        argumentDocs:
            accepter: |-
                (Optional) - An optional configuration block that allows for [VPC Peering Connection]
                (https://docs.aws.amazon.com/vpc/latest/peering/what-is-vpc-peering.html) options to be set for the VPC that accepts
                the peering connection (a maximum of one).
            allow_classic_link_to_remote_vpc: |-
                - (Optional) Allow a local linked EC2-Classic instance to communicate
                with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
                to the remote VPC. This option is not supported for inter-region VPC peering.
            allow_remote_vpc_dns_resolution: |-
                - (Optional) Allow a local VPC to resolve public DNS hostnames to
                private IP addresses when queried from instances in the peer VPC.
            allow_vpc_to_remote_classic_link: |-
                - (Optional) Allow a local VPC to communicate with a linked EC2-Classic
                instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
                connection. This option is not supported for inter-region VPC peering.
            id: '- The ID of the VPC Peering Connection Options.'
            requester: |-
                (Optional) - A optional configuration block that allows for [VPC Peering Connection]
                (https://docs.aws.amazon.com/vpc/latest/peering/what-is-vpc-peering.html) options to be set for the VPC that requests
                the peering connection (a maximum of one).
            vpc_peering_connection_id: '- (Required) The ID of the requester VPC peering connection.'
        importStatements: []
    aws_vpn_connection:
        subCategory: VPN (Site-to-Site)
        description: Manages a Site-to-Site VPN connection. A Site-to-Site VPN connection is an Internet Protocol security (IPsec) VPN connection between a VPC and an on-premises network.
        name: aws_vpn_connection
        title: aws_vpn_connection
        examples:
            - name: example
              manifest: |-
                {
                  "customer_gateway_id": "${aws_customer_gateway.example.id}",
                  "transit_gateway_id": "${aws_ec2_transit_gateway.example.id}",
                  "type": "${aws_customer_gateway.example.type}"
                }
              references:
                customer_gateway_id: aws_customer_gateway.example.id
                transit_gateway_id: aws_ec2_transit_gateway.example.id
                type: aws_customer_gateway.example.type
              dependencies:
                aws_customer_gateway.example: |-
                    {
                      "bgp_asn": 65000,
                      "ip_address": "172.0.0.1",
                      "type": "ipsec.1"
                    }
                aws_ec2_transit_gateway.example: '{}'
            - name: main
              manifest: |-
                {
                  "customer_gateway_id": "${aws_customer_gateway.customer_gateway.id}",
                  "static_routes_only": true,
                  "type": "ipsec.1",
                  "vpn_gateway_id": "${aws_vpn_gateway.vpn_gateway.id}"
                }
              references:
                customer_gateway_id: aws_customer_gateway.customer_gateway.id
                vpn_gateway_id: aws_vpn_gateway.vpn_gateway.id
              dependencies:
                aws_customer_gateway.customer_gateway: |-
                    {
                      "bgp_asn": 65000,
                      "ip_address": "172.0.0.1",
                      "type": "ipsec.1"
                    }
                aws_vpc.vpc: |-
                    {
                      "cidr_block": "10.0.0.0/16"
                    }
                aws_vpn_gateway.vpn_gateway: |-
                    {
                      "vpc_id": "${aws_vpc.vpc.id}"
                    }
            - name: example
              manifest: |-
                {
                  "customer_gateway_id": "${aws_customer_gateway.example.id}",
                  "outside_ip_address_type": "PrivateIpv4",
                  "tags": {
                    "Name": "terraform_ipsec_vpn_example"
                  },
                  "transit_gateway_id": "${aws_ec2_transit_gateway.example.id}",
                  "transport_transit_gateway_attachment_id": "${data.aws_ec2_transit_gateway_dx_gateway_attachment.example.id}",
                  "type": "ipsec.1"
                }
              references:
                customer_gateway_id: aws_customer_gateway.example.id
                transit_gateway_id: aws_ec2_transit_gateway.example.id
                transport_transit_gateway_attachment_id: data.aws_ec2_transit_gateway_dx_gateway_attachment.example.id
              dependencies:
                aws_customer_gateway.example: |-
                    {
                      "bgp_asn": 64514,
                      "ip_address": "10.0.0.1",
                      "tags": {
                        "Name": "terraform_ipsec_vpn_example"
                      },
                      "type": "ipsec.1"
                    }
                aws_dx_gateway.example: |-
                    {
                      "amazon_side_asn": "64512",
                      "name": "terraform_ipsec_vpn_example"
                    }
                aws_dx_gateway_association.example: |-
                    {
                      "allowed_prefixes": [
                        "10.0.0.0/8"
                      ],
                      "associated_gateway_id": "${aws_ec2_transit_gateway.example.id}",
                      "dx_gateway_id": "${aws_dx_gateway.example.id}"
                    }
                aws_ec2_transit_gateway.example: |-
                    {
                      "amazon_side_asn": "64513",
                      "description": "terraform_ipsec_vpn_example",
                      "transit_gateway_cidr_blocks": [
                        "10.0.0.0/24"
                      ]
                    }
        argumentDocs:
            arn: '- Amazon Resource Name (ARN) of the VPN Connection.'
            core_network_arn: '- The ARN of the core network.'
            core_network_attachment_arn: '- The ARN of the core network attachment.'
            customer_gateway_configuration: '- The configuration information for the VPN connection''s customer gateway (in the native XML format).'
            customer_gateway_id: '- (Required) The ID of the customer gateway.'
            enable_acceleration: '- (Optional, Default false) Indicate whether to enable acceleration for the VPN connection. Supports only EC2 Transit Gateway.'
            id: '- The amazon-assigned ID of the VPN connection.'
            local_ipv4_network_cidr: '- (Optional, Default 0.0.0.0/0) The IPv4 CIDR on the customer gateway (on-premises) side of the VPN connection.'
            local_ipv6_network_cidr: '- (Optional, Default ::/0) The IPv6 CIDR on the customer gateway (on-premises) side of the VPN connection.'
            outside_ip_address_type: '- (Optional, Default PublicIpv4) Indicates if a Public S2S VPN or Private S2S VPN over AWS Direct Connect. Valid values are PublicIpv4 | PrivateIpv4'
            remote_ipv4_network_cidr: '- (Optional, Default 0.0.0.0/0) The IPv4 CIDR on the AWS side of the VPN connection.'
            remote_ipv6_network_cidr: '- (Optional, Default ::/0) The IPv6 CIDR on the customer gateway (on-premises) side of the VPN connection.'
            routes: '- The static routes associated with the VPN connection. Detailed below.'
            routes.destination_cidr_block: '- The CIDR block associated with the local subnet of the customer data center.'
            routes.source: '- Indicates how the routes were provided.'
            routes.state: '- The current state of the static route.'
            static_routes_only: '- (Optional, Default false) Whether the VPN connection uses static routes exclusively. Static routes must be used for devices that don''t support BGP.'
            tags: '- (Optional) Tags to apply to the connection. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            transit_gateway_attachment_id: '- When associated with an EC2 Transit Gateway (transit_gateway_id argument), the attachment ID. See also the aws_ec2_tag resource for tagging the EC2 Transit Gateway VPN Attachment.'
            transit_gateway_id: '- (Optional) The ID of the EC2 Transit Gateway.'
            transport_transit_gateway_attachment_id: '- (Required when outside_ip_address_type is set to PrivateIpv4). The attachment ID of the Transit Gateway attachment to Direct Connect Gateway. The ID is obtained through a data source only.'
            tunnel_inside_ip_version: '- (Optional, Default ipv4) Indicate whether the VPN tunnels process IPv4 or IPv6 traffic. Valid values are ipv4 | ipv6. ipv6 Supports only EC2 Transit Gateway.'
            tunnel1_address: '- The public IP address of the first VPN tunnel.'
            tunnel1_bgp_asn: '- The bgp asn number of the first VPN tunnel.'
            tunnel1_bgp_holdtime: '- The bgp holdtime of the first VPN tunnel.'
            tunnel1_cgw_inside_address: '- The RFC 6890 link-local address of the first VPN tunnel (Customer Gateway Side).'
            tunnel1_dpd_timeout_action: '- (Optional, Default clear) The action to take after DPD timeout occurs for the first VPN tunnel. Specify restart to restart the IKE initiation. Specify clear to end the IKE session. Valid values are clear | none | restart.'
            tunnel1_dpd_timeout_seconds: '- (Optional, Default 30) The number of seconds after which a DPD timeout occurs for the first VPN tunnel. Valid value is equal or higher than 30.'
            tunnel1_ike_versions: '- (Optional) The IKE versions that are permitted for the first VPN tunnel. Valid values are ikev1 | ikev2.'
            tunnel1_inside_cidr: '- (Optional) The CIDR block of the inside IP addresses for the first VPN tunnel. Valid value is a size /30 CIDR block from the 169.254.0.0/16 range.'
            tunnel1_inside_ipv6_cidr: '- (Optional) The range of inside IPv6 addresses for the first VPN tunnel. Supports only EC2 Transit Gateway. Valid value is a size /126 CIDR block from the local fd00::/8 range.'
            tunnel1_phase1_dh_group_numbers: '- (Optional) List of one or more Diffie-Hellman group numbers that are permitted for the first VPN tunnel for phase 1 IKE negotiations. Valid values are  2 | 14 | 15 | 16 | 17 | 18 | 19 | 20 | 21 | 22 | 23 | 24.'
            tunnel1_phase1_encryption_algorithms: '- (Optional) List of one or more encryption algorithms that are permitted for the first VPN tunnel for phase 1 IKE negotiations. Valid values are AES128 | AES256 | AES128-GCM-16 | AES256-GCM-16.'
            tunnel1_phase1_integrity_algorithms: '- (Optional) One or more integrity algorithms that are permitted for the first VPN tunnel for phase 1 IKE negotiations. Valid values are SHA1 | SHA2-256 | SHA2-384 | SHA2-512.'
            tunnel1_phase1_lifetime_seconds: '- (Optional, Default 28800) The lifetime for phase 1 of the IKE negotiation for the first VPN tunnel, in seconds. Valid value is between 900 and 28800.'
            tunnel1_phase2_dh_group_numbers: '- (Optional) List of one or more Diffie-Hellman group numbers that are permitted for the first VPN tunnel for phase 2 IKE negotiations. Valid values are 2 | 5 | 14 | 15 | 16 | 17 | 18 | 19 | 20 | 21 | 22 | 23 | 24.'
            tunnel1_phase2_encryption_algorithms: '- (Optional) List of one or more encryption algorithms that are permitted for the first VPN tunnel for phase 2 IKE negotiations. Valid values are AES128 | AES256 | AES128-GCM-16 | AES256-GCM-16.'
            tunnel1_phase2_integrity_algorithms: '- (Optional) List of one or more integrity algorithms that are permitted for the first VPN tunnel for phase 2 IKE negotiations. Valid values are SHA1 | SHA2-256 | SHA2-384 | SHA2-512.'
            tunnel1_phase2_lifetime_seconds: '- (Optional, Default 3600) The lifetime for phase 2 of the IKE negotiation for the first VPN tunnel, in seconds. Valid value is between 900 and 3600.'
            tunnel1_preshared_key: '- (Optional) The preshared key of the first VPN tunnel. The preshared key must be between 8 and 64 characters in length and cannot start with zero(0). Allowed characters are alphanumeric characters, periods(.) and underscores(_).'
            tunnel1_rekey_fuzz_percentage: '- (Optional, Default 100) The percentage of the rekey window for the first VPN tunnel (determined by tunnel1_rekey_margin_time_seconds) during which the rekey time is randomly selected. Valid value is between 0 and 100.'
            tunnel1_rekey_margin_time_seconds: '- (Optional, Default 540) The margin time, in seconds, before the phase 2 lifetime expires, during which the AWS side of the first VPN connection performs an IKE rekey. The exact time of the rekey is randomly selected based on the value for tunnel1_rekey_fuzz_percentage. Valid value is between 60 and half of tunnel1_phase2_lifetime_seconds.'
            tunnel1_replay_window_size: '- (Optional, Default 1024) The number of packets in an IKE replay window for the first VPN tunnel. Valid value is between 64 and 2048.'
            tunnel1_startup_action: '- (Optional, Default add) The action to take when the establishing the tunnel for the first VPN connection. By default, your customer gateway device must initiate the IKE negotiation and bring up the tunnel. Specify start for AWS to initiate the IKE negotiation. Valid values are add | start.'
            tunnel1_vgw_inside_address: '- The RFC 6890 link-local address of the first VPN tunnel (VPN Gateway Side).'
            tunnel2_address: '- The public IP address of the second VPN tunnel.'
            tunnel2_bgp_asn: '- The bgp asn number of the second VPN tunnel.'
            tunnel2_bgp_holdtime: '- The bgp holdtime of the second VPN tunnel.'
            tunnel2_cgw_inside_address: '- The RFC 6890 link-local address of the second VPN tunnel (Customer Gateway Side).'
            tunnel2_dpd_timeout_action: '- (Optional, Default clear) The action to take after DPD timeout occurs for the second VPN tunnel. Specify restart to restart the IKE initiation. Specify clear to end the IKE session. Valid values are clear | none | restart.'
            tunnel2_dpd_timeout_seconds: '- (Optional, Default 30) The number of seconds after which a DPD timeout occurs for the second VPN tunnel. Valid value is equal or higher than 30.'
            tunnel2_ike_versions: '- (Optional) The IKE versions that are permitted for the second VPN tunnel. Valid values are ikev1 | ikev2.'
            tunnel2_inside_cidr: '- (Optional) The CIDR block of the inside IP addresses for the second VPN tunnel. Valid value is a size /30 CIDR block from the 169.254.0.0/16 range.'
            tunnel2_inside_ipv6_cidr: '- (Optional) The range of inside IPv6 addresses for the second VPN tunnel. Supports only EC2 Transit Gateway. Valid value is a size /126 CIDR block from the local fd00::/8 range.'
            tunnel2_phase1_dh_group_numbers: '- (Optional) List of one or more Diffie-Hellman group numbers that are permitted for the second VPN tunnel for phase 1 IKE negotiations. Valid values are  2 | 14 | 15 | 16 | 17 | 18 | 19 | 20 | 21 | 22 | 23 | 24.'
            tunnel2_phase1_encryption_algorithms: '- (Optional) List of one or more encryption algorithms that are permitted for the second VPN tunnel for phase 1 IKE negotiations. Valid values are AES128 | AES256 | AES128-GCM-16 | AES256-GCM-16.'
            tunnel2_phase1_integrity_algorithms: '- (Optional) One or more integrity algorithms that are permitted for the second VPN tunnel for phase 1 IKE negotiations. Valid values are SHA1 | SHA2-256 | SHA2-384 | SHA2-512.'
            tunnel2_phase1_lifetime_seconds: '- (Optional, Default 28800) The lifetime for phase 1 of the IKE negotiation for the second VPN tunnel, in seconds. Valid value is between 900 and 28800.'
            tunnel2_phase2_dh_group_numbers: '- (Optional) List of one or more Diffie-Hellman group numbers that are permitted for the second VPN tunnel for phase 2 IKE negotiations. Valid values are 2 | 5 | 14 | 15 | 16 | 17 | 18 | 19 | 20 | 21 | 22 | 23 | 24.'
            tunnel2_phase2_encryption_algorithms: '- (Optional) List of one or more encryption algorithms that are permitted for the second VPN tunnel for phase 2 IKE negotiations. Valid values are AES128 | AES256 | AES128-GCM-16 | AES256-GCM-16.'
            tunnel2_phase2_integrity_algorithms: '- (Optional) List of one or more integrity algorithms that are permitted for the second VPN tunnel for phase 2 IKE negotiations. Valid values are SHA1 | SHA2-256 | SHA2-384 | SHA2-512.'
            tunnel2_phase2_lifetime_seconds: '- (Optional, Default 3600) The lifetime for phase 2 of the IKE negotiation for the second VPN tunnel, in seconds. Valid value is between 900 and 3600.'
            tunnel2_preshared_key: '- (Optional) The preshared key of the second VPN tunnel. The preshared key must be between 8 and 64 characters in length and cannot start with zero(0). Allowed characters are alphanumeric characters, periods(.) and underscores(_).'
            tunnel2_rekey_fuzz_percentage: '- (Optional, Default 100) The percentage of the rekey window for the second VPN tunnel (determined by tunnel2_rekey_margin_time_seconds) during which the rekey time is randomly selected. Valid value is between 0 and 100.'
            tunnel2_rekey_margin_time_seconds: '- (Optional, Default 540) The margin time, in seconds, before the phase 2 lifetime expires, during which the AWS side of the second VPN connection performs an IKE rekey. The exact time of the rekey is randomly selected based on the value for tunnel2_rekey_fuzz_percentage. Valid value is between 60 and half of tunnel2_phase2_lifetime_seconds.'
            tunnel2_replay_window_size: '- (Optional, Default 1024) The number of packets in an IKE replay window for the second VPN tunnel. Valid value is between 64 and 2048.'
            tunnel2_startup_action: '- (Optional, Default add) The action to take when the establishing the tunnel for the second VPN connection. By default, your customer gateway device must initiate the IKE negotiation and bring up the tunnel. Specify start for AWS to initiate the IKE negotiation. Valid values are add | start.'
            tunnel2_vgw_inside_address: '- The RFC 6890 link-local address of the second VPN tunnel (VPN Gateway Side).'
            type: '- (Required) The type of VPN connection. The only type AWS supports at this time is "ipsec.1".'
            vgw_telemetry: '- Telemetry for the VPN tunnels. Detailed below.'
            vgw_telemetry.accepted_route_count: '- The number of accepted routes.'
            vgw_telemetry.certificate_arn: '- The Amazon Resource Name (ARN) of the VPN tunnel endpoint certificate.'
            vgw_telemetry.last_status_change: '- The date and time of the last change in status.'
            vgw_telemetry.outside_ip_address: '- The Internet-routable IP address of the virtual private gateway''s outside interface.'
            vgw_telemetry.status: '- The status of the VPN tunnel.'
            vgw_telemetry.status_message: '- If an error occurs, a description of the error.'
            vpn_gateway_id: '- (Optional) The ID of the Virtual Private Gateway.'
        importStatements: []
    aws_vpn_connection_route:
        subCategory: VPN (Site-to-Site)
        description: Provides a static route between a VPN connection and a customer gateway.
        name: aws_vpn_connection_route
        title: aws_vpn_connection_route
        examples:
            - name: office
              manifest: |-
                {
                  "destination_cidr_block": "192.168.10.0/24",
                  "vpn_connection_id": "${aws_vpn_connection.main.id}"
                }
              references:
                vpn_connection_id: aws_vpn_connection.main.id
              dependencies:
                aws_customer_gateway.customer_gateway: |-
                    {
                      "bgp_asn": 65000,
                      "ip_address": "172.0.0.1",
                      "type": "ipsec.1"
                    }
                aws_vpc.vpc: |-
                    {
                      "cidr_block": "10.0.0.0/16"
                    }
                aws_vpn_connection.main: |-
                    {
                      "customer_gateway_id": "${aws_customer_gateway.customer_gateway.id}",
                      "static_routes_only": true,
                      "type": "ipsec.1",
                      "vpn_gateway_id": "${aws_vpn_gateway.vpn_gateway.id}"
                    }
                aws_vpn_gateway.vpn_gateway: |-
                    {
                      "vpc_id": "${aws_vpc.vpc.id}"
                    }
        argumentDocs:
            destination_cidr_block: '- (Required) The CIDR block associated with the local subnet of the customer network.'
            vpn_connection_id: '- (Required) The ID of the VPN connection.'
        importStatements: []
    aws_vpn_gateway:
        subCategory: VPN (Site-to-Site)
        description: Provides a resource to create a VPC VPN Gateway.
        name: aws_vpn_gateway
        title: aws_vpn_gateway
        examples:
            - name: vpn_gw
              manifest: |-
                {
                  "tags": {
                    "Name": "main"
                  },
                  "vpc_id": "${aws_vpc.main.id}"
                }
              references:
                vpc_id: aws_vpc.main.id
        argumentDocs:
            amazon_side_asn: '- (Optional) The Autonomous System Number (ASN) for the Amazon side of the gateway. If you don''t specify an ASN, the virtual private gateway is created with the default ASN.'
            arn: '- Amazon Resource Name (ARN) of the VPN Gateway.'
            availability_zone: '- (Optional) The Availability Zone for the virtual private gateway.'
            id: '- The ID of the VPN Gateway.'
            tags: '- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            vpc_id: '- (Optional) The VPC ID to create in.'
        importStatements: []
    aws_vpn_gateway_attachment:
        subCategory: VPN (Site-to-Site)
        description: Provides a Virtual Private Gateway attachment resource.
        name: aws_vpn_gateway_attachment
        title: aws_vpn_gateway_attachment
        examples:
            - name: vpn_attachment
              manifest: |-
                {
                  "vpc_id": "${aws_vpc.network.id}",
                  "vpn_gateway_id": "${aws_vpn_gateway.vpn.id}"
                }
              references:
                vpc_id: aws_vpc.network.id
                vpn_gateway_id: aws_vpn_gateway.vpn.id
              dependencies:
                aws_vpc.network: |-
                    {
                      "cidr_block": "10.0.0.0/16"
                    }
                aws_vpn_gateway.vpn: |-
                    {
                      "tags": {
                        "Name": "example-vpn-gateway"
                      }
                    }
        argumentDocs:
            vpc_id: '- (Required) The ID of the VPC.'
            vpn_gateway_id: '- (Required) The ID of the Virtual Private Gateway.'
        importStatements: []
    aws_vpn_gateway_route_propagation:
        subCategory: VPN (Site-to-Site)
        description: Requests automatic route propagation between a VPN gateway and a route table.
        name: aws_vpn_gateway_route_propagation
        title: aws_vpn_gateway_route_propagation
        examples:
            - name: example
              manifest: |-
                {
                  "route_table_id": "${aws_route_table.example.id}",
                  "vpn_gateway_id": "${aws_vpn_gateway.example.id}"
                }
              references:
                route_table_id: aws_route_table.example.id
                vpn_gateway_id: aws_vpn_gateway.example.id
        argumentDocs:
            create: '- (Default 2 minutes) Used for propagation creation'
            delete: '- (Default 2 minutes) Used for propagation deletion'
            route_table_id: '- The id of the aws_route_table to propagate routes into.'
            vpn_gateway_id: '- The id of the aws_vpn_gateway to propagate routes from.'
        importStatements: []
    aws_waf_byte_match_set:
        subCategory: WAF Classic
        description: Provides a AWS WAF Byte Match Set resource.
        name: aws_waf_byte_match_set
        title: aws_waf_byte_match_set
        examples:
            - name: byte_set
              manifest: |-
                {
                  "byte_match_tuples": [
                    {
                      "field_to_match": [
                        {
                          "data": "referer",
                          "type": "HEADER"
                        }
                      ],
                      "positional_constraint": "CONTAINS",
                      "target_string": "badrefer1",
                      "text_transformation": "NONE"
                    }
                  ],
                  "name": "tf_waf_byte_match_set"
                }
        argumentDocs:
            byte_match_tuples: |-
                - Specifies the bytes (typically a string that corresponds
                with ASCII characters) that you want to search for in web requests,
                the location in requests that you want to search, and other settings.
            data: |-
                - (Optional) When type is HEADER, enter the name of the header that you want to search, e.g., User-Agent or Referer.
                If type is any other value, omit this field.
            field_to_match: '- (Required) The part of a web request that you want to search, such as a specified header or a query string.'
            id: '- The ID of the WAF Byte Match Set.'
            name: '- (Required) The name or description of the Byte Match Set.'
            positional_constraint: |-
                - (Required) Within the portion of a web request that you want to search
                (for example, in the query string, if any), specify where you want to search.
                e.g., CONTAINS, CONTAINS_WORD or EXACTLY.
                See docs
                for all supported values.
            target_string: |-
                - (Optional) The value that you want to search for within the field specified by field_to_match, e.g., badrefer1.
                See docs
                for all supported values.
            text_transformation: |-
                - (Required) Text transformations used to eliminate unusual formatting that attackers use in web requests in an effort to bypass AWS WAF.
                If you specify a transformation, AWS WAF performs the transformation on target_string before inspecting a request for a match.
                e.g., CMD_LINE, HTML_ENTITY_DECODE or NONE.
                See docs
                for all supported values.
            type: |-
                - (Required) The part of the web request that you want AWS WAF to search for a specified string.
                e.g., HEADER, METHOD or BODY.
                See docs
                for all supported values.
        importStatements: []
    aws_waf_geo_match_set:
        subCategory: WAF Classic
        description: Provides a AWS WAF GeoMatchSet resource.
        name: aws_waf_geo_match_set
        title: aws_waf_geo_match_set
        examples:
            - name: geo_match_set
              manifest: |-
                {
                  "geo_match_constraint": [
                    {
                      "type": "Country",
                      "value": "US"
                    },
                    {
                      "type": "Country",
                      "value": "CA"
                    }
                  ],
                  "name": "geo_match_set"
                }
        argumentDocs:
            arn: '- Amazon Resource Name (ARN)'
            geo_match_constraint: '- (Optional) The GeoMatchConstraint objects which contain the country that you want AWS WAF to search for.'
            id: '- The ID of the WAF GeoMatchSet.'
            name: '- (Required) The name or description of the GeoMatchSet.'
            type: '- (Required) The type of geographical area you want AWS WAF to search for. Currently Country is the only valid value.'
            value: |-
                - (Required) The country that you want AWS WAF to search for.
                This is the two-letter country code, e.g., US, CA, RU, CN, etc.
                See docs for all supported values.
        importStatements: []
    aws_waf_ipset:
        subCategory: WAF Classic
        description: Provides a AWS WAF IPSet resource.
        name: aws_waf_ipset
        title: aws_waf_ipset
        examples:
            - name: ipset
              manifest: |-
                {
                  "ip_set_descriptors": [
                    {
                      "type": "IPV4",
                      "value": "192.0.7.0/24"
                    },
                    {
                      "type": "IPV4",
                      "value": "10.16.16.0/16"
                    }
                  ],
                  "name": "tfIPSet"
                }
        argumentDocs:
            arn: '- The ARN of the WAF IPSet.'
            id: '- The ID of the WAF IPSet.'
            ip_set_descriptors: '- (Optional) One or more pairs specifying the IP address type (IPV4 or IPV6) and the IP address range (in CIDR format) from which web requests originate.'
            name: '- (Required) The name or description of the IPSet.'
            type: '- (Required) Type of the IP address - IPV4 or IPV6.'
            value: '- (Required) An IPv4 or IPv6 address specified via CIDR notationE.g., 192.0.2.44/32 or 1111:0000:0000:0000:0000:0000:0000:0000/64'
        importStatements: []
    aws_waf_rate_based_rule:
        subCategory: WAF Classic
        description: Provides a AWS WAF rule resource.
        name: aws_waf_rate_based_rule
        title: aws_waf_rate_based_rule
        examples:
            - name: wafrule
              manifest: |-
                {
                  "depends_on": [
                    "${aws_waf_ipset.ipset}"
                  ],
                  "metric_name": "tfWAFRule",
                  "name": "tfWAFRule",
                  "predicates": [
                    {
                      "data_id": "${aws_waf_ipset.ipset.id}",
                      "negated": false,
                      "type": "IPMatch"
                    }
                  ],
                  "rate_key": "IP",
                  "rate_limit": 100
                }
              references:
                predicates.data_id: aws_waf_ipset.ipset.id
              dependencies:
                aws_waf_ipset.ipset: |-
                    {
                      "ip_set_descriptors": [
                        {
                          "type": "IPV4",
                          "value": "192.0.7.0/24"
                        }
                      ],
                      "name": "tfIPSet"
                    }
        argumentDocs:
            arn: '- Amazon Resource Name (ARN)'
            data_id: '- (Required) A unique identifier for a predicate in the rule, such as Byte Match Set ID or IPSet ID.'
            id: '- The ID of the WAF rule.'
            metric_name: '- (Required) The name or description for the Amazon CloudWatch metric of this rule.'
            name: '- (Required) The name or description of the rule.'
            negated: |-
                - (Required) Set this to false if you want to allow, block, or count requests
                based on the settings in the specified ByteMatchSet, IPSet, SqlInjectionMatchSet, XssMatchSet, or SizeConstraintSet.
                For example, if an IPSet includes the IP address 192.0.2.44, AWS WAF will allow or block requests based on that IP address.
                If set to true, AWS WAF will allow, block, or count requests based on all IP addresses except 192.0.2.44.
            predicates: '- (Optional) The objects to include in a rule (documented below).'
            rate_key: '- (Required) Valid value is IP.'
            rate_limit: '- (Required) The maximum number of requests, which have an identical value in the field specified by the RateKey, allowed in a five-minute period. Minimum value is 100.'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            type: '- (Required) The type of predicate in a rule. Valid values: ByteMatch, GeoMatch, IPMatch, RegexMatch, SizeConstraint, SqlInjectionMatch, or XssMatch.'
        importStatements: []
    aws_waf_regex_match_set:
        subCategory: WAF Classic
        description: Provides a AWS WAF Regex Match Set resource.
        name: aws_waf_regex_match_set
        title: aws_waf_regex_match_set
        examples:
            - name: example
              manifest: |-
                {
                  "name": "example",
                  "regex_match_tuple": [
                    {
                      "field_to_match": [
                        {
                          "data": "User-Agent",
                          "type": "HEADER"
                        }
                      ],
                      "regex_pattern_set_id": "${aws_waf_regex_pattern_set.example.id}",
                      "text_transformation": "NONE"
                    }
                  ]
                }
              references:
                regex_match_tuple.regex_pattern_set_id: aws_waf_regex_pattern_set.example.id
              dependencies:
                aws_waf_regex_pattern_set.example: |-
                    {
                      "name": "example",
                      "regex_pattern_strings": [
                        "one",
                        "two"
                      ]
                    }
        argumentDocs:
            arn: '- Amazon Resource Name (ARN)'
            id: '- The ID of the WAF Regex Match Set.'
            name: '- (Required) The name or description of the Regex Match Set.'
            regex_match_tuple: '- (Required) The regular expression pattern that you want AWS WAF to search for in web requests, the location in requests that you want AWS WAF to search, and other settings. See below.'
            regex_match_tuple.field_to_match: '- (Required) The part of a web request that you want to search, such as a specified header or a query string.'
            regex_match_tuple.field_to_match.data: |-
                - (Optional) When type is HEADER, enter the name of the header that you want to search, e.g., User-Agent or Referer.
                If type is any other value, omit this field.
            regex_match_tuple.field_to_match.type: |-
                - (Required) The part of the web request that you want AWS WAF to search for a specified string.
                e.g., HEADER, METHOD or BODY.
                See docs
                for all supported values.
            regex_match_tuple.regex_pattern_set_id: '- (Required) The ID of a Regex Pattern Set.'
            regex_match_tuple.text_transformation: |-
                - (Required) Text transformations used to eliminate unusual formatting that attackers use in web requests in an effort to bypass AWS WAF.
                e.g., CMD_LINE, HTML_ENTITY_DECODE or NONE.
                See docs
                for all supported values.
        importStatements: []
    aws_waf_regex_pattern_set:
        subCategory: WAF Classic
        description: Provides a AWS WAF Regex Pattern Set resource.
        name: aws_waf_regex_pattern_set
        title: aws_waf_regex_pattern_set
        examples:
            - name: example
              manifest: |-
                {
                  "name": "tf_waf_regex_pattern_set",
                  "regex_pattern_strings": [
                    "one",
                    "two"
                  ]
                }
        argumentDocs:
            arn: '- Amazon Resource Name (ARN)'
            id: '- The ID of the WAF Regex Pattern Set.'
            name: '- (Required) The name or description of the Regex Pattern Set.'
            regex_pattern_strings: '- (Optional) A list of regular expression (regex) patterns that you want AWS WAF to search for, such as B[a@]dB[o0]t.'
        importStatements: []
    aws_waf_rule:
        subCategory: WAF Classic
        description: Provides a AWS WAF rule resource.
        name: aws_waf_rule
        title: aws_waf_rule
        examples:
            - name: wafrule
              manifest: |-
                {
                  "depends_on": [
                    "${aws_waf_ipset.ipset}"
                  ],
                  "metric_name": "tfWAFRule",
                  "name": "tfWAFRule",
                  "predicates": [
                    {
                      "data_id": "${aws_waf_ipset.ipset.id}",
                      "negated": false,
                      "type": "IPMatch"
                    }
                  ]
                }
              references:
                predicates.data_id: aws_waf_ipset.ipset.id
              dependencies:
                aws_waf_ipset.ipset: |-
                    {
                      "ip_set_descriptors": [
                        {
                          "type": "IPV4",
                          "value": "192.0.7.0/24"
                        }
                      ],
                      "name": "tfIPSet"
                    }
        argumentDocs:
            arn: '- The ARN of the WAF rule.'
            data_id: '- (Required) A unique identifier for a predicate in the rule, such as Byte Match Set ID or IPSet ID.'
            id: '- The ID of the WAF rule.'
            metric_name: '- (Required) The name or description for the Amazon CloudWatch metric of this rule. The name can contain only alphanumeric characters (A-Z, a-z, 0-9); the name can''t contain whitespace.'
            name: '- (Required) The name or description of the rule.'
            negated: |-
                - (Required) Set this to false if you want to allow, block, or count requests
                based on the settings in the specified waf_byte_match_set, waf_ipset, aws_waf_size_constraint_set, aws_waf_sql_injection_match_set or aws_waf_xss_match_set.
                For example, if an IPSet includes the IP address 192.0.2.44, AWS WAF will allow or block requests based on that IP address.
                If set to true, AWS WAF will allow, block, or count requests based on all IP addresses except 192.0.2.44.
            predicates: '- (Optional) The objects to include in a rule (documented below).'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            type: '- (Required) The type of predicate in a rule. Valid values: ByteMatch, GeoMatch, IPMatch, RegexMatch, SizeConstraint, SqlInjectionMatch, or XssMatch.'
        importStatements: []
    aws_waf_rule_group:
        subCategory: WAF Classic
        description: Provides a AWS WAF rule group resource.
        name: aws_waf_rule_group
        title: aws_waf_rule_group
        examples:
            - name: example
              manifest: |-
                {
                  "activated_rule": [
                    {
                      "action": [
                        {
                          "type": "COUNT"
                        }
                      ],
                      "priority": 50,
                      "rule_id": "${aws_waf_rule.example.id}"
                    }
                  ],
                  "metric_name": "example",
                  "name": "example"
                }
              references:
                activated_rule.rule_id: aws_waf_rule.example.id
              dependencies:
                aws_waf_rule.example: |-
                    {
                      "metric_name": "example",
                      "name": "example"
                    }
        argumentDocs:
            action: '- (Required) Specifies the action that CloudFront or AWS WAF takes when a web request matches the conditions in the rule.'
            activated_rule: '- (Optional) A list of activated rules, see below'
            arn: '- The ARN of the WAF rule group.'
            id: '- The ID of the WAF rule group.'
            metric_name: '- (Required) A friendly name for the metrics from the rule group'
            name: '- (Required) A friendly name of the rule group'
            priority: '- (Required) Specifies the order in which the rules are evaluated. Rules with a lower value are evaluated before rules with a higher value.'
            rule_id: '- (Required) The ID of a rule'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            type: '- (Required) e.g., BLOCK, ALLOW, or COUNT'
        importStatements: []
    aws_waf_size_constraint_set:
        subCategory: WAF Classic
        description: Provides a AWS WAF Size Constraint Set resource.
        name: aws_waf_size_constraint_set
        title: aws_waf_size_constraint_set
        examples:
            - name: size_constraint_set
              manifest: |-
                {
                  "name": "tfsize_constraints",
                  "size_constraints": [
                    {
                      "comparison_operator": "EQ",
                      "field_to_match": [
                        {
                          "type": "BODY"
                        }
                      ],
                      "size": "4096",
                      "text_transformation": "NONE"
                    }
                  ]
                }
        argumentDocs:
            arn: '- Amazon Resource Name (ARN)'
            comparison_operator: |-
                - (Required) The type of comparison you want to perform.
                e.g., EQ, NE, LT, GT.
                See docs for all supported values.
            data: |-
                - (Optional) When type is HEADER, enter the name of the header that you want to search, e.g., User-Agent or Referer.
                If type is any other value, omit this field.
            field_to_match: '- (Required) Specifies where in a web request to look for the size constraint.'
            id: '- The ID of the WAF Size Constraint Set.'
            name: '- (Required) The name or description of the Size Constraint Set.'
            size: |-
                - (Required) The size in bytes that you want to compare against the size of the specified field_to_match.
                Valid values are between 0 - 21474836480 bytes (0 - 20 GB).
            size_constraints: '- (Optional) Specifies the parts of web requests that you want to inspect the size of.'
            text_transformation: |-
                - (Required) Text transformations used to eliminate unusual formatting that attackers use in web requests in an effort to bypass AWS WAF.
                If you specify a transformation, AWS WAF performs the transformation on field_to_match before inspecting a request for a match.
                e.g., CMD_LINE, HTML_ENTITY_DECODE or NONE.
                See docs
                for all supported values.
                Note: if you choose BODY as type, you must choose NONE because CloudFront forwards only the first 8192 bytes for inspection.
            type: |-
                - (Required) The part of the web request that you want AWS WAF to search for a specified string.
                e.g., HEADER, METHOD or BODY.
                See docs
                for all supported values.
        importStatements: []
    aws_waf_sql_injection_match_set:
        subCategory: WAF Classic
        description: Provides a AWS WAF SQL Injection Match Set resource.
        name: aws_waf_sql_injection_match_set
        title: aws_waf_sql_injection_match_set
        examples:
            - name: sql_injection_match_set
              manifest: |-
                {
                  "name": "tf-sql_injection_match_set",
                  "sql_injection_match_tuples": [
                    {
                      "field_to_match": [
                        {
                          "type": "QUERY_STRING"
                        }
                      ],
                      "text_transformation": "URL_DECODE"
                    }
                  ]
                }
        argumentDocs:
            data: |-
                - (Optional) When type is HEADER, enter the name of the header that you want to search, e.g., User-Agent or Referer.
                If type is any other value, omit this field.
            id: '- The ID of the WAF SQL Injection Match Set.'
            name: '- (Required) The name or description of the SQL Injection Match Set.'
            sql_injection_match_tuples: '- (Optional) The parts of web requests that you want AWS WAF to inspect for malicious SQL code and, if you want AWS WAF to inspect a header, the name of the header.'
            sql_injection_match_tuples.field_to_match: '- (Required) Specifies where in a web request to look for snippets of malicious SQL code.'
            sql_injection_match_tuples.text_transformation: |-
                - (Required) Text transformations used to eliminate unusual formatting that attackers use in web requests in an effort to bypass AWS WAF.
                If you specify a transformation, AWS WAF performs the transformation on field_to_match before inspecting a request for a match.
                e.g., CMD_LINE, HTML_ENTITY_DECODE or NONE.
                See docs
                for all supported values.
            type: |-
                - (Required) The part of the web request that you want AWS WAF to search for a specified string.
                e.g., HEADER, METHOD or BODY.
                See docs
                for all supported values.
        importStatements: []
    aws_waf_web_acl:
        subCategory: WAF Classic
        description: Provides a AWS WAF web access control group (ACL) resource.
        name: aws_waf_web_acl
        title: aws_waf_web_acl
        examples:
            - name: waf_acl
              manifest: |-
                {
                  "default_action": [
                    {
                      "type": "ALLOW"
                    }
                  ],
                  "depends_on": [
                    "${aws_waf_ipset.ipset}",
                    "${aws_waf_rule.wafrule}"
                  ],
                  "metric_name": "tfWebACL",
                  "name": "tfWebACL",
                  "rules": [
                    {
                      "action": [
                        {
                          "type": "BLOCK"
                        }
                      ],
                      "priority": 1,
                      "rule_id": "${aws_waf_rule.wafrule.id}",
                      "type": "REGULAR"
                    }
                  ]
                }
              references:
                rules.rule_id: aws_waf_rule.wafrule.id
              dependencies:
                aws_waf_ipset.ipset: |-
                    {
                      "ip_set_descriptors": [
                        {
                          "type": "IPV4",
                          "value": "192.0.7.0/24"
                        }
                      ],
                      "name": "tfIPSet"
                    }
                aws_waf_rule.wafrule: |-
                    {
                      "depends_on": [
                        "${aws_waf_ipset.ipset}"
                      ],
                      "metric_name": "tfWAFRule",
                      "name": "tfWAFRule",
                      "predicates": [
                        {
                          "data_id": "${aws_waf_ipset.ipset.id}",
                          "negated": false,
                          "type": "IPMatch"
                        }
                      ]
                    }
            - name: example
              manifest: |-
                {
                  "logging_configuration": [
                    {
                      "log_destination": "${aws_kinesis_firehose_delivery_stream.example.arn}",
                      "redacted_fields": [
                        {
                          "field_to_match": [
                            {
                              "type": "URI"
                            },
                            {
                              "data": "referer",
                              "type": "HEADER"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              references:
                logging_configuration.log_destination: aws_kinesis_firehose_delivery_stream.example.arn
        argumentDocs:
            arn: '- The ARN of the WAF WebACL.'
            default_action: '- (Required) Configuration block with action that you want AWS WAF to take when a request doesn''t match the criteria in any of the rules that are associated with the web ACL. Detailed below.'
            default_action.type: |-
                - (Required) Specifies how you want AWS WAF to respond to requests that don't match the criteria in any of the rules.
                e.g., ALLOW or BLOCK
            field_to_match: '- (Required) Set of configuration blocks for fields to redact. Detailed below.'
            field_to_match.data: '- (Optional) When the value of type is HEADER, enter the name of the header that you want the WAF to search, for example, User-Agent or Referer. If the value of type is any other value, omit data.'
            field_to_match.type: '- (Required) The part of the web request that you want AWS WAF to search for a specified stringE.g., HEADER or METHOD'
            id: '- The ID of the WAF WebACL.'
            logging_configuration: '- (Optional) Configuration block to enable WAF logging. Detailed below.'
            logging_configuration.log_destination: '- (Required) Amazon Resource Name (ARN) of Kinesis Firehose Delivery Stream'
            logging_configuration.redacted_fields: '- (Optional) Configuration block containing parts of the request that you want redacted from the logs. Detailed below.'
            metric_name: '- (Required) The name or description for the Amazon CloudWatch metric of this web ACL.'
            name: '- (Required) The name or description of the web ACL.'
            rules: '- (Optional) Configuration blocks containing rules to associate with the web ACL and the settings for each rule. Detailed below.'
            rules.action: '- (Optional) The action that CloudFront or AWS WAF takes when a web request matches the conditions in the rule. Not used if type is GROUP.'
            rules.override_action: '- (Optional) Override the action that a group requests CloudFront or AWS WAF takes when a web request matches the conditions in the rule. Only used if type is GROUP.'
            rules.priority: |-
                - (Required) Specifies the order in which the rules in a WebACL are evaluated.
                Rules with a lower value are evaluated before rules with a higher value.
            rules.rule_id: '- (Required) ID of the associated WAF (Global) rule (e.g., aws_waf_rule). WAF (Regional) rules cannot be used.'
            rules.type: '- (Optional) The rule type, either REGULAR, as defined by Rule, RATE_BASED, as defined by RateBasedRule, or GROUP, as defined by RuleGroup. The default is REGULAR. If you add a RATE_BASED rule, you need to set type as RATE_BASED. If you add a GROUP rule, you need to set type as GROUP.'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            type: '- (Required) valid values are: BLOCK, ALLOW, or COUNT'
        importStatements: []
    aws_waf_xss_match_set:
        subCategory: WAF Classic
        description: Provides a AWS WAF XssMatchSet resource.
        name: aws_waf_xss_match_set
        title: aws_waf_xss_match_set
        examples:
            - name: xss_match_set
              manifest: |-
                {
                  "name": "xss_match_set",
                  "xss_match_tuples": [
                    {
                      "field_to_match": [
                        {
                          "type": "URI"
                        }
                      ],
                      "text_transformation": "NONE"
                    },
                    {
                      "field_to_match": [
                        {
                          "type": "QUERY_STRING"
                        }
                      ],
                      "text_transformation": "NONE"
                    }
                  ]
                }
        argumentDocs:
            arn: '- Amazon Resource Name (ARN)'
            data: |-
                - (Optional) When type is HEADER, enter the name of the header that you want to search, e.g., User-Agent or Referer.
                If type is any other value, omit this field.
            id: '- The ID of the WAF XssMatchSet.'
            name: '- (Required) The name or description of the SizeConstraintSet.'
            type: |-
                - (Required) The part of the web request that you want AWS WAF to search for a specified string.
                e.g., HEADER, METHOD or BODY.
                See docs
                for all supported values.
            xss_match_tuples: '- (Optional) The parts of web requests that you want to inspect for cross-site scripting attacks.'
            xss_match_tuples.field_to_match: '- (Required) Specifies where in a web request to look for cross-site scripting attacks.'
            xss_match_tuples.text_transformation: |-
                - (Required) Text transformations used to eliminate unusual formatting that attackers use in web requests in an effort to bypass AWS WAF.
                If you specify a transformation, AWS WAF performs the transformation on target_string before inspecting a request for a match.
                e.g., CMD_LINE, HTML_ENTITY_DECODE or NONE.
                See docs
                for all supported values.
        importStatements: []
    aws_wafregional_byte_match_set:
        subCategory: WAF Classic Regional
        description: Provides a AWS WAF Regional ByteMatchSet resource for use with ALB.
        name: aws_wafregional_byte_match_set
        title: aws_wafregional_byte_match_set
        examples:
            - name: byte_set
              manifest: |-
                {
                  "byte_match_tuples": [
                    {
                      "field_to_match": [
                        {
                          "data": "referer",
                          "type": "HEADER"
                        }
                      ],
                      "positional_constraint": "CONTAINS",
                      "target_string": "badrefer1",
                      "text_transformation": "NONE"
                    }
                  ],
                  "name": "tf_waf_byte_match_set"
                }
        argumentDocs:
            byte_match_tuples: '- (Optional)Settings for the ByteMatchSet, such as the bytes (typically a string that corresponds with ASCII characters) that you want AWS WAF to search for in web requests. ByteMatchTuple documented below.'
            data: '- (Optional) When the value of Type is HEADER, enter the name of the header that you want AWS WAF to search, for example, User-Agent or Referer. If the value of Type is any other value, omit Data.'
            field_to_match: '- (Required) Settings for the ByteMatchTuple. FieldToMatch documented below.'
            id: '- The ID of the WAF ByteMatchSet.'
            name: '- (Required) The name or description of the ByteMatchSet.'
            positional_constraint: '- (Required) Within the portion of a web request that you want to search.'
            target_string: '- (Required) The value that you want AWS WAF to search for. The maximum length of the value is 50 bytes.'
            text_transformation: '- (Required) The formatting way for web request.'
            type: '- (Required) The part of the web request that you want AWS WAF to search for a specified string.'
        importStatements: []
    aws_wafregional_geo_match_set:
        subCategory: WAF Classic Regional
        description: Provides a AWS WAF Regional Geo Match Set resource.
        name: aws_wafregional_geo_match_set
        title: aws_wafregional_geo_match_set
        examples:
            - name: geo_match_set
              manifest: |-
                {
                  "geo_match_constraint": [
                    {
                      "type": "Country",
                      "value": "US"
                    },
                    {
                      "type": "Country",
                      "value": "CA"
                    }
                  ],
                  "name": "geo_match_set"
                }
        argumentDocs:
            geo_match_constraint: '- (Optional) The Geo Match Constraint objects which contain the country that you want AWS WAF to search for.'
            id: '- The ID of the WAF Regional Geo Match Set.'
            name: '- (Required) The name or description of the Geo Match Set.'
            type: '- (Required) The type of geographical area you want AWS WAF to search for. Currently Country is the only valid value.'
            value: |-
                - (Required) The country that you want AWS WAF to search for.
                This is the two-letter country code, e.g., US, CA, RU, CN, etc.
                See docs for all supported values.
        importStatements: []
    aws_wafregional_ipset:
        subCategory: WAF Classic Regional
        description: Provides a AWS WAF Regional IPSet resource for use with ALB.
        name: aws_wafregional_ipset
        title: aws_wafregional_ipset
        examples:
            - name: ipset
              manifest: |-
                {
                  "ip_set_descriptor": [
                    {
                      "type": "IPV4",
                      "value": "192.0.7.0/24"
                    },
                    {
                      "type": "IPV4",
                      "value": "10.16.16.0/16"
                    }
                  ],
                  "name": "tfIPSet"
                }
        argumentDocs:
            arn: '- The ARN of the WAF IPSet.'
            id: '- The ID of the WAF IPSet.'
            ip_set_descriptor: '- (Optional) One or more pairs specifying the IP address type (IPV4 or IPV6) and the IP address range (in CIDR notation) from which web requests originate.'
            name: '- (Required) The name or description of the IPSet.'
            type: '- (Required) The string like IPV4 or IPV6.'
            value: '- (Required) The CIDR notation.'
        importStatements: []
    aws_wafregional_rate_based_rule:
        subCategory: WAF Classic Regional
        description: Provides a AWS WAF Regional rate based rule resource.
        name: aws_wafregional_rate_based_rule
        title: aws_wafregional_rate_based_rule
        examples:
            - name: wafrule
              manifest: |-
                {
                  "depends_on": [
                    "${aws_wafregional_ipset.ipset}"
                  ],
                  "metric_name": "tfWAFRule",
                  "name": "tfWAFRule",
                  "predicate": [
                    {
                      "data_id": "${aws_wafregional_ipset.ipset.id}",
                      "negated": false,
                      "type": "IPMatch"
                    }
                  ],
                  "rate_key": "IP",
                  "rate_limit": 100
                }
              references:
                predicate.data_id: aws_wafregional_ipset.ipset.id
              dependencies:
                aws_wafregional_ipset.ipset: |-
                    {
                      "ip_set_descriptor": [
                        {
                          "type": "IPV4",
                          "value": "192.0.7.0/24"
                        }
                      ],
                      "name": "tfIPSet"
                    }
        argumentDocs:
            arn: '- The ARN of the WAF Regional Rate Based Rule.'
            data_id: '- (Required) A unique identifier for a predicate in the rule, such as Byte Match Set ID or IPSet ID.'
            id: '- The ID of the WAF Regional Rate Based Rule.'
            metric_name: '- (Required) The name or description for the Amazon CloudWatch metric of this rule.'
            name: '- (Required) The name or description of the rule.'
            negated: |-
                - (Required) Set this to false if you want to allow, block, or count requests
                based on the settings in the specified ByteMatchSet, IPSet, SqlInjectionMatchSet, XssMatchSet, or SizeConstraintSet.
                For example, if an IPSet includes the IP address 192.0.2.44, AWS WAF will allow or block requests based on that IP address.
                If set to true, AWS WAF will allow, block, or count requests based on all IP addresses except 192.0.2.44.
            predicate: '- (Optional) The objects to include in a rule (documented below).'
            rate_key: '- (Required) Valid value is IP.'
            rate_limit: '- (Required) The maximum number of requests, which have an identical value in the field specified by the RateKey, allowed in a five-minute period. Minimum value is 100.'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            type: '- (Required) The type of predicate in a rule. Valid values: ByteMatch, GeoMatch, IPMatch, RegexMatch, SizeConstraint, SqlInjectionMatch, or XssMatch.'
        importStatements: []
    aws_wafregional_regex_match_set:
        subCategory: WAF Classic Regional
        description: Provides a AWS WAF Regional Regex Match Set resource.
        name: aws_wafregional_regex_match_set
        title: aws_wafregional_regex_match_set
        examples:
            - name: example
              manifest: |-
                {
                  "name": "example",
                  "regex_match_tuple": [
                    {
                      "field_to_match": [
                        {
                          "data": "User-Agent",
                          "type": "HEADER"
                        }
                      ],
                      "regex_pattern_set_id": "${aws_wafregional_regex_pattern_set.example.id}",
                      "text_transformation": "NONE"
                    }
                  ]
                }
              references:
                regex_match_tuple.regex_pattern_set_id: aws_wafregional_regex_pattern_set.example.id
              dependencies:
                aws_wafregional_regex_pattern_set.example: |-
                    {
                      "name": "example",
                      "regex_pattern_strings": [
                        "one",
                        "two"
                      ]
                    }
        argumentDocs:
            id: '- The ID of the WAF Regional Regex Match Set.'
            name: '- (Required) The name or description of the Regex Match Set.'
            regex_match_tuple: '- (Required) The regular expression pattern that you want AWS WAF to search for in web requests, the location in requests that you want AWS WAF to search, and other settings. See below.'
            regex_match_tuple.field_to_match: '- (Required) The part of a web request that you want to search, such as a specified header or a query string.'
            regex_match_tuple.field_to_match.data: |-
                - (Optional) When type is HEADER, enter the name of the header that you want to search, e.g., User-Agent or Referer.
                If type is any other value, omit this field.
            regex_match_tuple.field_to_match.type: |-
                - (Required) The part of the web request that you want AWS WAF to search for a specified string.
                e.g., HEADER, METHOD or BODY.
                See docs
                for all supported values.
            regex_match_tuple.regex_pattern_set_id: '- (Required) The ID of a Regex Pattern Set.'
            regex_match_tuple.text_transformation: |-
                - (Required) Text transformations used to eliminate unusual formatting that attackers use in web requests in an effort to bypass AWS WAF.
                e.g., CMD_LINE, HTML_ENTITY_DECODE or NONE.
                See docs
                for all supported values.
        importStatements: []
    aws_wafregional_regex_pattern_set:
        subCategory: WAF Classic Regional
        description: Provides a AWS WAF Regional Regex Pattern Set resource.
        name: aws_wafregional_regex_pattern_set
        title: aws_wafregional_regex_pattern_set
        examples:
            - name: example
              manifest: |-
                {
                  "name": "example",
                  "regex_pattern_strings": [
                    "one",
                    "two"
                  ]
                }
        argumentDocs:
            id: '- The ID of the WAF Regional Regex Pattern Set.'
            name: '- (Required) The name or description of the Regex Pattern Set.'
            regex_pattern_strings: '- (Optional) A list of regular expression (regex) patterns that you want AWS WAF to search for, such as B[a@]dB[o0]t.'
        importStatements: []
    aws_wafregional_rule:
        subCategory: WAF Classic Regional
        description: Provides an AWS WAF Regional rule resource for use with ALB.
        name: aws_wafregional_rule
        title: aws_wafregional_rule
        examples:
            - name: wafrule
              manifest: |-
                {
                  "metric_name": "tfWAFRule",
                  "name": "tfWAFRule",
                  "predicate": [
                    {
                      "data_id": "${aws_wafregional_ipset.ipset.id}",
                      "negated": false,
                      "type": "IPMatch"
                    }
                  ]
                }
              references:
                predicate.data_id: aws_wafregional_ipset.ipset.id
              dependencies:
                aws_wafregional_ipset.ipset: |-
                    {
                      "ip_set_descriptor": [
                        {
                          "type": "IPV4",
                          "value": "192.0.7.0/24"
                        }
                      ],
                      "name": "tfIPSet"
                    }
        argumentDocs:
            arn: '- The ARN of the WAF Regional Rule.'
            data_id: '- (Required) The unique identifier of a predicate, such as the ID of a ByteMatchSet or IPSet.'
            id: '- The ID of the WAF Regional Rule.'
            metric_name: '- (Required) The name or description for the Amazon CloudWatch metric of this rule.'
            name: '- (Required) The name or description of the rule.'
            negated: '- (Required) Whether to use the settings or the negated settings that you specified in the objects.'
            predicate: '- (Optional) The objects to include in a rule (documented below).'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            type: '- (Required) The type of predicate in a rule. Valid values: ByteMatch, GeoMatch, IPMatch, RegexMatch, SizeConstraint, SqlInjectionMatch, or XssMatch'
        importStatements: []
    aws_wafregional_rule_group:
        subCategory: WAF Classic Regional
        description: Provides a AWS WAF Regional Rule Group resource.
        name: aws_wafregional_rule_group
        title: aws_wafregional_rule_group
        examples:
            - name: example
              manifest: |-
                {
                  "activated_rule": [
                    {
                      "action": [
                        {
                          "type": "COUNT"
                        }
                      ],
                      "priority": 50,
                      "rule_id": "${aws_wafregional_rule.example.id}"
                    }
                  ],
                  "metric_name": "example",
                  "name": "example"
                }
              references:
                activated_rule.rule_id: aws_wafregional_rule.example.id
              dependencies:
                aws_wafregional_rule.example: |-
                    {
                      "metric_name": "example",
                      "name": "example"
                    }
        argumentDocs:
            action: '- (Required) Specifies the action that CloudFront or AWS WAF takes when a web request matches the conditions in the rule.'
            activated_rule: '- (Optional) A list of activated rules, see below'
            arn: '- The ARN of the WAF Regional Rule Group.'
            id: '- The ID of the WAF Regional Rule Group.'
            metric_name: '- (Required) A friendly name for the metrics from the rule group'
            name: '- (Required) A friendly name of the rule group'
            priority: '- (Required) Specifies the order in which the rules are evaluated. Rules with a lower value are evaluated before rules with a higher value.'
            rule_id: '- (Required) The ID of a rule'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            type: '- (Required) e.g., BLOCK, ALLOW, or COUNT'
        importStatements: []
    aws_wafregional_size_constraint_set:
        subCategory: WAF Classic Regional
        description: Provides an AWS WAF Regional Size Constraint Set resource for use with ALB.
        name: aws_wafregional_size_constraint_set
        title: aws_wafregional_size_constraint_set
        examples:
            - name: size_constraint_set
              manifest: |-
                {
                  "name": "tfsize_constraints",
                  "size_constraints": [
                    {
                      "comparison_operator": "EQ",
                      "field_to_match": [
                        {
                          "type": "BODY"
                        }
                      ],
                      "size": "4096",
                      "text_transformation": "NONE"
                    }
                  ]
                }
        argumentDocs:
            comparison_operator: |-
                - (Required) The type of comparison you want to perform.
                e.g., EQ, NE, LT, GT.
                See docs for all supported values.
            data: |-
                - (Optional) When type is HEADER, enter the name of the header that you want to search, e.g., User-Agent or Referer.
                If type is any other value, omit this field.
            field_to_match: '- (Required) Specifies where in a web request to look for the size constraint.'
            id: '- The ID of the WAF Size Constraint Set.'
            name: '- (Required) The name or description of the Size Constraint Set.'
            size: |-
                - (Required) The size in bytes that you want to compare against the size of the specified field_to_match.
                Valid values are between 0 - 21474836480 bytes (0 - 20 GB).
            size_constraints: '- (Optional) Specifies the parts of web requests that you want to inspect the size of.'
            text_transformation: |-
                - (Required) Text transformations used to eliminate unusual formatting that attackers use in web requests in an effort to bypass AWS WAF.
                If you specify a transformation, AWS WAF performs the transformation on field_to_match before inspecting a request for a match.
                e.g., CMD_LINE, HTML_ENTITY_DECODE or NONE.
                See docs
                for all supported values.
                Note: if you choose BODY as type, you must choose NONE because CloudFront forwards only the first 8192 bytes for inspection.
            type: |-
                - (Required) The part of the web request that you want AWS WAF to search for a specified string.
                e.g., HEADER, METHOD or BODY.
                See docs
                for all supported values.
        importStatements: []
    aws_wafregional_sql_injection_match_set:
        subCategory: WAF Classic Regional
        description: Provides a AWS WAF Regional SqlInjectionMatchSet resource for use with ALB.
        name: aws_wafregional_sql_injection_match_set
        title: aws_wafregional_sql_injection_match_set
        examples:
            - name: sql_injection_match_set
              manifest: |-
                {
                  "name": "tf-sql_injection_match_set",
                  "sql_injection_match_tuple": [
                    {
                      "field_to_match": [
                        {
                          "type": "QUERY_STRING"
                        }
                      ],
                      "text_transformation": "URL_DECODE"
                    }
                  ]
                }
        argumentDocs:
            id: '- The ID of the WAF SqlInjectionMatchSet.'
            name: '- (Required) The name or description of the SizeConstraintSet.'
            sql_injection_match_tuple: '- (Optional) The parts of web requests that you want AWS WAF to inspect for malicious SQL code and, if you want AWS WAF to inspect a header, the name of the header.'
            sql_injection_match_tuple.field_to_match: '- (Required) Specifies where in a web request to look for snippets of malicious SQL code.'
            sql_injection_match_tuple.field_to_match.data: |-
                - (Optional) When type is HEADER, enter the name of the header that you want to search, e.g., User-Agent or Referer.
                If type is any other value, omit this field.
            sql_injection_match_tuple.field_to_match.type: |-
                - (Required) The part of the web request that you want AWS WAF to search for a specified string.
                e.g., HEADER, METHOD or BODY.
                See docs
                for all supported values.
            sql_injection_match_tuple.text_transformation: |-
                - (Required) Text transformations used to eliminate unusual formatting that attackers use in web requests in an effort to bypass AWS WAF.
                If you specify a transformation, AWS WAF performs the transformation on field_to_match before inspecting a request for a match.
                e.g., CMD_LINE, HTML_ENTITY_DECODE or NONE.
                See docs
                for all supported values.
        importStatements: []
    aws_wafregional_web_acl:
        subCategory: WAF Classic Regional
        description: Provides a AWS WAF Regional web access control group (ACL) resource for use with ALB.
        name: aws_wafregional_web_acl
        title: aws_wafregional_web_acl
        examples:
            - name: wafacl
              manifest: |-
                {
                  "default_action": [
                    {
                      "type": "ALLOW"
                    }
                  ],
                  "metric_name": "tfWebACL",
                  "name": "tfWebACL",
                  "rule": [
                    {
                      "action": [
                        {
                          "type": "BLOCK"
                        }
                      ],
                      "priority": 1,
                      "rule_id": "${aws_wafregional_rule.wafrule.id}",
                      "type": "REGULAR"
                    }
                  ]
                }
              references:
                rule.rule_id: aws_wafregional_rule.wafrule.id
              dependencies:
                aws_wafregional_ipset.ipset: |-
                    {
                      "ip_set_descriptor": [
                        {
                          "type": "IPV4",
                          "value": "192.0.7.0/24"
                        }
                      ],
                      "name": "tfIPSet"
                    }
                aws_wafregional_rule.wafrule: |-
                    {
                      "metric_name": "tfWAFRule",
                      "name": "tfWAFRule",
                      "predicate": [
                        {
                          "data_id": "${aws_wafregional_ipset.ipset.id}",
                          "negated": false,
                          "type": "IPMatch"
                        }
                      ]
                    }
            - name: example
              manifest: |-
                {
                  "default_action": [
                    {
                      "type": "ALLOW"
                    }
                  ],
                  "metric_name": "example",
                  "name": "example",
                  "rule": [
                    {
                      "override_action": [
                        {
                          "type": "NONE"
                        }
                      ],
                      "priority": 1,
                      "rule_id": "${aws_wafregional_rule_group.example.id}",
                      "type": "GROUP"
                    }
                  ]
                }
              references:
                rule.rule_id: aws_wafregional_rule_group.example.id
            - name: example
              manifest: |-
                {
                  "logging_configuration": [
                    {
                      "log_destination": "${aws_kinesis_firehose_delivery_stream.example.arn}",
                      "redacted_fields": [
                        {
                          "field_to_match": [
                            {
                              "type": "URI"
                            },
                            {
                              "data": "referer",
                              "type": "HEADER"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              references:
                logging_configuration.log_destination: aws_kinesis_firehose_delivery_stream.example.arn
        argumentDocs:
            arn: '- Amazon Resource Name (ARN) of the WAF Regional WebACL.'
            default_action: '- (Required) The action that you want AWS WAF Regional to take when a request doesn''t match the criteria in any of the rules that are associated with the web ACL.'
            default_action.type: '- (Required) Specifies how you want AWS WAF Regional to respond to requests that match the settings in a ruleE.g., ALLOW, BLOCK or COUNT'
            field_to_match: '- (Required) Set of configuration blocks for fields to redact. Detailed below.'
            field_to_match.data: '- (Optional) When the value of type is HEADER, enter the name of the header that you want the WAF to search, for example, User-Agent or Referer. If the value of type is any other value, omit data.'
            field_to_match.type: '- (Required) The part of the web request that you want AWS WAF to search for a specified stringE.g., HEADER or METHOD'
            id: '- The ID of the WAF Regional WebACL.'
            logging_configuration: '- (Optional) Configuration block to enable WAF logging. Detailed below.'
            logging_configuration.log_destination: '- (Required) Amazon Resource Name (ARN) of Kinesis Firehose Delivery Stream'
            logging_configuration.redacted_fields: '- (Optional) Configuration block containing parts of the request that you want redacted from the logs. Detailed below.'
            metric_name: '- (Required) The name or description for the Amazon CloudWatch metric of this web ACL.'
            name: '- (Required) The name or description of the web ACL.'
            rule: '- (Optional) Set of configuration blocks containing rules for the web ACL. Detailed below.'
            rule.action: '- (Optional) Configuration block of the action that CloudFront or AWS WAF takes when a web request matches the conditions in the rule.  Not used if type is GROUP. Detailed below.'
            rule.override_action: '- (Optional) Configuration block of the override the action that a group requests CloudFront or AWS WAF takes when a web request matches the conditions in the rule.  Only used if type is GROUP. Detailed below.'
            rule.priority: |-
                - (Required) Specifies the order in which the rules in a WebACL are evaluated.
                Rules with a lower value are evaluated before rules with a higher value.
            rule.rule_id: '- (Required) ID of the associated WAF (Regional) rule (e.g., aws_wafregional_rule). WAF (Global) rules cannot be used.'
            rule.type: '- (Optional) The rule type, either REGULAR, as defined by Rule, RATE_BASED, as defined by RateBasedRule, or GROUP, as defined by RuleGroup. The default is REGULAR. If you add a RATE_BASED rule, you need to set type as RATE_BASED. If you add a GROUP rule, you need to set type as GROUP.'
            tags: '- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            type: '- (Required) Specifies how you want AWS WAF Regional to respond to requests that match the settings in a rule. Valid values for action are ALLOW, BLOCK or COUNT. Valid values for override_action are COUNT and NONE.'
        importStatements: []
    aws_wafregional_web_acl_association:
        subCategory: WAF Classic Regional
        description: Manages an association with WAF Regional Web ACL
        name: aws_wafregional_web_acl_association
        title: aws_wafregional_web_acl_association
        examples:
            - name: foo
              manifest: |-
                {
                  "resource_arn": "${aws_alb.foo.arn}",
                  "web_acl_id": "${aws_wafregional_web_acl.foo.id}"
                }
              references:
                resource_arn: aws_alb.foo.arn
                web_acl_id: aws_wafregional_web_acl.foo.id
              dependencies:
                aws_alb.foo: |-
                    {
                      "internal": true,
                      "subnets": [
                        "${aws_subnet.foo.id}",
                        "${aws_subnet.bar.id}"
                      ]
                    }
                aws_subnet.bar: |-
                    {
                      "availability_zone": "${data.aws_availability_zones.available.names[1]}",
                      "cidr_block": "10.1.2.0/24",
                      "vpc_id": "${aws_vpc.foo.id}"
                    }
                aws_subnet.foo: |-
                    {
                      "availability_zone": "${data.aws_availability_zones.available.names[0]}",
                      "cidr_block": "10.1.1.0/24",
                      "vpc_id": "${aws_vpc.foo.id}"
                    }
                aws_vpc.foo: |-
                    {
                      "cidr_block": "10.1.0.0/16"
                    }
                aws_wafregional_ipset.ipset: |-
                    {
                      "ip_set_descriptor": [
                        {
                          "type": "IPV4",
                          "value": "192.0.7.0/24"
                        }
                      ],
                      "name": "tfIPSet"
                    }
                aws_wafregional_rule.foo: |-
                    {
                      "metric_name": "tfWAFRule",
                      "name": "tfWAFRule",
                      "predicate": [
                        {
                          "data_id": "${aws_wafregional_ipset.ipset.id}",
                          "negated": false,
                          "type": "IPMatch"
                        }
                      ]
                    }
                aws_wafregional_web_acl.foo: |-
                    {
                      "default_action": [
                        {
                          "type": "ALLOW"
                        }
                      ],
                      "metric_name": "foo",
                      "name": "foo",
                      "rule": [
                        {
                          "action": [
                            {
                              "type": "BLOCK"
                            }
                          ],
                          "priority": 1,
                          "rule_id": "${aws_wafregional_rule.foo.id}"
                        }
                      ]
                    }
            - name: association
              manifest: |-
                {
                  "resource_arn": "${aws_api_gateway_stage.example.arn}",
                  "web_acl_id": "${aws_wafregional_web_acl.foo.id}"
                }
              references:
                resource_arn: aws_api_gateway_stage.example.arn
                web_acl_id: aws_wafregional_web_acl.foo.id
              dependencies:
                aws_api_gateway_deployment.example: |-
                    {
                      "lifecycle": [
                        {
                          "create_before_destroy": true
                        }
                      ],
                      "rest_api_id": "${aws_api_gateway_rest_api.example.id}",
                      "triggers": {
                        "redeployment": "${sha1(jsonencode(aws_api_gateway_rest_api.example.body))}"
                      }
                    }
                aws_api_gateway_rest_api.example: |-
                    {
                      "body": "${jsonencode({\n    openapi = \"3.0.1\"\n    info = {\n      title   = \"example\"\n      version = \"1.0\"\n    }\n    paths = {\n      \"/path1\" = {\n        get = {\n          x-amazon-apigateway-integration = {\n            httpMethod           = \"GET\"\n            payloadFormatVersion = \"1.0\"\n            type                 = \"HTTP_PROXY\"\n            uri                  = \"https://ip-ranges.amazonaws.com/ip-ranges.json\"\n          }\n        }\n      }\n    }\n  })}",
                      "name": "example"
                    }
                aws_api_gateway_stage.example: |-
                    {
                      "deployment_id": "${aws_api_gateway_deployment.example.id}",
                      "rest_api_id": "${aws_api_gateway_rest_api.example.id}",
                      "stage_name": "example"
                    }
                aws_wafregional_ipset.ipset: |-
                    {
                      "ip_set_descriptor": [
                        {
                          "type": "IPV4",
                          "value": "192.0.7.0/24"
                        }
                      ],
                      "name": "tfIPSet"
                    }
                aws_wafregional_rule.foo: |-
                    {
                      "metric_name": "tfWAFRule",
                      "name": "tfWAFRule",
                      "predicate": [
                        {
                          "data_id": "${aws_wafregional_ipset.ipset.id}",
                          "negated": false,
                          "type": "IPMatch"
                        }
                      ]
                    }
                aws_wafregional_web_acl.foo: |-
                    {
                      "default_action": [
                        {
                          "type": "ALLOW"
                        }
                      ],
                      "metric_name": "foo",
                      "name": "foo",
                      "rule": [
                        {
                          "action": [
                            {
                              "type": "BLOCK"
                            }
                          ],
                          "priority": 1,
                          "rule_id": "${aws_wafregional_rule.foo.id}"
                        }
                      ]
                    }
        argumentDocs:
            id: '- The ID of the association'
            resource_arn: '- (Required) ARN of the resource to associate with. For example, an Application Load Balancer or API Gateway Stage.'
            web_acl_id: '- (Required) The ID of the WAF Regional WebACL to create an association.'
        importStatements: []
    aws_wafregional_xss_match_set:
        subCategory: WAF Classic Regional
        description: Provides an AWS WAF Regional XSS Match Set resource for use with ALB.
        name: aws_wafregional_xss_match_set
        title: aws_wafregional_xss_match_set
        examples:
            - name: xss_match_set
              manifest: |-
                {
                  "name": "xss_match_set",
                  "xss_match_tuple": [
                    {
                      "field_to_match": [
                        {
                          "type": "URI"
                        }
                      ],
                      "text_transformation": "NONE"
                    },
                    {
                      "field_to_match": [
                        {
                          "type": "QUERY_STRING"
                        }
                      ],
                      "text_transformation": "NONE"
                    }
                  ]
                }
        argumentDocs:
            id: '- The ID of the Regional WAF XSS Match Set.'
            name: '- (Required) The name of the set'
            xss_match_tuple: '- (Optional) The parts of web requests that you want to inspect for cross-site scripting attacks.'
            xss_match_tuple.field_to_match: '- (Required) Specifies where in a web request to look for cross-site scripting attacks.'
            xss_match_tuple.field_to_match.data: '- (Optional) When the value of type is HEADER, enter the name of the header that you want the WAF to search, for example, User-Agent or Referer. If the value of type is any other value, omit data.'
            xss_match_tuple.field_to_match.type: '- (Required) The part of the web request that you want AWS WAF to search for a specified stringE.g., HEADER or METHOD'
            xss_match_tuple.text_transformation: '- (Required) Which text transformation, if any, to perform on the web request before inspecting the request for cross-site scripting attacks.'
        importStatements: []
    aws_wafv2_ip_set:
        subCategory: WAF
        description: Provides an AWS WAFv2 IP Set resource.
        name: aws_wafv2_ip_set
        title: aws_wafv2_ip_set
        examples:
            - name: example
              manifest: |-
                {
                  "addresses": [
                    "1.2.3.4/32",
                    "5.6.7.8/32"
                  ],
                  "description": "Example IP set",
                  "ip_address_version": "IPV4",
                  "name": "example",
                  "scope": "REGIONAL",
                  "tags": {
                    "Tag1": "Value1",
                    "Tag2": "Value2"
                  }
                }
        argumentDocs:
            addresses: '- (Required) Contains an array of strings that specify one or more IP addresses or blocks of IP addresses in Classless Inter-Domain Routing (CIDR) notation. AWS WAF supports all address ranges for IP versions IPv4 and IPv6.'
            arn: '- The Amazon Resource Name (ARN) that identifies the cluster.'
            description: '- (Optional) A friendly description of the IP set.'
            id: '- A unique identifier for the set.'
            ip_address_version: '- (Required) Specify IPV4 or IPV6. Valid values are IPV4 or IPV6.'
            name: '- (Required) A friendly name of the IP set.'
            scope: '- (Required) Specifies whether this is for an AWS CloudFront distribution or for a regional application. Valid values are CLOUDFRONT or REGIONAL. To work with CloudFront, you must also specify the Region US East (N. Virginia).'
            tags: '- (Optional) An array of key:value pairs to associate with the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_wafv2_regex_pattern_set:
        subCategory: WAF
        description: Provides an AWS WAFv2 Regex Pattern Set resource.
        name: aws_wafv2_regex_pattern_set
        title: aws_wafv2_regex_pattern_set
        examples:
            - name: example
              manifest: |-
                {
                  "description": "Example regex pattern set",
                  "name": "example",
                  "regular_expression": [
                    {
                      "regex_string": "one"
                    },
                    {
                      "regex_string": "two"
                    }
                  ],
                  "scope": "REGIONAL",
                  "tags": {
                    "Tag1": "Value1",
                    "Tag2": "Value2"
                  }
                }
        argumentDocs:
            arn: '- The Amazon Resource Name (ARN) that identifies the cluster.'
            description: '- (Optional) A friendly description of the regular expression pattern set.'
            id: '- A unique identifier for the set.'
            name: '- (Required) A friendly name of the regular expression pattern set.'
            regex_string: '- (Required) The string representing the regular expression, see the AWS WAF documentation for more information.'
            regular_expression: '- (Optional) One or more blocks of regular expression patterns that you want AWS WAF to search for, such as B[a@]dB[o0]t. See Regular Expression below for details.'
            scope: '- (Required) Specifies whether this is for an AWS CloudFront distribution or for a regional application. Valid values are CLOUDFRONT or REGIONAL. To work with CloudFront, you must also specify the region us-east-1 (N. Virginia) on the AWS provider.'
            tags: '- (Optional) An array of key:value pairs to associate with the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_wafv2_rule_group:
        subCategory: WAF
        description: Creates a WAFv2 rule group resource.
        name: aws_wafv2_rule_group
        title: aws_wafv2_rule_group
        examples:
            - name: example
              manifest: |-
                {
                  "capacity": 2,
                  "name": "example-rule",
                  "rule": [
                    {
                      "action": [
                        {
                          "allow": [
                            {}
                          ]
                        }
                      ],
                      "name": "rule-1",
                      "priority": 1,
                      "statement": [
                        {
                          "geo_match_statement": [
                            {
                              "country_codes": [
                                "US",
                                "NL"
                              ]
                            }
                          ]
                        }
                      ],
                      "visibility_config": [
                        {
                          "cloudwatch_metrics_enabled": false,
                          "metric_name": "friendly-rule-metric-name",
                          "sampled_requests_enabled": false
                        }
                      ]
                    }
                  ],
                  "scope": "REGIONAL",
                  "visibility_config": [
                    {
                      "cloudwatch_metrics_enabled": false,
                      "metric_name": "friendly-metric-name",
                      "sampled_requests_enabled": false
                    }
                  ]
                }
            - name: example
              manifest: |-
                {
                  "capacity": 500,
                  "description": "An rule group containing all statements",
                  "name": "complex-example",
                  "rule": [
                    {
                      "action": [
                        {
                          "block": [
                            {}
                          ]
                        }
                      ],
                      "name": "rule-1",
                      "priority": 1,
                      "statement": [
                        {
                          "not_statement": [
                            {
                              "statement": [
                                {
                                  "and_statement": [
                                    {
                                      "statement": [
                                        {
                                          "geo_match_statement": [
                                            {
                                              "country_codes": [
                                                "US"
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "byte_match_statement": [
                                            {
                                              "field_to_match": [
                                                {
                                                  "all_query_arguments": [
                                                    {}
                                                  ]
                                                }
                                              ],
                                              "positional_constraint": "CONTAINS",
                                              "search_string": "word",
                                              "text_transformation": [
                                                {
                                                  "priority": 5,
                                                  "type": "CMD_LINE"
                                                },
                                                {
                                                  "priority": 2,
                                                  "type": "LOWERCASE"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "visibility_config": [
                        {
                          "cloudwatch_metrics_enabled": false,
                          "metric_name": "rule-1",
                          "sampled_requests_enabled": false
                        }
                      ]
                    },
                    {
                      "action": [
                        {
                          "count": [
                            {}
                          ]
                        }
                      ],
                      "name": "rule-2",
                      "priority": 2,
                      "statement": [
                        {
                          "or_statement": [
                            {
                              "statement": [
                                {
                                  "sqli_match_statement": [
                                    {
                                      "field_to_match": [
                                        {
                                          "body": [
                                            {}
                                          ]
                                        }
                                      ],
                                      "text_transformation": [
                                        {
                                          "priority": 5,
                                          "type": "URL_DECODE"
                                        },
                                        {
                                          "priority": 4,
                                          "type": "HTML_ENTITY_DECODE"
                                        },
                                        {
                                          "priority": 3,
                                          "type": "COMPRESS_WHITE_SPACE"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "xss_match_statement": [
                                    {
                                      "field_to_match": [
                                        {
                                          "method": [
                                            {}
                                          ]
                                        }
                                      ],
                                      "text_transformation": [
                                        {
                                          "priority": 2,
                                          "type": "NONE"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "visibility_config": [
                        {
                          "cloudwatch_metrics_enabled": false,
                          "metric_name": "rule-2",
                          "sampled_requests_enabled": false
                        }
                      ]
                    },
                    {
                      "action": [
                        {
                          "block": [
                            {}
                          ]
                        }
                      ],
                      "name": "rule-3",
                      "priority": 3,
                      "statement": [
                        {
                          "size_constraint_statement": [
                            {
                              "comparison_operator": "GT",
                              "field_to_match": [
                                {
                                  "single_query_argument": [
                                    {
                                      "name": "username"
                                    }
                                  ]
                                }
                              ],
                              "size": 100,
                              "text_transformation": [
                                {
                                  "priority": 5,
                                  "type": "NONE"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "visibility_config": [
                        {
                          "cloudwatch_metrics_enabled": false,
                          "metric_name": "rule-3",
                          "sampled_requests_enabled": false
                        }
                      ]
                    },
                    {
                      "action": [
                        {
                          "block": [
                            {}
                          ]
                        }
                      ],
                      "name": "rule-4",
                      "priority": 4,
                      "statement": [
                        {
                          "or_statement": [
                            {
                              "statement": [
                                {
                                  "ip_set_reference_statement": [
                                    {
                                      "arn": "${aws_wafv2_ip_set.test.arn}"
                                    }
                                  ]
                                },
                                {
                                  "regex_pattern_set_reference_statement": [
                                    {
                                      "arn": "${aws_wafv2_regex_pattern_set.test.arn}",
                                      "field_to_match": [
                                        {
                                          "single_header": [
                                            {
                                              "name": "referer"
                                            }
                                          ]
                                        }
                                      ],
                                      "text_transformation": [
                                        {
                                          "priority": 2,
                                          "type": "NONE"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "visibility_config": [
                        {
                          "cloudwatch_metrics_enabled": false,
                          "metric_name": "rule-4",
                          "sampled_requests_enabled": false
                        }
                      ]
                    }
                  ],
                  "scope": "REGIONAL",
                  "tags": {
                    "Code": "123456",
                    "Name": "example-and-statement"
                  },
                  "visibility_config": [
                    {
                      "cloudwatch_metrics_enabled": false,
                      "metric_name": "friendly-metric-name",
                      "sampled_requests_enabled": false
                    }
                  ]
                }
              references:
                rule.statement.or_statement.statement.ip_set_reference_statement.arn: aws_wafv2_ip_set.test.arn
                rule.statement.or_statement.statement.regex_pattern_set_reference_statement.arn: aws_wafv2_regex_pattern_set.test.arn
              dependencies:
                aws_wafv2_ip_set.test: |-
                    {
                      "addresses": [
                        "1.1.1.1/32",
                        "2.2.2.2/32"
                      ],
                      "ip_address_version": "IPV4",
                      "name": "test",
                      "scope": "REGIONAL"
                    }
                aws_wafv2_regex_pattern_set.test: |-
                    {
                      "name": "test",
                      "regular_expression": [
                        {
                          "regex_string": "one"
                        }
                      ],
                      "scope": "REGIONAL"
                    }
        argumentDocs:
            action: '- (Required) The action that AWS WAF should take on a web request when it matches the rule''s statement. Settings at the aws_wafv2_web_acl level can override the rule action setting. See Action below for details.'
            all_query_arguments.all_query_arguments: '- (Optional) Inspect all query arguments.'
            all_query_arguments.body: '- (Optional) Inspect the request body, which immediately follows the request headers.'
            all_query_arguments.method: '- (Optional) Inspect the HTTP method. The method indicates the type of operation that the request is asking the origin to perform.'
            all_query_arguments.query_string: '- (Optional) Inspect the query string. This is the part of a URL that appears after a ? character, if any.'
            all_query_arguments.single_header: '- (Optional) Inspect a single header. See Single Header below for details.'
            all_query_arguments.single_query_argument: '- (Optional) Inspect a single query argument. See Single Query Argument below for details.'
            all_query_arguments.uri_path: '- (Optional) Inspect the request URI path. This is the part of a web request that identifies a resource, for example, /images/daily-ad.jpg.'
            allow.allow: '- (Optional) Instructs AWS WAF to allow the web request. See Allow below for details.'
            allow.allow.custom_request_handling: '- (Optional) Defines custom handling for the web request. See Custom Request Handling below for details.'
            allow.block: '- (Optional) Instructs AWS WAF to block the web request. See Block below for details.'
            allow.count: '- (Optional) Instructs AWS WAF to count the web request and allow it. See Count below for details.'
            arn: '- The ARN of the WAF rule group.'
            block.custom_response: '- (Optional) Defines a custom response for the web request. See Custom Response below for details.'
            byte_match_statement.field_to_match: '- (Required) The part of a web request that you want AWS WAF to inspect. See Field to Match below for details.'
            byte_match_statement.positional_constraint: '- (Required) The area within the portion of a web request that you want AWS WAF to search for search_string. Valid values include the following: EXACTLY, STARTS_WITH, ENDS_WITH, CONTAINS, CONTAINS_WORD. See the AWS documentation for more information.'
            byte_match_statement.search_string: '- (Required) A string value that you want AWS WAF to search for. AWS WAF searches only in the part of web requests that you designate for inspection in field_to_match. The maximum length of the value is 50 bytes.'
            byte_match_statement.text_transformation: '- (Required) Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection. See Text Transformation below for details.'
            capacity: '- (Required, Forces new resource) The web ACL capacity units (WCUs) required for this rule group. See here for general information and here for capacity specific information.'
            count.custom_request_handling: '- (Optional) Defines custom handling for the web request. See Custom Request Handling below for details.'
            count.custom_request_handling.insert_header: '- (Required) The insert_header blocks used to define HTTP headers added to the request. See Custom HTTP Header below for details.'
            custom_response.custom_response_body_key: '- (Optional) References the response body that you want AWS WAF to return to the web request client. This must reference a key defined in a custom_response_body block of this resource.'
            custom_response.response_code: '- (Required) The HTTP status code to return to the client.'
            custom_response.response_header: '- (Optional) The response_header blocks used to define the HTTP response headers added to the response. See Custom HTTP Header below for details.'
            custom_response_body: '- (Optional) Defines custom response bodies that can be referenced by custom_response actions. See Custom Response Body below for details.'
            custom_response_body.content: '- (Required) The payload of the custom response.'
            custom_response_body.content_type: '- (Required) The type of content in the payload that you are defining in the content argument. Valid values are TEXT_PLAIN, TEXT_HTML, or APPLICATION_JSON.'
            custom_response_body.key: '- (Required) A unique key identifying the custom response body. This is referenced by the custom_response_body_key argument in the Custom Response block.'
            description: '- (Optional) A friendly description of the rule group.'
            forwarded_ip_config.fallback_behavior: '- (Required) - The match status to assign to the web request if the request doesn''t have a valid IP address in the specified position. Valid values include: MATCH or NO_MATCH.'
            forwarded_ip_config.header_name: '- (Required) - The name of the HTTP header to use for the IP address.'
            geo_match_statement.country_codes: '- (Required) An array of two-character country codes, for example, [ "US", "CN" ], from the alpha-2 country ISO codes of the ISO 3166 international standard. See the documentation for valid values.'
            geo_match_statement.forwarded_ip_config: '- (Optional) The configuration for inspecting IP addresses in an HTTP header that you specify, instead of using the IP address that''s reported by the web request origin. See Forwarded IP Config below for details.'
            id: '- The ID of the WAF rule group.'
            ip_set_forwarded_ip_config.fallback_behavior: '- (Required) - The match status to assign to the web request if the request doesn''t have a valid IP address in the specified position. Valid values include: MATCH or NO_MATCH.'
            ip_set_forwarded_ip_config.header_name: '- (Required) - The name of the HTTP header to use for the IP address.'
            ip_set_forwarded_ip_config.position: '- (Required) - The position in the header to search for the IP address. Valid values include: FIRST, LAST, or ANY. If ANY is specified and the header contains more than 10 IP addresses, AWS WAFv2 inspects the last 10.'
            ip_set_reference_statement.arn: '- (Required) The Amazon Resource Name (ARN) of the IP Set that this statement references.'
            ip_set_reference_statement.ip_set_forwarded_ip_config: '- (Optional) The configuration for inspecting IP addresses in an HTTP header that you specify, instead of using the IP address that''s reported by the web request origin. See IPSet Forwarded IP Config below for more details.'
            label_match_statement.key: '- (Required) The string to match against.'
            label_match_statement.scope: '- (Required) Specify whether you want to match using the label name or just the namespace. Valid values are LABEL or NAMESPACE.'
            name: '- (Required, Forces new resource) A friendly name of the rule group.'
            not_statement.statement: '- (Required) The statement to negate. You can use any statement that can be nested. See Statement above for details.'
            or_statement.statement: '- (Required) The statements to combine with OR logic. You can use any statements that can be nested. See Statement above for details.'
            priority: '- (Required) If you define more than one Rule in a WebACL, AWS WAF evaluates each request against the rules in order based on the value of priority. AWS WAF processes rules with lower priority first.'
            regex_pattern_set_reference_statement.arn: '- (Required) The Amazon Resource Name (ARN) of the Regex Pattern Set that this statement references.'
            regex_pattern_set_reference_statement.field_to_match: '- (Required) The part of a web request that you want AWS WAF to inspect. See Field to Match below for details.'
            regex_pattern_set_reference_statement.text_transformation: '- (Required) Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection. See Text Transformation below for details.'
            rule: '- (Optional) The rule blocks used to identify the web requests that you want to allow, block, or count. See Rules below for details.'
            rule_label: '- (Optional) Labels to apply to web requests that match the rule match statement. See Rule Label below for details.'
            scope: '- (Required, Forces new resource) Specifies whether this is for an AWS CloudFront distribution or for a regional application. Valid values are CLOUDFRONT or REGIONAL. To work with CloudFront, you must also specify the region us-east-1 (N. Virginia) on the AWS provider.'
            single_header.name: '- (Optional) The name of the query header to inspect. This setting must be provided as lower case characters.'
            single_query_argument.name: '- (Optional) The name of the query header to inspect. This setting must be provided as lower case characters.'
            size_constraint_statement.comparison_operator: '- (Required) The operator to use to compare the request part to the size setting. Valid values include: EQ, NE, LE, LT, GE, or GT.'
            size_constraint_statement.field_to_match: '- (Optional) The part of a web request that you want AWS WAF to inspect. See Field to Match below for details.'
            size_constraint_statement.size: '- (Required) The size, in bytes, to compare to the request part, after any transformations. Valid values are integers between 0 and 21474836480, inclusive.'
            size_constraint_statement.text_transformation: '- (Required) Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection. See Text Transformation below for details.'
            sqli_match_statement.field_to_match: '- (Required) The part of a web request that you want AWS WAF to inspect. See Field to Match below for details.'
            sqli_match_statement.text_transformation: '- (Required) Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection. See Text Transformation below for details.'
            statement: '- (Required) The AWS WAF processing statement for the rule, for example byte_match_statement or geo_match_statement. See Statement below for details.'
            statement.and_statement: '- (Optional) A logical rule statement used to combine other rule statements with AND logic. See AND Statement below for details.'
            statement.and_statement.statement: '- (Required) The statements to combine with AND logic. You can use any statements that can be nested. See Statement above for details.'
            statement.byte_match_statement: '- (Optional) A rule statement that defines a string match search for AWS WAF to apply to web requests. See Byte Match Statement below for details.'
            statement.geo_match_statement: '- (Optional) A rule statement used to identify web requests based on country of origin. See GEO Match Statement below for details.'
            statement.ip_set_reference_statement: '- (Optional) A rule statement used to detect web requests coming from particular IP addresses or address ranges. See IP Set Reference Statement below for details.'
            statement.label_match_statement: '- (Optional) A rule statement that defines a string match search against labels that have been added to the web request by rules that have already run in the web ACL. See Label Match Statement below for details.'
            statement.not_statement: '- (Optional) A logical rule statement used to negate the results of another rule statement. See NOT Statement below for details.'
            statement.or_statement: '- (Optional) A logical rule statement used to combine other rule statements with OR logic. See OR Statement below for details.'
            statement.regex_pattern_set_reference_statement: '- (Optional) A rule statement used to search web request components for matches with regular expressions. See Regex Pattern Set Reference Statement below for details.'
            statement.size_constraint_statement: '- (Optional) A rule statement that compares a number of bytes against the size of a request component, using a comparison operator, such as greater than (>) or less than (<). See Size Constraint Statement below for more details.'
            statement.sqli_match_statement: '- (Optional) An SQL injection match condition identifies the part of web requests, such as the URI or the query string, that you want AWS WAF to inspect. See SQL Injection Match Statement below for details.'
            statement.xss_match_statement: '- (Optional) A rule statement that defines a cross-site scripting (XSS) match search for AWS WAF to apply to web requests. See XSS Match Statement below for details.'
            tags: '- (Optional) An array of key:value pairs to associate with the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            text_transformation.priority: '- (Required) The relative processing order for multiple transformations that are defined for a rule statement. AWS WAF processes all transformations, from lowest priority to highest, before inspecting the transformed content.'
            text_transformation.type: '- (Required) The transformation to apply, please refer to the Text Transformation documentation for more details.'
            value: '- The value of the custom header.'
            visibility_config: '- (Required) Defines and enables Amazon CloudWatch metrics and web request sample collection. See Visibility Configuration below for details.'
            visibility_config.cloudwatch_metrics_enabled: '- (Required) A boolean indicating whether the associated resource sends metrics to CloudWatch. For the list of available metrics, see AWS WAF Metrics.'
            visibility_config.metric_name: '- (Required, Forces new resource) A friendly name of the CloudWatch metric. The name can contain only alphanumeric characters (A-Z, a-z, 0-9) hyphen(-) and underscore (_), with length from one to 128 characters. It can''t contain whitespace or metric names reserved for AWS WAF, for example All and Default_Action.'
            visibility_config.sampled_requests_enabled: '- (Required) A boolean indicating whether AWS WAF should store a sampling of the web requests that match the rules. You can view the sampled requests through the AWS WAF console.'
            xss_match_statement.field_to_match: '- (Required) The part of a web request that you want AWS WAF to inspect. See Field to Match below for details.'
            xss_match_statement.text_transformation: '- (Required) Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection. See Text Transformation below for details.'
        importStatements: []
    aws_wafv2_web_acl:
        subCategory: WAF
        description: Creates a WAFv2 Web ACL resource.
        name: aws_wafv2_web_acl
        title: aws_wafv2_web_acl
        examples:
            - name: example
              manifest: |-
                {
                  "default_action": [
                    {
                      "allow": [
                        {}
                      ]
                    }
                  ],
                  "description": "Example of a managed rule.",
                  "name": "managed-rule-example",
                  "rule": [
                    {
                      "name": "rule-1",
                      "override_action": [
                        {
                          "count": [
                            {}
                          ]
                        }
                      ],
                      "priority": 1,
                      "statement": [
                        {
                          "managed_rule_group_statement": [
                            {
                              "excluded_rule": [
                                {
                                  "name": "SizeRestrictions_QUERYSTRING"
                                },
                                {
                                  "name": "NoUserAgent_HEADER"
                                }
                              ],
                              "name": "AWSManagedRulesCommonRuleSet",
                              "scope_down_statement": [
                                {
                                  "geo_match_statement": [
                                    {
                                      "country_codes": [
                                        "US",
                                        "NL"
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "vendor_name": "AWS"
                            }
                          ]
                        }
                      ],
                      "visibility_config": [
                        {
                          "cloudwatch_metrics_enabled": false,
                          "metric_name": "friendly-rule-metric-name",
                          "sampled_requests_enabled": false
                        }
                      ]
                    }
                  ],
                  "scope": "REGIONAL",
                  "tags": {
                    "Tag1": "Value1",
                    "Tag2": "Value2"
                  },
                  "visibility_config": [
                    {
                      "cloudwatch_metrics_enabled": false,
                      "metric_name": "friendly-metric-name",
                      "sampled_requests_enabled": false
                    }
                  ]
                }
            - name: example
              manifest: |-
                {
                  "default_action": [
                    {
                      "allow": [
                        {}
                      ]
                    }
                  ],
                  "description": "Example of a Cloudfront rate based statement.",
                  "name": "rate-based-example",
                  "rule": [
                    {
                      "action": [
                        {
                          "block": [
                            {}
                          ]
                        }
                      ],
                      "name": "rule-1",
                      "priority": 1,
                      "statement": [
                        {
                          "rate_based_statement": [
                            {
                              "aggregate_key_type": "IP",
                              "limit": 10000,
                              "scope_down_statement": [
                                {
                                  "geo_match_statement": [
                                    {
                                      "country_codes": [
                                        "US",
                                        "NL"
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "visibility_config": [
                        {
                          "cloudwatch_metrics_enabled": false,
                          "metric_name": "friendly-rule-metric-name",
                          "sampled_requests_enabled": false
                        }
                      ]
                    }
                  ],
                  "scope": "CLOUDFRONT",
                  "tags": {
                    "Tag1": "Value1",
                    "Tag2": "Value2"
                  },
                  "visibility_config": [
                    {
                      "cloudwatch_metrics_enabled": false,
                      "metric_name": "friendly-metric-name",
                      "sampled_requests_enabled": false
                    }
                  ]
                }
            - name: test
              manifest: |-
                {
                  "default_action": [
                    {
                      "block": [
                        {}
                      ]
                    }
                  ],
                  "name": "rule-group-example",
                  "rule": [
                    {
                      "name": "rule-1",
                      "override_action": [
                        {
                          "count": [
                            {}
                          ]
                        }
                      ],
                      "priority": 1,
                      "statement": [
                        {
                          "rule_group_reference_statement": [
                            {
                              "arn": "${aws_wafv2_rule_group.example.arn}",
                              "excluded_rule": [
                                {
                                  "name": "rule-to-exclude-b"
                                },
                                {
                                  "name": "rule-to-exclude-a"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "visibility_config": [
                        {
                          "cloudwatch_metrics_enabled": false,
                          "metric_name": "friendly-rule-metric-name",
                          "sampled_requests_enabled": false
                        }
                      ]
                    }
                  ],
                  "scope": "REGIONAL",
                  "tags": {
                    "Tag1": "Value1",
                    "Tag2": "Value2"
                  },
                  "visibility_config": [
                    {
                      "cloudwatch_metrics_enabled": false,
                      "metric_name": "friendly-metric-name",
                      "sampled_requests_enabled": false
                    }
                  ]
                }
              references:
                rule.statement.rule_group_reference_statement.arn: aws_wafv2_rule_group.example.arn
              dependencies:
                aws_wafv2_rule_group.example: |-
                    {
                      "capacity": 10,
                      "name": "example-rule-group",
                      "rule": [
                        {
                          "action": [
                            {
                              "count": [
                                {}
                              ]
                            }
                          ],
                          "name": "rule-1",
                          "priority": 1,
                          "statement": [
                            {
                              "geo_match_statement": [
                                {
                                  "country_codes": [
                                    "NL"
                                  ]
                                }
                              ]
                            }
                          ],
                          "visibility_config": [
                            {
                              "cloudwatch_metrics_enabled": false,
                              "metric_name": "friendly-rule-metric-name",
                              "sampled_requests_enabled": false
                            }
                          ]
                        },
                        {
                          "action": [
                            {
                              "allow": [
                                {}
                              ]
                            }
                          ],
                          "name": "rule-to-exclude-a",
                          "priority": 10,
                          "statement": [
                            {
                              "geo_match_statement": [
                                {
                                  "country_codes": [
                                    "US"
                                  ]
                                }
                              ]
                            }
                          ],
                          "visibility_config": [
                            {
                              "cloudwatch_metrics_enabled": false,
                              "metric_name": "friendly-rule-metric-name",
                              "sampled_requests_enabled": false
                            }
                          ]
                        },
                        {
                          "action": [
                            {
                              "allow": [
                                {}
                              ]
                            }
                          ],
                          "name": "rule-to-exclude-b",
                          "priority": 15,
                          "statement": [
                            {
                              "geo_match_statement": [
                                {
                                  "country_codes": [
                                    "GB"
                                  ]
                                }
                              ]
                            }
                          ],
                          "visibility_config": [
                            {
                              "cloudwatch_metrics_enabled": false,
                              "metric_name": "friendly-rule-metric-name",
                              "sampled_requests_enabled": false
                            }
                          ]
                        }
                      ],
                      "scope": "REGIONAL",
                      "visibility_config": [
                        {
                          "cloudwatch_metrics_enabled": false,
                          "metric_name": "friendly-metric-name",
                          "sampled_requests_enabled": false
                        }
                      ]
                    }
        argumentDocs:
            action: '- (Optional) Action that AWS WAF should take on a web request when it matches the rule''s statement. This is used only for rules whose statements do not reference a rule group. See Action below for details.'
            all_query_arguments.all_query_arguments: '- (Optional) Inspect all query arguments.'
            all_query_arguments.body: '- (Optional) Inspect the request body, which immediately follows the request headers.'
            all_query_arguments.method: '- (Optional) Inspect the HTTP method. The method indicates the type of operation that the request is asking the origin to perform.'
            all_query_arguments.query_string: '- (Optional) Inspect the query string. This is the part of a URL that appears after a ? character, if any.'
            all_query_arguments.single_header: '- (Optional) Inspect a single header. See Single Header below for details.'
            all_query_arguments.single_query_argument: '- (Optional) Inspect a single query argument. See Single Query Argument below for details.'
            all_query_arguments.uri_path: '- (Optional) Inspect the request URI path. This is the part of a web request that identifies a resource, for example, /images/daily-ad.jpg.'
            allow.allow: '- (Optional) Specifies that AWS WAF should allow requests by default. See Allow below for details.'
            allow.block: '- (Optional) Specifies that AWS WAF should block requests by default. See Block below for details.'
            allow.captcha: '- (Optional) Instructs AWS WAF to run a Captcha check against the web request. See Captcha below for details.'
            allow.count: '- (Optional) Instructs AWS WAF to count the web request and allow it. See Count below for details.'
            allow.count.count: '- (Optional) Override the rule action setting to count (i.e., only count matches). Configured as an empty block {}.'
            allow.count.none: '- (Optional) Don''t override the rule action setting. Configured as an empty block {}.'
            allow.custom_request_handling: '- (Optional) Defines custom handling for the web request. See Custom Request Handling below for details.'
            arn: '- The ARN of the WAF WebACL.'
            block.custom_response: '- (Optional) Defines a custom response for the web request. See Custom Response below for details.'
            byte_match_statement.field_to_match: '- (Optional) Part of a web request that you want AWS WAF to inspect. See Field to Match below for details.'
            byte_match_statement.positional_constraint: '- (Required) Area within the portion of a web request that you want AWS WAF to search for search_string. Valid values include the following: EXACTLY, STARTS_WITH, ENDS_WITH, CONTAINS, CONTAINS_WORD. See the AWS documentation for more information.'
            byte_match_statement.search_string: '- (Required) String value that you want AWS WAF to search for. AWS WAF searches only in the part of web requests that you designate for inspection in field_to_match. The maximum length of the value is 50 bytes.'
            byte_match_statement.text_transformation: '- (Required) Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection. See Text Transformation below for details.'
            capacity: '- Web ACL capacity units (WCUs) currently being used by this web ACL.'
            captcha.custom_request_handling: '- (Optional) Defines custom handling for the web request. See Custom Request Handling below for details.'
            count.custom_request_handling: '- (Optional) Defines custom handling for the web request. See Custom Request Handling below for details.'
            count.custom_request_handling.insert_header: '- (Required) The insert_header blocks used to define HTTP headers added to the request. See Custom HTTP Header below for details.'
            custom_response.custom_response_body_key: '- (Optional) References the response body that you want AWS WAF to return to the web request client. This must reference a key defined in a custom_response_body block of this resource.'
            custom_response.response_code: '- (Required) The HTTP status code to return to the client.'
            custom_response.response_header: '- (Optional) The response_header blocks used to define the HTTP response headers added to the response. See Custom HTTP Header below for details.'
            custom_response_body: '- (Optional) Defines custom response bodies that can be referenced by custom_response actions. See Custom Response Body below for details.'
            custom_response_body.content: '- (Required) Payload of the custom response.'
            custom_response_body.content_type: '- (Required) Type of content in the payload that you are defining in the content argument. Valid values are TEXT_PLAIN, TEXT_HTML, or APPLICATION_JSON.'
            custom_response_body.key: '- (Required) Unique key identifying the custom response body. This is referenced by the custom_response_body_key argument in the Custom Response block.'
            default_action: '- (Required) Action to perform if none of the rules contained in the WebACL match. See Default Action below for details.'
            description: '- (Optional) Friendly description of the WebACL.'
            excluded_rule.name: '- (Required) Name of the rule to exclude. If the rule group is managed by AWS, see the documentation for a list of names in the appropriate rule group in use.'
            forwarded_ip_config.fallback_behavior: '- (Required) - Match status to assign to the web request if the request doesn''t have a valid IP address in the specified position. Valid values include: MATCH or NO_MATCH.'
            forwarded_ip_config.header_name: '- (Required) - Name of the HTTP header to use for the IP address.'
            geo_match_statement.country_codes: '- (Required) Array of two-character country codes, for example, [ "US", "CN" ], from the alpha-2 country ISO codes of the ISO 3166 international standard. See the documentation for valid values.'
            geo_match_statement.forwarded_ip_config: '- (Optional) Configuration for inspecting IP addresses in an HTTP header that you specify, instead of using the IP address that''s reported by the web request origin. See Forwarded IP Config below for details.'
            id: '- The ID of the WAF WebACL.'
            ip_set_forwarded_ip_config.fallback_behavior: '- (Required) - Match status to assign to the web request if the request doesn''t have a valid IP address in the specified position. Valid values include: MATCH or NO_MATCH.'
            ip_set_forwarded_ip_config.header_name: '- (Required) - Name of the HTTP header to use for the IP address.'
            ip_set_forwarded_ip_config.position: '- (Required) - Position in the header to search for the IP address. Valid values include: FIRST, LAST, or ANY. If ANY is specified and the header contains more than 10 IP addresses, AWS WAFv2 inspects the last 10.'
            ip_set_reference_statement.arn: '- (Required) The Amazon Resource Name (ARN) of the IP Set that this statement references.'
            ip_set_reference_statement.ip_set_forwarded_ip_config: '- (Optional) Configuration for inspecting IP addresses in an HTTP header that you specify, instead of using the IP address that''s reported by the web request origin. See IPSet Forwarded IP Config below for more details.'
            label_match_statement.key: '- (Required) String to match against.'
            label_match_statement.scope: '- (Required) Specify whether you want to match using the label name or just the namespace. Valid values are LABEL or NAMESPACE.'
            managed_rule_group_statement.excluded_rule: '- (Optional) The rules whose actions are set to COUNT by the web ACL, regardless of the action that is set on the rule. See Excluded Rule below for details.'
            managed_rule_group_statement.name: '- (Required) Name of the managed rule group.'
            managed_rule_group_statement.scope_down_statement: '- Narrows the scope of the statement to matching web requests. This can be any nestable statement, and you can nest statements at any level below this scope-down statement. See Statement above for details.'
            managed_rule_group_statement.vendor_name: '- (Required) Name of the managed rule group vendor.'
            managed_rule_group_statement.version: '- (Optional) Version of the managed rule group. You can set Version_1.0 or Version_1.1 etc. If you want to use the default version, do not set anything.'
            name: '- (Required) Friendly name of the WebACL.'
            not_statement.statement: '- (Required) Statement to negate. You can use any statement that can be nested. See Statement above for details.'
            or_statement.statement: '- (Required) Statements to combine with OR logic. You can use any statements that can be nested. See Statement above for details.'
            override_action: '- (Optional) Override action to apply to the rules in a rule group. Used only for rule statements that reference a rule group, like rule_group_reference_statement and managed_rule_group_statement. See Override Action below for details.'
            priority: '- (Required) If you define more than one Rule in a WebACL, AWS WAF evaluates each request against the rules in order based on the value of priority. AWS WAF processes rules with lower priority first.'
            rate_based_statement.aggregate_key_type: '- (Optional) Setting that indicates how to aggregate the request counts. Valid values include: FORWARDED_IP or IP. Default: IP.'
            rate_based_statement.forwarded_ip_config: '- (Optional) Configuration for inspecting IP addresses in an HTTP header that you specify, instead of using the IP address that''s reported by the web request origin. If aggregate_key_type is set to FORWARDED_IP, this block is required. See Forwarded IP Config below for details.'
            rate_based_statement.limit: '- (Required) Limit on requests per 5-minute period for a single originating IP address.'
            rate_based_statement.scope_down_statement: '- (Optional) Optional nested statement that narrows the scope of the rate-based statement to matching web requests. This can be any nestable statement, and you can nest statements at any level below this scope-down statement. See Statement above for details.'
            regex_pattern_set_reference_statement.arn: '- (Required) The Amazon Resource Name (ARN) of the Regex Pattern Set that this statement references.'
            regex_pattern_set_reference_statement.field_to_match: '- (Optional) Part of a web request that you want AWS WAF to inspect. See Field to Match below for details.'
            regex_pattern_set_reference_statement.text_transformation: '- (Required) Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection. See Text Transformation below for details.'
            rule: '- (Optional) Rule blocks used to identify the web requests that you want to allow, block, or count. See Rules below for details.'
            rule_group_reference_statement.arn: '- (Required) The Amazon Resource Name (ARN) of the aws_wafv2_rule_group resource.'
            rule_group_reference_statement.excluded_rule: '- (Optional) The rules whose actions are set to COUNT by the web ACL, regardless of the action that is set on the rule. See Excluded Rule below for details.'
            rule_label: '- (Optional) Labels to apply to web requests that match the rule match statement. See Rule Label below for details.'
            scope: '- (Required) Specifies whether this is for an AWS CloudFront distribution or for a regional application. Valid values are CLOUDFRONT or REGIONAL. To work with CloudFront, you must also specify the region us-east-1 (N. Virginia) on the AWS provider.'
            single_header.name: '- (Optional) Name of the query header to inspect. This setting must be provided as lower case characters.'
            single_query_argument.name: '- (Optional) Name of the query header to inspect. This setting must be provided as lower case characters.'
            size_constraint_statement.comparison_operator: '- (Required) Operator to use to compare the request part to the size setting. Valid values include: EQ, NE, LE, LT, GE, or GT.'
            size_constraint_statement.field_to_match: '- (Optional) Part of a web request that you want AWS WAF to inspect. See Field to Match below for details.'
            size_constraint_statement.size: '- (Required) Size, in bytes, to compare to the request part, after any transformations. Valid values are integers between 0 and 21474836480, inclusive.'
            size_constraint_statement.text_transformation: '- (Required) Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection. See Text Transformation below for details.'
            sqli_match_statement.field_to_match: '- (Optional) Part of a web request that you want AWS WAF to inspect. See Field to Match below for details.'
            sqli_match_statement.text_transformation: '- (Required) Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection. See Text Transformation below for details.'
            statement: '- (Required) The AWS WAF processing statement for the rule, for example byte_match_statement or geo_match_statement. See Statement below for details.'
            statement.and_statement: '- (Optional) Logical rule statement used to combine other rule statements with AND logic. See AND Statement below for details.'
            statement.and_statement.statement: '- (Required) Statements to combine with AND logic. You can use any statements that can be nested. See Statement above for details.'
            statement.byte_match_statement: '- (Optional) Rule statement that defines a string match search for AWS WAF to apply to web requests. See Byte Match Statement below for details.'
            statement.geo_match_statement: '- (Optional) Rule statement used to identify web requests based on country of origin. See GEO Match Statement below for details.'
            statement.ip_set_reference_statement: '- (Optional) Rule statement used to detect web requests coming from particular IP addresses or address ranges. See IP Set Reference Statement below for details.'
            statement.label_match_statement: '- (Optional) Rule statement that defines a string match search against labels that have been added to the web request by rules that have already run in the web ACL. See Label Match Statement below for details.'
            statement.managed_rule_group_statement: '- (Optional) Rule statement used to run the rules that are defined in a managed rule group.  This statement can not be nested. See Managed Rule Group Statement below for details.'
            statement.not_statement: '- (Optional) Logical rule statement used to negate the results of another rule statement. See NOT Statement below for details.'
            statement.or_statement: '- (Optional) Logical rule statement used to combine other rule statements with OR logic. See OR Statement below for details.'
            statement.rate_based_statement: '- (Optional) Rate-based rule tracks the rate of requests for each originating IP address, and triggers the rule action when the rate exceeds a limit that you specify on the number of requests in any 5-minute time span. This statement can not be nested. See Rate Based Statement below for details.'
            statement.regex_pattern_set_reference_statement: '- (Optional) Rule statement used to search web request components for matches with regular expressions. See Regex Pattern Set Reference Statement below for details.'
            statement.rule_group_reference_statement: '- (Optional) Rule statement used to run the rules that are defined in an WAFv2 Rule Group. See Rule Group Reference Statement below for details.'
            statement.size_constraint_statement: '- (Optional) Rule statement that compares a number of bytes against the size of a request component, using a comparison operator, such as greater than (>) or less than (<). See Size Constraint Statement below for more details.'
            statement.sqli_match_statement: '- (Optional) An SQL injection match condition identifies the part of web requests, such as the URI or the query string, that you want AWS WAF to inspect. See SQL Injection Match Statement below for details.'
            statement.xss_match_statement: '- (Optional) Rule statement that defines a cross-site scripting (XSS) match search for AWS WAF to apply to web requests. See XSS Match Statement below for details.'
            tags: '- (Optional) Map of key-value pairs to associate with the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            text_transformation.priority: '- (Required) Relative processing order for multiple transformations that are defined for a rule statement. AWS WAF processes all transformations, from lowest priority to highest, before inspecting the transformed content.'
            text_transformation.type: '- (Required) Transformation to apply, please refer to the Text Transformation documentation for more details.'
            value: '- Value of the custom header.'
            visibility_config: '- (Required) Defines and enables Amazon CloudWatch metrics and web request sample collection. See Visibility Configuration below for details.'
            visibility_config.cloudwatch_metrics_enabled: '- (Required) Whether the associated resource sends metrics to CloudWatch. For the list of available metrics, see AWS WAF Metrics.'
            visibility_config.metric_name: '- (Required) A friendly name of the CloudWatch metric. The name can contain only alphanumeric characters (A-Z, a-z, 0-9) hyphen(-) and underscore (_), with length from one to 128 characters. It can''t contain whitespace or metric names reserved for AWS WAF, for example All and Default_Action.'
            visibility_config.sampled_requests_enabled: '- (Required) Whether AWS WAF should store a sampling of the web requests that match the rules. You can view the sampled requests through the AWS WAF console.'
            xss_match_statement.field_to_match: '- (Optional) Part of a web request that you want AWS WAF to inspect. See Field to Match below for details.'
            xss_match_statement.text_transformation: '- (Required) Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection. See Text Transformation below for details.'
        importStatements: []
    aws_wafv2_web_acl_association:
        subCategory: WAF
        description: Creates a WAFv2 Web ACL Association.
        name: aws_wafv2_web_acl_association
        title: aws_wafv2_web_acl_association
        examples:
            - name: example
              manifest: |-
                {
                  "resource_arn": "${aws_api_gateway_stage.example.arn}",
                  "web_acl_arn": "${aws_wafv2_web_acl.example.arn}"
                }
              references:
                resource_arn: aws_api_gateway_stage.example.arn
                web_acl_arn: aws_wafv2_web_acl.example.arn
              dependencies:
                aws_api_gateway_deployment.example: |-
                    {
                      "lifecycle": [
                        {
                          "create_before_destroy": true
                        }
                      ],
                      "rest_api_id": "${aws_api_gateway_rest_api.example.id}",
                      "triggers": {
                        "redeployment": "${sha1(jsonencode(aws_api_gateway_rest_api.example.body))}"
                      }
                    }
                aws_api_gateway_rest_api.example: |-
                    {
                      "body": "${jsonencode({\n    openapi = \"3.0.1\"\n    info = {\n      title   = \"example\"\n      version = \"1.0\"\n    }\n    paths = {\n      \"/path1\" = {\n        get = {\n          x-amazon-apigateway-integration = {\n            httpMethod           = \"GET\"\n            payloadFormatVersion = \"1.0\"\n            type                 = \"HTTP_PROXY\"\n            uri                  = \"https://ip-ranges.amazonaws.com/ip-ranges.json\"\n          }\n        }\n      }\n    }\n  })}",
                      "name": "example"
                    }
                aws_api_gateway_stage.example: |-
                    {
                      "deployment_id": "${aws_api_gateway_deployment.example.id}",
                      "rest_api_id": "${aws_api_gateway_rest_api.example.id}",
                      "stage_name": "example"
                    }
                aws_wafv2_web_acl.example: |-
                    {
                      "default_action": [
                        {
                          "allow": [
                            {}
                          ]
                        }
                      ],
                      "name": "web-acl-association-example",
                      "scope": "REGIONAL",
                      "visibility_config": [
                        {
                          "cloudwatch_metrics_enabled": false,
                          "metric_name": "friendly-metric-name",
                          "sampled_requests_enabled": false
                        }
                      ]
                    }
        argumentDocs:
            resource_arn: '- (Required) The Amazon Resource Name (ARN) of the resource to associate with the web ACL. This must be an ARN of an Application Load Balancer or an Amazon API Gateway stage.'
            web_acl_arn: '- (Required) The Amazon Resource Name (ARN) of the Web ACL that you want to associate with the resource.'
        importStatements: []
    aws_wafv2_web_acl_logging_configuration:
        subCategory: WAF
        description: Creates a WAFv2 Web ACL Logging Configuration resource.
        name: aws_wafv2_web_acl_logging_configuration
        title: aws_wafv2_web_acl_logging_configuration
        examples:
            - name: example
              manifest: |-
                {
                  "log_destination_configs": [
                    "${aws_kinesis_firehose_delivery_stream.example.arn}"
                  ],
                  "redacted_fields": [
                    {
                      "single_header": [
                        {
                          "name": "user-agent"
                        }
                      ]
                    }
                  ],
                  "resource_arn": "${aws_wafv2_web_acl.example.arn}"
                }
              references:
                resource_arn: aws_wafv2_web_acl.example.arn
            - name: example
              manifest: |-
                {
                  "log_destination_configs": [
                    "${aws_kinesis_firehose_delivery_stream.example.arn}"
                  ],
                  "logging_filter": [
                    {
                      "default_behavior": "KEEP",
                      "filter": [
                        {
                          "behavior": "DROP",
                          "condition": [
                            {
                              "action_condition": [
                                {
                                  "action": "COUNT"
                                }
                              ]
                            },
                            {
                              "label_name_condition": [
                                {
                                  "label_name": "awswaf:111122223333:rulegroup:testRules:LabelNameZ"
                                }
                              ]
                            }
                          ],
                          "requirement": "MEETS_ALL"
                        },
                        {
                          "behavior": "KEEP",
                          "condition": [
                            {
                              "action_condition": [
                                {
                                  "action": "ALLOW"
                                }
                              ]
                            }
                          ],
                          "requirement": "MEETS_ANY"
                        }
                      ]
                    }
                  ],
                  "resource_arn": "${aws_wafv2_web_acl.example.arn}"
                }
              references:
                resource_arn: aws_wafv2_web_acl.example.arn
        argumentDocs:
            id: '- The Amazon Resource Name (ARN) of the WAFv2 Web ACL.'
            label_name_condition.label_name: '- (Required) The label name that a log record must contain in order to meet the condition. This must be a fully qualified label name. Fully qualified labels have a prefix, optional namespaces, and label name. The prefix identifies the rule group or web ACL context of the rule that added the label.'
            log_destination_configs: '- (Required) The Amazon Kinesis Data Firehose, Cloudwatch Log log group, or S3 bucket Amazon Resource Names (ARNs) that you want to associate with the web ACL.'
            logging_filter: '- (Optional) A configuration block that specifies which web requests are kept in the logs and which are dropped. You can filter on the rule action and on the web request labels that were applied by matching rules during web ACL evaluation. See Logging Filter below for more details.'
            logging_filter.default_behavior: '- (Required) Default handling for logs that don''t match any of the specified filtering conditions. Valid values: KEEP or DROP.'
            logging_filter.filter: '- (Required) Filter(s) that you want to apply to the logs. See Filter below for more details.'
            logging_filter.filter.behavior: '- (Required) How to handle logs that satisfy the filter''s conditions and requirement. Valid values: KEEP or DROP.'
            logging_filter.filter.condition: '- (Required) Match condition(s) for the filter. See Condition below for more details.'
            logging_filter.filter.condition.action_condition: '- (Optional) A single action condition. See Action Condition below for more details.'
            logging_filter.filter.condition.action_condition.action: '- (Required) The action setting that a log record must contain in order to meet the condition. Valid values: ALLOW, BLOCK, COUNT.'
            logging_filter.filter.condition.label_name_condition: '- (Optional) A single label name condition. See Label Name Condition below for more details.'
            logging_filter.filter.requirement: '- (Required) Logic to apply to the filtering conditions. You can specify that, in order to satisfy the filter, a log must match all conditions or must match at least one condition. Valid values: MEETS_ALL or MEETS_ANY.'
            redacted_fields: '- (Optional) The parts of the request that you want to keep out of the logs. Up to 100 redacted_fields blocks are supported. See Redacted Fields below for more details.'
            redacted_fields.all_query_arguments: '- (Optional, DEPRECATED) Redact all query arguments.'
            redacted_fields.body: '- (Optional, DEPRECATED) Redact the request body, which immediately follows the request headers.'
            redacted_fields.method: '- (Optional) Redact the HTTP method. Must be specified as an empty configuration block {}. The method indicates the type of operation that the request is asking the origin to perform.'
            redacted_fields.query_string: '- (Optional) Redact the query string. Must be specified as an empty configuration block {}. This is the part of a URL that appears after a ? character, if any.'
            redacted_fields.single_header: '- (Optional) Redact a single header. See Single Header below for details.'
            redacted_fields.single_header.name: '- (Optional) The name of the query header to redact. This setting must be provided as lower case characters.'
            redacted_fields.single_query_argument: '- (Optional, DEPRECATED) Redact a single query argument. See Single Query Argument below for details.'
            redacted_fields.uri_path: '- (Optional) Redact the request URI path. Must be specified as an empty configuration block {}. This is the part of a web request that identifies a resource, for example, /images/daily-ad.jpg.'
            resource_arn: '- (Required) The Amazon Resource Name (ARN) of the web ACL that you want to associate with log_destination_configs.'
            single_query_argument.name: '- (Optional) The name of the query header to redact. This setting must be provided as lower case characters.'
        importStatements: []
    aws_worklink_fleet:
        subCategory: WorkLink
        description: Provides a AWS WorkLink Fleet resource.
        name: aws_worklink_fleet
        title: aws_worklink_fleet
        examples:
            - name: example
              manifest: |-
                {
                  "name": "terraform-example"
                }
            - name: example
              manifest: |-
                {
                  "name": "terraform-example",
                  "network": [
                    {
                      "security_group_ids": [
                        "${aws_security_group.test.id}"
                      ],
                      "subnet_ids": [
                        "${aws_subnet.test.*.id}"
                      ],
                      "vpc_id": "${aws_vpc.test.id}"
                    }
                  ]
                }
              references:
                network.vpc_id: aws_vpc.test.id
            - name: test
              manifest: |-
                {
                  "identity_provider": [
                    {
                      "saml_metadata": "${file(\"saml-metadata.xml\")}",
                      "type": "SAML"
                    }
                  ],
                  "name": "tf-worklink-fleet"
                }
        argumentDocs:
            arn: '- The ARN of the created WorkLink Fleet.'
            audit_stream_arn: '- (Optional) The ARN of the Amazon Kinesis data stream that receives the audit events. Kinesis data stream name must begin with "AmazonWorkLink-".'
            company_code: '- The identifier used by users to sign in to the Amazon WorkLink app.'
            created_time: '- The time that the fleet was created.'
            device_ca_certificate: '- (Optional) The certificate chain, including intermediate certificates and the root certificate authority certificate used to issue device certificates.'
            display_name: '- (Optional) The name of the fleet.'
            id: '- The ARN of the created WorkLink Fleet.'
            identity_provider: '- (Optional) Provide this to allow manage the identity provider configuration for the fleet. Fields documented below.'
            last_updated_time: '- The time that the fleet was last updated.'
            name: '- (Required) A region-unique name for the AMI.'
            network: '- (Optional) Provide this to allow manage the company network configuration for the fleet. Fields documented below.'
            optimize_for_end_user_location: '- (Optional) The option to optimize for better performance by routing traffic through the closest AWS Region to users, which may be outside of your home Region. Defaults to true.'
            saml_metadata: '- (Required) The SAML metadata document provided by the customer’s identity provider.'
            security_group_ids: '- (Required) A list of security group IDs associated with access to the provided subnets.'
            subnet_ids: '- (Required) A list of subnet IDs used for X-ENI connections from Amazon WorkLink rendering containers.'
            type: '- (Required) The type of identity provider.'
            vpc_id: '- (Required) The VPC ID with connectivity to associated websites.'
        importStatements: []
    aws_worklink_website_certificate_authority_association:
        subCategory: WorkLink
        description: Provides a AWS WorkLink Website Certificate Authority Association resource.
        name: aws_worklink_website_certificate_authority_association
        title: aws_worklink_website_certificate_authority_association
        examples:
            - name: test
              manifest: |-
                {
                  "certificate": "${file(\"certificate.pem\")}",
                  "fleet_arn": "${aws_worklink_fleet.test.arn}"
                }
              references:
                fleet_arn: aws_worklink_fleet.test.arn
              dependencies:
                aws_worklink_fleet.example: |-
                    {
                      "name": "terraform-example"
                    }
        argumentDocs:
            certificate: '- (Required, ForceNew) The root certificate of the Certificate Authority.'
            display_name: '- (Optional, ForceNew) The certificate name to display.'
            fleet_arn: '- (Required, ForceNew) The ARN of the fleet.'
            website_ca_id: '- A unique identifier for the Certificate Authority.'
        importStatements: []
    aws_workspaces_directory:
        subCategory: WorkSpaces
        description: Provides a WorkSpaces directory in AWS WorkSpaces Service.
        name: aws_workspaces_directory
        title: aws_workspaces_directory
        examples:
            - name: example
              manifest: |-
                {
                  "depends_on": [
                    "${aws_iam_role_policy_attachment.workspaces_default_service_access}",
                    "${aws_iam_role_policy_attachment.workspaces_default_self_service_access}"
                  ],
                  "directory_id": "${aws_directory_service_directory.example.id}",
                  "self_service_permissions": [
                    {
                      "change_compute_type": true,
                      "increase_volume_size": true,
                      "rebuild_workspace": true,
                      "restart_workspace": true,
                      "switch_running_mode": true
                    }
                  ],
                  "subnet_ids": [
                    "${aws_subnet.example_c.id}",
                    "${aws_subnet.example_d.id}"
                  ],
                  "tags": {
                    "Example": true
                  },
                  "workspace_access_properties": [
                    {
                      "device_type_android": "ALLOW",
                      "device_type_chromeos": "ALLOW",
                      "device_type_ios": "ALLOW",
                      "device_type_linux": "DENY",
                      "device_type_osx": "ALLOW",
                      "device_type_web": "DENY",
                      "device_type_windows": "DENY",
                      "device_type_zeroclient": "DENY"
                    }
                  ],
                  "workspace_creation_properties": [
                    {
                      "custom_security_group_id": "${aws_security_group.example.id}",
                      "default_ou": "OU=AWS,DC=Workgroup,DC=Example,DC=com",
                      "enable_internet_access": true,
                      "enable_maintenance_mode": true,
                      "user_enabled_as_local_administrator": true
                    }
                  ]
                }
              references:
                directory_id: aws_directory_service_directory.example.id
                workspace_creation_properties.custom_security_group_id: aws_security_group.example.id
              dependencies:
                aws_directory_service_directory.example: |-
                    {
                      "name": "corp.example.com",
                      "password": "#S1ncerely",
                      "size": "Small",
                      "vpc_settings": [
                        {
                          "subnet_ids": [
                            "${aws_subnet.example_a.id}",
                            "${aws_subnet.example_b.id}"
                          ],
                          "vpc_id": "${aws_vpc.example.id}"
                        }
                      ]
                    }
                aws_iam_role.workspaces_default: |-
                    {
                      "assume_role_policy": "${data.aws_iam_policy_document.workspaces.json}",
                      "name": "workspaces_DefaultRole"
                    }
                aws_iam_role_policy_attachment.workspaces_default_self_service_access: |-
                    {
                      "policy_arn": "arn:aws:iam::aws:policy/AmazonWorkSpacesSelfServiceAccess",
                      "role": "${aws_iam_role.workspaces_default.name}"
                    }
                aws_iam_role_policy_attachment.workspaces_default_service_access: |-
                    {
                      "policy_arn": "arn:aws:iam::aws:policy/AmazonWorkSpacesServiceAccess",
                      "role": "${aws_iam_role.workspaces_default.name}"
                    }
                aws_subnet.example_a: |-
                    {
                      "availability_zone": "us-east-1a",
                      "cidr_block": "10.0.0.0/24",
                      "vpc_id": "${aws_vpc.example.id}"
                    }
                aws_subnet.example_b: |-
                    {
                      "availability_zone": "us-east-1b",
                      "cidr_block": "10.0.1.0/24",
                      "vpc_id": "${aws_vpc.example.id}"
                    }
                aws_subnet.example_c: |-
                    {
                      "availability_zone": "us-east-1c",
                      "cidr_block": "10.0.2.0/24",
                      "vpc_id": "${aws_vpc.example.id}"
                    }
                aws_subnet.example_d: |-
                    {
                      "availability_zone": "us-east-1d",
                      "cidr_block": "10.0.3.0/24",
                      "vpc_id": "${aws_vpc.example.id}"
                    }
                aws_vpc.example: |-
                    {
                      "cidr_block": "10.0.0.0/16"
                    }
            - name: example
              manifest: |-
                {
                  "directory_id": "${aws_directory_service_directory.example.id}",
                  "ip_group_ids": [
                    "${aws_workspaces_ip_group.example.id}"
                  ]
                }
              references:
                directory_id: aws_directory_service_directory.example.id
              dependencies:
                aws_workspaces_ip_group.example: |-
                    {
                      "name": "example"
                    }
        argumentDocs:
            alias: '- The directory alias.'
            customer_user_name: '- The user name for the service account.'
            directory_id: '- (Required) The directory identifier for registration in WorkSpaces service.'
            directory_name: '- The name of the directory.'
            directory_type: '- The directory type.'
            dns_ip_addresses: '- The IP addresses of the DNS servers for the directory.'
            iam_role_id: '- The identifier of the IAM role. This is the role that allows Amazon WorkSpaces to make calls to other services, such as Amazon EC2, on your behalf.'
            id: '- The WorkSpaces directory identifier.'
            ip_group_ids: '- The identifiers of the IP access control groups associated with the directory.'
            registration_code: '- The registration code for the directory. This is the code that users enter in their Amazon WorkSpaces client application to connect to the directory.'
            self_service_permissions: – (Optional) Permissions to enable or disable self-service capabilities. Defined below.
            self_service_permissions.change_compute_type: – (Optional) Whether WorkSpaces directory users can change the compute type (bundle) for their workspace. Default false.
            self_service_permissions.increase_volume_size: – (Optional) Whether WorkSpaces directory users can increase the volume size of the drives on their workspace. Default false.
            self_service_permissions.rebuild_workspace: – (Optional) Whether WorkSpaces directory users can rebuild the operating system of a workspace to its original state. Default false.
            self_service_permissions.restart_workspace: – (Optional) Whether WorkSpaces directory users can restart their workspace. Default true.
            self_service_permissions.switch_running_mode: – (Optional) Whether WorkSpaces directory users can switch the running mode of their workspace. Default false.
            subnet_ids: '- (Optional) The identifiers of the subnets where the directory resides.'
            tags: – (Optional) A map of tags assigned to the WorkSpaces directory. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            workspace_access_properties: – (Optional) Specifies which devices and operating systems users can use to access their WorkSpaces. Defined below.
            workspace_access_properties.device_type_android: – (Optional) Indicates whether users can use Android devices to access their WorkSpaces.
            workspace_access_properties.device_type_chromeos: – (Optional) Indicates whether users can use Chromebooks to access their WorkSpaces.
            workspace_access_properties.device_type_ios: – (Optional) Indicates whether users can use iOS devices to access their WorkSpaces.
            workspace_access_properties.device_type_linux: – (Optional) Indicates whether users can use Linux clients to access their WorkSpaces.
            workspace_access_properties.device_type_osx: – (Optional) Indicates whether users can use macOS clients to access their WorkSpaces.
            workspace_access_properties.device_type_web: – (Optional) Indicates whether users can access their WorkSpaces through a web browser.
            workspace_access_properties.device_type_windows: – (Optional) Indicates whether users can use Windows clients to access their WorkSpaces.
            workspace_access_properties.device_type_zeroclient: – (Optional) Indicates whether users can use zero client devices to access their WorkSpaces.
            workspace_creation_properties: – (Optional) Default properties that are used for creating WorkSpaces. Defined below.
            workspace_creation_properties.custom_security_group_id: – (Optional) The identifier of your custom security group. Should relate to the same VPC, where workspaces reside in.
            workspace_creation_properties.default_ou: – (Optional) The default organizational unit (OU) for your WorkSpace directories. Should conform "OU=<value>,DC=<value>,...,DC=<value>" pattern.
            workspace_creation_properties.enable_internet_access: – (Optional) Indicates whether internet access is enabled for your WorkSpaces.
            workspace_creation_properties.enable_maintenance_mode: – (Optional) Indicates whether maintenance mode is enabled for your WorkSpaces. For more information, see WorkSpace Maintenance..
            workspace_creation_properties.user_enabled_as_local_administrator: – (Optional) Indicates whether users are local administrators of their WorkSpaces.
            workspace_security_group_id: '- The identifier of the security group that is assigned to new WorkSpaces.'
        importStatements: []
    aws_workspaces_ip_group:
        subCategory: WorkSpaces
        description: Provides an IP access control group in AWS WorkSpaces Service.
        name: aws_workspaces_ip_group
        title: aws_workspaces_ip_group
        examples:
            - name: contractors
              manifest: |-
                {
                  "description": "Contractors IP access control group",
                  "name": "Contractors",
                  "rules": [
                    {
                      "description": "NY",
                      "source": "150.24.14.0/24"
                    },
                    {
                      "description": "LA",
                      "source": "125.191.14.85/32"
                    },
                    {
                      "description": "STL",
                      "source": "44.98.100.0/24"
                    }
                  ]
                }
        argumentDocs:
            description: '- (Optional) The description of the IP group.'
            id: '- The IP group identifier.'
            name: '- (Required) The name of the IP group.'
            rules: '- (Optional) One or more pairs specifying the IP group rule (in CIDR format) from which web requests originate.'
            source: '- (Required) The IP address range, in CIDR notation, e.g., 10.0.0.0/16'
            tags: – (Optional) A map of tags assigned to the WorkSpaces directory. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_workspaces_workspace:
        subCategory: WorkSpaces
        description: Provides a workspaces in AWS Workspaces Service.
        name: aws_workspaces_workspace
        title: aws_workspaces_workspace
        examples:
            - name: example
              manifest: |-
                {
                  "bundle_id": "${data.aws_workspaces_bundle.value_windows_10.id}",
                  "directory_id": "${aws_workspaces_directory.example.id}",
                  "root_volume_encryption_enabled": true,
                  "tags": {
                    "Department": "IT"
                  },
                  "user_name": "john.doe",
                  "user_volume_encryption_enabled": true,
                  "volume_encryption_key": "alias/aws/workspaces",
                  "workspace_properties": [
                    {
                      "compute_type_name": "VALUE",
                      "root_volume_size_gib": 80,
                      "running_mode": "AUTO_STOP",
                      "running_mode_auto_stop_timeout_in_minutes": 60,
                      "user_volume_size_gib": 10
                    }
                  ]
                }
              references:
                bundle_id: data.aws_workspaces_bundle.value_windows_10.id
                directory_id: aws_workspaces_directory.example.id
        argumentDocs:
            bundle_id: '- (Required) The ID of the bundle for the WorkSpace.'
            compute_type_name: – (Optional) The compute type. For more information, see Amazon WorkSpaces Bundles. Valid values are VALUE, STANDARD, PERFORMANCE, POWER, GRAPHICS, POWERPRO, GRAPHICSPRO, GRAPHICS_G4DN, and GRAPHICSPRO_G4DN.
            computer_name: '- The name of the WorkSpace, as seen by the operating system.'
            create: '- (Default 30 minutes) Used for WorkSpace creation.'
            delete: '- (Default 10 minutes) Used for WorkSpace termination.'
            directory_id: '- (Required) The ID of the directory for the WorkSpace.'
            id: '- The workspaces ID.'
            ip_address: '- The IP address of the WorkSpace.'
            root_volume_encryption_enabled: '- (Optional) Indicates whether the data stored on the root volume is encrypted.'
            root_volume_size_gib: – (Optional) The size of the root volume.
            running_mode: – (Optional) The running mode. For more information, see Manage the WorkSpace Running Mode. Valid values are AUTO_STOP and ALWAYS_ON.
            running_mode_auto_stop_timeout_in_minutes: – (Optional) The time after a user logs off when WorkSpaces are automatically stopped. Configured in 60-minute intervals.
            state: '- The operational state of the WorkSpace.'
            tags: '- (Optional) The tags for the WorkSpace. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            update: '- (Default 10 minutes) Used for WorkSpace updating.'
            user_name: – (Required) The user name of the user for the WorkSpace. This user name must exist in the directory for the WorkSpace.
            user_volume_encryption_enabled: – (Optional) Indicates whether the data stored on the user volume is encrypted.
            user_volume_size_gib: – (Optional) The size of the user storage.
            volume_encryption_key: – (Optional) The symmetric AWS KMS customer master key (CMK) used to encrypt data stored on your WorkSpace. Amazon WorkSpaces does not support asymmetric CMKs.
            workspace_properties: – (Optional) The WorkSpace properties.
        importStatements: []
    aws_xray_encryption_config:
        subCategory: X-Ray
        description: Creates and manages an AWS XRay Encryption Config.
        name: aws_xray_encryption_config
        title: aws_xray_encryption_config
        examples:
            - name: example
              manifest: |-
                {
                  "type": "NONE"
                }
            - name: example
              manifest: |-
                {
                  "key_id": "${aws_kms_key.example.arn}",
                  "type": "KMS"
                }
              references:
                key_id: aws_kms_key.example.arn
              dependencies:
                aws_kms_key.example: |-
                    {
                      "deletion_window_in_days": 7,
                      "description": "Some Key",
                      "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Id\": \"kms-tf-1\",\n  \"Statement\": [\n    {\n      \"Sid\": \"Enable IAM User Permissions\",\n      \"Effect\": \"Allow\",\n      \"Principal\": {\n        \"AWS\": \"arn:aws:iam::${data.aws_caller_identity.current.account_id}:root\"\n      },\n      \"Action\": \"kms:*\",\n      \"Resource\": \"*\"\n    }\n  ]\n}\n"
                    }
        argumentDocs:
            id: '- Region name.'
            key_id: '- (Optional) An AWS KMS customer master key (CMK) ARN.'
            type: '- (Required) The type of encryption. Set to KMS to use your own key for encryption. Set to NONE for default encryption.'
        importStatements: []
    aws_xray_group:
        subCategory: X-Ray
        description: Creates and manages an AWS XRay Group.
        name: aws_xray_group
        title: aws_xray_group
        examples:
            - name: example
              manifest: |-
                {
                  "filter_expression": "responsetime \u003e 5",
                  "group_name": "example",
                  "insights_configuration": [
                    {
                      "insights_enabled": true,
                      "notifications_enabled": true
                    }
                  ]
                }
        argumentDocs:
            arn: '- The ARN of the Group.'
            filter_expression: '- (Required) The filter expression defining criteria by which to group traces. more info can be found in official docs.'
            group_name: '- (Required) The name of the group.'
            id: '- The ARN of the Group.'
            insights_configuration: '- (Optional) Configuration options for enabling insights.'
            insights_configuration.insights_enabled: '- (Required) Specifies whether insights are enabled.'
            insights_configuration.notifications_enabled: '- (Optional) Specifies whether insight notifications are enabled.'
            tags: '- (Optional) Key-value mapping of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
        importStatements: []
    aws_xray_sampling_rule:
        subCategory: X-Ray
        description: Creates and manages an AWS XRay Sampling Rule.
        name: aws_xray_sampling_rule
        title: aws_xray_sampling_rule
        examples:
            - name: example
              manifest: |-
                {
                  "attributes": {
                    "Hello": "Tris"
                  },
                  "fixed_rate": 0.05,
                  "host": "*",
                  "http_method": "*",
                  "priority": 10000,
                  "reservoir_size": 1,
                  "resource_arn": "*",
                  "rule_name": "example",
                  "service_name": "*",
                  "service_type": "*",
                  "url_path": "*",
                  "version": 1
                }
        argumentDocs:
            arn: '- The ARN of the sampling rule.'
            attributes: '- (Optional) Matches attributes derived from the request.'
            fixed_rate: '- (Required) The percentage of matching requests to instrument, after the reservoir is exhausted.'
            host: '- (Required) Matches the hostname from a request URL.'
            http_method: '- (Required) Matches the HTTP method of a request.'
            id: '- The name of the sampling rule.'
            priority: '- (Required) The priority of the sampling rule.'
            reservoir_size: '- (Required) A fixed number of matching requests to instrument per second, prior to applying the fixed rate. The reservoir is not used directly by services, but applies to all services using the rule collectively.'
            resource_arn: '- (Required) Matches the ARN of the AWS resource on which the service runs.'
            rule_name: '- (Required) The name of the sampling rule.'
            service_name: '- (Required) Matches the name that the service uses to identify itself in segments.'
            service_type: '- (Required) Matches the origin that the service uses to identify its type in segments.'
            tags: '- (Optional) Key-value mapping of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.'
            tags_all: '- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.'
            url_path: '- (Required) Matches the path from a request URL.'
            version: '- (Required) The version of the sampling rule format (1 )'
        importStatements: []
